DEFINITION MODULE LeserSchreiber;

(* (c) Christian Maurer   v. 23. Februar 2008 *)

TYPE Objekte;
(* Zugangsprotokolle zu kritischen Abschnitten, in denen mehrere
   Prozesse lesend und schreibend auf gemeinsame Daten zugreifen:
   zu jedem Zeitpunkt im gleichen kritischen Abschnitt entweder
   nur lesende Prozesse oder höchstens ein schreibender Prozeß
   (s. Grundzüge der Nichtsequentiellen Programmierung, S. 69). *)

PROCEDURE initialisieren (VAR X: Objekte);
(* Vor.: X ist nicht initialisiert.
   Eff.: X ist initialisiert.
         Kein Prozeß ist aktiv in X. *)

PROCEDURE terminieren (VAR A: Objekte);
(* Vor.: X ist initialisiert. 
         Kein Prozeß ist lesend oder schreibend in X.
   Eff.: X ist nicht initialisiert. *)

PROCEDURE eintretenL (X: Objekte);
(* Vor.: X ist initialisiert.
         Der aufrufende Prozeß ist weder lesend noch schreibend in X.
   Eff.: Er war ggf. solange blockiert, bis kein Prozeß schreibend in X war.
         Jetzt ist er lesend in X. *)

PROCEDURE eintretenS (X: Objekte);
(* Vor.: X ist initialisiert.
         Der aufrufende Prozeß ist weder lesend noch schreibend in X.
   Eff.: Er war ggf. solange blockiert, bis kein Prozeß lesend oder
         schreibend in X war. Jetzt ist er (als einziger) schreibend in X. *)

PROCEDURE austreten (X: Objekte);
(* Vor.: X ist initialisiert.
         Der aufrufende Prozeß ist lesend oder schreibend in X.
   Eff.: Er ist weder lesend noch schreibend in X. *)

END LeserSchreiber.

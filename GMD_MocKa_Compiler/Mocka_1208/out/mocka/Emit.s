	.comm Emit_s, 1548
	.text
	.stabs "/usr/local/m2/src/mocka/",100,0,0,.LBB0
	.stabs "Emit.mod",100,0,0,.LBB0
.LBB0:
	.stabs "BOOLEAN:t1=eTRUE:1,FALSE:0,;",0x80,0,0,0
	.stabs "CHAR:t2=r2;0;255;",0x80,0,0,0
	.stabs "SHORTCARD:t3=r3;0;65535;",0x80,0,0,0
	.stabs "LONGCARD:t4=r4;0;-1;",0x80,0,0,0
	.stabs "CARDINAL:t5=r5;0;-1;",0x80,0,0,0
	.stabs "SHORTINT:t6=r6;-32768;32767;",0x80,0,0,0
	.stabs "LONGINT:t7=r7;-2147483648;2147483647;",0x80,0,0,0
	.stabs "INTEGER:t8=r8;-2147483648;2147483647;",0x80,0,0,0
	.stabs "REAL:t9=r8;4;0;",0x80,0,0,0
	.stabs "LONGREAL:t10=r8;8;0;",0x80,0,0,0
	.stabs "BITSET:t11=r4;0;-1",0x80,0,0,0
	.stabs "WORD:t13=r13;0;255;",0x80,0,0,0
	.stabs "BYTE:t14=r2;0;255",0x80,0,0,0
	.stabs "VOID:t16=16",0x80,0,0,0
	.stabs "ADDRESS:t15=*16",0x80,0,0,0
	.stabs "PROC:t12=*f16;",0x80,0,0,0
	.globl	CgAssOut_AssInt
	.globl	CgAssOut_AssString
	.globl	CgAssOut_AssHString
	.globl	CgAssOut_AssChar
	.globl	CgAssOut_AssLn
	.globl	CgAssOut_flush
	.globl	CgAssOut_AssClose
	.globl	CgAssOut_AssOpen
	.globl	CgUtilities_Log2
	.globl	CgUtilities_IsPowerOfTwo
	.globl	CgUtilities_ConvertREALtoString
	.globl	CgUtilities_ConvertLONGINTtoString
	.globl	CgUtilities_ConvertLONGCARDtoString
	.globl	CgUtilities_StringTruncate
	.globl	CgUtilities_StringLength
	.globl	CgUtilities_StringPrecede
	.globl	CgUtilities_StringConcat3
	.globl	CgUtilities_StringConcat2
	.globl	CgUtilities_StringAppend3
	.globl	CgUtilities_StringAppend2
	.globl	CgUtilities_StringAppend1
	.globl	CgUtilities_StringAssign
	.globl	CgUtilities_StringEqual
	.globl	CgUtilities_EmptyString
	.globl	CgTypeMap_GetSetSize
	.globl	CgTypeMap_GetEnumSize
	.globl	CgTypeMap_GetArrayAlign
	.globl	CgTypeMap_AdjustedArrayElemSize
	.globl	CgTypeMap_GetArraySize
	.globl	CgTypeMap_GetParamSize
	.globl	CgTypeMap_HighFieldOffset
	.globl	CgTypeMap_GetOpenArrayBounds
	.globl	CgTypeMap_AlignParam
	.globl	CgTypeMap_AlignRecordField
	.globl	CgTypeMap_AlignVariable
	.globl	CgTypeMap_Add
	.globl	CgTypeMap_GetModuleFrameSize
	.globl	CgTypeMap_InitModuleFrameSize
	.globl	CgTypeMap_FinishBlockAlign
	.globl	CgTypeMap_InitBlockAlign
	.globl	CgTypeMap_GenProcNumber
	.globl	CgTypeMap_InitTypeMap
	.globl	GcgStorage_InitGcgStorage
	.globl	GcgStorage_ALLOCATE
	.globl	SuErrors_InitErrorMsg
	.globl	SuErrors_ErrorReport
	.globl	SuErrors_Assert
	.globl	SuErrors_CompilerError
	.globl	SuErrors_ErrorMsgWithId
	.globl	SuErrors_ERROR
	.globl	SuErrors_CloseErrorFile
	.globl	SuErrors_OpenErrorFile
	.globl	SuBase_DefinedVariant
	.globl	SuBase_DefineVariant
	.globl	SuBase_ShowPublicOptions
	.globl	SuBase_ShowOptions
	.globl	SuBase_Enabled
	.globl	SuBase_SetOption
	.globl	SuBase_DefineOption
	.globl	SuBase_InitSuBase
	.globl	SuBase_BuildLibraryFileName
	.globl	SuBase_BuildFileName
	.globl	SuBase_OpenLibraryFile
	.globl	SuBase_InitBlip
	.globl	SuBase_Blip
	.globl	SuBase_SystemCommand
	.globl	BasicIO_Accessible
	.globl	BasicIO_Write
	.globl	BasicIO_Read
	.globl	BasicIO_Erase
	.globl	BasicIO_Close
	.globl	BasicIO_OpenOutput
	.globl	BasicIO_OpenInput
	.globl	abort
	.globl	exit
	.globl	system
	.globl	times
	.globl	time
	.globl	fstat
	.globl	stat
	.globl	free
	.globl	malloc
	.globl	sbrk
	.globl	write
	.globl	read
	.globl	unlink
	.globl	close
	.globl	open
	.globl	creat
	.globl	access
	.globl	umask
	.globl	Strings_CAPS
	.globl	Strings_compare
	.globl	Strings_Concat
	.globl	Strings_Copy
	.globl	Strings_pos
	.globl	Strings_Delete
	.globl	Strings_Insert
	.globl	Strings_Length
	.globl	Strings_StrEq
	.globl	Strings_Append
	.globl	Strings_Assign
	.globl	Strings_EmptyString
	.globl	Prints_PrintAdrMode
	.globl	Prints_PrintMemAdr
	.globl	Prints_PrintRelSymb
	.globl	Prints_PrintRegister
	.globl	Prints_PrintADDRESS
	.globl	Prints_PrintCHAR
	.globl	Prints_PrintModuleIndex
	.globl	Prints_PrintRelation
	.globl	Prints_PrintProcIndex
	.globl	Prints_PrintBITSET
	.globl	Prints_PrintREAL
	.globl	Prints_PrintLONGREAL
	.globl	Prints_PrintStringIndex
	.globl	Prints_PrintString
	.globl	Prints_PrintMode
	.globl	Prints_PrintBOOLEAN
	.globl	Prints_PrintLabel
	.globl	Prints_PrintLabelList
	.globl	Prints_PrintSysProc
	.globl	Prints_PrintAddressTempo
	.globl	Prints_PrintDataTempo
	.globl	Prints_PrintLONGINT
	.globl	Prints_PrintSHORTINT
	.globl	Prints_PrintLONGCARD
	.globl	Prints_PrintSHORTCARD
	.globl	InOut_EOF
	.globl	InOut_Done
	.globl	InOut_WriteBf
	.globl	InOut_WriteLn
	.globl	InOut_WriteLongReal
	.globl	InOut_WriteReal
	.globl	InOut_WriteInt
	.globl	InOut_WriteHex
	.globl	InOut_WriteOct
	.globl	InOut_WriteCard
	.globl	InOut_WriteString
	.globl	InOut_Write
	.globl	InOut_ReadLongReal
	.globl	InOut_ReadReal
	.globl	InOut_ReadInt
	.globl	InOut_ReadCard
	.globl	InOut_ReadString
	.globl	InOut_Read
	.globl	CgBase_InitCgBase
	.globl	CgBase_NewSymb
	.globl	CgBase_GetLabel
	.globl	CgBase_MakeRelSymb
	.globl	IR_PrintRegisterSet
	.globl	IR_PrintBegRegister
	.globl	IR_PrintRegister
	.globl	IR_PrintExprAttributes
	.globl	IR_PrintBOOLEAN
	.globl	IR_PrintCARDINAL
	.globl	IR_PrintINTEGER
	.globl	IR_PrintInstrCosts
	.globl	IR_PrintExprCosts
	.globl	IR_PrintExpression
	.globl	IR_PrintAttributes
	.globl	IR_Error
	.globl	IR_InitIR
	.globl	IR_RegClosure
	.globl	IR_RegDisjoint
	.globl	IR_RegClear
	.globl	IR_RegExcl
	.globl	IR_RegIncl
	.globl	IR_RegIsIn
	.globl	IR_RegEmpty
	.globl	IR_RegNegate
	.globl	IR_RegMinus
	.globl	IR_RegInter
	.globl	IR_RegUnion
	.globl	CgMobil_Mark
	.globl	CgMobil_EndModule
	.globl	CgMobil_EndProcedure
	.globl	CgMobil_ReturnValue
	.globl	CgMobil_ReturnValueL
	.globl	CgMobil_Return
	.globl	CgMobil_CopyOpenArray
	.globl	CgMobil_BeginProcedure
	.globl	CgMobil_RTSCall
	.globl	CgMobil_FunctionCall
	.globl	CgMobil_ProcedureCall
	.globl	CgMobil_PassLong
	.globl	CgMobil_Pass
	.globl	CgMobil_SkipArglist
	.globl	CgMobil_Nil
	.globl	CgMobil_FunctionResult
	.globl	CgMobil_PostCall
	.globl	CgMobil_SysCall
	.globl	CgMobil_Call
	.globl	CgMobil_PassAddress
	.globl	CgMobil_PassStringValue
	.globl	CgMobil_PassOpenArrayValue
	.globl	CgMobil_PassLongValue
	.globl	CgMobil_PassValue
	.globl	CgMobil_PreCall
	.globl	CgMobil_TestOddAndBranch
	.globl	CgMobil_TestMembershipAndBranchL
	.globl	CgMobil_TestMembershipAndBranch
	.globl	CgMobil_PointerCompareAndBranch
	.globl	CgMobil_SetCompareAndBranch
	.globl	CgMobil_FloatCompareAndBranch
	.globl	CgMobil_FixedCompareAndBranch
	.globl	CgMobil_TestAndBranch
	.globl	CgMobil_SwitchL
	.globl	CgMobil_Goto
	.globl	CgMobil_PlaceLabel
	.globl	CgMobil_TestOdd
	.globl	CgMobil_TestMembershipL
	.globl	CgMobil_TestMembership
	.globl	CgMobil_PointerCompare
	.globl	CgMobil_SetCompare
	.globl	CgMobil_FloatCompare
	.globl	CgMobil_FixedCompare
	.globl	CgMobil_CheckL
	.globl	CgMobil_Check
	.globl	CgMobil_Coerce
	.globl	CgMobil_Adr
	.globl	CgMobil_Trunc
	.globl	CgMobil_Float
	.globl	CgMobil_Cap
	.globl	CgMobil_SetPlusRange
	.globl	CgMobil_SetPlusSingleL
	.globl	CgMobil_SetPlusSingle
	.globl	CgMobil_SetSymDifference
	.globl	CgMobil_SetIntersection
	.globl	CgMobil_SetDifference
	.globl	CgMobil_SetUnion
	.globl	CgMobil_FloatAbs
	.globl	CgMobil_FloatDiv
	.globl	CgMobil_FloatMult
	.globl	CgMobil_FloatMinus
	.globl	CgMobil_FloatPlus
	.globl	CgMobil_FloatNegate
	.globl	CgMobil_FixedAbs
	.globl	CgMobil_FixedMod
	.globl	CgMobil_FixedDiv
	.globl	CgMobil_FixedMult
	.globl	CgMobil_FixedMinus
	.globl	CgMobil_FixedPlus
	.globl	CgMobil_FixedNegate
	.globl	CgMobil_SkipData
	.globl	CgMobil_SkipAddress
	.globl	CgMobil_ExclL
	.globl	CgMobil_InclL
	.globl	CgMobil_Excl
	.globl	CgMobil_Incl
	.globl	CgMobil_Dec2
	.globl	CgMobil_Dec1
	.globl	CgMobil_Inc2
	.globl	CgMobil_Inc1
	.globl	CgMobil_AssignLong
	.globl	CgMobil_Assign
	.globl	CgMobil_Content
	.globl	CgMobil_UseAddressTempo
	.globl	CgMobil_UseDataTempo
	.globl	CgMobil_AssignAddressTempo
	.globl	CgMobil_AssignDataTempo
	.globl	CgMobil_SelectField
	.globl	CgMobil_AddAddr
	.globl	CgMobil_Subscript
	.globl	CgMobil_AddOffset
	.globl	CgMobil_ParamBase
	.globl	CgMobil_FrameBase
	.globl	CgMobil_UsePointer
	.globl	CgMobil_GlobalOpenArrayValueParam
	.globl	CgMobil_GlobalVarParam
	.globl	CgMobil_GlobalValueParam
	.globl	CgMobil_LocalOpenArrayValueParam
	.globl	CgMobil_LocalVarParam
	.globl	CgMobil_LocalValueParam
	.globl	CgMobil_StaticVariable
	.globl	CgMobil_GlobalVariable
	.globl	CgMobil_LocalVariable
	.globl	CgMobil_StringAddr
	.globl	CgMobil_ProcedureConstant
	.globl	CgMobil_NilConstant
	.globl	CgMobil_SetConstant
	.globl	CgMobil_BoolConstant
	.globl	CgMobil_CharConstant
	.globl	CgMobil_LongRealConstant
	.globl	CgMobil_RealConstant
	.globl	CgMobil_LongIntConstant
	.globl	CgMobil_ShortIntConstant
	.globl	CgMobil_LongCardConstant
	.globl	CgMobil_ShortCardConstant
	.globl	CgMobil_BeginModule
	.globl	CgMobil_Switch
	.globl	CgMobil_DeclareAddressTempo
	.globl	CgMobil_DeclareDataTempo
	.globl	CgMobil_DeclareLabel
	.globl	CgMobil_DeclareString
	.globl	CgMobil_DeclareProcedure
	.globl	CgMobil_DeclareModule
	.globl	RegAlloc_PrintAllocation
	.globl	RegAlloc_RegAllo
	.globl	Emit
	.globl	Emit_EmitInstruction
	.globl	Emit_EmitStatement
	.globl	Emit_EmitNtloadln2
	.globl	Emit_EmitNtarglist
	.globl	Emit_EmitNtRegOrCMemOrIm
	.globl	Emit_EmitNtRegOrCMem
	.globl	Emit_EmitNtRegOrIm
	.globl	Emit_EmitNtCMem
	.globl	Emit_EmitNtmem
	.globl	Emit_EmitNtOffsetPlusIndexMultFaktor
	.globl	Emit_EmitNtRegPlusSymPlusOffset
	.globl	Emit_EmitNtSymPlusOffset
	.globl	Emit_EmitNtSimpleVariable
	.globl	Emit_EmitNtFloatConstant
	.globl	Emit_EmitNtConstant
	.globl	Emit_EmitNtfstack
	.globl	Emit_EmitNtfreg
	.globl	Emit_EmitNtreg
	.globl	Emit_WriteAttrloadln2
	.globl	Emit_WriteAttrarglist
	.globl	Emit_WriteAttrRegOrCMemOrIm
	.globl	Emit_WriteAttrRegOrCMem
	.globl	Emit_WriteAttrRegOrIm
	.globl	Emit_WriteAttrCMem
	.globl	Emit_WriteAttrmem
	.globl	Emit_WriteAttrOffsetPlusIndexMultFaktor
	.globl	Emit_WriteAttrRegPlusSymPlusOffset
	.globl	Emit_WriteAttrSymPlusOffset
	.globl	Emit_WriteAttrSimpleVariable
	.globl	Emit_WriteAttrFloatConstant
	.globl	Emit_WriteAttrConstant
	.globl	Emit_WriteAttrfstack
	.globl	Emit_WriteAttrfreg
	.globl	Emit_WriteAttrreg
	.globl	Emit_WriteNest
	.globl	Emit_PerformActions
	.globl	Emit_BeginModule
	.globl	Emit_DeclareTransferTempo
	.globl	Emit_DeclareTempo
	.globl	Emit_DeclareString
	.globl	Emit_DeclareProcedure
	.globl	Emit_DeclareModule
	.globl	Emit_AssSigned
	.globl	Emit_AssSuffix
	.globl	Emit_AssAdrMode
	.globl	Emit_AssMemAdr
	.globl	Emit_AssPlusInt
	.globl	Emit_AssByteRegister
	.globl	Emit_AssWordRegister
	.globl	Emit_AssRegister2
	.globl	Emit_AssRegister
	.globl	Emit_EmitIndex
	.globl	Emit_IsNilMemAdr
	.globl	Emit_CheckRoundMode2
	.globl	Emit_CheckRoundMode
	.globl	Emit_FloatOperation
	.globl	Emit_PopFStack
	.globl	Emit_PushFStack
	.globl	Emit_SpillFStack
	.globl	Emit_Restore
	.globl	Emit_Spill
	.globl	Emit_LR
	.stabs "Emit_EmitInstruction:F16",36,0,0,Emit_EmitInstruction
	.align 4
Emit_EmitInstruction:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1, %esp
.LN1:
	.stabn  68,0,7436,.LN1-Emit_EmitInstruction		# line 7436, column 1
.LBB1:
.LN2:
	.stabn  68,0,7437,.LN2-Emit_EmitInstruction		# line 7437, column 4
	cmpb	$0,IR_s + 132
	je	.Lab2
.Lab3:
.LN3:
	.stabn  68,0,7437,.LN3-Emit_EmitInstruction		# line 7437, column 25
	pushl	8(%ebp)
	call	IR_PrintExpression
	addl	$4, %esp
.Lab2:
.LN4:
	.stabn  68,0,7440,.LN4-Emit_EmitInstruction		# line 7440, column 21
	movl	$1662,Emit_s + 1540 
.LN5:
	.stabn  68,0,7444,.LN5-Emit_EmitInstruction		# line 7444, column 4
	pushl	Emit_s + 1540
	pushl	8(%ebp)
	call	RegAlloc_RegAllo
	addl	$8, %esp
.LN6:
	.stabn  68,0,7446,.LN6-Emit_EmitInstruction		# line 7446, column 4
	pushl	8(%ebp)
	call	Emit_EmitStatement
	addl	$4, %esp
.LN7:
	.stabn  68,0,7447,.LN7-Emit_EmitInstruction		# line 7447, column 0
.LBE1:
	leave
	ret
	.Lab1 = 4
	.stabs "NonTerminal:t22=entloadln2:15,ntarglist:14,ntRegOrCMemOrIm:13,ntRegOrCMem:12,ntRegOrIm:11,ntCMem:10,ntmem:9,ntOffsetPlusIndexMultFaktor:8,ntRegPlusSymPlusOffset:7,ntSymPlusOffset:6,ntSimpleVariable:5,ntFloatConstant:4,ntConstant:3,ntfstack:2,ntfreg:1,ntreg:0,;",128,0,0,0
	.stabs "Rule:t23=4",128,0,0,0
	.stabs "CostArray:t24=ar22;0;15;7",128,0,0,0
	.stabs "Mode:t26=eNone:8,FloatLong:7,FloatShort:6,SignedLong:5,SignedWord:4,SignedByte:3,UnsignedLong:2,UnsignedWord:1,UnsignedByte:0,;",128,0,0,0
	.stabs "RelSymb:t36=*37=ar4;0;255;2",128,0,0,0
	.stabs "BegRegister:t38=eRegst1:10,Regst:9,Regesp:8,Regebp:7,Regedi:6,Regesi:5,Regedx:4,Regecx:3,Regebx:2,Regeax:1,RegNil:0,;",128,0,0,0
	.stabs "MemAdr:t35=s16symbol:36,96,32;index:38,72,8;base:38,64,8;faktor:7,32,32;offset:7,0,32;;",128,0,0,0
	.stabs "ExprAttrRec:t20=s216rule:21=ar22;0;15;23,1216,512;cost:24,704,512;stmtrule:23,736,32;stmtcost:7,704,32;RegOrCMemOrIm:25=s1mode:26,0,8;;,680,8;RegOrCMem:27=s1mode:26,0,8;;,672,8;RegOrIm:28=s1mode:26,0,8;;,664,8;CMem:29=s1mode:26,0,8;;,656,8;mem:30=s6faktor:6,32,16;offset:7,0,32;;,608,48;OffsetPlusIndexMultFaktor:31=s6faktor:6,32,16;offset:7,0,32;;,544,48;RegPlusSymPlusOffset:32=s4offset:7,0,32;;,512,32;SymPlusOffset:33=s4offset:7,0,32;;,480,32;SimpleVariable:34=s32index:35,128,128;base:35,0,128;;,224,256;FloatConstant:39=s9mode:26,64,8;val:10,0,64;;,128,72;Constant:40=s5mode:26,32,8;val:7,0,32;;,64,40;reg:41=s1mode:26,0,8;;,32,8;hashchain:19,0,32;;",128,0,0,0
	.stabs "ExprAttributes:t19=*20",128,0,0,0
	.stabs "ModuleIndex:t55=*56=s9Extern:1,64,8;Statics:36,32,32;Name:36,0,32;;",128,0,0,0
	.stabs "ProcRecord:t54=s28Father:53,192,32;Level:3,160,16;Module:55,128,32;Number:3,96,16;Entry:36,64,32;Name:36,32,32;IsFunction:1,8,8;Extern:1,0,8;;",128,0,0,0
	.stabs "ProcIndex:t53=*54",128,0,0,0
	.stabs "SysProc:t58=eSysProcReturnError:4,SysProcCaseError:3,SysProcTransfer:2,SysProcNewprocess:1,SysProcHALT:0,;",128,0,0,0
	.stabs "Relation:t68=eRelGreaterOrEqual:5,RelGreater:4,RelLessOrEqual:3,RelLess:2,RelUnequal:1,RelEqual:0,;",128,0,0,0
	.stabs "LabelListRecord:t74=s8next:73,32,32;label:36,0,32;;",128,0,0,0
	.stabs "LabelList:t73=*74",128,0,0,0
	.stabs "OpCode:t132=eopMark:78,opEndModule:77,opEndProcedure:76,opReturnValueL:75,opReturn:74,opCopyOpenArray:73,opBeginProcedure:72,opRTSCall:71,opFunctionCall:70,opProcedureCall:69,opPassLong:68,opPass:67,opSkipArglist:66,opNil:65,opTestOddAndBranch:64,opTestMembershipAndBranchL:63,opSetCompareAndBranch:62,opFloatCompareAndBranch:61,opFixedCompareAndBranch:60,opTestAndBranch:59,opSwitchL:58,opGoto:57,opPlaceLabel:56,opTestOdd:55,opTestMembershipL:54,opSetCompare:53,opFloatCompare:52,opFixedCompare:51,opCheckL:50,opCoerce:49,opTrunc:48,opFloat:47,opCap:46,opSetPlusRange:45,opSetPlusSingleL:44,opSetSymDifference:43,opSetIntersection:42,opSetDifference:41,opSetUnion:40,opFloatAbs:39,opFloatDiv:38,opFloatMult:37,opFloatMinus:36,opFloatPlus:35,opFloatNegate:34,opFixedAbs:33,opFixedMod:32,opFixedDiv:31,opFixedMult:30,\\",128,0,0,0
	.stabs "opFixedMinus:29,opFixedPlus:28,opFixedNegate:27,opSkipData:26,opSkipAddress:25,opExclL:24,opInclL:23,opDec2:22,opDec1:21,opInc2:20,opInc1:19,opAssignLong:18,opAssign:17,opContent:16,opFrameBase:15,opStaticVariable:14,opLocalVariable:13,opStringAddr:12,opProcedureConstant:11,opNilConstant:10,opSetConstant:9,opBoolConstant:8,opCharConstant:7,opLongRealConstant:6,opRealConstant:5,opLongIntConstant:4,opShortIntConstant:3,opLongCardConstant:2,opShortCardConstant:1,NoOpCode:0,;",128,0,0,0
	.stabs "AttributesRecord:t45=s28hashchain:44,192,32;Mark:46=s4col:3,16,16;line:3,0,16;;,16,32;EndModule:47=s0;,8,0;EndProcedure:48=s0;,8,0;ReturnValueL:49=s1mode:26,0,8;;,8,8;Return:50=s4ParamSize:7,0,32;;,32,32;CopyOpenArray:51=s12elemsize:7,64,32;HighOffset:7,32,32;DataOffset:7,0,32;;,32,96;BeginProcedure:52=s16ParamSize:7,96,32;FrameSize:7,64,32;level:3,32,16;index:53,0,32;;,32,128;RTSCall:57=s5sysproc:58,32,8;paramsize:7,0,32;;,32,40;FunctionCall:59=s5mode:26,32,8;paramsize:7,0,32;;,32,40;ProcedureCall:60=s4paramsize:7,0,32;;,32,32;PassLong:61=s12space:7,64,32;offset:7,32,32;size:7,0,32;;,32,96;Pass:62=s8offset:7,32,32;mode:26,0,8;;,32,64;SkipArglist:63=s0;,8,0;Nil:64=s0;,8,0;TestOddAndBranch:65=s8tar:36,32,32;cond:1,8,8;mode:26,0,8;;,32,64;TestMembershipAndBranchL:66=s8tar:36,32,32;cond:1,8,8;ElemMode:26,0,8;;,32,64;\\",128,0,0,0
	.stabs "SetCompareAndBranch:67=s8tar:36,32,32;rel:68,0,8;;,32,64;FloatCompareAndBranch:69=s8tar:36,32,32;rel:68,8,8;mode:26,0,8;;,32,64;FixedCompareAndBranch:70=s8tar:36,32,32;rel:68,8,8;mode:26,0,8;;,32,64;TestAndBranch:71=s8tar:36,32,32;cond:1,0,8;;,32,64;SwitchL:72=s20DefaultLabel:36,128,32;CaseLabels:73,96,32;upb:7,64,32;lwb:7,32,32;mode:26,0,8;;,32,160;Goto:75=s4tar:36,0,32;;,32,32;PlaceLabel:76=s4lab:36,0,32;;,32,32;TestOdd:77=s2cond:1,8,8;mode:26,0,8;;,8,16;TestMembershipL:78=s2cond:1,8,8;ElemMode:26,0,8;;,8,16;SetCompare:79=s1rel:68,0,8;;,8,8;FloatCompare:80=s2rel:68,8,8;mode:26,0,8;;,8,16;FixedCompare:81=s2rel:68,8,8;mode:26,0,8;;,8,16;CheckL:82=s5CheckUpb:1,32,8;CheckLwb:1,24,8;UpbMode:26,16,8;LwbMode:26,8,8;IndexMode:26,0,8;;,8,40;Coerce:83=s2postmode:26,8,8;premode:26,0,8;;,8,16;Trunc:84=s2resultmode:26,8,8;\\",128,0,0,0
	.stabs "opmode:26,0,8;;,8,16;Float:85=s0;,8,0;Cap:86=s0;,8,0;SetPlusRange:87=s2UpbMode:26,8,8;LwbMode:26,0,8;;,8,16;SetPlusSingleL:88=s0;,8,0;SetSymDifference:89=s0;,8,0;SetIntersection:90=s0;,8,0;SetDifference:91=s0;,8,0;SetUnion:92=s0;,8,0;FloatAbs:93=s1mode:26,0,8;;,8,8;FloatDiv:94=s1mode:26,0,8;;,8,8;FloatMult:95=s1mode:26,0,8;;,8,8;FloatMinus:96=s1mode:26,0,8;;,8,8;FloatPlus:97=s1mode:26,0,8;;,8,8;FloatNegate:98=s1mode:26,0,8;;,8,8;FixedAbs:99=s1mode:26,0,8;;,8,8;FixedMod:100=s1mode:26,0,8;;,8,8;FixedDiv:101=s1mode:26,0,8;;,8,8;FixedMult:102=s1mode:26,0,8;;,8,8;FixedMinus:103=s1mode:26,0,8;;,8,8;FixedPlus:104=s1mode:26,0,8;;,8,8;FixedNegate:105=s1mode:26,0,8;;,8,8;SkipData:106=s0;,8,0;SkipAddress:107=s0;,8,0;ExclL:108=s0;,8,0;InclL:109=s0;,8,0;Dec2:110=s1mode:26,0,8;;,8,8;Dec1:111=s1mode:26,0,8;;,8,8;\\",128,0,0,0
	.stabs "Inc2:112=s1mode:26,0,8;;,8,8;Inc1:113=s1mode:26,0,8;;,8,8;AssignLong:114=s4size:7,0,32;;,32,32;Assign:115=s1mode:26,0,8;;,8,8;Content:116=s1mode:26,0,8;;,8,8;FrameBase:117=s6level:3,32,16;proc:53,0,32;;,32,48;StaticVariable:118=s8offset:7,32,32;module:55,0,32;;,32,64;LocalVariable:119=s4offset:7,0,32;;,32,32;StringAddr:120=s4index:36,0,32;;,32,32;ProcedureConstant:121=s4index:53,0,32;;,32,32;NilConstant:122=s0;,8,0;SetConstant:123=s4c:11,0,32;;,32,32;BoolConstant:124=s1val:1,0,8;;,8,8;CharConstant:125=s1c:2,0,8;;,8,8;LongRealConstant:126=s8c:10,0,64;;,64,64;RealConstant:127=s4c:9,0,32;;,32,32;LongIntConstant:128=s4c:7,0,32;;,32,32;ShortIntConstant:129=s2c:6,0,16;;,16,16;LongCardConstant:130=s4c:4,0,32;;,32,32;ShortCardConstant:131=s2c:3,0,16;;,16,16;op:132,0,8;;",128,0,0,0
	.stabs "Attributes:t44=*45",128,0,0,0
	.stabs "ExpressionRecord:t18=s32hashchain:17,224,32;gcg:19,192,32;arity:42=4,160,32;son:43=ar4;1;4;17,32,128;attr:44,0,32;;",128,0,0,0
	.stabs "Expression:t17=*18",128,0,0,0
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB1-Emit_EmitInstruction
	.stabn 224,0,0,.LBE1-Emit_EmitInstruction
	.stabs "Emit_EmitStatement:F16",36,0,0,Emit_EmitStatement
	.align 4
Emit_EmitStatement:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab4, %esp
.LN8:
	.stabn  68,0,5687,.LN8-Emit_EmitStatement		# line 5687, column 1
.LBB2:
.LN9:
	.stabn  68,0,5688,.LN9-Emit_EmitStatement		# line 5688, column 7
	movl	RegAlloc_s,%eax
	movl	%eax,Emit_s + 1536 
.LN10:
	.stabn  68,0,5689,.LN10-Emit_EmitStatement		# line 5689, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	cmpl	$214748364,88(%eax)
	jl	.Lab7
.Lab6:
.LN11:
	.stabn  68,0,5692,.LN11-Emit_EmitStatement		# line 5692, column 6
	.data
.Lab8:
 	.ascii	"no code selected\000"
	.text
	pushl	$16
	leal	.Lab8,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN12:
	.stabn  68,0,5692,.LN12-Emit_EmitStatement		# line 5692, column 40
	call	InOut_WriteLn
.LN13:
	.stabn  68,0,5693,.LN13-Emit_EmitStatement		# line 5693, column 6
	pushl	8(%ebp)
	call	IR_PrintInstrCosts
	addl	$4, %esp
.LN14:
	.stabn  68,0,5694,.LN14-Emit_EmitStatement		# line 5694, column 6
	call	InOut_WriteLn
.LN15:
	.stabn  68,0,5695,.LN15-Emit_EmitStatement		# line 5695, column 6
	.data
.Lab9:
 	.ascii	"internal error\000"
	.text
	pushl	$14
	leal	.Lab9,%eax
	pushl	%eax
	call	IR_Error
	addl	$8, %esp
.LN16:
	.stabn  68,0,5696,.LN16-Emit_EmitStatement		# line 5696, column 8
	movl	$0,-68(%ebp) 
.LN17:
	.stabn  68,0,5696,.LN17-Emit_EmitStatement		# line 5696, column 16
	movl	$1,%eax
	movl	-68(%ebp),%ebx
	cdq
	idivl	%ebx
	movl	%eax,-68(%ebp) 
.LN18:
	.stabn  68,0,5696,.LN18-Emit_EmitStatement		# line 5696, column 28
	call	exit_
	jmp	.Lab5
.Lab7:
.LN19:
	.stabn  68,0,5698,.LN19-Emit_EmitStatement		# line 5698, column 6
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	92(%eax),%eax
	.data
	.align 4
.Lab81:
	.long	.Lab80
	.long	.Lab79
	.long	.Lab78
	.long	.Lab77
	.long	.Lab76
	.long	.Lab75
	.long	.Lab74
	.long	.Lab73
	.long	.Lab72
	.long	.Lab71
	.long	.Lab70
	.long	.Lab69
	.long	.Lab68
	.long	.Lab67
	.long	.Lab66
	.long	.Lab65
	.long	.Lab64
	.long	.Lab63
	.long	.Lab62
	.long	.Lab61
	.long	.Lab60
	.long	.Lab59
	.long	.Lab58
	.long	.Lab57
	.long	.Lab56
	.long	.Lab55
	.long	.Lab54
	.long	.Lab53
	.long	.Lab52
	.long	.Lab51
	.long	.Lab50
	.long	.Lab49
	.long	.Lab48
	.long	.Lab47
	.long	.Lab46
	.long	.Lab45
	.long	.Lab44
	.long	.Lab43
	.long	.Lab42
	.long	.Lab41
	.long	.Lab40
	.long	.Lab39
	.long	.Lab38
	.long	.Lab37
	.long	.Lab36
	.long	.Lab35
	.long	.Lab34
	.long	.Lab33
	.long	.Lab32
	.long	.Lab31
	.long	.Lab30
	.long	.Lab29
	.long	.Lab28
	.long	.Lab27
	.long	.Lab26
	.long	.Lab25
	.long	.Lab24
	.long	.Lab23
	.long	.Lab22
	.long	.Lab21
	.long	.Lab20
	.long	.Lab19
	.long	.Lab18
	.long	.Lab17
	.long	.Lab16
	.long	.Lab15
	.long	.Lab14
	.long	.Lab13
	.long	.Lab12
	.text
	subl	$1,%eax
	jb	.Lab10
	cmpl	$68,%eax
	ja	.Lab10
	jmp	*.Lab81(,%eax,4)
.Lab80:
.LN20:
	.stabn  68,0,5700,.LN20-Emit_EmitStatement		# line 5700, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN21:
	.stabn  68,0,5701,.LN21-Emit_EmitStatement		# line 5701, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN22:
	.stabn  68,0,5702,.LN22-Emit_EmitStatement		# line 5702, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab82
.Lab83:
.LN23:
	.stabn  68,0,5703,.LN23-Emit_EmitStatement		# line 5703, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab82:
.LN24:
	.stabn  68,0,5705,.LN24-Emit_EmitStatement		# line 5705, column 5
	cmpb	$0,IR_s + 133
	je	.Lab84
.Lab85:
.LN25:
	.stabn  68,0,5706,.LN25-Emit_EmitStatement		# line 5706, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN26:
	.stabn  68,0,5707,.LN26-Emit_EmitStatement		# line 5707, column 8
	.data
.Lab86:
 	.ascii	"Rule 1/696 Cost=\000"
	.text
	pushl	$16
	leal	.Lab86,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN27:
	.stabn  68,0,5708,.LN27-Emit_EmitStatement		# line 5708, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN28:
	.stabn  68,0,5709,.LN28-Emit_EmitStatement		# line 5709, column 8
	.data
.Lab87:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab87,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN29:
	.stabn  68,0,5710,.LN29-Emit_EmitStatement		# line 5710, column 8
	call	InOut_WriteLn
.LN30:
	.stabn  68,0,5711,.LN30-Emit_EmitStatement		# line 5711, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN31:
	.stabn  68,0,5712,.LN31-Emit_EmitStatement		# line 5712, column 8
	cmpl	$0,8(%ebp)
	je	.Lab88
.Lab89:
.LN32:
	.stabn  68,0,5712,.LN32-Emit_EmitStatement		# line 5712, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab88:
.LN33:
	.stabn  68,0,5712,.LN33-Emit_EmitStatement		# line 5712, column 58
	call	InOut_WriteLn
.LN34:
	.stabn  68,0,5713,.LN34-Emit_EmitStatement		# line 5713, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN35:
	.stabn  68,0,5714,.LN35-Emit_EmitStatement		# line 5714, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN36:
	.stabn  68,0,5714,.LN36-Emit_EmitStatement		# line 5714, column 38
	call	InOut_WriteLn
.Lab84:
.LN37:
	.stabn  68,0,5716,.LN37-Emit_EmitStatement		# line 5716, column 2
	.data
.Lab90:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab90,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN38:
	.stabn  68,0,5716,.LN38-Emit_EmitStatement		# line 5716, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN39:
	.stabn  68,0,5716,.LN39-Emit_EmitStatement		# line 5716, column 60
	.data
.Lab91:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab91,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN40:
	.stabn  68,0,5716,.LN40-Emit_EmitStatement		# line 5716, column 78
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN41:
	.stabn  68,0,5716,.LN41-Emit_EmitStatement		# line 5716, column 108
	.data
.Lab92:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab92,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN42:
	.stabn  68,0,5716,.LN42-Emit_EmitStatement		# line 5716, column 126
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN43:
	.stabn  68,0,5716,.LN43-Emit_EmitStatement		# line 5716, column 151
	.data
.Lab93:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab93,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN44:
	.stabn  68,0,5716,.LN44-Emit_EmitStatement		# line 5716, column 169
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab79:
.LN45:
	.stabn  68,0,5718,.LN45-Emit_EmitStatement		# line 5718, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN46:
	.stabn  68,0,5719,.LN46-Emit_EmitStatement		# line 5719, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN47:
	.stabn  68,0,5720,.LN47-Emit_EmitStatement		# line 5720, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab94
.Lab95:
.LN48:
	.stabn  68,0,5721,.LN48-Emit_EmitStatement		# line 5721, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab94:
.LN49:
	.stabn  68,0,5723,.LN49-Emit_EmitStatement		# line 5723, column 5
	cmpb	$0,IR_s + 133
	je	.Lab96
.Lab97:
.LN50:
	.stabn  68,0,5724,.LN50-Emit_EmitStatement		# line 5724, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN51:
	.stabn  68,0,5725,.LN51-Emit_EmitStatement		# line 5725, column 8
	.data
.Lab98:
 	.ascii	"Rule 2/701 Cost=\000"
	.text
	pushl	$16
	leal	.Lab98,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN52:
	.stabn  68,0,5726,.LN52-Emit_EmitStatement		# line 5726, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN53:
	.stabn  68,0,5727,.LN53-Emit_EmitStatement		# line 5727, column 8
	.data
.Lab99:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab99,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN54:
	.stabn  68,0,5728,.LN54-Emit_EmitStatement		# line 5728, column 8
	call	InOut_WriteLn
.LN55:
	.stabn  68,0,5729,.LN55-Emit_EmitStatement		# line 5729, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN56:
	.stabn  68,0,5730,.LN56-Emit_EmitStatement		# line 5730, column 8
	cmpl	$0,8(%ebp)
	je	.Lab100
.Lab101:
.LN57:
	.stabn  68,0,5730,.LN57-Emit_EmitStatement		# line 5730, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab100:
.LN58:
	.stabn  68,0,5730,.LN58-Emit_EmitStatement		# line 5730, column 58
	call	InOut_WriteLn
.LN59:
	.stabn  68,0,5731,.LN59-Emit_EmitStatement		# line 5731, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN60:
	.stabn  68,0,5732,.LN60-Emit_EmitStatement		# line 5732, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN61:
	.stabn  68,0,5732,.LN61-Emit_EmitStatement		# line 5732, column 38
	call	InOut_WriteLn
.Lab96:
.LN62:
	.stabn  68,0,5735,.LN62-Emit_EmitStatement		# line 5735, column 2
	.data
.Lab102:
 	.ascii	"\011fstp\000"
	.text
	pushl	$5
	leal	.Lab102,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN63:
	.stabn  68,0,5735,.LN63-Emit_EmitStatement		# line 5735, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN64:
	.stabn  68,0,5735,.LN64-Emit_EmitStatement		# line 5735, column 61
	.data
.Lab103:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab103,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN65:
	.stabn  68,0,5735,.LN65-Emit_EmitStatement		# line 5735, column 86
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN66:
	.stabn  68,0,5735,.LN66-Emit_EmitStatement		# line 5735, column 111
	call	CgAssOut_AssLn
.LN67:
	.stabn  68,0,5736,.LN67-Emit_EmitStatement		# line 5736, column 9
	call	Emit_PopFStack
	jmp	.Lab11
.Lab78:
.LN68:
	.stabn  68,0,5739,.LN68-Emit_EmitStatement		# line 5739, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN69:
	.stabn  68,0,5740,.LN69-Emit_EmitStatement		# line 5740, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN70:
	.stabn  68,0,5741,.LN70-Emit_EmitStatement		# line 5741, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab104
.Lab105:
.LN71:
	.stabn  68,0,5742,.LN71-Emit_EmitStatement		# line 5742, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab104:
.LN72:
	.stabn  68,0,5744,.LN72-Emit_EmitStatement		# line 5744, column 5
	cmpb	$0,IR_s + 133
	je	.Lab106
.Lab107:
.LN73:
	.stabn  68,0,5745,.LN73-Emit_EmitStatement		# line 5745, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN74:
	.stabn  68,0,5746,.LN74-Emit_EmitStatement		# line 5746, column 8
	.data
.Lab108:
 	.ascii	"Rule 3/709 Cost=\000"
	.text
	pushl	$16
	leal	.Lab108,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN75:
	.stabn  68,0,5747,.LN75-Emit_EmitStatement		# line 5747, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN76:
	.stabn  68,0,5748,.LN76-Emit_EmitStatement		# line 5748, column 8
	.data
.Lab109:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab109,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN77:
	.stabn  68,0,5749,.LN77-Emit_EmitStatement		# line 5749, column 8
	call	InOut_WriteLn
.LN78:
	.stabn  68,0,5750,.LN78-Emit_EmitStatement		# line 5750, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN79:
	.stabn  68,0,5751,.LN79-Emit_EmitStatement		# line 5751, column 8
	cmpl	$0,8(%ebp)
	je	.Lab110
.Lab111:
.LN80:
	.stabn  68,0,5751,.LN80-Emit_EmitStatement		# line 5751, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab110:
.LN81:
	.stabn  68,0,5751,.LN81-Emit_EmitStatement		# line 5751, column 58
	call	InOut_WriteLn
.LN82:
	.stabn  68,0,5752,.LN82-Emit_EmitStatement		# line 5752, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN83:
	.stabn  68,0,5753,.LN83-Emit_EmitStatement		# line 5753, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN84:
	.stabn  68,0,5753,.LN84-Emit_EmitStatement		# line 5753, column 38
	call	InOut_WriteLn
.Lab106:
.LN85:
	.stabn  68,0,5756,.LN85-Emit_EmitStatement		# line 5756, column 15
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	fldl	16(%eax)
	.data
	.align 4
.Lab112:
	.long	-536870912,-940572673		# -0.34028234663852794E39
	.text
	.data
	.align 4
.Lab113:
	.long	-536870912,1206910975		# +0.34028234663852794E39
	.text
	fcoml	.Lab112
	fstsw	%ax
	sahf
	jb	.Lab115
	fcoml	.Lab113
	fstsw	%ax
	sahf
	jbe	.Lab114
.Lab115:
   	call	BoundErr_		
.Lab114:
	fstps	Emit_s + 1524
.LN86:
	.stabn  68,0,5757,.LN86-Emit_EmitStatement		# line 5757, column 2
	.data
.Lab116:
 	.ascii	"\011movl\011$\000"
	.text
	pushl	$7
	leal	.Lab116,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN87:
	.stabn  68,0,5757,.LN87-Emit_EmitStatement		# line 5757, column 31
	pushl	Emit_s + 1524
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN88:
	.stabn  68,0,5757,.LN88-Emit_EmitStatement		# line 5757, column 49
	.data
.Lab117:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab117,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN89:
	.stabn  68,0,5757,.LN89-Emit_EmitStatement		# line 5757, column 67
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN90:
	.stabn  68,0,5757,.LN90-Emit_EmitStatement		# line 5757, column 92
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab77:
.LN91:
	.stabn  68,0,5760,.LN91-Emit_EmitStatement		# line 5760, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN92:
	.stabn  68,0,5761,.LN92-Emit_EmitStatement		# line 5761, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN93:
	.stabn  68,0,5762,.LN93-Emit_EmitStatement		# line 5762, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab118
.Lab119:
.LN94:
	.stabn  68,0,5763,.LN94-Emit_EmitStatement		# line 5763, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab118:
.LN95:
	.stabn  68,0,5765,.LN95-Emit_EmitStatement		# line 5765, column 5
	cmpb	$0,IR_s + 133
	je	.Lab120
.Lab121:
.LN96:
	.stabn  68,0,5766,.LN96-Emit_EmitStatement		# line 5766, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN97:
	.stabn  68,0,5767,.LN97-Emit_EmitStatement		# line 5767, column 8
	.data
.Lab122:
 	.ascii	"Rule 4/717 Cost=\000"
	.text
	pushl	$16
	leal	.Lab122,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN98:
	.stabn  68,0,5768,.LN98-Emit_EmitStatement		# line 5768, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN99:
	.stabn  68,0,5769,.LN99-Emit_EmitStatement		# line 5769, column 8
	.data
.Lab123:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab123,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN100:
	.stabn  68,0,5770,.LN100-Emit_EmitStatement		# line 5770, column 8
	call	InOut_WriteLn
.LN101:
	.stabn  68,0,5771,.LN101-Emit_EmitStatement		# line 5771, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN102:
	.stabn  68,0,5772,.LN102-Emit_EmitStatement		# line 5772, column 8
	cmpl	$0,8(%ebp)
	je	.Lab124
.Lab125:
.LN103:
	.stabn  68,0,5772,.LN103-Emit_EmitStatement		# line 5772, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab124:
.LN104:
	.stabn  68,0,5772,.LN104-Emit_EmitStatement		# line 5772, column 58
	call	InOut_WriteLn
.LN105:
	.stabn  68,0,5773,.LN105-Emit_EmitStatement		# line 5773, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN106:
	.stabn  68,0,5774,.LN106-Emit_EmitStatement		# line 5774, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN107:
	.stabn  68,0,5774,.LN107-Emit_EmitStatement		# line 5774, column 38
	call	InOut_WriteLn
.Lab120:
.LN108:
	.stabn  68,0,5777,.LN108-Emit_EmitStatement		# line 5777, column 15
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	16(%eax),%ebx
	movl	%ebx,Emit_s + 1528
	movl	20(%eax),%ebx
	movl	%ebx,Emit_s + 1532
.LN109:
	.stabn  68,0,5778,.LN109-Emit_EmitStatement		# line 5778, column 2
	.data
.Lab126:
 	.ascii	"\011movl\011$\000"
	.text
	pushl	$7
	leal	.Lab126,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN110:
	.stabn  68,0,5778,.LN110-Emit_EmitStatement		# line 5778, column 31
	pushl	Emit_s + 1528
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN111:
	.stabn  68,0,5778,.LN111-Emit_EmitStatement		# line 5778, column 50
	.data
.Lab127:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab127,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN112:
	.stabn  68,0,5778,.LN112-Emit_EmitStatement		# line 5778, column 68
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN113:
	.stabn  68,0,5778,.LN113-Emit_EmitStatement		# line 5778, column 93
	call	CgAssOut_AssLn
.LN114:
	.stabn  68,0,5779,.LN114-Emit_EmitStatement		# line 5779, column 9
	addl	$4,-24(%ebp) 
.LN115:
	.stabn  68,0,5780,.LN115-Emit_EmitStatement		# line 5780, column 2
	.data
.Lab128:
 	.ascii	"\011movl\011$\000"
	.text
	pushl	$7
	leal	.Lab128,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN116:
	.stabn  68,0,5780,.LN116-Emit_EmitStatement		# line 5780, column 31
	pushl	Emit_s + 1532
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN117:
	.stabn  68,0,5780,.LN117-Emit_EmitStatement		# line 5780, column 50
	.data
.Lab129:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab129,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN118:
	.stabn  68,0,5780,.LN118-Emit_EmitStatement		# line 5780, column 68
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN119:
	.stabn  68,0,5780,.LN119-Emit_EmitStatement		# line 5780, column 93
	.data
.Lab130:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab130,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN120:
	.stabn  68,0,5780,.LN120-Emit_EmitStatement		# line 5780, column 118
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab76:
.LN121:
	.stabn  68,0,5783,.LN121-Emit_EmitStatement		# line 5783, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN122:
	.stabn  68,0,5784,.LN122-Emit_EmitStatement		# line 5784, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN123:
	.stabn  68,0,5785,.LN123-Emit_EmitStatement		# line 5785, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab131
.Lab132:
.LN124:
	.stabn  68,0,5786,.LN124-Emit_EmitStatement		# line 5786, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab131:
.LN125:
	.stabn  68,0,5788,.LN125-Emit_EmitStatement		# line 5788, column 5
	cmpb	$0,IR_s + 133
	je	.Lab133
.Lab134:
.LN126:
	.stabn  68,0,5789,.LN126-Emit_EmitStatement		# line 5789, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN127:
	.stabn  68,0,5790,.LN127-Emit_EmitStatement		# line 5790, column 8
	.data
.Lab135:
 	.ascii	"Rule 5/727 Cost=\000"
	.text
	pushl	$16
	leal	.Lab135,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN128:
	.stabn  68,0,5791,.LN128-Emit_EmitStatement		# line 5791, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN129:
	.stabn  68,0,5792,.LN129-Emit_EmitStatement		# line 5792, column 8
	.data
.Lab136:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab136,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN130:
	.stabn  68,0,5793,.LN130-Emit_EmitStatement		# line 5793, column 8
	call	InOut_WriteLn
.LN131:
	.stabn  68,0,5794,.LN131-Emit_EmitStatement		# line 5794, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN132:
	.stabn  68,0,5795,.LN132-Emit_EmitStatement		# line 5795, column 8
	cmpl	$0,8(%ebp)
	je	.Lab137
.Lab138:
.LN133:
	.stabn  68,0,5795,.LN133-Emit_EmitStatement		# line 5795, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab137:
.LN134:
	.stabn  68,0,5795,.LN134-Emit_EmitStatement		# line 5795, column 58
	call	InOut_WriteLn
.LN135:
	.stabn  68,0,5796,.LN135-Emit_EmitStatement		# line 5796, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN136:
	.stabn  68,0,5797,.LN136-Emit_EmitStatement		# line 5797, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN137:
	.stabn  68,0,5797,.LN137-Emit_EmitStatement		# line 5797, column 38
	call	InOut_WriteLn
.Lab133:
.LN138:
	.stabn  68,0,5800,.LN138-Emit_EmitStatement		# line 5800, column 2
	.data
.Lab139:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab139,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN139:
	.stabn  68,0,5800,.LN139-Emit_EmitStatement		# line 5800, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN140:
	.stabn  68,0,5800,.LN140-Emit_EmitStatement		# line 5800, column 56
	.data
.Lab140:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab140,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN141:
	.stabn  68,0,5800,.LN141-Emit_EmitStatement		# line 5800, column 74
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN142:
	.stabn  68,0,5800,.LN142-Emit_EmitStatement		# line 5800, column 119
	call	CgAssOut_AssLn
.LN143:
	.stabn  68,0,5801,.LN143-Emit_EmitStatement		# line 5801, column 2
	.data
.Lab141:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab141,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN144:
	.stabn  68,0,5801,.LN144-Emit_EmitStatement		# line 5801, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN145:
	.stabn  68,0,5801,.LN145-Emit_EmitStatement		# line 5801, column 75
	.data
.Lab142:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab142,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN146:
	.stabn  68,0,5801,.LN146-Emit_EmitStatement		# line 5801, column 93
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN147:
	.stabn  68,0,5801,.LN147-Emit_EmitStatement		# line 5801, column 118
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab75:
.LN148:
	.stabn  68,0,5804,.LN148-Emit_EmitStatement		# line 5804, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN149:
	.stabn  68,0,5805,.LN149-Emit_EmitStatement		# line 5805, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN150:
	.stabn  68,0,5806,.LN150-Emit_EmitStatement		# line 5806, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab143
.Lab144:
.LN151:
	.stabn  68,0,5807,.LN151-Emit_EmitStatement		# line 5807, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab143:
.LN152:
	.stabn  68,0,5809,.LN152-Emit_EmitStatement		# line 5809, column 5
	cmpb	$0,IR_s + 133
	je	.Lab145
.Lab146:
.LN153:
	.stabn  68,0,5810,.LN153-Emit_EmitStatement		# line 5810, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN154:
	.stabn  68,0,5811,.LN154-Emit_EmitStatement		# line 5811, column 8
	.data
.Lab147:
 	.ascii	"Rule 6/736 Cost=\000"
	.text
	pushl	$16
	leal	.Lab147,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN155:
	.stabn  68,0,5812,.LN155-Emit_EmitStatement		# line 5812, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN156:
	.stabn  68,0,5813,.LN156-Emit_EmitStatement		# line 5813, column 8
	.data
.Lab148:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab148,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN157:
	.stabn  68,0,5814,.LN157-Emit_EmitStatement		# line 5814, column 8
	call	InOut_WriteLn
.LN158:
	.stabn  68,0,5815,.LN158-Emit_EmitStatement		# line 5815, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN159:
	.stabn  68,0,5816,.LN159-Emit_EmitStatement		# line 5816, column 8
	cmpl	$0,8(%ebp)
	je	.Lab149
.Lab150:
.LN160:
	.stabn  68,0,5816,.LN160-Emit_EmitStatement		# line 5816, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab149:
.LN161:
	.stabn  68,0,5816,.LN161-Emit_EmitStatement		# line 5816, column 58
	call	InOut_WriteLn
.LN162:
	.stabn  68,0,5817,.LN162-Emit_EmitStatement		# line 5817, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN163:
	.stabn  68,0,5818,.LN163-Emit_EmitStatement		# line 5818, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN164:
	.stabn  68,0,5818,.LN164-Emit_EmitStatement		# line 5818, column 38
	call	InOut_WriteLn
.Lab145:
.LN165:
	.stabn  68,0,5821,.LN165-Emit_EmitStatement		# line 5821, column 2
	.data
.Lab151:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab151,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN166:
	.stabn  68,0,5821,.LN166-Emit_EmitStatement		# line 5821, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN167:
	.stabn  68,0,5821,.LN167-Emit_EmitStatement		# line 5821, column 56
	.data
.Lab152:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab152,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN168:
	.stabn  68,0,5821,.LN168-Emit_EmitStatement		# line 5821, column 74
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN169:
	.stabn  68,0,5821,.LN169-Emit_EmitStatement		# line 5821, column 119
	call	CgAssOut_AssLn
.LN170:
	.stabn  68,0,5822,.LN170-Emit_EmitStatement		# line 5822, column 2
	.data
.Lab153:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab153,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN171:
	.stabn  68,0,5822,.LN171-Emit_EmitStatement		# line 5822, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN172:
	.stabn  68,0,5822,.LN172-Emit_EmitStatement		# line 5822, column 75
	.data
.Lab154:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab154,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN173:
	.stabn  68,0,5822,.LN173-Emit_EmitStatement		# line 5822, column 93
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN174:
	.stabn  68,0,5822,.LN174-Emit_EmitStatement		# line 5822, column 118
	call	CgAssOut_AssLn
.LN175:
	.stabn  68,0,5823,.LN175-Emit_EmitStatement		# line 5823, column 9
	addl	$4,-24(%ebp) 
.LN176:
	.stabn  68,0,5824,.LN176-Emit_EmitStatement		# line 5824, column 9
	addl	$4,-44(%ebp) 
.LN177:
	.stabn  68,0,5825,.LN177-Emit_EmitStatement		# line 5825, column 2
	.data
.Lab155:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab155,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN178:
	.stabn  68,0,5825,.LN178-Emit_EmitStatement		# line 5825, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN179:
	.stabn  68,0,5825,.LN179-Emit_EmitStatement		# line 5825, column 56
	.data
.Lab156:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab156,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN180:
	.stabn  68,0,5825,.LN180-Emit_EmitStatement		# line 5825, column 74
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN181:
	.stabn  68,0,5825,.LN181-Emit_EmitStatement		# line 5825, column 119
	call	CgAssOut_AssLn
.LN182:
	.stabn  68,0,5826,.LN182-Emit_EmitStatement		# line 5826, column 2
	.data
.Lab157:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab157,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN183:
	.stabn  68,0,5826,.LN183-Emit_EmitStatement		# line 5826, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN184:
	.stabn  68,0,5826,.LN184-Emit_EmitStatement		# line 5826, column 75
	.data
.Lab158:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab158,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN185:
	.stabn  68,0,5826,.LN185-Emit_EmitStatement		# line 5826, column 93
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN186:
	.stabn  68,0,5826,.LN186-Emit_EmitStatement		# line 5826, column 118
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab74:
.LN187:
	.stabn  68,0,5829,.LN187-Emit_EmitStatement		# line 5829, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN188:
	.stabn  68,0,5830,.LN188-Emit_EmitStatement		# line 5830, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN189:
	.stabn  68,0,5831,.LN189-Emit_EmitStatement		# line 5831, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab159
.Lab160:
.LN190:
	.stabn  68,0,5832,.LN190-Emit_EmitStatement		# line 5832, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab159:
.LN191:
	.stabn  68,0,5834,.LN191-Emit_EmitStatement		# line 5834, column 5
	cmpb	$0,IR_s + 133
	je	.Lab161
.Lab162:
.LN192:
	.stabn  68,0,5835,.LN192-Emit_EmitStatement		# line 5835, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN193:
	.stabn  68,0,5836,.LN193-Emit_EmitStatement		# line 5836, column 8
	.data
.Lab163:
 	.ascii	"Rule 7/749 Cost=\000"
	.text
	pushl	$16
	leal	.Lab163,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN194:
	.stabn  68,0,5837,.LN194-Emit_EmitStatement		# line 5837, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN195:
	.stabn  68,0,5838,.LN195-Emit_EmitStatement		# line 5838, column 8
	.data
.Lab164:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab164,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN196:
	.stabn  68,0,5839,.LN196-Emit_EmitStatement		# line 5839, column 8
	call	InOut_WriteLn
.LN197:
	.stabn  68,0,5840,.LN197-Emit_EmitStatement		# line 5840, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN198:
	.stabn  68,0,5841,.LN198-Emit_EmitStatement		# line 5841, column 8
	cmpl	$0,8(%ebp)
	je	.Lab165
.Lab166:
.LN199:
	.stabn  68,0,5841,.LN199-Emit_EmitStatement		# line 5841, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab165:
.LN200:
	.stabn  68,0,5841,.LN200-Emit_EmitStatement		# line 5841, column 58
	call	InOut_WriteLn
.LN201:
	.stabn  68,0,5842,.LN201-Emit_EmitStatement		# line 5842, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN202:
	.stabn  68,0,5843,.LN202-Emit_EmitStatement		# line 5843, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN203:
	.stabn  68,0,5843,.LN203-Emit_EmitStatement		# line 5843, column 38
	call	InOut_WriteLn
.Lab161:
	jmp	.Lab11
.Lab73:
.LN204:
	.stabn  68,0,5847,.LN204-Emit_EmitStatement		# line 5847, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN205:
	.stabn  68,0,5848,.LN205-Emit_EmitStatement		# line 5848, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN206:
	.stabn  68,0,5849,.LN206-Emit_EmitStatement		# line 5849, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab167
.Lab168:
.LN207:
	.stabn  68,0,5850,.LN207-Emit_EmitStatement		# line 5850, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab167:
.LN208:
	.stabn  68,0,5852,.LN208-Emit_EmitStatement		# line 5852, column 5
	cmpb	$0,IR_s + 133
	je	.Lab169
.Lab170:
.LN209:
	.stabn  68,0,5853,.LN209-Emit_EmitStatement		# line 5853, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN210:
	.stabn  68,0,5854,.LN210-Emit_EmitStatement		# line 5854, column 8
	.data
.Lab171:
 	.ascii	"Rule 8/773 Cost=\000"
	.text
	pushl	$16
	leal	.Lab171,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN211:
	.stabn  68,0,5855,.LN211-Emit_EmitStatement		# line 5855, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN212:
	.stabn  68,0,5856,.LN212-Emit_EmitStatement		# line 5856, column 8
	.data
.Lab172:
 	.ascii	" AssignLong\000"
	.text
	pushl	$11
	leal	.Lab172,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN213:
	.stabn  68,0,5857,.LN213-Emit_EmitStatement		# line 5857, column 8
	call	InOut_WriteLn
.LN214:
	.stabn  68,0,5858,.LN214-Emit_EmitStatement		# line 5858, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN215:
	.stabn  68,0,5859,.LN215-Emit_EmitStatement		# line 5859, column 8
	cmpl	$0,8(%ebp)
	je	.Lab173
.Lab174:
.LN216:
	.stabn  68,0,5859,.LN216-Emit_EmitStatement		# line 5859, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab173:
.LN217:
	.stabn  68,0,5859,.LN217-Emit_EmitStatement		# line 5859, column 58
	call	InOut_WriteLn
.LN218:
	.stabn  68,0,5860,.LN218-Emit_EmitStatement		# line 5860, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN219:
	.stabn  68,0,5861,.LN219-Emit_EmitStatement		# line 5861, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN220:
	.stabn  68,0,5861,.LN220-Emit_EmitStatement		# line 5861, column 38
	call	InOut_WriteLn
.Lab169:
.LN221:
	.stabn  68,0,5864,.LN221-Emit_EmitStatement		# line 5864, column 2
	.data
.Lab175:
 	.ascii	"\011leal\011\000"
	.text
	pushl	$6
	leal	.Lab175,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN222:
	.stabn  68,0,5864,.LN222-Emit_EmitStatement		# line 5864, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN223:
	.stabn  68,0,5864,.LN223-Emit_EmitStatement		# line 5864, column 55
	.data
.Lab176:
 	.ascii	",%esi\000"
	.text
	pushl	$5
	leal	.Lab176,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN224:
	.stabn  68,0,5864,.LN224-Emit_EmitStatement		# line 5864, column 77
	call	CgAssOut_AssLn
.LN225:
	.stabn  68,0,5865,.LN225-Emit_EmitStatement		# line 5865, column 2
	.data
.Lab177:
 	.ascii	"\011leal\011\000"
	.text
	pushl	$6
	leal	.Lab177,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN226:
	.stabn  68,0,5865,.LN226-Emit_EmitStatement		# line 5865, column 30
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN227:
	.stabn  68,0,5865,.LN227-Emit_EmitStatement		# line 5865, column 55
	.data
.Lab178:
 	.ascii	",%edi\000"
	.text
	pushl	$5
	leal	.Lab178,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN228:
	.stabn  68,0,5865,.LN228-Emit_EmitStatement		# line 5865, column 77
	call	CgAssOut_AssLn
.LN229:
	.stabn  68,0,5866,.LN229-Emit_EmitStatement		# line 5866, column 9
	movl	-24(%ebp),%eax
	movl	$4,%ebx
	cdq
	idivl	%ebx
	cmpl	$1,%edx
	jl	.Lab179
.Lab180:
.LN230:
	.stabn  68,0,5867,.LN230-Emit_EmitStatement		# line 5867, column 11
	movl	8(%ebp),%eax
	movl	(%eax),%esi
	movl	$4,%ecx
	movl	-24(%ebp),%eax
	movl	$4,%ebx
	cdq
	idivl	%ebx
 	subl	%edx,%ecx 
	subl	%ecx,4(%esi) 
.Lab179:
.LN231:
	.stabn  68,0,5869,.LN231-Emit_EmitStatement		# line 5869, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$4,4(%eax)
	jl	.Lab181
.Lab182:
.LN232:
	.stabn  68,0,5870,.LN232-Emit_EmitStatement		# line 5870, column 2
	.data
.Lab183:
 	.ascii	"\011movl\011$\000"
	.text
	pushl	$7
	leal	.Lab183,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN233:
	.stabn  68,0,5870,.LN233-Emit_EmitStatement		# line 5870, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	sarl	$2, %eax 
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN234:
	.stabn  68,0,5870,.LN234-Emit_EmitStatement		# line 5870, column 74
	.data
.Lab184:
 	.ascii	",%ecx\000"
	.text
	pushl	$5
	leal	.Lab184,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN235:
	.stabn  68,0,5870,.LN235-Emit_EmitStatement		# line 5870, column 96
	call	CgAssOut_AssLn
.Lab181:
.LN236:
	.stabn  68,0,5872,.LN236-Emit_EmitStatement		# line 5872, column 2
	.data
.Lab185:
 	.ascii	"\011cld\000"
	.text
	pushl	$4
	leal	.Lab185,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN237:
	.stabn  68,0,5872,.LN237-Emit_EmitStatement		# line 5872, column 25
	call	CgAssOut_AssLn
.LN238:
	.stabn  68,0,5873,.LN238-Emit_EmitStatement		# line 5873, column 9
	movl	-24(%ebp),%eax
	movl	$2,%ebx
	cdq
	idivl	%ebx
	cmpl	$1,%edx
	jne	.Lab186
.Lab187:
.LN239:
	.stabn  68,0,5874,.LN239-Emit_EmitStatement		# line 5874, column 2
	.data
.Lab188:
 	.ascii	"\011movsb\000"
	.text
	pushl	$6
	leal	.Lab188,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN240:
	.stabn  68,0,5874,.LN240-Emit_EmitStatement		# line 5874, column 27
	call	CgAssOut_AssLn
.Lab186:
.LN241:
	.stabn  68,0,5876,.LN241-Emit_EmitStatement		# line 5876, column 9
	movl	-24(%ebp),%eax
	movl	$4,%ebx
	cdq
	idivl	%ebx
	cmpl	$1,%edx
	je	.Lab190
.Lab191:
	movl	-24(%ebp),%eax
	movl	$4,%ebx
	cdq
	idivl	%ebx
	cmpl	$2,%edx
	jne	.Lab189
.Lab190:
.LN242:
	.stabn  68,0,5877,.LN242-Emit_EmitStatement		# line 5877, column 2
	.data
.Lab192:
 	.ascii	"\011movsw\000"
	.text
	pushl	$6
	leal	.Lab192,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN243:
	.stabn  68,0,5877,.LN243-Emit_EmitStatement		# line 5877, column 27
	call	CgAssOut_AssLn
.Lab189:
.LN244:
	.stabn  68,0,5879,.LN244-Emit_EmitStatement		# line 5879, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$8,4(%eax)
	jl	.Lab193
.Lab194:
.LN245:
	.stabn  68,0,5880,.LN245-Emit_EmitStatement		# line 5880, column 2
	.data
.Lab195:
 	.ascii	"\011repz\000"
	.text
	pushl	$5
	leal	.Lab195,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN246:
	.stabn  68,0,5880,.LN246-Emit_EmitStatement		# line 5880, column 26
	call	CgAssOut_AssLn
.Lab193:
.LN247:
	.stabn  68,0,5882,.LN247-Emit_EmitStatement		# line 5882, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$4,4(%eax)
	jl	.Lab196
.Lab197:
.LN248:
	.stabn  68,0,5883,.LN248-Emit_EmitStatement		# line 5883, column 2
	.data
.Lab198:
 	.ascii	"\011movsl\000"
	.text
	pushl	$6
	leal	.Lab198,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN249:
	.stabn  68,0,5883,.LN249-Emit_EmitStatement		# line 5883, column 27
	call	CgAssOut_AssLn
.Lab196:
.LN250:
	.stabn  68,0,5885,.LN250-Emit_EmitStatement		# line 5885, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	movl	$4,%ebx
	cdq
	idivl	%ebx
	cmpl	$2,%edx
	jl	.Lab199
.Lab200:
.LN251:
	.stabn  68,0,5886,.LN251-Emit_EmitStatement		# line 5886, column 2
	.data
.Lab201:
 	.ascii	"\011movsw\000"
	.text
	pushl	$6
	leal	.Lab201,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN252:
	.stabn  68,0,5886,.LN252-Emit_EmitStatement		# line 5886, column 27
	call	CgAssOut_AssLn
.Lab199:
.LN253:
	.stabn  68,0,5888,.LN253-Emit_EmitStatement		# line 5888, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	movl	$2,%ebx
	cdq
	idivl	%ebx
	cmpl	$1,%edx
	jl	.Lab202
.Lab203:
.LN254:
	.stabn  68,0,5889,.LN254-Emit_EmitStatement		# line 5889, column 2
	.data
.Lab204:
 	.ascii	"\011movsb\000"
	.text
	pushl	$6
	leal	.Lab204,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN255:
	.stabn  68,0,5889,.LN255-Emit_EmitStatement		# line 5889, column 27
	call	CgAssOut_AssLn
.Lab202:
	jmp	.Lab11
.Lab72:
.LN256:
	.stabn  68,0,5893,.LN256-Emit_EmitStatement		# line 5893, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN257:
	.stabn  68,0,5894,.LN257-Emit_EmitStatement		# line 5894, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN258:
	.stabn  68,0,5895,.LN258-Emit_EmitStatement		# line 5895, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab205
.Lab206:
.LN259:
	.stabn  68,0,5896,.LN259-Emit_EmitStatement		# line 5896, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab205:
.LN260:
	.stabn  68,0,5898,.LN260-Emit_EmitStatement		# line 5898, column 5
	cmpb	$0,IR_s + 133
	je	.Lab207
.Lab208:
.LN261:
	.stabn  68,0,5899,.LN261-Emit_EmitStatement		# line 5899, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN262:
	.stabn  68,0,5900,.LN262-Emit_EmitStatement		# line 5900, column 8
	.data
.Lab209:
 	.ascii	"Rule 9/807 Cost=\000"
	.text
	pushl	$16
	leal	.Lab209,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN263:
	.stabn  68,0,5901,.LN263-Emit_EmitStatement		# line 5901, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN264:
	.stabn  68,0,5902,.LN264-Emit_EmitStatement		# line 5902, column 8
	.data
.Lab210:
 	.ascii	" AssignLong\000"
	.text
	pushl	$11
	leal	.Lab210,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN265:
	.stabn  68,0,5903,.LN265-Emit_EmitStatement		# line 5903, column 8
	call	InOut_WriteLn
.LN266:
	.stabn  68,0,5904,.LN266-Emit_EmitStatement		# line 5904, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN267:
	.stabn  68,0,5905,.LN267-Emit_EmitStatement		# line 5905, column 8
	cmpl	$0,8(%ebp)
	je	.Lab211
.Lab212:
.LN268:
	.stabn  68,0,5905,.LN268-Emit_EmitStatement		# line 5905, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab211:
.LN269:
	.stabn  68,0,5905,.LN269-Emit_EmitStatement		# line 5905, column 58
	call	InOut_WriteLn
.LN270:
	.stabn  68,0,5906,.LN270-Emit_EmitStatement		# line 5906, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN271:
	.stabn  68,0,5907,.LN271-Emit_EmitStatement		# line 5907, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN272:
	.stabn  68,0,5907,.LN272-Emit_EmitStatement		# line 5907, column 38
	call	InOut_WriteLn
.Lab207:
.LN273:
	.stabn  68,0,5910,.LN273-Emit_EmitStatement		# line 5910, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$4,4(%eax)
	jl	.Lab213
.Lab214:
.LN274:
	.stabn  68,0,5911,.LN274-Emit_EmitStatement		# line 5911, column 2
	.data
.Lab215:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab215,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN275:
	.stabn  68,0,5911,.LN275-Emit_EmitStatement		# line 5911, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN276:
	.stabn  68,0,5911,.LN276-Emit_EmitStatement		# line 5911, column 55
	.data
.Lab216:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab216,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN277:
	.stabn  68,0,5911,.LN277-Emit_EmitStatement		# line 5911, column 73
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN278:
	.stabn  68,0,5911,.LN278-Emit_EmitStatement		# line 5911, column 118
	call	CgAssOut_AssLn
.LN279:
	.stabn  68,0,5912,.LN279-Emit_EmitStatement		# line 5912, column 2
	.data
.Lab217:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab217,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN280:
	.stabn  68,0,5912,.LN280-Emit_EmitStatement		# line 5912, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN281:
	.stabn  68,0,5912,.LN281-Emit_EmitStatement		# line 5912, column 75
	.data
.Lab218:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab218,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN282:
	.stabn  68,0,5912,.LN282-Emit_EmitStatement		# line 5912, column 93
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN283:
	.stabn  68,0,5912,.LN283-Emit_EmitStatement		# line 5912, column 118
	call	CgAssOut_AssLn
.LN284:
	.stabn  68,0,5913,.LN284-Emit_EmitStatement		# line 5913, column 9
	addl	$4,-44(%ebp) 
.LN285:
	.stabn  68,0,5914,.LN285-Emit_EmitStatement		# line 5914, column 9
	addl	$4,-24(%ebp) 
.LN286:
	.stabn  68,0,5915,.LN286-Emit_EmitStatement		# line 5915, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	subl	$4,4(%eax) 
.Lab213:
.LN287:
	.stabn  68,0,5917,.LN287-Emit_EmitStatement		# line 5917, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$4,4(%eax)
	jl	.Lab219
.Lab220:
.LN288:
	.stabn  68,0,5918,.LN288-Emit_EmitStatement		# line 5918, column 2
	.data
.Lab221:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab221,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN289:
	.stabn  68,0,5918,.LN289-Emit_EmitStatement		# line 5918, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN290:
	.stabn  68,0,5918,.LN290-Emit_EmitStatement		# line 5918, column 55
	.data
.Lab222:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab222,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN291:
	.stabn  68,0,5918,.LN291-Emit_EmitStatement		# line 5918, column 73
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN292:
	.stabn  68,0,5918,.LN292-Emit_EmitStatement		# line 5918, column 118
	call	CgAssOut_AssLn
.LN293:
	.stabn  68,0,5919,.LN293-Emit_EmitStatement		# line 5919, column 2
	.data
.Lab223:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab223,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN294:
	.stabn  68,0,5919,.LN294-Emit_EmitStatement		# line 5919, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN295:
	.stabn  68,0,5919,.LN295-Emit_EmitStatement		# line 5919, column 75
	.data
.Lab224:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab224,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN296:
	.stabn  68,0,5919,.LN296-Emit_EmitStatement		# line 5919, column 93
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN297:
	.stabn  68,0,5919,.LN297-Emit_EmitStatement		# line 5919, column 118
	call	CgAssOut_AssLn
.LN298:
	.stabn  68,0,5920,.LN298-Emit_EmitStatement		# line 5920, column 9
	addl	$4,-44(%ebp) 
.LN299:
	.stabn  68,0,5921,.LN299-Emit_EmitStatement		# line 5921, column 9
	addl	$4,-24(%ebp) 
.LN300:
	.stabn  68,0,5922,.LN300-Emit_EmitStatement		# line 5922, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	subl	$4,4(%eax) 
.Lab219:
.LN301:
	.stabn  68,0,5924,.LN301-Emit_EmitStatement		# line 5924, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	sarl	$1, %eax 
	cmpl	$0,%eax
	jle	.Lab225
.Lab226:
.LN302:
	.stabn  68,0,5925,.LN302-Emit_EmitStatement		# line 5925, column 2
	.data
.Lab227:
 	.ascii	"\011movw\011\000"
	.text
	pushl	$6
	leal	.Lab227,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN303:
	.stabn  68,0,5925,.LN303-Emit_EmitStatement		# line 5925, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN304:
	.stabn  68,0,5925,.LN304-Emit_EmitStatement		# line 5925, column 55
	.data
.Lab228:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab228,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN305:
	.stabn  68,0,5925,.LN305-Emit_EmitStatement		# line 5925, column 73
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssWordRegister
	addl	$4, %esp
.LN306:
	.stabn  68,0,5925,.LN306-Emit_EmitStatement		# line 5925, column 124
	call	CgAssOut_AssLn
.LN307:
	.stabn  68,0,5926,.LN307-Emit_EmitStatement		# line 5926, column 2
	.data
.Lab229:
 	.ascii	"\011movw\011\000"
	.text
	pushl	$6
	leal	.Lab229,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN308:
	.stabn  68,0,5926,.LN308-Emit_EmitStatement		# line 5926, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssWordRegister
	addl	$4, %esp
.LN309:
	.stabn  68,0,5926,.LN309-Emit_EmitStatement		# line 5926, column 81
	.data
.Lab230:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab230,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN310:
	.stabn  68,0,5926,.LN310-Emit_EmitStatement		# line 5926, column 99
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN311:
	.stabn  68,0,5926,.LN311-Emit_EmitStatement		# line 5926, column 124
	call	CgAssOut_AssLn
.LN312:
	.stabn  68,0,5927,.LN312-Emit_EmitStatement		# line 5927, column 9
	addl	$2,-44(%ebp) 
.LN313:
	.stabn  68,0,5928,.LN313-Emit_EmitStatement		# line 5928, column 9
	addl	$2,-24(%ebp) 
.Lab225:
.LN314:
	.stabn  68,0,5930,.LN314-Emit_EmitStatement		# line 5930, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	movl	$2,%ebx
	cdq
	idivl	%ebx
	cmpl	$0,%edx
	jle	.Lab231
.Lab232:
.LN315:
	.stabn  68,0,5931,.LN315-Emit_EmitStatement		# line 5931, column 2
	.data
.Lab233:
 	.ascii	"\011movb\011\000"
	.text
	pushl	$6
	leal	.Lab233,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN316:
	.stabn  68,0,5931,.LN316-Emit_EmitStatement		# line 5931, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN317:
	.stabn  68,0,5931,.LN317-Emit_EmitStatement		# line 5931, column 55
	.data
.Lab234:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab234,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN318:
	.stabn  68,0,5931,.LN318-Emit_EmitStatement		# line 5931, column 73
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN319:
	.stabn  68,0,5931,.LN319-Emit_EmitStatement		# line 5931, column 124
	call	CgAssOut_AssLn
.LN320:
	.stabn  68,0,5932,.LN320-Emit_EmitStatement		# line 5932, column 2
	.data
.Lab235:
 	.ascii	"\011movb\011\000"
	.text
	pushl	$6
	leal	.Lab235,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN321:
	.stabn  68,0,5932,.LN321-Emit_EmitStatement		# line 5932, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN322:
	.stabn  68,0,5932,.LN322-Emit_EmitStatement		# line 5932, column 81
	.data
.Lab236:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab236,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN323:
	.stabn  68,0,5932,.LN323-Emit_EmitStatement		# line 5932, column 99
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN324:
	.stabn  68,0,5932,.LN324-Emit_EmitStatement		# line 5932, column 124
	call	CgAssOut_AssLn
.Lab231:
	jmp	.Lab11
.Lab71:
.LN325:
	.stabn  68,0,5936,.LN325-Emit_EmitStatement		# line 5936, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN326:
	.stabn  68,0,5937,.LN326-Emit_EmitStatement		# line 5937, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab237
.Lab238:
.LN327:
	.stabn  68,0,5938,.LN327-Emit_EmitStatement		# line 5938, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab237:
.LN328:
	.stabn  68,0,5940,.LN328-Emit_EmitStatement		# line 5940, column 5
	cmpb	$0,IR_s + 133
	je	.Lab239
.Lab240:
.LN329:
	.stabn  68,0,5941,.LN329-Emit_EmitStatement		# line 5941, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN330:
	.stabn  68,0,5942,.LN330-Emit_EmitStatement		# line 5942, column 8
	.data
.Lab241:
 	.ascii	"Rule 10/838 Cost=\000"
	.text
	pushl	$17
	leal	.Lab241,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN331:
	.stabn  68,0,5943,.LN331-Emit_EmitStatement		# line 5943, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN332:
	.stabn  68,0,5944,.LN332-Emit_EmitStatement		# line 5944, column 8
	.data
.Lab242:
 	.ascii	" Inc1\000"
	.text
	pushl	$5
	leal	.Lab242,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN333:
	.stabn  68,0,5945,.LN333-Emit_EmitStatement		# line 5945, column 8
	call	InOut_WriteLn
.LN334:
	.stabn  68,0,5946,.LN334-Emit_EmitStatement		# line 5946, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN335:
	.stabn  68,0,5947,.LN335-Emit_EmitStatement		# line 5947, column 8
	cmpl	$0,8(%ebp)
	je	.Lab243
.Lab244:
.LN336:
	.stabn  68,0,5947,.LN336-Emit_EmitStatement		# line 5947, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab243:
.LN337:
	.stabn  68,0,5947,.LN337-Emit_EmitStatement		# line 5947, column 58
	call	InOut_WriteLn
.LN338:
	.stabn  68,0,5948,.LN338-Emit_EmitStatement		# line 5948, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN339:
	.stabn  68,0,5949,.LN339-Emit_EmitStatement		# line 5949, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN340:
	.stabn  68,0,5949,.LN340-Emit_EmitStatement		# line 5949, column 38
	call	InOut_WriteLn
.Lab239:
.LN341:
	.stabn  68,0,5951,.LN341-Emit_EmitStatement		# line 5951, column 2
	.data
.Lab245:
 	.ascii	"\011inc\000"
	.text
	pushl	$4
	leal	.Lab245,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN342:
	.stabn  68,0,5951,.LN342-Emit_EmitStatement		# line 5951, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN343:
	.stabn  68,0,5951,.LN343-Emit_EmitStatement		# line 5951, column 58
	.data
.Lab246:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab246,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN344:
	.stabn  68,0,5951,.LN344-Emit_EmitStatement		# line 5951, column 78
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN345:
	.stabn  68,0,5951,.LN345-Emit_EmitStatement		# line 5951, column 103
	.data
.Lab247:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab247,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN346:
	.stabn  68,0,5951,.LN346-Emit_EmitStatement		# line 5951, column 121
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab70:
.LN347:
	.stabn  68,0,5953,.LN347-Emit_EmitStatement		# line 5953, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN348:
	.stabn  68,0,5954,.LN348-Emit_EmitStatement		# line 5954, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab248
.Lab249:
.LN349:
	.stabn  68,0,5955,.LN349-Emit_EmitStatement		# line 5955, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab248:
.LN350:
	.stabn  68,0,5957,.LN350-Emit_EmitStatement		# line 5957, column 5
	cmpb	$0,IR_s + 133
	je	.Lab250
.Lab251:
.LN351:
	.stabn  68,0,5958,.LN351-Emit_EmitStatement		# line 5958, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN352:
	.stabn  68,0,5959,.LN352-Emit_EmitStatement		# line 5959, column 8
	.data
.Lab252:
 	.ascii	"Rule 11/842 Cost=\000"
	.text
	pushl	$17
	leal	.Lab252,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN353:
	.stabn  68,0,5960,.LN353-Emit_EmitStatement		# line 5960, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN354:
	.stabn  68,0,5961,.LN354-Emit_EmitStatement		# line 5961, column 8
	.data
.Lab253:
 	.ascii	" Dec1\000"
	.text
	pushl	$5
	leal	.Lab253,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN355:
	.stabn  68,0,5962,.LN355-Emit_EmitStatement		# line 5962, column 8
	call	InOut_WriteLn
.LN356:
	.stabn  68,0,5963,.LN356-Emit_EmitStatement		# line 5963, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN357:
	.stabn  68,0,5964,.LN357-Emit_EmitStatement		# line 5964, column 8
	cmpl	$0,8(%ebp)
	je	.Lab254
.Lab255:
.LN358:
	.stabn  68,0,5964,.LN358-Emit_EmitStatement		# line 5964, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab254:
.LN359:
	.stabn  68,0,5964,.LN359-Emit_EmitStatement		# line 5964, column 58
	call	InOut_WriteLn
.LN360:
	.stabn  68,0,5965,.LN360-Emit_EmitStatement		# line 5965, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN361:
	.stabn  68,0,5966,.LN361-Emit_EmitStatement		# line 5966, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN362:
	.stabn  68,0,5966,.LN362-Emit_EmitStatement		# line 5966, column 38
	call	InOut_WriteLn
.Lab250:
.LN363:
	.stabn  68,0,5968,.LN363-Emit_EmitStatement		# line 5968, column 2
	.data
.Lab256:
 	.ascii	"\011dec\000"
	.text
	pushl	$4
	leal	.Lab256,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN364:
	.stabn  68,0,5968,.LN364-Emit_EmitStatement		# line 5968, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN365:
	.stabn  68,0,5968,.LN365-Emit_EmitStatement		# line 5968, column 58
	.data
.Lab257:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab257,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN366:
	.stabn  68,0,5968,.LN366-Emit_EmitStatement		# line 5968, column 78
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN367:
	.stabn  68,0,5968,.LN367-Emit_EmitStatement		# line 5968, column 103
	.data
.Lab258:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab258,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN368:
	.stabn  68,0,5968,.LN368-Emit_EmitStatement		# line 5968, column 121
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab69:
.LN369:
	.stabn  68,0,5970,.LN369-Emit_EmitStatement		# line 5970, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN370:
	.stabn  68,0,5971,.LN370-Emit_EmitStatement		# line 5971, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN371:
	.stabn  68,0,5972,.LN371-Emit_EmitStatement		# line 5972, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab259
.Lab260:
.LN372:
	.stabn  68,0,5973,.LN372-Emit_EmitStatement		# line 5973, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab259:
.LN373:
	.stabn  68,0,5975,.LN373-Emit_EmitStatement		# line 5975, column 5
	cmpb	$0,IR_s + 133
	je	.Lab261
.Lab262:
.LN374:
	.stabn  68,0,5976,.LN374-Emit_EmitStatement		# line 5976, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN375:
	.stabn  68,0,5977,.LN375-Emit_EmitStatement		# line 5977, column 8
	.data
.Lab263:
 	.ascii	"Rule 12/846 Cost=\000"
	.text
	pushl	$17
	leal	.Lab263,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN376:
	.stabn  68,0,5978,.LN376-Emit_EmitStatement		# line 5978, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN377:
	.stabn  68,0,5979,.LN377-Emit_EmitStatement		# line 5979, column 8
	.data
.Lab264:
 	.ascii	" Inc2\000"
	.text
	pushl	$5
	leal	.Lab264,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN378:
	.stabn  68,0,5980,.LN378-Emit_EmitStatement		# line 5980, column 8
	call	InOut_WriteLn
.LN379:
	.stabn  68,0,5981,.LN379-Emit_EmitStatement		# line 5981, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN380:
	.stabn  68,0,5982,.LN380-Emit_EmitStatement		# line 5982, column 8
	cmpl	$0,8(%ebp)
	je	.Lab265
.Lab266:
.LN381:
	.stabn  68,0,5982,.LN381-Emit_EmitStatement		# line 5982, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab265:
.LN382:
	.stabn  68,0,5982,.LN382-Emit_EmitStatement		# line 5982, column 58
	call	InOut_WriteLn
.LN383:
	.stabn  68,0,5983,.LN383-Emit_EmitStatement		# line 5983, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN384:
	.stabn  68,0,5984,.LN384-Emit_EmitStatement		# line 5984, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN385:
	.stabn  68,0,5984,.LN385-Emit_EmitStatement		# line 5984, column 38
	call	InOut_WriteLn
.Lab261:
.LN386:
	.stabn  68,0,5986,.LN386-Emit_EmitStatement		# line 5986, column 2
	.data
.Lab267:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab267,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN387:
	.stabn  68,0,5986,.LN387-Emit_EmitStatement		# line 5986, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN388:
	.stabn  68,0,5986,.LN388-Emit_EmitStatement		# line 5986, column 58
	.data
.Lab268:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab268,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN389:
	.stabn  68,0,5986,.LN389-Emit_EmitStatement		# line 5986, column 78
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN390:
	.stabn  68,0,5986,.LN390-Emit_EmitStatement		# line 5986, column 108
	.data
.Lab269:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab269,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN391:
	.stabn  68,0,5986,.LN391-Emit_EmitStatement		# line 5986, column 126
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN392:
	.stabn  68,0,5986,.LN392-Emit_EmitStatement		# line 5986, column 151
	.data
.Lab270:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab270,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN393:
	.stabn  68,0,5986,.LN393-Emit_EmitStatement		# line 5986, column 169
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab68:
.LN394:
	.stabn  68,0,5988,.LN394-Emit_EmitStatement		# line 5988, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN395:
	.stabn  68,0,5989,.LN395-Emit_EmitStatement		# line 5989, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN396:
	.stabn  68,0,5990,.LN396-Emit_EmitStatement		# line 5990, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab271
.Lab272:
.LN397:
	.stabn  68,0,5991,.LN397-Emit_EmitStatement		# line 5991, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab271:
.LN398:
	.stabn  68,0,5993,.LN398-Emit_EmitStatement		# line 5993, column 5
	cmpb	$0,IR_s + 133
	je	.Lab273
.Lab274:
.LN399:
	.stabn  68,0,5994,.LN399-Emit_EmitStatement		# line 5994, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN400:
	.stabn  68,0,5995,.LN400-Emit_EmitStatement		# line 5995, column 8
	.data
.Lab275:
 	.ascii	"Rule 13/850 Cost=\000"
	.text
	pushl	$17
	leal	.Lab275,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN401:
	.stabn  68,0,5996,.LN401-Emit_EmitStatement		# line 5996, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN402:
	.stabn  68,0,5997,.LN402-Emit_EmitStatement		# line 5997, column 8
	.data
.Lab276:
 	.ascii	" Dec2\000"
	.text
	pushl	$5
	leal	.Lab276,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN403:
	.stabn  68,0,5998,.LN403-Emit_EmitStatement		# line 5998, column 8
	call	InOut_WriteLn
.LN404:
	.stabn  68,0,5999,.LN404-Emit_EmitStatement		# line 5999, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN405:
	.stabn  68,0,6000,.LN405-Emit_EmitStatement		# line 6000, column 8
	cmpl	$0,8(%ebp)
	je	.Lab277
.Lab278:
.LN406:
	.stabn  68,0,6000,.LN406-Emit_EmitStatement		# line 6000, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab277:
.LN407:
	.stabn  68,0,6000,.LN407-Emit_EmitStatement		# line 6000, column 58
	call	InOut_WriteLn
.LN408:
	.stabn  68,0,6001,.LN408-Emit_EmitStatement		# line 6001, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN409:
	.stabn  68,0,6002,.LN409-Emit_EmitStatement		# line 6002, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN410:
	.stabn  68,0,6002,.LN410-Emit_EmitStatement		# line 6002, column 38
	call	InOut_WriteLn
.Lab273:
.LN411:
	.stabn  68,0,6004,.LN411-Emit_EmitStatement		# line 6004, column 2
	.data
.Lab279:
 	.ascii	"\011sub\000"
	.text
	pushl	$4
	leal	.Lab279,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN412:
	.stabn  68,0,6004,.LN412-Emit_EmitStatement		# line 6004, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN413:
	.stabn  68,0,6004,.LN413-Emit_EmitStatement		# line 6004, column 58
	.data
.Lab280:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab280,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN414:
	.stabn  68,0,6004,.LN414-Emit_EmitStatement		# line 6004, column 78
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN415:
	.stabn  68,0,6004,.LN415-Emit_EmitStatement		# line 6004, column 108
	.data
.Lab281:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab281,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN416:
	.stabn  68,0,6004,.LN416-Emit_EmitStatement		# line 6004, column 126
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN417:
	.stabn  68,0,6004,.LN417-Emit_EmitStatement		# line 6004, column 151
	.data
.Lab282:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab282,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN418:
	.stabn  68,0,6004,.LN418-Emit_EmitStatement		# line 6004, column 169
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab67:
.LN419:
	.stabn  68,0,6006,.LN419-Emit_EmitStatement		# line 6006, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN420:
	.stabn  68,0,6007,.LN420-Emit_EmitStatement		# line 6007, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN421:
	.stabn  68,0,6008,.LN421-Emit_EmitStatement		# line 6008, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab283
.Lab284:
.LN422:
	.stabn  68,0,6009,.LN422-Emit_EmitStatement		# line 6009, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab283:
.LN423:
	.stabn  68,0,6011,.LN423-Emit_EmitStatement		# line 6011, column 5
	cmpb	$0,IR_s + 133
	je	.Lab285
.Lab286:
.LN424:
	.stabn  68,0,6012,.LN424-Emit_EmitStatement		# line 6012, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN425:
	.stabn  68,0,6013,.LN425-Emit_EmitStatement		# line 6013, column 8
	.data
.Lab287:
 	.ascii	"Rule 14/865 Cost=\000"
	.text
	pushl	$17
	leal	.Lab287,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN426:
	.stabn  68,0,6014,.LN426-Emit_EmitStatement		# line 6014, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN427:
	.stabn  68,0,6015,.LN427-Emit_EmitStatement		# line 6015, column 8
	.data
.Lab288:
 	.ascii	" InclL\000"
	.text
	pushl	$6
	leal	.Lab288,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN428:
	.stabn  68,0,6016,.LN428-Emit_EmitStatement		# line 6016, column 8
	call	InOut_WriteLn
.LN429:
	.stabn  68,0,6017,.LN429-Emit_EmitStatement		# line 6017, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN430:
	.stabn  68,0,6018,.LN430-Emit_EmitStatement		# line 6018, column 8
	cmpl	$0,8(%ebp)
	je	.Lab289
.Lab290:
.LN431:
	.stabn  68,0,6018,.LN431-Emit_EmitStatement		# line 6018, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab289:
.LN432:
	.stabn  68,0,6018,.LN432-Emit_EmitStatement		# line 6018, column 58
	call	InOut_WriteLn
.LN433:
	.stabn  68,0,6019,.LN433-Emit_EmitStatement		# line 6019, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN434:
	.stabn  68,0,6020,.LN434-Emit_EmitStatement		# line 6020, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN435:
	.stabn  68,0,6020,.LN435-Emit_EmitStatement		# line 6020, column 38
	call	InOut_WriteLn
.Lab285:
.LN436:
	.stabn  68,0,6022,.LN436-Emit_EmitStatement		# line 6022, column 2
	.data
.Lab291:
 	.ascii	"\011btsl\011\000"
	.text
	pushl	$6
	leal	.Lab291,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN437:
	.stabn  68,0,6022,.LN437-Emit_EmitStatement		# line 6022, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN438:
	.stabn  68,0,6022,.LN438-Emit_EmitStatement		# line 6022, column 60
	.data
.Lab292:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab292,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN439:
	.stabn  68,0,6022,.LN439-Emit_EmitStatement		# line 6022, column 78
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN440:
	.stabn  68,0,6022,.LN440-Emit_EmitStatement		# line 6022, column 103
	.data
.Lab293:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab293,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN441:
	.stabn  68,0,6022,.LN441-Emit_EmitStatement		# line 6022, column 121
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab66:
.LN442:
	.stabn  68,0,6024,.LN442-Emit_EmitStatement		# line 6024, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN443:
	.stabn  68,0,6025,.LN443-Emit_EmitStatement		# line 6025, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN444:
	.stabn  68,0,6026,.LN444-Emit_EmitStatement		# line 6026, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab294
.Lab295:
.LN445:
	.stabn  68,0,6027,.LN445-Emit_EmitStatement		# line 6027, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab294:
.LN446:
	.stabn  68,0,6029,.LN446-Emit_EmitStatement		# line 6029, column 5
	cmpb	$0,IR_s + 133
	je	.Lab296
.Lab297:
.LN447:
	.stabn  68,0,6030,.LN447-Emit_EmitStatement		# line 6030, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN448:
	.stabn  68,0,6031,.LN448-Emit_EmitStatement		# line 6031, column 8
	.data
.Lab298:
 	.ascii	"Rule 15/882 Cost=\000"
	.text
	pushl	$17
	leal	.Lab298,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN449:
	.stabn  68,0,6032,.LN449-Emit_EmitStatement		# line 6032, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN450:
	.stabn  68,0,6033,.LN450-Emit_EmitStatement		# line 6033, column 8
	.data
.Lab299:
 	.ascii	" ExclL\000"
	.text
	pushl	$6
	leal	.Lab299,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN451:
	.stabn  68,0,6034,.LN451-Emit_EmitStatement		# line 6034, column 8
	call	InOut_WriteLn
.LN452:
	.stabn  68,0,6035,.LN452-Emit_EmitStatement		# line 6035, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN453:
	.stabn  68,0,6036,.LN453-Emit_EmitStatement		# line 6036, column 8
	cmpl	$0,8(%ebp)
	je	.Lab300
.Lab301:
.LN454:
	.stabn  68,0,6036,.LN454-Emit_EmitStatement		# line 6036, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab300:
.LN455:
	.stabn  68,0,6036,.LN455-Emit_EmitStatement		# line 6036, column 58
	call	InOut_WriteLn
.LN456:
	.stabn  68,0,6037,.LN456-Emit_EmitStatement		# line 6037, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN457:
	.stabn  68,0,6038,.LN457-Emit_EmitStatement		# line 6038, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN458:
	.stabn  68,0,6038,.LN458-Emit_EmitStatement		# line 6038, column 38
	call	InOut_WriteLn
.Lab296:
.LN459:
	.stabn  68,0,6040,.LN459-Emit_EmitStatement		# line 6040, column 2
	.data
.Lab302:
 	.ascii	"\011btrl\011\000"
	.text
	pushl	$6
	leal	.Lab302,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN460:
	.stabn  68,0,6040,.LN460-Emit_EmitStatement		# line 6040, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN461:
	.stabn  68,0,6040,.LN461-Emit_EmitStatement		# line 6040, column 60
	.data
.Lab303:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab303,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN462:
	.stabn  68,0,6040,.LN462-Emit_EmitStatement		# line 6040, column 78
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN463:
	.stabn  68,0,6040,.LN463-Emit_EmitStatement		# line 6040, column 103
	.data
.Lab304:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab304,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN464:
	.stabn  68,0,6040,.LN464-Emit_EmitStatement		# line 6040, column 121
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab65:
.LN465:
	.stabn  68,0,6042,.LN465-Emit_EmitStatement		# line 6042, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN466:
	.stabn  68,0,6043,.LN466-Emit_EmitStatement		# line 6043, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab305
.Lab306:
.LN467:
	.stabn  68,0,6044,.LN467-Emit_EmitStatement		# line 6044, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab305:
.LN468:
	.stabn  68,0,6046,.LN468-Emit_EmitStatement		# line 6046, column 5
	cmpb	$0,IR_s + 133
	je	.Lab307
.Lab308:
.LN469:
	.stabn  68,0,6047,.LN469-Emit_EmitStatement		# line 6047, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN470:
	.stabn  68,0,6048,.LN470-Emit_EmitStatement		# line 6048, column 8
	.data
.Lab309:
 	.ascii	"Rule 16/889 Cost=\000"
	.text
	pushl	$17
	leal	.Lab309,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN471:
	.stabn  68,0,6049,.LN471-Emit_EmitStatement		# line 6049, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN472:
	.stabn  68,0,6050,.LN472-Emit_EmitStatement		# line 6050, column 8
	.data
.Lab310:
 	.ascii	" SkipAddress\000"
	.text
	pushl	$12
	leal	.Lab310,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN473:
	.stabn  68,0,6051,.LN473-Emit_EmitStatement		# line 6051, column 8
	call	InOut_WriteLn
.LN474:
	.stabn  68,0,6052,.LN474-Emit_EmitStatement		# line 6052, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN475:
	.stabn  68,0,6053,.LN475-Emit_EmitStatement		# line 6053, column 8
	cmpl	$0,8(%ebp)
	je	.Lab311
.Lab312:
.LN476:
	.stabn  68,0,6053,.LN476-Emit_EmitStatement		# line 6053, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab311:
.LN477:
	.stabn  68,0,6053,.LN477-Emit_EmitStatement		# line 6053, column 58
	call	InOut_WriteLn
.LN478:
	.stabn  68,0,6054,.LN478-Emit_EmitStatement		# line 6054, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN479:
	.stabn  68,0,6055,.LN479-Emit_EmitStatement		# line 6055, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN480:
	.stabn  68,0,6055,.LN480-Emit_EmitStatement		# line 6055, column 38
	call	InOut_WriteLn
.Lab307:
	jmp	.Lab11
.Lab64:
.LN481:
	.stabn  68,0,6059,.LN481-Emit_EmitStatement		# line 6059, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN482:
	.stabn  68,0,6060,.LN482-Emit_EmitStatement		# line 6060, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab313
.Lab314:
.LN483:
	.stabn  68,0,6061,.LN483-Emit_EmitStatement		# line 6061, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab313:
.LN484:
	.stabn  68,0,6063,.LN484-Emit_EmitStatement		# line 6063, column 5
	cmpb	$0,IR_s + 133
	je	.Lab315
.Lab316:
.LN485:
	.stabn  68,0,6064,.LN485-Emit_EmitStatement		# line 6064, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN486:
	.stabn  68,0,6065,.LN486-Emit_EmitStatement		# line 6065, column 8
	.data
.Lab317:
 	.ascii	"Rule 17/892 Cost=\000"
	.text
	pushl	$17
	leal	.Lab317,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN487:
	.stabn  68,0,6066,.LN487-Emit_EmitStatement		# line 6066, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN488:
	.stabn  68,0,6067,.LN488-Emit_EmitStatement		# line 6067, column 8
	.data
.Lab318:
 	.ascii	" SkipData\000"
	.text
	pushl	$9
	leal	.Lab318,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN489:
	.stabn  68,0,6068,.LN489-Emit_EmitStatement		# line 6068, column 8
	call	InOut_WriteLn
.LN490:
	.stabn  68,0,6069,.LN490-Emit_EmitStatement		# line 6069, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN491:
	.stabn  68,0,6070,.LN491-Emit_EmitStatement		# line 6070, column 8
	cmpl	$0,8(%ebp)
	je	.Lab319
.Lab320:
.LN492:
	.stabn  68,0,6070,.LN492-Emit_EmitStatement		# line 6070, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab319:
.LN493:
	.stabn  68,0,6070,.LN493-Emit_EmitStatement		# line 6070, column 58
	call	InOut_WriteLn
.LN494:
	.stabn  68,0,6071,.LN494-Emit_EmitStatement		# line 6071, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN495:
	.stabn  68,0,6072,.LN495-Emit_EmitStatement		# line 6072, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN496:
	.stabn  68,0,6072,.LN496-Emit_EmitStatement		# line 6072, column 38
	call	InOut_WriteLn
.Lab315:
	jmp	.Lab11
.Lab63:
.LN497:
	.stabn  68,0,6076,.LN497-Emit_EmitStatement		# line 6076, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN498:
	.stabn  68,0,6077,.LN498-Emit_EmitStatement		# line 6077, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN499:
	.stabn  68,0,6078,.LN499-Emit_EmitStatement		# line 6078, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN500:
	.stabn  68,0,6079,.LN500-Emit_EmitStatement		# line 6079, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab321
.Lab322:
.LN501:
	.stabn  68,0,6080,.LN501-Emit_EmitStatement		# line 6080, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab321:
.LN502:
	.stabn  68,0,6082,.LN502-Emit_EmitStatement		# line 6082, column 5
	cmpb	$0,IR_s + 133
	je	.Lab323
.Lab324:
.LN503:
	.stabn  68,0,6083,.LN503-Emit_EmitStatement		# line 6083, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN504:
	.stabn  68,0,6084,.LN504-Emit_EmitStatement		# line 6084, column 8
	.data
.Lab325:
 	.ascii	"Rule 18/999 Cost=\000"
	.text
	pushl	$17
	leal	.Lab325,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN505:
	.stabn  68,0,6085,.LN505-Emit_EmitStatement		# line 6085, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN506:
	.stabn  68,0,6086,.LN506-Emit_EmitStatement		# line 6086, column 8
	.data
.Lab326:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab326,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN507:
	.stabn  68,0,6087,.LN507-Emit_EmitStatement		# line 6087, column 8
	call	InOut_WriteLn
.LN508:
	.stabn  68,0,6088,.LN508-Emit_EmitStatement		# line 6088, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN509:
	.stabn  68,0,6089,.LN509-Emit_EmitStatement		# line 6089, column 8
	cmpl	$0,8(%ebp)
	je	.Lab327
.Lab328:
.LN510:
	.stabn  68,0,6089,.LN510-Emit_EmitStatement		# line 6089, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab327:
.LN511:
	.stabn  68,0,6089,.LN511-Emit_EmitStatement		# line 6089, column 58
	call	InOut_WriteLn
.LN512:
	.stabn  68,0,6090,.LN512-Emit_EmitStatement		# line 6090, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN513:
	.stabn  68,0,6091,.LN513-Emit_EmitStatement		# line 6091, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN514:
	.stabn  68,0,6091,.LN514-Emit_EmitStatement		# line 6091, column 38
	call	InOut_WriteLn
.Lab323:
.LN515:
	.stabn  68,0,6094,.LN515-Emit_EmitStatement		# line 6094, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN516:
	.stabn  68,0,6095,.LN516-Emit_EmitStatement		# line 6095, column 2
	.data
.Lab329:
 	.ascii	"\011inc\000"
	.text
	pushl	$4
	leal	.Lab329,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN517:
	.stabn  68,0,6095,.LN517-Emit_EmitStatement		# line 6095, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN518:
	.stabn  68,0,6095,.LN518-Emit_EmitStatement		# line 6095, column 60
	.data
.Lab330:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab330,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN519:
	.stabn  68,0,6095,.LN519-Emit_EmitStatement		# line 6095, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN520:
	.stabn  68,0,6095,.LN520-Emit_EmitStatement		# line 6095, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab62:
.LN521:
	.stabn  68,0,6098,.LN521-Emit_EmitStatement		# line 6098, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN522:
	.stabn  68,0,6099,.LN522-Emit_EmitStatement		# line 6099, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN523:
	.stabn  68,0,6100,.LN523-Emit_EmitStatement		# line 6100, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN524:
	.stabn  68,0,6101,.LN524-Emit_EmitStatement		# line 6101, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab331
.Lab332:
.LN525:
	.stabn  68,0,6102,.LN525-Emit_EmitStatement		# line 6102, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab331:
.LN526:
	.stabn  68,0,6104,.LN526-Emit_EmitStatement		# line 6104, column 5
	cmpb	$0,IR_s + 133
	je	.Lab333
.Lab334:
.LN527:
	.stabn  68,0,6105,.LN527-Emit_EmitStatement		# line 6105, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN528:
	.stabn  68,0,6106,.LN528-Emit_EmitStatement		# line 6106, column 8
	.data
.Lab335:
 	.ascii	"Rule 19/999 Cost=\000"
	.text
	pushl	$17
	leal	.Lab335,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN529:
	.stabn  68,0,6107,.LN529-Emit_EmitStatement		# line 6107, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN530:
	.stabn  68,0,6108,.LN530-Emit_EmitStatement		# line 6108, column 8
	.data
.Lab336:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab336,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN531:
	.stabn  68,0,6109,.LN531-Emit_EmitStatement		# line 6109, column 8
	call	InOut_WriteLn
.LN532:
	.stabn  68,0,6110,.LN532-Emit_EmitStatement		# line 6110, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN533:
	.stabn  68,0,6111,.LN533-Emit_EmitStatement		# line 6111, column 8
	cmpl	$0,8(%ebp)
	je	.Lab337
.Lab338:
.LN534:
	.stabn  68,0,6111,.LN534-Emit_EmitStatement		# line 6111, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab337:
.LN535:
	.stabn  68,0,6111,.LN535-Emit_EmitStatement		# line 6111, column 58
	call	InOut_WriteLn
.LN536:
	.stabn  68,0,6112,.LN536-Emit_EmitStatement		# line 6112, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN537:
	.stabn  68,0,6113,.LN537-Emit_EmitStatement		# line 6113, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN538:
	.stabn  68,0,6113,.LN538-Emit_EmitStatement		# line 6113, column 38
	call	InOut_WriteLn
.Lab333:
.LN539:
	.stabn  68,0,6116,.LN539-Emit_EmitStatement		# line 6116, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN540:
	.stabn  68,0,6117,.LN540-Emit_EmitStatement		# line 6117, column 2
	.data
.Lab339:
 	.ascii	"\011inc\000"
	.text
	pushl	$4
	leal	.Lab339,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN541:
	.stabn  68,0,6117,.LN541-Emit_EmitStatement		# line 6117, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN542:
	.stabn  68,0,6117,.LN542-Emit_EmitStatement		# line 6117, column 60
	.data
.Lab340:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab340,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN543:
	.stabn  68,0,6117,.LN543-Emit_EmitStatement		# line 6117, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN544:
	.stabn  68,0,6117,.LN544-Emit_EmitStatement		# line 6117, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab61:
.LN545:
	.stabn  68,0,6120,.LN545-Emit_EmitStatement		# line 6120, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN546:
	.stabn  68,0,6121,.LN546-Emit_EmitStatement		# line 6121, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN547:
	.stabn  68,0,6122,.LN547-Emit_EmitStatement		# line 6122, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN548:
	.stabn  68,0,6123,.LN548-Emit_EmitStatement		# line 6123, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab341
.Lab342:
.LN549:
	.stabn  68,0,6124,.LN549-Emit_EmitStatement		# line 6124, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab341:
.LN550:
	.stabn  68,0,6126,.LN550-Emit_EmitStatement		# line 6126, column 5
	cmpb	$0,IR_s + 133
	je	.Lab343
.Lab344:
.LN551:
	.stabn  68,0,6127,.LN551-Emit_EmitStatement		# line 6127, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN552:
	.stabn  68,0,6128,.LN552-Emit_EmitStatement		# line 6128, column 8
	.data
.Lab345:
 	.ascii	"Rule 20/1013 Cost=\000"
	.text
	pushl	$18
	leal	.Lab345,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN553:
	.stabn  68,0,6129,.LN553-Emit_EmitStatement		# line 6129, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN554:
	.stabn  68,0,6130,.LN554-Emit_EmitStatement		# line 6130, column 8
	.data
.Lab346:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab346,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN555:
	.stabn  68,0,6131,.LN555-Emit_EmitStatement		# line 6131, column 8
	call	InOut_WriteLn
.LN556:
	.stabn  68,0,6132,.LN556-Emit_EmitStatement		# line 6132, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN557:
	.stabn  68,0,6133,.LN557-Emit_EmitStatement		# line 6133, column 8
	cmpl	$0,8(%ebp)
	je	.Lab347
.Lab348:
.LN558:
	.stabn  68,0,6133,.LN558-Emit_EmitStatement		# line 6133, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab347:
.LN559:
	.stabn  68,0,6133,.LN559-Emit_EmitStatement		# line 6133, column 58
	call	InOut_WriteLn
.LN560:
	.stabn  68,0,6134,.LN560-Emit_EmitStatement		# line 6134, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN561:
	.stabn  68,0,6135,.LN561-Emit_EmitStatement		# line 6135, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN562:
	.stabn  68,0,6135,.LN562-Emit_EmitStatement		# line 6135, column 38
	call	InOut_WriteLn
.Lab343:
.LN563:
	.stabn  68,0,6138,.LN563-Emit_EmitStatement		# line 6138, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN564:
	.stabn  68,0,6139,.LN564-Emit_EmitStatement		# line 6139, column 2
	.data
.Lab349:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab349,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN565:
	.stabn  68,0,6139,.LN565-Emit_EmitStatement		# line 6139, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN566:
	.stabn  68,0,6139,.LN566-Emit_EmitStatement		# line 6139, column 60
	.data
.Lab350:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab350,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN567:
	.stabn  68,0,6139,.LN567-Emit_EmitStatement		# line 6139, column 78
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN568:
	.stabn  68,0,6139,.LN568-Emit_EmitStatement		# line 6139, column 108
	.data
.Lab351:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab351,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN569:
	.stabn  68,0,6139,.LN569-Emit_EmitStatement		# line 6139, column 126
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN570:
	.stabn  68,0,6139,.LN570-Emit_EmitStatement		# line 6139, column 176
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab60:
.LN571:
	.stabn  68,0,6142,.LN571-Emit_EmitStatement		# line 6142, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN572:
	.stabn  68,0,6143,.LN572-Emit_EmitStatement		# line 6143, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN573:
	.stabn  68,0,6144,.LN573-Emit_EmitStatement		# line 6144, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN574:
	.stabn  68,0,6145,.LN574-Emit_EmitStatement		# line 6145, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab352
.Lab353:
.LN575:
	.stabn  68,0,6146,.LN575-Emit_EmitStatement		# line 6146, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab352:
.LN576:
	.stabn  68,0,6148,.LN576-Emit_EmitStatement		# line 6148, column 5
	cmpb	$0,IR_s + 133
	je	.Lab354
.Lab355:
.LN577:
	.stabn  68,0,6149,.LN577-Emit_EmitStatement		# line 6149, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN578:
	.stabn  68,0,6150,.LN578-Emit_EmitStatement		# line 6150, column 8
	.data
.Lab356:
 	.ascii	"Rule 21/1013 Cost=\000"
	.text
	pushl	$18
	leal	.Lab356,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN579:
	.stabn  68,0,6151,.LN579-Emit_EmitStatement		# line 6151, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN580:
	.stabn  68,0,6152,.LN580-Emit_EmitStatement		# line 6152, column 8
	.data
.Lab357:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab357,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN581:
	.stabn  68,0,6153,.LN581-Emit_EmitStatement		# line 6153, column 8
	call	InOut_WriteLn
.LN582:
	.stabn  68,0,6154,.LN582-Emit_EmitStatement		# line 6154, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN583:
	.stabn  68,0,6155,.LN583-Emit_EmitStatement		# line 6155, column 8
	cmpl	$0,8(%ebp)
	je	.Lab358
.Lab359:
.LN584:
	.stabn  68,0,6155,.LN584-Emit_EmitStatement		# line 6155, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab358:
.LN585:
	.stabn  68,0,6155,.LN585-Emit_EmitStatement		# line 6155, column 58
	call	InOut_WriteLn
.LN586:
	.stabn  68,0,6156,.LN586-Emit_EmitStatement		# line 6156, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN587:
	.stabn  68,0,6157,.LN587-Emit_EmitStatement		# line 6157, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN588:
	.stabn  68,0,6157,.LN588-Emit_EmitStatement		# line 6157, column 38
	call	InOut_WriteLn
.Lab354:
.LN589:
	.stabn  68,0,6160,.LN589-Emit_EmitStatement		# line 6160, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN590:
	.stabn  68,0,6161,.LN590-Emit_EmitStatement		# line 6161, column 2
	.data
.Lab360:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab360,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN591:
	.stabn  68,0,6161,.LN591-Emit_EmitStatement		# line 6161, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN592:
	.stabn  68,0,6161,.LN592-Emit_EmitStatement		# line 6161, column 60
	.data
.Lab361:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab361,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN593:
	.stabn  68,0,6161,.LN593-Emit_EmitStatement		# line 6161, column 78
	leal	-64(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN594:
	.stabn  68,0,6161,.LN594-Emit_EmitStatement		# line 6161, column 108
	.data
.Lab362:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab362,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN595:
	.stabn  68,0,6161,.LN595-Emit_EmitStatement		# line 6161, column 126
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN596:
	.stabn  68,0,6161,.LN596-Emit_EmitStatement		# line 6161, column 176
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab59:
.LN597:
	.stabn  68,0,6164,.LN597-Emit_EmitStatement		# line 6164, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN598:
	.stabn  68,0,6165,.LN598-Emit_EmitStatement		# line 6165, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN599:
	.stabn  68,0,6166,.LN599-Emit_EmitStatement		# line 6166, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN600:
	.stabn  68,0,6167,.LN600-Emit_EmitStatement		# line 6167, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab363
.Lab364:
.LN601:
	.stabn  68,0,6168,.LN601-Emit_EmitStatement		# line 6168, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab363:
.LN602:
	.stabn  68,0,6170,.LN602-Emit_EmitStatement		# line 6170, column 5
	cmpb	$0,IR_s + 133
	je	.Lab365
.Lab366:
.LN603:
	.stabn  68,0,6171,.LN603-Emit_EmitStatement		# line 6171, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN604:
	.stabn  68,0,6172,.LN604-Emit_EmitStatement		# line 6172, column 8
	.data
.Lab367:
 	.ascii	"Rule 22/1026 Cost=\000"
	.text
	pushl	$18
	leal	.Lab367,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN605:
	.stabn  68,0,6173,.LN605-Emit_EmitStatement		# line 6173, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN606:
	.stabn  68,0,6174,.LN606-Emit_EmitStatement		# line 6174, column 8
	.data
.Lab368:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab368,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN607:
	.stabn  68,0,6175,.LN607-Emit_EmitStatement		# line 6175, column 8
	call	InOut_WriteLn
.LN608:
	.stabn  68,0,6176,.LN608-Emit_EmitStatement		# line 6176, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN609:
	.stabn  68,0,6177,.LN609-Emit_EmitStatement		# line 6177, column 8
	cmpl	$0,8(%ebp)
	je	.Lab369
.Lab370:
.LN610:
	.stabn  68,0,6177,.LN610-Emit_EmitStatement		# line 6177, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab369:
.LN611:
	.stabn  68,0,6177,.LN611-Emit_EmitStatement		# line 6177, column 58
	call	InOut_WriteLn
.LN612:
	.stabn  68,0,6178,.LN612-Emit_EmitStatement		# line 6178, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN613:
	.stabn  68,0,6179,.LN613-Emit_EmitStatement		# line 6179, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN614:
	.stabn  68,0,6179,.LN614-Emit_EmitStatement		# line 6179, column 38
	call	InOut_WriteLn
.Lab365:
.LN615:
	.stabn  68,0,6182,.LN615-Emit_EmitStatement		# line 6182, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN616:
	.stabn  68,0,6183,.LN616-Emit_EmitStatement		# line 6183, column 2
	.data
.Lab371:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab371,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN617:
	.stabn  68,0,6183,.LN617-Emit_EmitStatement		# line 6183, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN618:
	.stabn  68,0,6183,.LN618-Emit_EmitStatement		# line 6183, column 60
	.data
.Lab372:
 	.ascii	"\011$1, \000"
	.text
	pushl	$5
	leal	.Lab372,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN619:
	.stabn  68,0,6183,.LN619-Emit_EmitStatement		# line 6183, column 82
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN620:
	.stabn  68,0,6183,.LN620-Emit_EmitStatement		# line 6183, column 132
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab58:
.LN621:
	.stabn  68,0,6186,.LN621-Emit_EmitStatement		# line 6186, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN622:
	.stabn  68,0,6187,.LN622-Emit_EmitStatement		# line 6187, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN623:
	.stabn  68,0,6188,.LN623-Emit_EmitStatement		# line 6188, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN624:
	.stabn  68,0,6189,.LN624-Emit_EmitStatement		# line 6189, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab373
.Lab374:
.LN625:
	.stabn  68,0,6190,.LN625-Emit_EmitStatement		# line 6190, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab373:
.LN626:
	.stabn  68,0,6192,.LN626-Emit_EmitStatement		# line 6192, column 5
	cmpb	$0,IR_s + 133
	je	.Lab375
.Lab376:
.LN627:
	.stabn  68,0,6193,.LN627-Emit_EmitStatement		# line 6193, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN628:
	.stabn  68,0,6194,.LN628-Emit_EmitStatement		# line 6194, column 8
	.data
.Lab377:
 	.ascii	"Rule 23/1096 Cost=\000"
	.text
	pushl	$18
	leal	.Lab377,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN629:
	.stabn  68,0,6195,.LN629-Emit_EmitStatement		# line 6195, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN630:
	.stabn  68,0,6196,.LN630-Emit_EmitStatement		# line 6196, column 8
	.data
.Lab378:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab378,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN631:
	.stabn  68,0,6197,.LN631-Emit_EmitStatement		# line 6197, column 8
	call	InOut_WriteLn
.LN632:
	.stabn  68,0,6198,.LN632-Emit_EmitStatement		# line 6198, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN633:
	.stabn  68,0,6199,.LN633-Emit_EmitStatement		# line 6199, column 8
	cmpl	$0,8(%ebp)
	je	.Lab379
.Lab380:
.LN634:
	.stabn  68,0,6199,.LN634-Emit_EmitStatement		# line 6199, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab379:
.LN635:
	.stabn  68,0,6199,.LN635-Emit_EmitStatement		# line 6199, column 58
	call	InOut_WriteLn
.LN636:
	.stabn  68,0,6200,.LN636-Emit_EmitStatement		# line 6200, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN637:
	.stabn  68,0,6201,.LN637-Emit_EmitStatement		# line 6201, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN638:
	.stabn  68,0,6201,.LN638-Emit_EmitStatement		# line 6201, column 38
	call	InOut_WriteLn
.Lab375:
.LN639:
	.stabn  68,0,6204,.LN639-Emit_EmitStatement		# line 6204, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN640:
	.stabn  68,0,6205,.LN640-Emit_EmitStatement		# line 6205, column 2
	.data
.Lab381:
 	.ascii	"\011dec\000"
	.text
	pushl	$4
	leal	.Lab381,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN641:
	.stabn  68,0,6205,.LN641-Emit_EmitStatement		# line 6205, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN642:
	.stabn  68,0,6205,.LN642-Emit_EmitStatement		# line 6205, column 60
	.data
.Lab382:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab382,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN643:
	.stabn  68,0,6205,.LN643-Emit_EmitStatement		# line 6205, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN644:
	.stabn  68,0,6205,.LN644-Emit_EmitStatement		# line 6205, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab57:
.LN645:
	.stabn  68,0,6208,.LN645-Emit_EmitStatement		# line 6208, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN646:
	.stabn  68,0,6209,.LN646-Emit_EmitStatement		# line 6209, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN647:
	.stabn  68,0,6210,.LN647-Emit_EmitStatement		# line 6210, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN648:
	.stabn  68,0,6211,.LN648-Emit_EmitStatement		# line 6211, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab383
.Lab384:
.LN649:
	.stabn  68,0,6212,.LN649-Emit_EmitStatement		# line 6212, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab383:
.LN650:
	.stabn  68,0,6214,.LN650-Emit_EmitStatement		# line 6214, column 5
	cmpb	$0,IR_s + 133
	je	.Lab385
.Lab386:
.LN651:
	.stabn  68,0,6215,.LN651-Emit_EmitStatement		# line 6215, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN652:
	.stabn  68,0,6216,.LN652-Emit_EmitStatement		# line 6216, column 8
	.data
.Lab387:
 	.ascii	"Rule 24/1110 Cost=\000"
	.text
	pushl	$18
	leal	.Lab387,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN653:
	.stabn  68,0,6217,.LN653-Emit_EmitStatement		# line 6217, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN654:
	.stabn  68,0,6218,.LN654-Emit_EmitStatement		# line 6218, column 8
	.data
.Lab388:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab388,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN655:
	.stabn  68,0,6219,.LN655-Emit_EmitStatement		# line 6219, column 8
	call	InOut_WriteLn
.LN656:
	.stabn  68,0,6220,.LN656-Emit_EmitStatement		# line 6220, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN657:
	.stabn  68,0,6221,.LN657-Emit_EmitStatement		# line 6221, column 8
	cmpl	$0,8(%ebp)
	je	.Lab389
.Lab390:
.LN658:
	.stabn  68,0,6221,.LN658-Emit_EmitStatement		# line 6221, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab389:
.LN659:
	.stabn  68,0,6221,.LN659-Emit_EmitStatement		# line 6221, column 58
	call	InOut_WriteLn
.LN660:
	.stabn  68,0,6222,.LN660-Emit_EmitStatement		# line 6222, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN661:
	.stabn  68,0,6223,.LN661-Emit_EmitStatement		# line 6223, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN662:
	.stabn  68,0,6223,.LN662-Emit_EmitStatement		# line 6223, column 38
	call	InOut_WriteLn
.Lab385:
.LN663:
	.stabn  68,0,6226,.LN663-Emit_EmitStatement		# line 6226, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN664:
	.stabn  68,0,6227,.LN664-Emit_EmitStatement		# line 6227, column 2
	.data
.Lab391:
 	.ascii	"\011sub\000"
	.text
	pushl	$4
	leal	.Lab391,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN665:
	.stabn  68,0,6227,.LN665-Emit_EmitStatement		# line 6227, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN666:
	.stabn  68,0,6227,.LN666-Emit_EmitStatement		# line 6227, column 60
	.data
.Lab392:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab392,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN667:
	.stabn  68,0,6227,.LN667-Emit_EmitStatement		# line 6227, column 78
	leal	-64(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN668:
	.stabn  68,0,6227,.LN668-Emit_EmitStatement		# line 6227, column 108
	.data
.Lab393:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab393,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN669:
	.stabn  68,0,6227,.LN669-Emit_EmitStatement		# line 6227, column 126
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN670:
	.stabn  68,0,6227,.LN670-Emit_EmitStatement		# line 6227, column 176
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab56:
.LN671:
	.stabn  68,0,6230,.LN671-Emit_EmitStatement		# line 6230, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN672:
	.stabn  68,0,6231,.LN672-Emit_EmitStatement		# line 6231, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN673:
	.stabn  68,0,6232,.LN673-Emit_EmitStatement		# line 6232, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN674:
	.stabn  68,0,6233,.LN674-Emit_EmitStatement		# line 6233, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab394
.Lab395:
.LN675:
	.stabn  68,0,6234,.LN675-Emit_EmitStatement		# line 6234, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab394:
.LN676:
	.stabn  68,0,6236,.LN676-Emit_EmitStatement		# line 6236, column 5
	cmpb	$0,IR_s + 133
	je	.Lab396
.Lab397:
.LN677:
	.stabn  68,0,6237,.LN677-Emit_EmitStatement		# line 6237, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN678:
	.stabn  68,0,6238,.LN678-Emit_EmitStatement		# line 6238, column 8
	.data
.Lab398:
 	.ascii	"Rule 25/1145 Cost=\000"
	.text
	pushl	$18
	leal	.Lab398,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN679:
	.stabn  68,0,6239,.LN679-Emit_EmitStatement		# line 6239, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN680:
	.stabn  68,0,6240,.LN680-Emit_EmitStatement		# line 6240, column 8
	.data
.Lab399:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab399,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN681:
	.stabn  68,0,6241,.LN681-Emit_EmitStatement		# line 6241, column 8
	call	InOut_WriteLn
.LN682:
	.stabn  68,0,6242,.LN682-Emit_EmitStatement		# line 6242, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN683:
	.stabn  68,0,6243,.LN683-Emit_EmitStatement		# line 6243, column 8
	cmpl	$0,8(%ebp)
	je	.Lab400
.Lab401:
.LN684:
	.stabn  68,0,6243,.LN684-Emit_EmitStatement		# line 6243, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab400:
.LN685:
	.stabn  68,0,6243,.LN685-Emit_EmitStatement		# line 6243, column 58
	call	InOut_WriteLn
.LN686:
	.stabn  68,0,6244,.LN686-Emit_EmitStatement		# line 6244, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN687:
	.stabn  68,0,6245,.LN687-Emit_EmitStatement		# line 6245, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN688:
	.stabn  68,0,6245,.LN688-Emit_EmitStatement		# line 6245, column 38
	call	InOut_WriteLn
.Lab396:
	jmp	.Lab11
.Lab55:
.LN689:
	.stabn  68,0,6249,.LN689-Emit_EmitStatement		# line 6249, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN690:
	.stabn  68,0,6250,.LN690-Emit_EmitStatement		# line 6250, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN691:
	.stabn  68,0,6251,.LN691-Emit_EmitStatement		# line 6251, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN692:
	.stabn  68,0,6252,.LN692-Emit_EmitStatement		# line 6252, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab402
.Lab403:
.LN693:
	.stabn  68,0,6253,.LN693-Emit_EmitStatement		# line 6253, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab402:
.LN694:
	.stabn  68,0,6255,.LN694-Emit_EmitStatement		# line 6255, column 5
	cmpb	$0,IR_s + 133
	je	.Lab404
.Lab405:
.LN695:
	.stabn  68,0,6256,.LN695-Emit_EmitStatement		# line 6256, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN696:
	.stabn  68,0,6257,.LN696-Emit_EmitStatement		# line 6257, column 8
	.data
.Lab406:
 	.ascii	"Rule 26/1145 Cost=\000"
	.text
	pushl	$18
	leal	.Lab406,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN697:
	.stabn  68,0,6258,.LN697-Emit_EmitStatement		# line 6258, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN698:
	.stabn  68,0,6259,.LN698-Emit_EmitStatement		# line 6259, column 8
	.data
.Lab407:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab407,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN699:
	.stabn  68,0,6260,.LN699-Emit_EmitStatement		# line 6260, column 8
	call	InOut_WriteLn
.LN700:
	.stabn  68,0,6261,.LN700-Emit_EmitStatement		# line 6261, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN701:
	.stabn  68,0,6262,.LN701-Emit_EmitStatement		# line 6262, column 8
	cmpl	$0,8(%ebp)
	je	.Lab408
.Lab409:
.LN702:
	.stabn  68,0,6262,.LN702-Emit_EmitStatement		# line 6262, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab408:
.LN703:
	.stabn  68,0,6262,.LN703-Emit_EmitStatement		# line 6262, column 58
	call	InOut_WriteLn
.LN704:
	.stabn  68,0,6263,.LN704-Emit_EmitStatement		# line 6263, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN705:
	.stabn  68,0,6264,.LN705-Emit_EmitStatement		# line 6264, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN706:
	.stabn  68,0,6264,.LN706-Emit_EmitStatement		# line 6264, column 38
	call	InOut_WriteLn
.Lab404:
	jmp	.Lab11
.Lab54:
.LN707:
	.stabn  68,0,6268,.LN707-Emit_EmitStatement		# line 6268, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN708:
	.stabn  68,0,6269,.LN708-Emit_EmitStatement		# line 6269, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN709:
	.stabn  68,0,6270,.LN709-Emit_EmitStatement		# line 6270, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN710:
	.stabn  68,0,6271,.LN710-Emit_EmitStatement		# line 6271, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab410
.Lab411:
.LN711:
	.stabn  68,0,6272,.LN711-Emit_EmitStatement		# line 6272, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab410:
.LN712:
	.stabn  68,0,6274,.LN712-Emit_EmitStatement		# line 6274, column 5
	cmpb	$0,IR_s + 133
	je	.Lab412
.Lab413:
.LN713:
	.stabn  68,0,6275,.LN713-Emit_EmitStatement		# line 6275, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN714:
	.stabn  68,0,6276,.LN714-Emit_EmitStatement		# line 6276, column 8
	.data
.Lab414:
 	.ascii	"Rule 27/1214 Cost=\000"
	.text
	pushl	$18
	leal	.Lab414,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN715:
	.stabn  68,0,6277,.LN715-Emit_EmitStatement		# line 6277, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN716:
	.stabn  68,0,6278,.LN716-Emit_EmitStatement		# line 6278, column 8
	.data
.Lab415:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab415,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN717:
	.stabn  68,0,6279,.LN717-Emit_EmitStatement		# line 6279, column 8
	call	InOut_WriteLn
.LN718:
	.stabn  68,0,6280,.LN718-Emit_EmitStatement		# line 6280, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN719:
	.stabn  68,0,6281,.LN719-Emit_EmitStatement		# line 6281, column 8
	cmpl	$0,8(%ebp)
	je	.Lab416
.Lab417:
.LN720:
	.stabn  68,0,6281,.LN720-Emit_EmitStatement		# line 6281, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab416:
.LN721:
	.stabn  68,0,6281,.LN721-Emit_EmitStatement		# line 6281, column 58
	call	InOut_WriteLn
.LN722:
	.stabn  68,0,6282,.LN722-Emit_EmitStatement		# line 6282, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN723:
	.stabn  68,0,6283,.LN723-Emit_EmitStatement		# line 6283, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN724:
	.stabn  68,0,6283,.LN724-Emit_EmitStatement		# line 6283, column 38
	call	InOut_WriteLn
.Lab412:
.LN725:
	.stabn  68,0,6286,.LN725-Emit_EmitStatement		# line 6286, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN726:
	.stabn  68,0,6287,.LN726-Emit_EmitStatement		# line 6287, column 2
	.data
.Lab418:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab418,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN727:
	.stabn  68,0,6287,.LN727-Emit_EmitStatement		# line 6287, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN728:
	.stabn  68,0,6287,.LN728-Emit_EmitStatement		# line 6287, column 60
	.data
.Lab419:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab419,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN729:
	.stabn  68,0,6287,.LN729-Emit_EmitStatement		# line 6287, column 79
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab420:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab420
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab421
.Lab422:
   	call	BoundErr_		
.Lab421:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN730:
	.stabn  68,0,6287,.LN730-Emit_EmitStatement		# line 6287, column 134
	.data
.Lab423:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab423,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN731:
	.stabn  68,0,6287,.LN731-Emit_EmitStatement		# line 6287, column 153
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN732:
	.stabn  68,0,6287,.LN732-Emit_EmitStatement		# line 6287, column 203
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab53:
.LN733:
	.stabn  68,0,6290,.LN733-Emit_EmitStatement		# line 6290, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN734:
	.stabn  68,0,6291,.LN734-Emit_EmitStatement		# line 6291, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN735:
	.stabn  68,0,6292,.LN735-Emit_EmitStatement		# line 6292, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN736:
	.stabn  68,0,6293,.LN736-Emit_EmitStatement		# line 6293, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab424
.Lab425:
.LN737:
	.stabn  68,0,6294,.LN737-Emit_EmitStatement		# line 6294, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab424:
.LN738:
	.stabn  68,0,6296,.LN738-Emit_EmitStatement		# line 6296, column 5
	cmpb	$0,IR_s + 133
	je	.Lab426
.Lab427:
.LN739:
	.stabn  68,0,6297,.LN739-Emit_EmitStatement		# line 6297, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN740:
	.stabn  68,0,6298,.LN740-Emit_EmitStatement		# line 6298, column 8
	.data
.Lab428:
 	.ascii	"Rule 28/1214 Cost=\000"
	.text
	pushl	$18
	leal	.Lab428,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN741:
	.stabn  68,0,6299,.LN741-Emit_EmitStatement		# line 6299, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN742:
	.stabn  68,0,6300,.LN742-Emit_EmitStatement		# line 6300, column 8
	.data
.Lab429:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab429,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN743:
	.stabn  68,0,6301,.LN743-Emit_EmitStatement		# line 6301, column 8
	call	InOut_WriteLn
.LN744:
	.stabn  68,0,6302,.LN744-Emit_EmitStatement		# line 6302, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN745:
	.stabn  68,0,6303,.LN745-Emit_EmitStatement		# line 6303, column 8
	cmpl	$0,8(%ebp)
	je	.Lab430
.Lab431:
.LN746:
	.stabn  68,0,6303,.LN746-Emit_EmitStatement		# line 6303, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab430:
.LN747:
	.stabn  68,0,6303,.LN747-Emit_EmitStatement		# line 6303, column 58
	call	InOut_WriteLn
.LN748:
	.stabn  68,0,6304,.LN748-Emit_EmitStatement		# line 6304, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN749:
	.stabn  68,0,6305,.LN749-Emit_EmitStatement		# line 6305, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN750:
	.stabn  68,0,6305,.LN750-Emit_EmitStatement		# line 6305, column 38
	call	InOut_WriteLn
.Lab426:
.LN751:
	.stabn  68,0,6308,.LN751-Emit_EmitStatement		# line 6308, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN752:
	.stabn  68,0,6309,.LN752-Emit_EmitStatement		# line 6309, column 2
	.data
.Lab432:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab432,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN753:
	.stabn  68,0,6309,.LN753-Emit_EmitStatement		# line 6309, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN754:
	.stabn  68,0,6309,.LN754-Emit_EmitStatement		# line 6309, column 60
	.data
.Lab433:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab433,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN755:
	.stabn  68,0,6309,.LN755-Emit_EmitStatement		# line 6309, column 79
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab434:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab434
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab435
.Lab436:
   	call	BoundErr_		
.Lab435:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN756:
	.stabn  68,0,6309,.LN756-Emit_EmitStatement		# line 6309, column 134
	.data
.Lab437:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab437,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN757:
	.stabn  68,0,6309,.LN757-Emit_EmitStatement		# line 6309, column 153
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN758:
	.stabn  68,0,6309,.LN758-Emit_EmitStatement		# line 6309, column 203
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab52:
.LN759:
	.stabn  68,0,6312,.LN759-Emit_EmitStatement		# line 6312, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN760:
	.stabn  68,0,6313,.LN760-Emit_EmitStatement		# line 6313, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN761:
	.stabn  68,0,6314,.LN761-Emit_EmitStatement		# line 6314, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN762:
	.stabn  68,0,6315,.LN762-Emit_EmitStatement		# line 6315, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab438
.Lab439:
.LN763:
	.stabn  68,0,6316,.LN763-Emit_EmitStatement		# line 6316, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab438:
.LN764:
	.stabn  68,0,6318,.LN764-Emit_EmitStatement		# line 6318, column 5
	cmpb	$0,IR_s + 133
	je	.Lab440
.Lab441:
.LN765:
	.stabn  68,0,6319,.LN765-Emit_EmitStatement		# line 6319, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN766:
	.stabn  68,0,6320,.LN766-Emit_EmitStatement		# line 6320, column 8
	.data
.Lab442:
 	.ascii	"Rule 29/1300 Cost=\000"
	.text
	pushl	$18
	leal	.Lab442,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN767:
	.stabn  68,0,6321,.LN767-Emit_EmitStatement		# line 6321, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN768:
	.stabn  68,0,6322,.LN768-Emit_EmitStatement		# line 6322, column 8
	.data
.Lab443:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab443,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN769:
	.stabn  68,0,6323,.LN769-Emit_EmitStatement		# line 6323, column 8
	call	InOut_WriteLn
.LN770:
	.stabn  68,0,6324,.LN770-Emit_EmitStatement		# line 6324, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN771:
	.stabn  68,0,6325,.LN771-Emit_EmitStatement		# line 6325, column 8
	cmpl	$0,8(%ebp)
	je	.Lab444
.Lab445:
.LN772:
	.stabn  68,0,6325,.LN772-Emit_EmitStatement		# line 6325, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab444:
.LN773:
	.stabn  68,0,6325,.LN773-Emit_EmitStatement		# line 6325, column 58
	call	InOut_WriteLn
.LN774:
	.stabn  68,0,6326,.LN774-Emit_EmitStatement		# line 6326, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN775:
	.stabn  68,0,6327,.LN775-Emit_EmitStatement		# line 6327, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN776:
	.stabn  68,0,6327,.LN776-Emit_EmitStatement		# line 6327, column 38
	call	InOut_WriteLn
.Lab440:
.LN777:
	.stabn  68,0,6330,.LN777-Emit_EmitStatement		# line 6330, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN778:
	.stabn  68,0,6331,.LN778-Emit_EmitStatement		# line 6331, column 2
	.data
.Lab446:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab446,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN779:
	.stabn  68,0,6331,.LN779-Emit_EmitStatement		# line 6331, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN780:
	.stabn  68,0,6331,.LN780-Emit_EmitStatement		# line 6331, column 60
	.data
.Lab447:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab447,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN781:
	.stabn  68,0,6331,.LN781-Emit_EmitStatement		# line 6331, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN782:
	.stabn  68,0,6331,.LN782-Emit_EmitStatement		# line 6331, column 128
	.data
.Lab448:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab448,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN783:
	.stabn  68,0,6331,.LN783-Emit_EmitStatement		# line 6331, column 146
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 17,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN784:
	.stabn  68,0,6331,.LN784-Emit_EmitStatement		# line 6331, column 215
	call	CgAssOut_AssLn
.LN785:
	.stabn  68,0,6332,.LN785-Emit_EmitStatement		# line 6332, column 2
	.data
.Lab449:
 	.ascii	"\011imul\000"
	.text
	pushl	$5
	leal	.Lab449,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN786:
	.stabn  68,0,6332,.LN786-Emit_EmitStatement		# line 6332, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN787:
	.stabn  68,0,6332,.LN787-Emit_EmitStatement		# line 6332, column 61
	.data
.Lab450:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab450,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN788:
	.stabn  68,0,6332,.LN788-Emit_EmitStatement		# line 6332, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 17,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN789:
	.stabn  68,0,6332,.LN789-Emit_EmitStatement		# line 6332, column 155
	.data
.Lab451:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab451,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN790:
	.stabn  68,0,6332,.LN790-Emit_EmitStatement		# line 6332, column 173
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 17,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN791:
	.stabn  68,0,6332,.LN791-Emit_EmitStatement		# line 6332, column 242
	call	CgAssOut_AssLn
.LN792:
	.stabn  68,0,6333,.LN792-Emit_EmitStatement		# line 6333, column 2
	.data
.Lab452:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab452,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN793:
	.stabn  68,0,6333,.LN793-Emit_EmitStatement		# line 6333, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN794:
	.stabn  68,0,6333,.LN794-Emit_EmitStatement		# line 6333, column 60
	.data
.Lab453:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab453,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN795:
	.stabn  68,0,6333,.LN795-Emit_EmitStatement		# line 6333, column 78
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 17,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN796:
	.stabn  68,0,6333,.LN796-Emit_EmitStatement		# line 6333, column 147
	.data
.Lab454:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab454,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN797:
	.stabn  68,0,6333,.LN797-Emit_EmitStatement		# line 6333, column 165
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN798:
	.stabn  68,0,6333,.LN798-Emit_EmitStatement		# line 6333, column 215
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab51:
.LN799:
	.stabn  68,0,6336,.LN799-Emit_EmitStatement		# line 6336, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN800:
	.stabn  68,0,6337,.LN800-Emit_EmitStatement		# line 6337, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN801:
	.stabn  68,0,6338,.LN801-Emit_EmitStatement		# line 6338, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN802:
	.stabn  68,0,6339,.LN802-Emit_EmitStatement		# line 6339, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab455
.Lab456:
.LN803:
	.stabn  68,0,6340,.LN803-Emit_EmitStatement		# line 6340, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab455:
.LN804:
	.stabn  68,0,6342,.LN804-Emit_EmitStatement		# line 6342, column 5
	cmpb	$0,IR_s + 133
	je	.Lab457
.Lab458:
.LN805:
	.stabn  68,0,6343,.LN805-Emit_EmitStatement		# line 6343, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN806:
	.stabn  68,0,6344,.LN806-Emit_EmitStatement		# line 6344, column 8
	.data
.Lab459:
 	.ascii	"Rule 30/1373 Cost=\000"
	.text
	pushl	$18
	leal	.Lab459,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN807:
	.stabn  68,0,6345,.LN807-Emit_EmitStatement		# line 6345, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN808:
	.stabn  68,0,6346,.LN808-Emit_EmitStatement		# line 6346, column 8
	.data
.Lab460:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab460,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN809:
	.stabn  68,0,6347,.LN809-Emit_EmitStatement		# line 6347, column 8
	call	InOut_WriteLn
.LN810:
	.stabn  68,0,6348,.LN810-Emit_EmitStatement		# line 6348, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN811:
	.stabn  68,0,6349,.LN811-Emit_EmitStatement		# line 6349, column 8
	cmpl	$0,8(%ebp)
	je	.Lab461
.Lab462:
.LN812:
	.stabn  68,0,6349,.LN812-Emit_EmitStatement		# line 6349, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab461:
.LN813:
	.stabn  68,0,6349,.LN813-Emit_EmitStatement		# line 6349, column 58
	call	InOut_WriteLn
.LN814:
	.stabn  68,0,6350,.LN814-Emit_EmitStatement		# line 6350, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN815:
	.stabn  68,0,6351,.LN815-Emit_EmitStatement		# line 6351, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN816:
	.stabn  68,0,6351,.LN816-Emit_EmitStatement		# line 6351, column 38
	call	InOut_WriteLn
.Lab457:
.LN817:
	.stabn  68,0,6354,.LN817-Emit_EmitStatement		# line 6354, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN818:
	.stabn  68,0,6355,.LN818-Emit_EmitStatement		# line 6355, column 2
	.data
.Lab463:
 	.ascii	"\011shr\000"
	.text
	pushl	$4
	leal	.Lab463,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN819:
	.stabn  68,0,6355,.LN819-Emit_EmitStatement		# line 6355, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN820:
	.stabn  68,0,6355,.LN820-Emit_EmitStatement		# line 6355, column 60
	.data
.Lab464:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab464,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN821:
	.stabn  68,0,6355,.LN821-Emit_EmitStatement		# line 6355, column 79
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab465:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab465
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab466
.Lab467:
   	call	BoundErr_		
.Lab466:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN822:
	.stabn  68,0,6355,.LN822-Emit_EmitStatement		# line 6355, column 134
	.data
.Lab468:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab468,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN823:
	.stabn  68,0,6355,.LN823-Emit_EmitStatement		# line 6355, column 153
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN824:
	.stabn  68,0,6355,.LN824-Emit_EmitStatement		# line 6355, column 203
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab50:
.LN825:
	.stabn  68,0,6358,.LN825-Emit_EmitStatement		# line 6358, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN826:
	.stabn  68,0,6359,.LN826-Emit_EmitStatement		# line 6359, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN827:
	.stabn  68,0,6360,.LN827-Emit_EmitStatement		# line 6360, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN828:
	.stabn  68,0,6361,.LN828-Emit_EmitStatement		# line 6361, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab469
.Lab470:
.LN829:
	.stabn  68,0,6362,.LN829-Emit_EmitStatement		# line 6362, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab469:
.LN830:
	.stabn  68,0,6364,.LN830-Emit_EmitStatement		# line 6364, column 5
	cmpb	$0,IR_s + 133
	je	.Lab471
.Lab472:
.LN831:
	.stabn  68,0,6365,.LN831-Emit_EmitStatement		# line 6365, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN832:
	.stabn  68,0,6366,.LN832-Emit_EmitStatement		# line 6366, column 8
	.data
.Lab473:
 	.ascii	"Rule 31/1396 Cost=\000"
	.text
	pushl	$18
	leal	.Lab473,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN833:
	.stabn  68,0,6367,.LN833-Emit_EmitStatement		# line 6367, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN834:
	.stabn  68,0,6368,.LN834-Emit_EmitStatement		# line 6368, column 8
	.data
.Lab474:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab474,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN835:
	.stabn  68,0,6369,.LN835-Emit_EmitStatement		# line 6369, column 8
	call	InOut_WriteLn
.LN836:
	.stabn  68,0,6370,.LN836-Emit_EmitStatement		# line 6370, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN837:
	.stabn  68,0,6371,.LN837-Emit_EmitStatement		# line 6371, column 8
	cmpl	$0,8(%ebp)
	je	.Lab475
.Lab476:
.LN838:
	.stabn  68,0,6371,.LN838-Emit_EmitStatement		# line 6371, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab475:
.LN839:
	.stabn  68,0,6371,.LN839-Emit_EmitStatement		# line 6371, column 58
	call	InOut_WriteLn
.LN840:
	.stabn  68,0,6372,.LN840-Emit_EmitStatement		# line 6372, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN841:
	.stabn  68,0,6373,.LN841-Emit_EmitStatement		# line 6373, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN842:
	.stabn  68,0,6373,.LN842-Emit_EmitStatement		# line 6373, column 38
	call	InOut_WriteLn
.Lab471:
.LN843:
	.stabn  68,0,6376,.LN843-Emit_EmitStatement		# line 6376, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN844:
	.stabn  68,0,6377,.LN844-Emit_EmitStatement		# line 6377, column 2
	.data
.Lab477:
 	.ascii	"\011sar\000"
	.text
	pushl	$4
	leal	.Lab477,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN845:
	.stabn  68,0,6377,.LN845-Emit_EmitStatement		# line 6377, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN846:
	.stabn  68,0,6377,.LN846-Emit_EmitStatement		# line 6377, column 60
	.data
.Lab478:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab478,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN847:
	.stabn  68,0,6377,.LN847-Emit_EmitStatement		# line 6377, column 79
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab479:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab479
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab480
.Lab481:
   	call	BoundErr_		
.Lab480:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN848:
	.stabn  68,0,6377,.LN848-Emit_EmitStatement		# line 6377, column 134
	.data
.Lab482:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab482,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN849:
	.stabn  68,0,6377,.LN849-Emit_EmitStatement		# line 6377, column 153
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN850:
	.stabn  68,0,6377,.LN850-Emit_EmitStatement		# line 6377, column 203
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab49:
.LN851:
	.stabn  68,0,6380,.LN851-Emit_EmitStatement		# line 6380, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN852:
	.stabn  68,0,6381,.LN852-Emit_EmitStatement		# line 6381, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN853:
	.stabn  68,0,6382,.LN853-Emit_EmitStatement		# line 6382, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN854:
	.stabn  68,0,6383,.LN854-Emit_EmitStatement		# line 6383, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab483
.Lab484:
.LN855:
	.stabn  68,0,6384,.LN855-Emit_EmitStatement		# line 6384, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab483:
.LN856:
	.stabn  68,0,6386,.LN856-Emit_EmitStatement		# line 6386, column 5
	cmpb	$0,IR_s + 133
	je	.Lab485
.Lab486:
.LN857:
	.stabn  68,0,6387,.LN857-Emit_EmitStatement		# line 6387, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN858:
	.stabn  68,0,6388,.LN858-Emit_EmitStatement		# line 6388, column 8
	.data
.Lab487:
 	.ascii	"Rule 32/1467 Cost=\000"
	.text
	pushl	$18
	leal	.Lab487,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN859:
	.stabn  68,0,6389,.LN859-Emit_EmitStatement		# line 6389, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN860:
	.stabn  68,0,6390,.LN860-Emit_EmitStatement		# line 6390, column 8
	.data
.Lab488:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab488,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN861:
	.stabn  68,0,6391,.LN861-Emit_EmitStatement		# line 6391, column 8
	call	InOut_WriteLn
.LN862:
	.stabn  68,0,6392,.LN862-Emit_EmitStatement		# line 6392, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN863:
	.stabn  68,0,6393,.LN863-Emit_EmitStatement		# line 6393, column 8
	cmpl	$0,8(%ebp)
	je	.Lab489
.Lab490:
.LN864:
	.stabn  68,0,6393,.LN864-Emit_EmitStatement		# line 6393, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab489:
.LN865:
	.stabn  68,0,6393,.LN865-Emit_EmitStatement		# line 6393, column 58
	call	InOut_WriteLn
.LN866:
	.stabn  68,0,6394,.LN866-Emit_EmitStatement		# line 6394, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN867:
	.stabn  68,0,6395,.LN867-Emit_EmitStatement		# line 6395, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN868:
	.stabn  68,0,6395,.LN868-Emit_EmitStatement		# line 6395, column 38
	call	InOut_WriteLn
.Lab485:
.LN869:
	.stabn  68,0,6398,.LN869-Emit_EmitStatement		# line 6398, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN870:
	.stabn  68,0,6399,.LN870-Emit_EmitStatement		# line 6399, column 2
	.data
.Lab491:
 	.ascii	"\011and\000"
	.text
	pushl	$4
	leal	.Lab491,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN871:
	.stabn  68,0,6399,.LN871-Emit_EmitStatement		# line 6399, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN872:
	.stabn  68,0,6399,.LN872-Emit_EmitStatement		# line 6399, column 60
	.data
.Lab492:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab492,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN873:
	.stabn  68,0,6399,.LN873-Emit_EmitStatement		# line 6399, column 79
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
 	subl	$1,%eax 
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN874:
	.stabn  68,0,6399,.LN874-Emit_EmitStatement		# line 6399, column 130
	.data
.Lab493:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab493,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN875:
	.stabn  68,0,6399,.LN875-Emit_EmitStatement		# line 6399, column 149
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN876:
	.stabn  68,0,6399,.LN876-Emit_EmitStatement		# line 6399, column 199
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab48:
.LN877:
	.stabn  68,0,6402,.LN877-Emit_EmitStatement		# line 6402, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN878:
	.stabn  68,0,6403,.LN878-Emit_EmitStatement		# line 6403, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN879:
	.stabn  68,0,6404,.LN879-Emit_EmitStatement		# line 6404, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN880:
	.stabn  68,0,6405,.LN880-Emit_EmitStatement		# line 6405, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab494
.Lab495:
.LN881:
	.stabn  68,0,6406,.LN881-Emit_EmitStatement		# line 6406, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab494:
.LN882:
	.stabn  68,0,6408,.LN882-Emit_EmitStatement		# line 6408, column 5
	cmpb	$0,IR_s + 133
	je	.Lab496
.Lab497:
.LN883:
	.stabn  68,0,6409,.LN883-Emit_EmitStatement		# line 6409, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN884:
	.stabn  68,0,6410,.LN884-Emit_EmitStatement		# line 6410, column 8
	.data
.Lab498:
 	.ascii	"Rule 33/1596 Cost=\000"
	.text
	pushl	$18
	leal	.Lab498,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN885:
	.stabn  68,0,6411,.LN885-Emit_EmitStatement		# line 6411, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN886:
	.stabn  68,0,6412,.LN886-Emit_EmitStatement		# line 6412, column 8
	.data
.Lab499:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab499,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN887:
	.stabn  68,0,6413,.LN887-Emit_EmitStatement		# line 6413, column 8
	call	InOut_WriteLn
.LN888:
	.stabn  68,0,6414,.LN888-Emit_EmitStatement		# line 6414, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN889:
	.stabn  68,0,6415,.LN889-Emit_EmitStatement		# line 6415, column 8
	cmpl	$0,8(%ebp)
	je	.Lab500
.Lab501:
.LN890:
	.stabn  68,0,6415,.LN890-Emit_EmitStatement		# line 6415, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab500:
.LN891:
	.stabn  68,0,6415,.LN891-Emit_EmitStatement		# line 6415, column 58
	call	InOut_WriteLn
.LN892:
	.stabn  68,0,6416,.LN892-Emit_EmitStatement		# line 6416, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN893:
	.stabn  68,0,6417,.LN893-Emit_EmitStatement		# line 6417, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN894:
	.stabn  68,0,6417,.LN894-Emit_EmitStatement		# line 6417, column 38
	call	InOut_WriteLn
.Lab496:
.LN895:
	.stabn  68,0,6420,.LN895-Emit_EmitStatement		# line 6420, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN896:
	.stabn  68,0,6421,.LN896-Emit_EmitStatement		# line 6421, column 2
	.data
.Lab502:
 	.ascii	"\011orl\011\000"
	.text
	pushl	$5
	leal	.Lab502,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN897:
	.stabn  68,0,6421,.LN897-Emit_EmitStatement		# line 6421, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN898:
	.stabn  68,0,6421,.LN898-Emit_EmitStatement		# line 6421, column 60
	.data
.Lab503:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab503,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN899:
	.stabn  68,0,6421,.LN899-Emit_EmitStatement		# line 6421, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN900:
	.stabn  68,0,6421,.LN900-Emit_EmitStatement		# line 6421, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab47:
.LN901:
	.stabn  68,0,6424,.LN901-Emit_EmitStatement		# line 6424, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN902:
	.stabn  68,0,6425,.LN902-Emit_EmitStatement		# line 6425, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN903:
	.stabn  68,0,6426,.LN903-Emit_EmitStatement		# line 6426, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN904:
	.stabn  68,0,6427,.LN904-Emit_EmitStatement		# line 6427, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab504
.Lab505:
.LN905:
	.stabn  68,0,6428,.LN905-Emit_EmitStatement		# line 6428, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab504:
.LN906:
	.stabn  68,0,6430,.LN906-Emit_EmitStatement		# line 6430, column 5
	cmpb	$0,IR_s + 133
	je	.Lab506
.Lab507:
.LN907:
	.stabn  68,0,6431,.LN907-Emit_EmitStatement		# line 6431, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN908:
	.stabn  68,0,6432,.LN908-Emit_EmitStatement		# line 6432, column 8
	.data
.Lab508:
 	.ascii	"Rule 34/1596 Cost=\000"
	.text
	pushl	$18
	leal	.Lab508,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN909:
	.stabn  68,0,6433,.LN909-Emit_EmitStatement		# line 6433, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN910:
	.stabn  68,0,6434,.LN910-Emit_EmitStatement		# line 6434, column 8
	.data
.Lab509:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab509,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN911:
	.stabn  68,0,6435,.LN911-Emit_EmitStatement		# line 6435, column 8
	call	InOut_WriteLn
.LN912:
	.stabn  68,0,6436,.LN912-Emit_EmitStatement		# line 6436, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN913:
	.stabn  68,0,6437,.LN913-Emit_EmitStatement		# line 6437, column 8
	cmpl	$0,8(%ebp)
	je	.Lab510
.Lab511:
.LN914:
	.stabn  68,0,6437,.LN914-Emit_EmitStatement		# line 6437, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab510:
.LN915:
	.stabn  68,0,6437,.LN915-Emit_EmitStatement		# line 6437, column 58
	call	InOut_WriteLn
.LN916:
	.stabn  68,0,6438,.LN916-Emit_EmitStatement		# line 6438, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN917:
	.stabn  68,0,6439,.LN917-Emit_EmitStatement		# line 6439, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN918:
	.stabn  68,0,6439,.LN918-Emit_EmitStatement		# line 6439, column 38
	call	InOut_WriteLn
.Lab506:
.LN919:
	.stabn  68,0,6442,.LN919-Emit_EmitStatement		# line 6442, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN920:
	.stabn  68,0,6443,.LN920-Emit_EmitStatement		# line 6443, column 2
	.data
.Lab512:
 	.ascii	"\011orl\011\000"
	.text
	pushl	$5
	leal	.Lab512,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN921:
	.stabn  68,0,6443,.LN921-Emit_EmitStatement		# line 6443, column 30
	leal	-64(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN922:
	.stabn  68,0,6443,.LN922-Emit_EmitStatement		# line 6443, column 60
	.data
.Lab513:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab513,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN923:
	.stabn  68,0,6443,.LN923-Emit_EmitStatement		# line 6443, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN924:
	.stabn  68,0,6443,.LN924-Emit_EmitStatement		# line 6443, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab46:
.LN925:
	.stabn  68,0,6446,.LN925-Emit_EmitStatement		# line 6446, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN926:
	.stabn  68,0,6447,.LN926-Emit_EmitStatement		# line 6447, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN927:
	.stabn  68,0,6448,.LN927-Emit_EmitStatement		# line 6448, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN928:
	.stabn  68,0,6449,.LN928-Emit_EmitStatement		# line 6449, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab514
.Lab515:
.LN929:
	.stabn  68,0,6450,.LN929-Emit_EmitStatement		# line 6450, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab514:
.LN930:
	.stabn  68,0,6452,.LN930-Emit_EmitStatement		# line 6452, column 5
	cmpb	$0,IR_s + 133
	je	.Lab516
.Lab517:
.LN931:
	.stabn  68,0,6453,.LN931-Emit_EmitStatement		# line 6453, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN932:
	.stabn  68,0,6454,.LN932-Emit_EmitStatement		# line 6454, column 8
	.data
.Lab518:
 	.ascii	"Rule 35/1626 Cost=\000"
	.text
	pushl	$18
	leal	.Lab518,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN933:
	.stabn  68,0,6455,.LN933-Emit_EmitStatement		# line 6455, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN934:
	.stabn  68,0,6456,.LN934-Emit_EmitStatement		# line 6456, column 8
	.data
.Lab519:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab519,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN935:
	.stabn  68,0,6457,.LN935-Emit_EmitStatement		# line 6457, column 8
	call	InOut_WriteLn
.LN936:
	.stabn  68,0,6458,.LN936-Emit_EmitStatement		# line 6458, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN937:
	.stabn  68,0,6459,.LN937-Emit_EmitStatement		# line 6459, column 8
	cmpl	$0,8(%ebp)
	je	.Lab520
.Lab521:
.LN938:
	.stabn  68,0,6459,.LN938-Emit_EmitStatement		# line 6459, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab520:
.LN939:
	.stabn  68,0,6459,.LN939-Emit_EmitStatement		# line 6459, column 58
	call	InOut_WriteLn
.LN940:
	.stabn  68,0,6460,.LN940-Emit_EmitStatement		# line 6460, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN941:
	.stabn  68,0,6461,.LN941-Emit_EmitStatement		# line 6461, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN942:
	.stabn  68,0,6461,.LN942-Emit_EmitStatement		# line 6461, column 38
	call	InOut_WriteLn
.Lab516:
.LN943:
	.stabn  68,0,6464,.LN943-Emit_EmitStatement		# line 6464, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN944:
	.stabn  68,0,6465,.LN944-Emit_EmitStatement		# line 6465, column 2
	.data
.Lab522:
 	.ascii	"\011notl\011\000"
	.text
	pushl	$6
	leal	.Lab522,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN945:
	.stabn  68,0,6465,.LN945-Emit_EmitStatement		# line 6465, column 30
	movzbl	RegAlloc_s + 15,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN946:
	.stabn  68,0,6465,.LN946-Emit_EmitStatement		# line 6465, column 74
	call	CgAssOut_AssLn
.LN947:
	.stabn  68,0,6466,.LN947-Emit_EmitStatement		# line 6466, column 2
	.data
.Lab523:
 	.ascii	" \011andl\011\000"
	.text
	pushl	$7
	leal	.Lab523,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN948:
	.stabn  68,0,6466,.LN948-Emit_EmitStatement		# line 6466, column 30
	movzbl	RegAlloc_s + 15,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN949:
	.stabn  68,0,6466,.LN949-Emit_EmitStatement		# line 6466, column 74
	.data
.Lab524:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab524,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN950:
	.stabn  68,0,6466,.LN950-Emit_EmitStatement		# line 6466, column 92
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN951:
	.stabn  68,0,6466,.LN951-Emit_EmitStatement		# line 6466, column 142
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab45:
.LN952:
	.stabn  68,0,6469,.LN952-Emit_EmitStatement		# line 6469, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN953:
	.stabn  68,0,6470,.LN953-Emit_EmitStatement		# line 6470, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN954:
	.stabn  68,0,6471,.LN954-Emit_EmitStatement		# line 6471, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN955:
	.stabn  68,0,6472,.LN955-Emit_EmitStatement		# line 6472, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab525
.Lab526:
.LN956:
	.stabn  68,0,6473,.LN956-Emit_EmitStatement		# line 6473, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab525:
.LN957:
	.stabn  68,0,6475,.LN957-Emit_EmitStatement		# line 6475, column 5
	cmpb	$0,IR_s + 133
	je	.Lab527
.Lab528:
.LN958:
	.stabn  68,0,6476,.LN958-Emit_EmitStatement		# line 6476, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN959:
	.stabn  68,0,6477,.LN959-Emit_EmitStatement		# line 6477, column 8
	.data
.Lab529:
 	.ascii	"Rule 36/1640 Cost=\000"
	.text
	pushl	$18
	leal	.Lab529,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN960:
	.stabn  68,0,6478,.LN960-Emit_EmitStatement		# line 6478, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN961:
	.stabn  68,0,6479,.LN961-Emit_EmitStatement		# line 6479, column 8
	.data
.Lab530:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab530,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN962:
	.stabn  68,0,6480,.LN962-Emit_EmitStatement		# line 6480, column 8
	call	InOut_WriteLn
.LN963:
	.stabn  68,0,6481,.LN963-Emit_EmitStatement		# line 6481, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN964:
	.stabn  68,0,6482,.LN964-Emit_EmitStatement		# line 6482, column 8
	cmpl	$0,8(%ebp)
	je	.Lab531
.Lab532:
.LN965:
	.stabn  68,0,6482,.LN965-Emit_EmitStatement		# line 6482, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab531:
.LN966:
	.stabn  68,0,6482,.LN966-Emit_EmitStatement		# line 6482, column 58
	call	InOut_WriteLn
.LN967:
	.stabn  68,0,6483,.LN967-Emit_EmitStatement		# line 6483, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN968:
	.stabn  68,0,6484,.LN968-Emit_EmitStatement		# line 6484, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN969:
	.stabn  68,0,6484,.LN969-Emit_EmitStatement		# line 6484, column 38
	call	InOut_WriteLn
.Lab527:
.LN970:
	.stabn  68,0,6487,.LN970-Emit_EmitStatement		# line 6487, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN971:
	.stabn  68,0,6488,.LN971-Emit_EmitStatement		# line 6488, column 2
	.data
.Lab533:
 	.ascii	" \011andl\011$\000"
	.text
	pushl	$8
	leal	.Lab533,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN972:
	.stabn  68,0,6488,.LN972-Emit_EmitStatement		# line 6488, column 31
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	notl	%eax
 	andl	$-1, %eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN973:
	.stabn  68,0,6488,.LN973-Emit_EmitStatement		# line 6488, column 110
	.data
.Lab534:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab534,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN974:
	.stabn  68,0,6488,.LN974-Emit_EmitStatement		# line 6488, column 128
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN975:
	.stabn  68,0,6488,.LN975-Emit_EmitStatement		# line 6488, column 178
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab44:
.LN976:
	.stabn  68,0,6491,.LN976-Emit_EmitStatement		# line 6491, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN977:
	.stabn  68,0,6492,.LN977-Emit_EmitStatement		# line 6492, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN978:
	.stabn  68,0,6493,.LN978-Emit_EmitStatement		# line 6493, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN979:
	.stabn  68,0,6494,.LN979-Emit_EmitStatement		# line 6494, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab535
.Lab536:
.LN980:
	.stabn  68,0,6495,.LN980-Emit_EmitStatement		# line 6495, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab535:
.LN981:
	.stabn  68,0,6497,.LN981-Emit_EmitStatement		# line 6497, column 5
	cmpb	$0,IR_s + 133
	je	.Lab537
.Lab538:
.LN982:
	.stabn  68,0,6498,.LN982-Emit_EmitStatement		# line 6498, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN983:
	.stabn  68,0,6499,.LN983-Emit_EmitStatement		# line 6499, column 8
	.data
.Lab539:
 	.ascii	"Rule 37/1659 Cost=\000"
	.text
	pushl	$18
	leal	.Lab539,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN984:
	.stabn  68,0,6500,.LN984-Emit_EmitStatement		# line 6500, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN985:
	.stabn  68,0,6501,.LN985-Emit_EmitStatement		# line 6501, column 8
	.data
.Lab540:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab540,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN986:
	.stabn  68,0,6502,.LN986-Emit_EmitStatement		# line 6502, column 8
	call	InOut_WriteLn
.LN987:
	.stabn  68,0,6503,.LN987-Emit_EmitStatement		# line 6503, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN988:
	.stabn  68,0,6504,.LN988-Emit_EmitStatement		# line 6504, column 8
	cmpl	$0,8(%ebp)
	je	.Lab541
.Lab542:
.LN989:
	.stabn  68,0,6504,.LN989-Emit_EmitStatement		# line 6504, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab541:
.LN990:
	.stabn  68,0,6504,.LN990-Emit_EmitStatement		# line 6504, column 58
	call	InOut_WriteLn
.LN991:
	.stabn  68,0,6505,.LN991-Emit_EmitStatement		# line 6505, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN992:
	.stabn  68,0,6506,.LN992-Emit_EmitStatement		# line 6506, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN993:
	.stabn  68,0,6506,.LN993-Emit_EmitStatement		# line 6506, column 38
	call	InOut_WriteLn
.Lab537:
.LN994:
	.stabn  68,0,6509,.LN994-Emit_EmitStatement		# line 6509, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN995:
	.stabn  68,0,6510,.LN995-Emit_EmitStatement		# line 6510, column 2
	.data
.Lab543:
 	.ascii	"\011andl\011\000"
	.text
	pushl	$6
	leal	.Lab543,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN996:
	.stabn  68,0,6510,.LN996-Emit_EmitStatement		# line 6510, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN997:
	.stabn  68,0,6510,.LN997-Emit_EmitStatement		# line 6510, column 60
	.data
.Lab544:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab544,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN998:
	.stabn  68,0,6510,.LN998-Emit_EmitStatement		# line 6510, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN999:
	.stabn  68,0,6510,.LN999-Emit_EmitStatement		# line 6510, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab43:
.LN1000:
	.stabn  68,0,6513,.LN1000-Emit_EmitStatement		# line 6513, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN1001:
	.stabn  68,0,6514,.LN1001-Emit_EmitStatement		# line 6514, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN1002:
	.stabn  68,0,6515,.LN1002-Emit_EmitStatement		# line 6515, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN1003:
	.stabn  68,0,6516,.LN1003-Emit_EmitStatement		# line 6516, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab545
.Lab546:
.LN1004:
	.stabn  68,0,6517,.LN1004-Emit_EmitStatement		# line 6517, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab545:
.LN1005:
	.stabn  68,0,6519,.LN1005-Emit_EmitStatement		# line 6519, column 5
	cmpb	$0,IR_s + 133
	je	.Lab547
.Lab548:
.LN1006:
	.stabn  68,0,6520,.LN1006-Emit_EmitStatement		# line 6520, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1007:
	.stabn  68,0,6521,.LN1007-Emit_EmitStatement		# line 6521, column 8
	.data
.Lab549:
 	.ascii	"Rule 38/1659 Cost=\000"
	.text
	pushl	$18
	leal	.Lab549,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1008:
	.stabn  68,0,6522,.LN1008-Emit_EmitStatement		# line 6522, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1009:
	.stabn  68,0,6523,.LN1009-Emit_EmitStatement		# line 6523, column 8
	.data
.Lab550:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab550,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1010:
	.stabn  68,0,6524,.LN1010-Emit_EmitStatement		# line 6524, column 8
	call	InOut_WriteLn
.LN1011:
	.stabn  68,0,6525,.LN1011-Emit_EmitStatement		# line 6525, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1012:
	.stabn  68,0,6526,.LN1012-Emit_EmitStatement		# line 6526, column 8
	cmpl	$0,8(%ebp)
	je	.Lab551
.Lab552:
.LN1013:
	.stabn  68,0,6526,.LN1013-Emit_EmitStatement		# line 6526, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab551:
.LN1014:
	.stabn  68,0,6526,.LN1014-Emit_EmitStatement		# line 6526, column 58
	call	InOut_WriteLn
.LN1015:
	.stabn  68,0,6527,.LN1015-Emit_EmitStatement		# line 6527, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1016:
	.stabn  68,0,6528,.LN1016-Emit_EmitStatement		# line 6528, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1017:
	.stabn  68,0,6528,.LN1017-Emit_EmitStatement		# line 6528, column 38
	call	InOut_WriteLn
.Lab547:
.LN1018:
	.stabn  68,0,6531,.LN1018-Emit_EmitStatement		# line 6531, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN1019:
	.stabn  68,0,6532,.LN1019-Emit_EmitStatement		# line 6532, column 2
	.data
.Lab553:
 	.ascii	"\011andl\011\000"
	.text
	pushl	$6
	leal	.Lab553,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1020:
	.stabn  68,0,6532,.LN1020-Emit_EmitStatement		# line 6532, column 30
	leal	-64(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1021:
	.stabn  68,0,6532,.LN1021-Emit_EmitStatement		# line 6532, column 60
	.data
.Lab554:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab554,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1022:
	.stabn  68,0,6532,.LN1022-Emit_EmitStatement		# line 6532, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1023:
	.stabn  68,0,6532,.LN1023-Emit_EmitStatement		# line 6532, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab42:
.LN1024:
	.stabn  68,0,6535,.LN1024-Emit_EmitStatement		# line 6535, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN1025:
	.stabn  68,0,6536,.LN1025-Emit_EmitStatement		# line 6536, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN1026:
	.stabn  68,0,6537,.LN1026-Emit_EmitStatement		# line 6537, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN1027:
	.stabn  68,0,6538,.LN1027-Emit_EmitStatement		# line 6538, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab555
.Lab556:
.LN1028:
	.stabn  68,0,6539,.LN1028-Emit_EmitStatement		# line 6539, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab555:
.LN1029:
	.stabn  68,0,6541,.LN1029-Emit_EmitStatement		# line 6541, column 5
	cmpb	$0,IR_s + 133
	je	.Lab557
.Lab558:
.LN1030:
	.stabn  68,0,6542,.LN1030-Emit_EmitStatement		# line 6542, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1031:
	.stabn  68,0,6543,.LN1031-Emit_EmitStatement		# line 6543, column 8
	.data
.Lab559:
 	.ascii	"Rule 39/1678 Cost=\000"
	.text
	pushl	$18
	leal	.Lab559,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1032:
	.stabn  68,0,6544,.LN1032-Emit_EmitStatement		# line 6544, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1033:
	.stabn  68,0,6545,.LN1033-Emit_EmitStatement		# line 6545, column 8
	.data
.Lab560:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab560,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1034:
	.stabn  68,0,6546,.LN1034-Emit_EmitStatement		# line 6546, column 8
	call	InOut_WriteLn
.LN1035:
	.stabn  68,0,6547,.LN1035-Emit_EmitStatement		# line 6547, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1036:
	.stabn  68,0,6548,.LN1036-Emit_EmitStatement		# line 6548, column 8
	cmpl	$0,8(%ebp)
	je	.Lab561
.Lab562:
.LN1037:
	.stabn  68,0,6548,.LN1037-Emit_EmitStatement		# line 6548, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab561:
.LN1038:
	.stabn  68,0,6548,.LN1038-Emit_EmitStatement		# line 6548, column 58
	call	InOut_WriteLn
.LN1039:
	.stabn  68,0,6549,.LN1039-Emit_EmitStatement		# line 6549, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1040:
	.stabn  68,0,6550,.LN1040-Emit_EmitStatement		# line 6550, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1041:
	.stabn  68,0,6550,.LN1041-Emit_EmitStatement		# line 6550, column 38
	call	InOut_WriteLn
.Lab557:
.LN1042:
	.stabn  68,0,6553,.LN1042-Emit_EmitStatement		# line 6553, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN1043:
	.stabn  68,0,6554,.LN1043-Emit_EmitStatement		# line 6554, column 2
	.data
.Lab563:
 	.ascii	"\011xorl\011\000"
	.text
	pushl	$6
	leal	.Lab563,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1044:
	.stabn  68,0,6554,.LN1044-Emit_EmitStatement		# line 6554, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1045:
	.stabn  68,0,6554,.LN1045-Emit_EmitStatement		# line 6554, column 60
	.data
.Lab564:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab564,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1046:
	.stabn  68,0,6554,.LN1046-Emit_EmitStatement		# line 6554, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1047:
	.stabn  68,0,6554,.LN1047-Emit_EmitStatement		# line 6554, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab41:
.LN1048:
	.stabn  68,0,6557,.LN1048-Emit_EmitStatement		# line 6557, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN1049:
	.stabn  68,0,6558,.LN1049-Emit_EmitStatement		# line 6558, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN1050:
	.stabn  68,0,6559,.LN1050-Emit_EmitStatement		# line 6559, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN1051:
	.stabn  68,0,6560,.LN1051-Emit_EmitStatement		# line 6560, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab565
.Lab566:
.LN1052:
	.stabn  68,0,6561,.LN1052-Emit_EmitStatement		# line 6561, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab565:
.LN1053:
	.stabn  68,0,6563,.LN1053-Emit_EmitStatement		# line 6563, column 5
	cmpb	$0,IR_s + 133
	je	.Lab567
.Lab568:
.LN1054:
	.stabn  68,0,6564,.LN1054-Emit_EmitStatement		# line 6564, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1055:
	.stabn  68,0,6565,.LN1055-Emit_EmitStatement		# line 6565, column 8
	.data
.Lab569:
 	.ascii	"Rule 40/1678 Cost=\000"
	.text
	pushl	$18
	leal	.Lab569,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1056:
	.stabn  68,0,6566,.LN1056-Emit_EmitStatement		# line 6566, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1057:
	.stabn  68,0,6567,.LN1057-Emit_EmitStatement		# line 6567, column 8
	.data
.Lab570:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab570,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1058:
	.stabn  68,0,6568,.LN1058-Emit_EmitStatement		# line 6568, column 8
	call	InOut_WriteLn
.LN1059:
	.stabn  68,0,6569,.LN1059-Emit_EmitStatement		# line 6569, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1060:
	.stabn  68,0,6570,.LN1060-Emit_EmitStatement		# line 6570, column 8
	cmpl	$0,8(%ebp)
	je	.Lab571
.Lab572:
.LN1061:
	.stabn  68,0,6570,.LN1061-Emit_EmitStatement		# line 6570, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab571:
.LN1062:
	.stabn  68,0,6570,.LN1062-Emit_EmitStatement		# line 6570, column 58
	call	InOut_WriteLn
.LN1063:
	.stabn  68,0,6571,.LN1063-Emit_EmitStatement		# line 6571, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1064:
	.stabn  68,0,6572,.LN1064-Emit_EmitStatement		# line 6572, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1065:
	.stabn  68,0,6572,.LN1065-Emit_EmitStatement		# line 6572, column 38
	call	InOut_WriteLn
.Lab567:
.LN1066:
	.stabn  68,0,6575,.LN1066-Emit_EmitStatement		# line 6575, column 9
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN1067:
	.stabn  68,0,6576,.LN1067-Emit_EmitStatement		# line 6576, column 2
	.data
.Lab573:
 	.ascii	"\011xorl\011\000"
	.text
	pushl	$6
	leal	.Lab573,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1068:
	.stabn  68,0,6576,.LN1068-Emit_EmitStatement		# line 6576, column 30
	leal	-64(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1069:
	.stabn  68,0,6576,.LN1069-Emit_EmitStatement		# line 6576, column 60
	.data
.Lab574:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab574,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1070:
	.stabn  68,0,6576,.LN1070-Emit_EmitStatement		# line 6576, column 78
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1071:
	.stabn  68,0,6576,.LN1071-Emit_EmitStatement		# line 6576, column 128
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab40:
.LN1072:
	.stabn  68,0,6579,.LN1072-Emit_EmitStatement		# line 6579, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN1073:
	.stabn  68,0,6580,.LN1073-Emit_EmitStatement		# line 6580, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN1074:
	.stabn  68,0,6581,.LN1074-Emit_EmitStatement		# line 6581, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab575
.Lab576:
.LN1075:
	.stabn  68,0,6582,.LN1075-Emit_EmitStatement		# line 6582, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab575:
.LN1076:
	.stabn  68,0,6584,.LN1076-Emit_EmitStatement		# line 6584, column 5
	cmpb	$0,IR_s + 133
	je	.Lab577
.Lab578:
.LN1077:
	.stabn  68,0,6585,.LN1077-Emit_EmitStatement		# line 6585, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1078:
	.stabn  68,0,6586,.LN1078-Emit_EmitStatement		# line 6586, column 8
	.data
.Lab579:
 	.ascii	"Rule 41/1804 Cost=\000"
	.text
	pushl	$18
	leal	.Lab579,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1079:
	.stabn  68,0,6587,.LN1079-Emit_EmitStatement		# line 6587, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1080:
	.stabn  68,0,6588,.LN1080-Emit_EmitStatement		# line 6588, column 8
	.data
.Lab580:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab580,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1081:
	.stabn  68,0,6589,.LN1081-Emit_EmitStatement		# line 6589, column 8
	call	InOut_WriteLn
.LN1082:
	.stabn  68,0,6590,.LN1082-Emit_EmitStatement		# line 6590, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1083:
	.stabn  68,0,6591,.LN1083-Emit_EmitStatement		# line 6591, column 8
	cmpl	$0,8(%ebp)
	je	.Lab581
.Lab582:
.LN1084:
	.stabn  68,0,6591,.LN1084-Emit_EmitStatement		# line 6591, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab581:
.LN1085:
	.stabn  68,0,6591,.LN1085-Emit_EmitStatement		# line 6591, column 58
	call	InOut_WriteLn
.LN1086:
	.stabn  68,0,6592,.LN1086-Emit_EmitStatement		# line 6592, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1087:
	.stabn  68,0,6593,.LN1087-Emit_EmitStatement		# line 6593, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1088:
	.stabn  68,0,6593,.LN1088-Emit_EmitStatement		# line 6593, column 38
	call	InOut_WriteLn
.Lab577:
.LN1089:
	.stabn  68,0,6596,.LN1089-Emit_EmitStatement		# line 6596, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN1090:
	.stabn  68,0,6597,.LN1090-Emit_EmitStatement		# line 6597, column 2
	.data
.Lab583:
 	.ascii	"\011fcoml\011TwoExp31_\000"
	.text
	pushl	$16
	leal	.Lab583,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1091:
	.stabn  68,0,6597,.LN1091-Emit_EmitStatement		# line 6597, column 39
	call	CgAssOut_AssLn
.LN1092:
	.stabn  68,0,6598,.LN1092-Emit_EmitStatement		# line 6598, column 2
	.data
.Lab584:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab584,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1093:
	.stabn  68,0,6598,.LN1093-Emit_EmitStatement		# line 6598, column 33
	call	CgAssOut_AssLn
.LN1094:
	.stabn  68,0,6599,.LN1094-Emit_EmitStatement		# line 6599, column 2
	.data
.Lab585:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab585,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1095:
	.stabn  68,0,6599,.LN1095-Emit_EmitStatement		# line 6599, column 26
	call	CgAssOut_AssLn
.LN1096:
	.stabn  68,0,6600,.LN1096-Emit_EmitStatement		# line 6600, column 2
	.data
.Lab586:
 	.ascii	"\011jb\011\000"
	.text
	pushl	$4
	leal	.Lab586,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1097:
	.stabn  68,0,6600,.LN1097-Emit_EmitStatement		# line 6600, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1098:
	.stabn  68,0,6600,.LN1098-Emit_EmitStatement		# line 6600, column 49
	call	CgAssOut_AssLn
.LN1099:
	.stabn  68,0,6601,.LN1099-Emit_EmitStatement		# line 6601, column 2
	.data
.Lab587:
 	.ascii	"\011fsubl\011TwoExp32_\000"
	.text
	pushl	$16
	leal	.Lab587,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1100:
	.stabn  68,0,6601,.LN1100-Emit_EmitStatement		# line 6601, column 39
	call	CgAssOut_AssLn
.LN1101:
	.stabn  68,0,6602,.LN1101-Emit_EmitStatement		# line 6602, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1102:
	.stabn  68,0,6602,.LN1102-Emit_EmitStatement		# line 6602, column 21
	.data
.Lab588:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab588,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1103:
	.stabn  68,0,6602,.LN1103-Emit_EmitStatement		# line 6602, column 39
	call	CgAssOut_AssLn
.LN1104:
	.stabn  68,0,6603,.LN1104-Emit_EmitStatement		# line 6603, column 9
	pushl	$3
	pushl	$1
	call	Emit_CheckRoundMode2
	addl	$8, %esp
.LN1105:
	.stabn  68,0,6604,.LN1105-Emit_EmitStatement		# line 6604, column 2
	.data
.Lab589:
 	.ascii	"\011fistpl\011\000"
	.text
	pushl	$8
	leal	.Lab589,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1106:
	.stabn  68,0,6604,.LN1106-Emit_EmitStatement		# line 6604, column 30
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1107:
	.stabn  68,0,6604,.LN1107-Emit_EmitStatement		# line 6604, column 56
	call	CgAssOut_AssLn
.LN1108:
	.stabn  68,0,6605,.LN1108-Emit_EmitStatement		# line 6605, column 9
	call	Emit_PopFStack
	jmp	.Lab11
.Lab39:
.LN1109:
	.stabn  68,0,6608,.LN1109-Emit_EmitStatement		# line 6608, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab590
.Lab591:
.LN1110:
	.stabn  68,0,6609,.LN1110-Emit_EmitStatement		# line 6609, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab590:
.LN1111:
	.stabn  68,0,6611,.LN1111-Emit_EmitStatement		# line 6611, column 5
	cmpb	$0,IR_s + 133
	je	.Lab592
.Lab593:
.LN1112:
	.stabn  68,0,6612,.LN1112-Emit_EmitStatement		# line 6612, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1113:
	.stabn  68,0,6613,.LN1113-Emit_EmitStatement		# line 6613, column 8
	.data
.Lab594:
 	.ascii	"Rule 42/2171 Cost=\000"
	.text
	pushl	$18
	leal	.Lab594,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1114:
	.stabn  68,0,6614,.LN1114-Emit_EmitStatement		# line 6614, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1115:
	.stabn  68,0,6615,.LN1115-Emit_EmitStatement		# line 6615, column 8
	.data
.Lab595:
 	.ascii	" PlaceLabel\000"
	.text
	pushl	$11
	leal	.Lab595,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1116:
	.stabn  68,0,6616,.LN1116-Emit_EmitStatement		# line 6616, column 8
	call	InOut_WriteLn
.LN1117:
	.stabn  68,0,6617,.LN1117-Emit_EmitStatement		# line 6617, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1118:
	.stabn  68,0,6618,.LN1118-Emit_EmitStatement		# line 6618, column 8
	cmpl	$0,8(%ebp)
	je	.Lab596
.Lab597:
.LN1119:
	.stabn  68,0,6618,.LN1119-Emit_EmitStatement		# line 6618, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab596:
.LN1120:
	.stabn  68,0,6618,.LN1120-Emit_EmitStatement		# line 6618, column 58
	call	InOut_WriteLn
.LN1121:
	.stabn  68,0,6619,.LN1121-Emit_EmitStatement		# line 6619, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1122:
	.stabn  68,0,6620,.LN1122-Emit_EmitStatement		# line 6620, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1123:
	.stabn  68,0,6620,.LN1123-Emit_EmitStatement		# line 6620, column 38
	call	InOut_WriteLn
.Lab592:
.LN1124:
	.stabn  68,0,6623,.LN1124-Emit_EmitStatement		# line 6623, column 22
	movb	$4,Emit_s + 976 
.LN1125:
	.stabn  68,0,6624,.LN1125-Emit_EmitStatement		# line 6624, column 2
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1126:
	.stabn  68,0,6624,.LN1126-Emit_EmitStatement		# line 6624, column 41
	.data
.Lab598:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab598,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1127:
	.stabn  68,0,6624,.LN1127-Emit_EmitStatement		# line 6624, column 59
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab38:
.LN1128:
	.stabn  68,0,6627,.LN1128-Emit_EmitStatement		# line 6627, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab599
.Lab600:
.LN1129:
	.stabn  68,0,6628,.LN1129-Emit_EmitStatement		# line 6628, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab599:
.LN1130:
	.stabn  68,0,6630,.LN1130-Emit_EmitStatement		# line 6630, column 5
	cmpb	$0,IR_s + 133
	je	.Lab601
.Lab602:
.LN1131:
	.stabn  68,0,6631,.LN1131-Emit_EmitStatement		# line 6631, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1132:
	.stabn  68,0,6632,.LN1132-Emit_EmitStatement		# line 6632, column 8
	.data
.Lab603:
 	.ascii	"Rule 43/2178 Cost=\000"
	.text
	pushl	$18
	leal	.Lab603,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1133:
	.stabn  68,0,6633,.LN1133-Emit_EmitStatement		# line 6633, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1134:
	.stabn  68,0,6634,.LN1134-Emit_EmitStatement		# line 6634, column 8
	.data
.Lab604:
 	.ascii	" Goto\000"
	.text
	pushl	$5
	leal	.Lab604,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1135:
	.stabn  68,0,6635,.LN1135-Emit_EmitStatement		# line 6635, column 8
	call	InOut_WriteLn
.LN1136:
	.stabn  68,0,6636,.LN1136-Emit_EmitStatement		# line 6636, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1137:
	.stabn  68,0,6637,.LN1137-Emit_EmitStatement		# line 6637, column 8
	cmpl	$0,8(%ebp)
	je	.Lab605
.Lab606:
.LN1138:
	.stabn  68,0,6637,.LN1138-Emit_EmitStatement		# line 6637, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab605:
.LN1139:
	.stabn  68,0,6637,.LN1139-Emit_EmitStatement		# line 6637, column 58
	call	InOut_WriteLn
.LN1140:
	.stabn  68,0,6638,.LN1140-Emit_EmitStatement		# line 6638, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1141:
	.stabn  68,0,6639,.LN1141-Emit_EmitStatement		# line 6639, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1142:
	.stabn  68,0,6639,.LN1142-Emit_EmitStatement		# line 6639, column 38
	call	InOut_WriteLn
.Lab601:
.LN1143:
	.stabn  68,0,6642,.LN1143-Emit_EmitStatement		# line 6642, column 22
	movb	$4,Emit_s + 976 
.LN1144:
	.stabn  68,0,6643,.LN1144-Emit_EmitStatement		# line 6643, column 2
	.data
.Lab607:
 	.ascii	"\011jmp\011\000"
	.text
	pushl	$5
	leal	.Lab607,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1145:
	.stabn  68,0,6643,.LN1145-Emit_EmitStatement		# line 6643, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1146:
	.stabn  68,0,6643,.LN1146-Emit_EmitStatement		# line 6643, column 63
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab37:
.LN1147:
	.stabn  68,0,6646,.LN1147-Emit_EmitStatement		# line 6646, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1148:
	.stabn  68,0,6647,.LN1148-Emit_EmitStatement		# line 6647, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab608
.Lab609:
.LN1149:
	.stabn  68,0,6648,.LN1149-Emit_EmitStatement		# line 6648, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab608:
.LN1150:
	.stabn  68,0,6650,.LN1150-Emit_EmitStatement		# line 6650, column 5
	cmpb	$0,IR_s + 133
	je	.Lab610
.Lab611:
.LN1151:
	.stabn  68,0,6651,.LN1151-Emit_EmitStatement		# line 6651, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1152:
	.stabn  68,0,6652,.LN1152-Emit_EmitStatement		# line 6652, column 8
	.data
.Lab612:
 	.ascii	"Rule 44/2185 Cost=\000"
	.text
	pushl	$18
	leal	.Lab612,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1153:
	.stabn  68,0,6653,.LN1153-Emit_EmitStatement		# line 6653, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1154:
	.stabn  68,0,6654,.LN1154-Emit_EmitStatement		# line 6654, column 8
	.data
.Lab613:
 	.ascii	" SwitchL\000"
	.text
	pushl	$8
	leal	.Lab613,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1155:
	.stabn  68,0,6655,.LN1155-Emit_EmitStatement		# line 6655, column 8
	call	InOut_WriteLn
.LN1156:
	.stabn  68,0,6656,.LN1156-Emit_EmitStatement		# line 6656, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1157:
	.stabn  68,0,6657,.LN1157-Emit_EmitStatement		# line 6657, column 8
	cmpl	$0,8(%ebp)
	je	.Lab614
.Lab615:
.LN1158:
	.stabn  68,0,6657,.LN1158-Emit_EmitStatement		# line 6657, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab614:
.LN1159:
	.stabn  68,0,6657,.LN1159-Emit_EmitStatement		# line 6657, column 58
	call	InOut_WriteLn
.LN1160:
	.stabn  68,0,6658,.LN1160-Emit_EmitStatement		# line 6658, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1161:
	.stabn  68,0,6659,.LN1161-Emit_EmitStatement		# line 6659, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1162:
	.stabn  68,0,6659,.LN1162-Emit_EmitStatement		# line 6659, column 38
	call	InOut_WriteLn
.Lab610:
.LN1163:
	.stabn  68,0,6662,.LN1163-Emit_EmitStatement		# line 6662, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN1164:
	.stabn  68,0,6663,.LN1164-Emit_EmitStatement		# line 6663, column 2
	.data
.Lab616:
 	.ascii	"\011.data\000"
	.text
	pushl	$6
	leal	.Lab616,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1165:
	.stabn  68,0,6663,.LN1165-Emit_EmitStatement		# line 6663, column 27
	call	CgAssOut_AssLn
.LN1166:
	.stabn  68,0,6664,.LN1166-Emit_EmitStatement		# line 6664, column 2
	.data
.Lab617:
 	.ascii	"\011.align 4\000"
	.text
	pushl	$9
	leal	.Lab617,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1167:
	.stabn  68,0,6664,.LN1167-Emit_EmitStatement		# line 6664, column 30
	call	CgAssOut_AssLn
.LN1168:
	.stabn  68,0,6665,.LN1168-Emit_EmitStatement		# line 6665, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1169:
	.stabn  68,0,6665,.LN1169-Emit_EmitStatement		# line 6665, column 21
	.data
.Lab618:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab618,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1170:
	.stabn  68,0,6665,.LN1170-Emit_EmitStatement		# line 6665, column 39
	call	CgAssOut_AssLn
	jmp	.Lab619
.Lab620:
.LN1171:
	.stabn  68,0,6667,.LN1171-Emit_EmitStatement		# line 6667, column 2
	.data
.Lab622:
 	.ascii	"\011.long\011\000"
	.text
	pushl	$7
	leal	.Lab622,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1172:
	.stabn  68,0,6667,.LN1172-Emit_EmitStatement		# line 6667, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	16(%eax),%eax
	pushl	(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1173:
	.stabn  68,0,6667,.LN1173-Emit_EmitStatement		# line 6667, column 80
	call	CgAssOut_AssLn
.LN1174:
	.stabn  68,0,6668,.LN1174-Emit_EmitStatement		# line 6668, column 39
	movl	8(%ebp),%eax
	movl	(%eax),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	16(%eax),%eax
	movl	4(%eax),%eax
	movl	%eax,16(%ebx) 
.Lab619:
.LN1175:
	.stabn  68,0,6666,.LN1175-Emit_EmitStatement		# line 6666, column 43
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,16(%eax)
	jne	.Lab620
.Lab621:
.LN1176:
	.stabn  68,0,6670,.LN1176-Emit_EmitStatement		# line 6670, column 2
	.data
.Lab623:
 	.ascii	"\011.text\000"
	.text
	pushl	$6
	leal	.Lab623,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1177:
	.stabn  68,0,6670,.LN1177-Emit_EmitStatement		# line 6670, column 27
	call	CgAssOut_AssLn
.LN1178:
	.stabn  68,0,6671,.LN1178-Emit_EmitStatement		# line 6671, column 22
	movb	$4,Emit_s + 976 
.LN1179:
	.stabn  68,0,6672,.LN1179-Emit_EmitStatement		# line 6672, column 2
	.data
.Lab624:
 	.ascii	"\011sub\000"
	.text
	pushl	$4
	leal	.Lab624,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1180:
	.stabn  68,0,6672,.LN1180-Emit_EmitStatement		# line 6672, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1181:
	.stabn  68,0,6672,.LN1181-Emit_EmitStatement		# line 6672, column 61
	.data
.Lab625:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab625,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1182:
	.stabn  68,0,6672,.LN1182-Emit_EmitStatement		# line 6672, column 87
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1183:
	.stabn  68,0,6672,.LN1183-Emit_EmitStatement		# line 6672, column 120
	.data
.Lab626:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab626,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1184:
	.stabn  68,0,6672,.LN1184-Emit_EmitStatement		# line 6672, column 138
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN1185:
	.stabn  68,0,6672,.LN1185-Emit_EmitStatement		# line 6672, column 207
	call	CgAssOut_AssLn
.LN1186:
	.stabn  68,0,6673,.LN1186-Emit_EmitStatement		# line 6673, column 2
	.data
.Lab627:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab627,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1187:
	.stabn  68,0,6673,.LN1187-Emit_EmitStatement		# line 6673, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 64(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1188:
	.stabn  68,0,6673,.LN1188-Emit_EmitStatement		# line 6673, column 96
	.data
.Lab628:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab628,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1189:
	.stabn  68,0,6673,.LN1189-Emit_EmitStatement		# line 6673, column 118
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	20(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1190:
	.stabn  68,0,6673,.LN1190-Emit_EmitStatement		# line 6673, column 163
	call	CgAssOut_AssLn
.LN1191:
	.stabn  68,0,6674,.LN1191-Emit_EmitStatement		# line 6674, column 2
	.data
.Lab629:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab629,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1192:
	.stabn  68,0,6674,.LN1192-Emit_EmitStatement		# line 6674, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1193:
	.stabn  68,0,6674,.LN1193-Emit_EmitStatement		# line 6674, column 61
	.data
.Lab630:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab630,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1194:
	.stabn  68,0,6674,.LN1194-Emit_EmitStatement		# line 6674, column 87
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	12(%eax),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
 	subl	8(%eax),%ebx 
	pushl	%ebx
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1195:
	.stabn  68,0,6674,.LN1195-Emit_EmitStatement		# line 6674, column 143
	.data
.Lab631:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab631,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1196:
	.stabn  68,0,6674,.LN1196-Emit_EmitStatement		# line 6674, column 161
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN1197:
	.stabn  68,0,6674,.LN1197-Emit_EmitStatement		# line 6674, column 230
	call	CgAssOut_AssLn
.LN1198:
	.stabn  68,0,6675,.LN1198-Emit_EmitStatement		# line 6675, column 2
	.data
.Lab632:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab632,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1199:
	.stabn  68,0,6675,.LN1199-Emit_EmitStatement		# line 6675, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 76(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1200:
	.stabn  68,0,6675,.LN1200-Emit_EmitStatement		# line 6675, column 99
	.data
.Lab633:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab633,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1201:
	.stabn  68,0,6675,.LN1201-Emit_EmitStatement		# line 6675, column 118
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	20(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1202:
	.stabn  68,0,6675,.LN1202-Emit_EmitStatement		# line 6675, column 163
	call	CgAssOut_AssLn
.LN1203:
	.stabn  68,0,6676,.LN1203-Emit_EmitStatement		# line 6676, column 2
	.data
.Lab634:
 	.ascii	"\011jmp\011*\000"
	.text
	pushl	$6
	leal	.Lab634,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1204:
	.stabn  68,0,6676,.LN1204-Emit_EmitStatement		# line 6676, column 31
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1205:
	.stabn  68,0,6676,.LN1205-Emit_EmitStatement		# line 6676, column 50
	.data
.Lab635:
 	.ascii	"(,\000"
	.text
	pushl	$2
	leal	.Lab635,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1206:
	.stabn  68,0,6676,.LN1206-Emit_EmitStatement		# line 6676, column 69
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1207:
	.stabn  68,0,6676,.LN1207-Emit_EmitStatement		# line 6676, column 113
	.data
.Lab636:
 	.ascii	",4)\000"
	.text
	pushl	$3
	leal	.Lab636,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1208:
	.stabn  68,0,6676,.LN1208-Emit_EmitStatement		# line 6676, column 133
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab36:
.LN1209:
	.stabn  68,0,6679,.LN1209-Emit_EmitStatement		# line 6679, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1210:
	.stabn  68,0,6680,.LN1210-Emit_EmitStatement		# line 6680, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab637
.Lab638:
.LN1211:
	.stabn  68,0,6681,.LN1211-Emit_EmitStatement		# line 6681, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab637:
.LN1212:
	.stabn  68,0,6683,.LN1212-Emit_EmitStatement		# line 6683, column 5
	cmpb	$0,IR_s + 133
	je	.Lab639
.Lab640:
.LN1213:
	.stabn  68,0,6684,.LN1213-Emit_EmitStatement		# line 6684, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1214:
	.stabn  68,0,6685,.LN1214-Emit_EmitStatement		# line 6685, column 8
	.data
.Lab641:
 	.ascii	"Rule 45/2206 Cost=\000"
	.text
	pushl	$18
	leal	.Lab641,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1215:
	.stabn  68,0,6686,.LN1215-Emit_EmitStatement		# line 6686, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1216:
	.stabn  68,0,6687,.LN1216-Emit_EmitStatement		# line 6687, column 8
	.data
.Lab642:
 	.ascii	" TestAndBranch\000"
	.text
	pushl	$14
	leal	.Lab642,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1217:
	.stabn  68,0,6688,.LN1217-Emit_EmitStatement		# line 6688, column 8
	call	InOut_WriteLn
.LN1218:
	.stabn  68,0,6689,.LN1218-Emit_EmitStatement		# line 6689, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1219:
	.stabn  68,0,6690,.LN1219-Emit_EmitStatement		# line 6690, column 8
	cmpl	$0,8(%ebp)
	je	.Lab643
.Lab644:
.LN1220:
	.stabn  68,0,6690,.LN1220-Emit_EmitStatement		# line 6690, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab643:
.LN1221:
	.stabn  68,0,6690,.LN1221-Emit_EmitStatement		# line 6690, column 58
	call	InOut_WriteLn
.LN1222:
	.stabn  68,0,6691,.LN1222-Emit_EmitStatement		# line 6691, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1223:
	.stabn  68,0,6692,.LN1223-Emit_EmitStatement		# line 6692, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1224:
	.stabn  68,0,6692,.LN1224-Emit_EmitStatement		# line 6692, column 38
	call	InOut_WriteLn
.Lab639:
.LN1225:
	.stabn  68,0,6695,.LN1225-Emit_EmitStatement		# line 6695, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,4(%eax)
	je	.Lab647
.Lab646:
.LN1226:
	.stabn  68,0,6695,.LN1226-Emit_EmitStatement		# line 6695, column 46
	movw	$1,Emit_s + 1008 
	jmp	.Lab645
.Lab647:
.LN1227:
	.stabn  68,0,6695,.LN1227-Emit_EmitStatement		# line 6695, column 56
	movw	$0,Emit_s + 1008 
.Lab645:
.LN1228:
	.stabn  68,0,6696,.LN1228-Emit_EmitStatement		# line 6696, column 22
	movb	$4,Emit_s + 976 
.LN1229:
	.stabn  68,0,6697,.LN1229-Emit_EmitStatement		# line 6697, column 2
	.data
.Lab648:
 	.ascii	"\011cmpb\011$\000"
	.text
	pushl	$7
	leal	.Lab648,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1230:
	.stabn  68,0,6697,.LN1230-Emit_EmitStatement		# line 6697, column 31
	movzwl	Emit_s + 1008,%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1231:
	.stabn  68,0,6697,.LN1231-Emit_EmitStatement		# line 6697, column 45
	.data
.Lab649:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab649,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1232:
	.stabn  68,0,6697,.LN1232-Emit_EmitStatement		# line 6697, column 63
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN1233:
	.stabn  68,0,6697,.LN1233-Emit_EmitStatement		# line 6697, column 113
	call	CgAssOut_AssLn
.LN1234:
	.stabn  68,0,6698,.LN1234-Emit_EmitStatement		# line 6698, column 2
	.data
.Lab650:
 	.ascii	"\011je\011\000"
	.text
	pushl	$4
	leal	.Lab650,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1235:
	.stabn  68,0,6698,.LN1235-Emit_EmitStatement		# line 6698, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1236:
	.stabn  68,0,6698,.LN1236-Emit_EmitStatement		# line 6698, column 72
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab35:
.LN1237:
	.stabn  68,0,6701,.LN1237-Emit_EmitStatement		# line 6701, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN1238:
	.stabn  68,0,6702,.LN1238-Emit_EmitStatement		# line 6702, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab651
.Lab652:
.LN1239:
	.stabn  68,0,6703,.LN1239-Emit_EmitStatement		# line 6703, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab651:
.LN1240:
	.stabn  68,0,6705,.LN1240-Emit_EmitStatement		# line 6705, column 5
	cmpb	$0,IR_s + 133
	je	.Lab653
.Lab654:
.LN1241:
	.stabn  68,0,6706,.LN1241-Emit_EmitStatement		# line 6706, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1242:
	.stabn  68,0,6707,.LN1242-Emit_EmitStatement		# line 6707, column 8
	.data
.Lab655:
 	.ascii	"Rule 46/2215 Cost=\000"
	.text
	pushl	$18
	leal	.Lab655,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1243:
	.stabn  68,0,6708,.LN1243-Emit_EmitStatement		# line 6708, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1244:
	.stabn  68,0,6709,.LN1244-Emit_EmitStatement		# line 6709, column 8
	.data
.Lab656:
 	.ascii	" TestAndBranch\000"
	.text
	pushl	$14
	leal	.Lab656,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1245:
	.stabn  68,0,6710,.LN1245-Emit_EmitStatement		# line 6710, column 8
	call	InOut_WriteLn
.LN1246:
	.stabn  68,0,6711,.LN1246-Emit_EmitStatement		# line 6711, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1247:
	.stabn  68,0,6712,.LN1247-Emit_EmitStatement		# line 6712, column 8
	cmpl	$0,8(%ebp)
	je	.Lab657
.Lab658:
.LN1248:
	.stabn  68,0,6712,.LN1248-Emit_EmitStatement		# line 6712, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab657:
.LN1249:
	.stabn  68,0,6712,.LN1249-Emit_EmitStatement		# line 6712, column 58
	call	InOut_WriteLn
.LN1250:
	.stabn  68,0,6713,.LN1250-Emit_EmitStatement		# line 6713, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1251:
	.stabn  68,0,6714,.LN1251-Emit_EmitStatement		# line 6714, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1252:
	.stabn  68,0,6714,.LN1252-Emit_EmitStatement		# line 6714, column 38
	call	InOut_WriteLn
.Lab653:
.LN1253:
	.stabn  68,0,6717,.LN1253-Emit_EmitStatement		# line 6717, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,4(%eax)
	je	.Lab661
.Lab660:
.LN1254:
	.stabn  68,0,6717,.LN1254-Emit_EmitStatement		# line 6717, column 46
	movw	$1,Emit_s + 1008 
	jmp	.Lab659
.Lab661:
.LN1255:
	.stabn  68,0,6717,.LN1255-Emit_EmitStatement		# line 6717, column 56
	movw	$0,Emit_s + 1008 
.Lab659:
.LN1256:
	.stabn  68,0,6718,.LN1256-Emit_EmitStatement		# line 6718, column 22
	movb	$4,Emit_s + 976 
.LN1257:
	.stabn  68,0,6719,.LN1257-Emit_EmitStatement		# line 6719, column 2
	.data
.Lab662:
 	.ascii	"\011cmpb\011$\000"
	.text
	pushl	$7
	leal	.Lab662,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1258:
	.stabn  68,0,6719,.LN1258-Emit_EmitStatement		# line 6719, column 31
	movzwl	Emit_s + 1008,%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1259:
	.stabn  68,0,6719,.LN1259-Emit_EmitStatement		# line 6719, column 45
	.data
.Lab663:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab663,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1260:
	.stabn  68,0,6719,.LN1260-Emit_EmitStatement		# line 6719, column 63
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1261:
	.stabn  68,0,6719,.LN1261-Emit_EmitStatement		# line 6719, column 89
	call	CgAssOut_AssLn
.LN1262:
	.stabn  68,0,6720,.LN1262-Emit_EmitStatement		# line 6720, column 2
	.data
.Lab664:
 	.ascii	"\011je\011\000"
	.text
	pushl	$4
	leal	.Lab664,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1263:
	.stabn  68,0,6720,.LN1263-Emit_EmitStatement		# line 6720, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1264:
	.stabn  68,0,6720,.LN1264-Emit_EmitStatement		# line 6720, column 72
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab34:
.LN1265:
	.stabn  68,0,6723,.LN1265-Emit_EmitStatement		# line 6723, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1266:
	.stabn  68,0,6724,.LN1266-Emit_EmitStatement		# line 6724, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN1267:
	.stabn  68,0,6725,.LN1267-Emit_EmitStatement		# line 6725, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab665
.Lab666:
.LN1268:
	.stabn  68,0,6726,.LN1268-Emit_EmitStatement		# line 6726, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab665:
.LN1269:
	.stabn  68,0,6728,.LN1269-Emit_EmitStatement		# line 6728, column 5
	cmpb	$0,IR_s + 133
	je	.Lab667
.Lab668:
.LN1270:
	.stabn  68,0,6729,.LN1270-Emit_EmitStatement		# line 6729, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1271:
	.stabn  68,0,6730,.LN1271-Emit_EmitStatement		# line 6730, column 8
	.data
.Lab669:
 	.ascii	"Rule 47/2224 Cost=\000"
	.text
	pushl	$18
	leal	.Lab669,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1272:
	.stabn  68,0,6731,.LN1272-Emit_EmitStatement		# line 6731, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1273:
	.stabn  68,0,6732,.LN1273-Emit_EmitStatement		# line 6732, column 8
	.data
.Lab670:
 	.ascii	" FixedCompareAndBranch\000"
	.text
	pushl	$22
	leal	.Lab670,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1274:
	.stabn  68,0,6733,.LN1274-Emit_EmitStatement		# line 6733, column 8
	call	InOut_WriteLn
.LN1275:
	.stabn  68,0,6734,.LN1275-Emit_EmitStatement		# line 6734, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1276:
	.stabn  68,0,6735,.LN1276-Emit_EmitStatement		# line 6735, column 8
	cmpl	$0,8(%ebp)
	je	.Lab671
.Lab672:
.LN1277:
	.stabn  68,0,6735,.LN1277-Emit_EmitStatement		# line 6735, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab671:
.LN1278:
	.stabn  68,0,6735,.LN1278-Emit_EmitStatement		# line 6735, column 58
	call	InOut_WriteLn
.LN1279:
	.stabn  68,0,6736,.LN1279-Emit_EmitStatement		# line 6736, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1280:
	.stabn  68,0,6737,.LN1280-Emit_EmitStatement		# line 6737, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1281:
	.stabn  68,0,6737,.LN1281-Emit_EmitStatement		# line 6737, column 38
	call	InOut_WriteLn
.Lab667:
.LN1282:
	.stabn  68,0,6740,.LN1282-Emit_EmitStatement		# line 6740, column 22
	movb	$4,Emit_s + 976 
.LN1283:
	.stabn  68,0,6741,.LN1283-Emit_EmitStatement		# line 6741, column 2
	.data
.Lab673:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab673,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1284:
	.stabn  68,0,6741,.LN1284-Emit_EmitStatement		# line 6741, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1285:
	.stabn  68,0,6741,.LN1285-Emit_EmitStatement		# line 6741, column 75
	.data
.Lab674:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab674,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1286:
	.stabn  68,0,6741,.LN1286-Emit_EmitStatement		# line 6741, column 94
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1287:
	.stabn  68,0,6741,.LN1287-Emit_EmitStatement		# line 6741, column 130
	.data
.Lab675:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab675,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1288:
	.stabn  68,0,6741,.LN1288-Emit_EmitStatement		# line 6741, column 148
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN1289:
	.stabn  68,0,6741,.LN1289-Emit_EmitStatement		# line 6741, column 231
	call	CgAssOut_AssLn
.LN1290:
	.stabn  68,0,6742,.LN1290-Emit_EmitStatement		# line 6742, column 2
	.data
.Lab676:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab676,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1291:
	.stabn  68,0,6742,.LN1291-Emit_EmitStatement		# line 6742, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	5(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1292:
	.stabn  68,0,6742,.LN1292-Emit_EmitStatement		# line 6742, column 137
	.data
.Lab677:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab677,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1293:
	.stabn  68,0,6742,.LN1293-Emit_EmitStatement		# line 6742, column 158
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1294:
	.stabn  68,0,6742,.LN1294-Emit_EmitStatement		# line 6742, column 208
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab33:
.LN1295:
	.stabn  68,0,6745,.LN1295-Emit_EmitStatement		# line 6745, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN1296:
	.stabn  68,0,6746,.LN1296-Emit_EmitStatement		# line 6746, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN1297:
	.stabn  68,0,6747,.LN1297-Emit_EmitStatement		# line 6747, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab678
.Lab679:
.LN1298:
	.stabn  68,0,6748,.LN1298-Emit_EmitStatement		# line 6748, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab678:
.LN1299:
	.stabn  68,0,6750,.LN1299-Emit_EmitStatement		# line 6750, column 5
	cmpb	$0,IR_s + 133
	je	.Lab680
.Lab681:
.LN1300:
	.stabn  68,0,6751,.LN1300-Emit_EmitStatement		# line 6751, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1301:
	.stabn  68,0,6752,.LN1301-Emit_EmitStatement		# line 6752, column 8
	.data
.Lab682:
 	.ascii	"Rule 48/2232 Cost=\000"
	.text
	pushl	$18
	leal	.Lab682,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1302:
	.stabn  68,0,6753,.LN1302-Emit_EmitStatement		# line 6753, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1303:
	.stabn  68,0,6754,.LN1303-Emit_EmitStatement		# line 6754, column 8
	.data
.Lab683:
 	.ascii	" FixedCompareAndBranch\000"
	.text
	pushl	$22
	leal	.Lab683,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1304:
	.stabn  68,0,6755,.LN1304-Emit_EmitStatement		# line 6755, column 8
	call	InOut_WriteLn
.LN1305:
	.stabn  68,0,6756,.LN1305-Emit_EmitStatement		# line 6756, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1306:
	.stabn  68,0,6757,.LN1306-Emit_EmitStatement		# line 6757, column 8
	cmpl	$0,8(%ebp)
	je	.Lab684
.Lab685:
.LN1307:
	.stabn  68,0,6757,.LN1307-Emit_EmitStatement		# line 6757, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab684:
.LN1308:
	.stabn  68,0,6757,.LN1308-Emit_EmitStatement		# line 6757, column 58
	call	InOut_WriteLn
.LN1309:
	.stabn  68,0,6758,.LN1309-Emit_EmitStatement		# line 6758, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1310:
	.stabn  68,0,6759,.LN1310-Emit_EmitStatement		# line 6759, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1311:
	.stabn  68,0,6759,.LN1311-Emit_EmitStatement		# line 6759, column 38
	call	InOut_WriteLn
.Lab680:
.LN1312:
	.stabn  68,0,6762,.LN1312-Emit_EmitStatement		# line 6762, column 22
	movb	$4,Emit_s + 976 
.LN1313:
	.stabn  68,0,6763,.LN1313-Emit_EmitStatement		# line 6763, column 2
	.data
.Lab686:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab686,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1314:
	.stabn  68,0,6763,.LN1314-Emit_EmitStatement		# line 6763, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1315:
	.stabn  68,0,6763,.LN1315-Emit_EmitStatement		# line 6763, column 75
	.data
.Lab687:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab687,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1316:
	.stabn  68,0,6763,.LN1316-Emit_EmitStatement		# line 6763, column 94
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1317:
	.stabn  68,0,6763,.LN1317-Emit_EmitStatement		# line 6763, column 124
	.data
.Lab688:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab688,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1318:
	.stabn  68,0,6763,.LN1318-Emit_EmitStatement		# line 6763, column 142
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1319:
	.stabn  68,0,6763,.LN1319-Emit_EmitStatement		# line 6763, column 168
	call	CgAssOut_AssLn
.LN1320:
	.stabn  68,0,6764,.LN1320-Emit_EmitStatement		# line 6764, column 2
	.data
.Lab689:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab689,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1321:
	.stabn  68,0,6764,.LN1321-Emit_EmitStatement		# line 6764, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	5(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1322:
	.stabn  68,0,6764,.LN1322-Emit_EmitStatement		# line 6764, column 137
	.data
.Lab690:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab690,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1323:
	.stabn  68,0,6764,.LN1323-Emit_EmitStatement		# line 6764, column 158
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1324:
	.stabn  68,0,6764,.LN1324-Emit_EmitStatement		# line 6764, column 208
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab32:
.LN1325:
	.stabn  68,0,6767,.LN1325-Emit_EmitStatement		# line 6767, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN1326:
	.stabn  68,0,6768,.LN1326-Emit_EmitStatement		# line 6768, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN1327:
	.stabn  68,0,6769,.LN1327-Emit_EmitStatement		# line 6769, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab691
.Lab692:
.LN1328:
	.stabn  68,0,6770,.LN1328-Emit_EmitStatement		# line 6770, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab691:
.LN1329:
	.stabn  68,0,6772,.LN1329-Emit_EmitStatement		# line 6772, column 5
	cmpb	$0,IR_s + 133
	je	.Lab693
.Lab694:
.LN1330:
	.stabn  68,0,6773,.LN1330-Emit_EmitStatement		# line 6773, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1331:
	.stabn  68,0,6774,.LN1331-Emit_EmitStatement		# line 6774, column 8
	.data
.Lab695:
 	.ascii	"Rule 49/2240 Cost=\000"
	.text
	pushl	$18
	leal	.Lab695,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1332:
	.stabn  68,0,6775,.LN1332-Emit_EmitStatement		# line 6775, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1333:
	.stabn  68,0,6776,.LN1333-Emit_EmitStatement		# line 6776, column 8
	.data
.Lab696:
 	.ascii	" FixedCompareAndBranch\000"
	.text
	pushl	$22
	leal	.Lab696,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1334:
	.stabn  68,0,6777,.LN1334-Emit_EmitStatement		# line 6777, column 8
	call	InOut_WriteLn
.LN1335:
	.stabn  68,0,6778,.LN1335-Emit_EmitStatement		# line 6778, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1336:
	.stabn  68,0,6779,.LN1336-Emit_EmitStatement		# line 6779, column 8
	cmpl	$0,8(%ebp)
	je	.Lab697
.Lab698:
.LN1337:
	.stabn  68,0,6779,.LN1337-Emit_EmitStatement		# line 6779, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab697:
.LN1338:
	.stabn  68,0,6779,.LN1338-Emit_EmitStatement		# line 6779, column 58
	call	InOut_WriteLn
.LN1339:
	.stabn  68,0,6780,.LN1339-Emit_EmitStatement		# line 6780, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1340:
	.stabn  68,0,6781,.LN1340-Emit_EmitStatement		# line 6781, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1341:
	.stabn  68,0,6781,.LN1341-Emit_EmitStatement		# line 6781, column 38
	call	InOut_WriteLn
.Lab693:
.LN1342:
	.stabn  68,0,6784,.LN1342-Emit_EmitStatement		# line 6784, column 22
	movb	$4,Emit_s + 976 
.LN1343:
	.stabn  68,0,6785,.LN1343-Emit_EmitStatement		# line 6785, column 2
	.data
.Lab699:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab699,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1344:
	.stabn  68,0,6785,.LN1344-Emit_EmitStatement		# line 6785, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1345:
	.stabn  68,0,6785,.LN1345-Emit_EmitStatement		# line 6785, column 75
	.data
.Lab700:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab700,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1346:
	.stabn  68,0,6785,.LN1346-Emit_EmitStatement		# line 6785, column 95
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1347:
	.stabn  68,0,6785,.LN1347-Emit_EmitStatement		# line 6785, column 136
	.data
.Lab701:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab701,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1348:
	.stabn  68,0,6785,.LN1348-Emit_EmitStatement		# line 6785, column 154
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1349:
	.stabn  68,0,6785,.LN1349-Emit_EmitStatement		# line 6785, column 186
	call	CgAssOut_AssLn
.LN1350:
	.stabn  68,0,6786,.LN1350-Emit_EmitStatement		# line 6786, column 2
	.data
.Lab702:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab702,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1351:
	.stabn  68,0,6786,.LN1351-Emit_EmitStatement		# line 6786, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	5(%eax),%eax
	movzbl	Emit_s + 88(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1352:
	.stabn  68,0,6786,.LN1352-Emit_EmitStatement		# line 6786, column 146
	.data
.Lab703:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab703,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1353:
	.stabn  68,0,6786,.LN1353-Emit_EmitStatement		# line 6786, column 166
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1354:
	.stabn  68,0,6786,.LN1354-Emit_EmitStatement		# line 6786, column 216
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab31:
.LN1355:
	.stabn  68,0,6789,.LN1355-Emit_EmitStatement		# line 6789, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN1356:
	.stabn  68,0,6790,.LN1356-Emit_EmitStatement		# line 6790, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN1357:
	.stabn  68,0,6791,.LN1357-Emit_EmitStatement		# line 6791, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab704
.Lab705:
.LN1358:
	.stabn  68,0,6792,.LN1358-Emit_EmitStatement		# line 6792, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab704:
.LN1359:
	.stabn  68,0,6794,.LN1359-Emit_EmitStatement		# line 6794, column 5
	cmpb	$0,IR_s + 133
	je	.Lab706
.Lab707:
.LN1360:
	.stabn  68,0,6795,.LN1360-Emit_EmitStatement		# line 6795, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1361:
	.stabn  68,0,6796,.LN1361-Emit_EmitStatement		# line 6796, column 8
	.data
.Lab708:
 	.ascii	"Rule 50/2248 Cost=\000"
	.text
	pushl	$18
	leal	.Lab708,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1362:
	.stabn  68,0,6797,.LN1362-Emit_EmitStatement		# line 6797, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1363:
	.stabn  68,0,6798,.LN1363-Emit_EmitStatement		# line 6798, column 8
	.data
.Lab709:
 	.ascii	" FloatCompareAndBranch\000"
	.text
	pushl	$22
	leal	.Lab709,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1364:
	.stabn  68,0,6799,.LN1364-Emit_EmitStatement		# line 6799, column 8
	call	InOut_WriteLn
.LN1365:
	.stabn  68,0,6800,.LN1365-Emit_EmitStatement		# line 6800, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1366:
	.stabn  68,0,6801,.LN1366-Emit_EmitStatement		# line 6801, column 8
	cmpl	$0,8(%ebp)
	je	.Lab710
.Lab711:
.LN1367:
	.stabn  68,0,6801,.LN1367-Emit_EmitStatement		# line 6801, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab710:
.LN1368:
	.stabn  68,0,6801,.LN1368-Emit_EmitStatement		# line 6801, column 58
	call	InOut_WriteLn
.LN1369:
	.stabn  68,0,6802,.LN1369-Emit_EmitStatement		# line 6802, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1370:
	.stabn  68,0,6803,.LN1370-Emit_EmitStatement		# line 6803, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1371:
	.stabn  68,0,6803,.LN1371-Emit_EmitStatement		# line 6803, column 38
	call	InOut_WriteLn
.Lab706:
.LN1372:
	.stabn  68,0,6806,.LN1372-Emit_EmitStatement		# line 6806, column 22
	movb	$4,Emit_s + 976 
.LN1373:
	.stabn  68,0,6807,.LN1373-Emit_EmitStatement		# line 6807, column 2
	.data
.Lab712:
 	.ascii	"\011fcomp\000"
	.text
	pushl	$6
	leal	.Lab712,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1374:
	.stabn  68,0,6807,.LN1374-Emit_EmitStatement		# line 6807, column 27
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	82(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1375:
	.stabn  68,0,6807,.LN1375-Emit_EmitStatement		# line 6807, column 67
	.data
.Lab713:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab713,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1376:
	.stabn  68,0,6807,.LN1376-Emit_EmitStatement		# line 6807, column 86
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1377:
	.stabn  68,0,6807,.LN1377-Emit_EmitStatement		# line 6807, column 112
	call	CgAssOut_AssLn
.LN1378:
	.stabn  68,0,6808,.LN1378-Emit_EmitStatement		# line 6808, column 2
	.data
.Lab714:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab714,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1379:
	.stabn  68,0,6808,.LN1379-Emit_EmitStatement		# line 6808, column 33
	call	CgAssOut_AssLn
.LN1380:
	.stabn  68,0,6809,.LN1380-Emit_EmitStatement		# line 6809, column 2
	.data
.Lab715:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab715,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1381:
	.stabn  68,0,6809,.LN1381-Emit_EmitStatement		# line 6809, column 26
	call	CgAssOut_AssLn
.LN1382:
	.stabn  68,0,6810,.LN1382-Emit_EmitStatement		# line 6810, column 2
	.data
.Lab716:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab716,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1383:
	.stabn  68,0,6810,.LN1383-Emit_EmitStatement		# line 6810, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	5(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1384:
	.stabn  68,0,6810,.LN1384-Emit_EmitStatement		# line 6810, column 137
	.data
.Lab717:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab717,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1385:
	.stabn  68,0,6810,.LN1385-Emit_EmitStatement		# line 6810, column 158
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1386:
	.stabn  68,0,6810,.LN1386-Emit_EmitStatement		# line 6810, column 208
	call	CgAssOut_AssLn
.LN1387:
	.stabn  68,0,6811,.LN1387-Emit_EmitStatement		# line 6811, column 9
	call	Emit_PopFStack
	jmp	.Lab11
.Lab30:
.LN1388:
	.stabn  68,0,6814,.LN1388-Emit_EmitStatement		# line 6814, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN1389:
	.stabn  68,0,6815,.LN1389-Emit_EmitStatement		# line 6815, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN1390:
	.stabn  68,0,6816,.LN1390-Emit_EmitStatement		# line 6816, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab718
.Lab719:
.LN1391:
	.stabn  68,0,6817,.LN1391-Emit_EmitStatement		# line 6817, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab718:
.LN1392:
	.stabn  68,0,6819,.LN1392-Emit_EmitStatement		# line 6819, column 5
	cmpb	$0,IR_s + 133
	je	.Lab720
.Lab721:
.LN1393:
	.stabn  68,0,6820,.LN1393-Emit_EmitStatement		# line 6820, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1394:
	.stabn  68,0,6821,.LN1394-Emit_EmitStatement		# line 6821, column 8
	.data
.Lab722:
 	.ascii	"Rule 51/2260 Cost=\000"
	.text
	pushl	$18
	leal	.Lab722,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1395:
	.stabn  68,0,6822,.LN1395-Emit_EmitStatement		# line 6822, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1396:
	.stabn  68,0,6823,.LN1396-Emit_EmitStatement		# line 6823, column 8
	.data
.Lab723:
 	.ascii	" FloatCompareAndBranch\000"
	.text
	pushl	$22
	leal	.Lab723,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1397:
	.stabn  68,0,6824,.LN1397-Emit_EmitStatement		# line 6824, column 8
	call	InOut_WriteLn
.LN1398:
	.stabn  68,0,6825,.LN1398-Emit_EmitStatement		# line 6825, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1399:
	.stabn  68,0,6826,.LN1399-Emit_EmitStatement		# line 6826, column 8
	cmpl	$0,8(%ebp)
	je	.Lab724
.Lab725:
.LN1400:
	.stabn  68,0,6826,.LN1400-Emit_EmitStatement		# line 6826, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab724:
.LN1401:
	.stabn  68,0,6826,.LN1401-Emit_EmitStatement		# line 6826, column 58
	call	InOut_WriteLn
.LN1402:
	.stabn  68,0,6827,.LN1402-Emit_EmitStatement		# line 6827, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1403:
	.stabn  68,0,6828,.LN1403-Emit_EmitStatement		# line 6828, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1404:
	.stabn  68,0,6828,.LN1404-Emit_EmitStatement		# line 6828, column 38
	call	InOut_WriteLn
.Lab720:
.LN1405:
	.stabn  68,0,6831,.LN1405-Emit_EmitStatement		# line 6831, column 22
	movb	$4,Emit_s + 976 
.LN1406:
	.stabn  68,0,6832,.LN1406-Emit_EmitStatement		# line 6832, column 2
	.data
.Lab726:
 	.ascii	"\011fcomp\000"
	.text
	pushl	$6
	leal	.Lab726,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1407:
	.stabn  68,0,6832,.LN1407-Emit_EmitStatement		# line 6832, column 27
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	82(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1408:
	.stabn  68,0,6832,.LN1408-Emit_EmitStatement		# line 6832, column 67
	.data
.Lab727:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab727,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1409:
	.stabn  68,0,6832,.LN1409-Emit_EmitStatement		# line 6832, column 86
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1410:
	.stabn  68,0,6832,.LN1410-Emit_EmitStatement		# line 6832, column 112
	call	CgAssOut_AssLn
.LN1411:
	.stabn  68,0,6833,.LN1411-Emit_EmitStatement		# line 6833, column 2
	.data
.Lab728:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab728,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1412:
	.stabn  68,0,6833,.LN1412-Emit_EmitStatement		# line 6833, column 33
	call	CgAssOut_AssLn
.LN1413:
	.stabn  68,0,6834,.LN1413-Emit_EmitStatement		# line 6834, column 2
	.data
.Lab729:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab729,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1414:
	.stabn  68,0,6834,.LN1414-Emit_EmitStatement		# line 6834, column 26
	call	CgAssOut_AssLn
.LN1415:
	.stabn  68,0,6835,.LN1415-Emit_EmitStatement		# line 6835, column 2
	.data
.Lab730:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab730,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1416:
	.stabn  68,0,6835,.LN1416-Emit_EmitStatement		# line 6835, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	5(%eax),%eax
	movzbl	Emit_s + 88(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1417:
	.stabn  68,0,6835,.LN1417-Emit_EmitStatement		# line 6835, column 146
	.data
.Lab731:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab731,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1418:
	.stabn  68,0,6835,.LN1418-Emit_EmitStatement		# line 6835, column 166
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1419:
	.stabn  68,0,6835,.LN1419-Emit_EmitStatement		# line 6835, column 216
	call	CgAssOut_AssLn
.LN1420:
	.stabn  68,0,6836,.LN1420-Emit_EmitStatement		# line 6836, column 9
	call	Emit_PopFStack
	jmp	.Lab11
.Lab29:
.LN1421:
	.stabn  68,0,6839,.LN1421-Emit_EmitStatement		# line 6839, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN1422:
	.stabn  68,0,6840,.LN1422-Emit_EmitStatement		# line 6840, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN1423:
	.stabn  68,0,6841,.LN1423-Emit_EmitStatement		# line 6841, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab732
.Lab733:
.LN1424:
	.stabn  68,0,6842,.LN1424-Emit_EmitStatement		# line 6842, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab732:
.LN1425:
	.stabn  68,0,6844,.LN1425-Emit_EmitStatement		# line 6844, column 5
	cmpb	$0,IR_s + 133
	je	.Lab734
.Lab735:
.LN1426:
	.stabn  68,0,6845,.LN1426-Emit_EmitStatement		# line 6845, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1427:
	.stabn  68,0,6846,.LN1427-Emit_EmitStatement		# line 6846, column 8
	.data
.Lab736:
 	.ascii	"Rule 52/2272 Cost=\000"
	.text
	pushl	$18
	leal	.Lab736,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1428:
	.stabn  68,0,6847,.LN1428-Emit_EmitStatement		# line 6847, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1429:
	.stabn  68,0,6848,.LN1429-Emit_EmitStatement		# line 6848, column 8
	.data
.Lab737:
 	.ascii	" FloatCompareAndBranch\000"
	.text
	pushl	$22
	leal	.Lab737,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1430:
	.stabn  68,0,6849,.LN1430-Emit_EmitStatement		# line 6849, column 8
	call	InOut_WriteLn
.LN1431:
	.stabn  68,0,6850,.LN1431-Emit_EmitStatement		# line 6850, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1432:
	.stabn  68,0,6851,.LN1432-Emit_EmitStatement		# line 6851, column 8
	cmpl	$0,8(%ebp)
	je	.Lab738
.Lab739:
.LN1433:
	.stabn  68,0,6851,.LN1433-Emit_EmitStatement		# line 6851, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab738:
.LN1434:
	.stabn  68,0,6851,.LN1434-Emit_EmitStatement		# line 6851, column 58
	call	InOut_WriteLn
.LN1435:
	.stabn  68,0,6852,.LN1435-Emit_EmitStatement		# line 6852, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1436:
	.stabn  68,0,6853,.LN1436-Emit_EmitStatement		# line 6853, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1437:
	.stabn  68,0,6853,.LN1437-Emit_EmitStatement		# line 6853, column 38
	call	InOut_WriteLn
.Lab734:
.LN1438:
	.stabn  68,0,6856,.LN1438-Emit_EmitStatement		# line 6856, column 22
	movb	$4,Emit_s + 976 
.LN1439:
	.stabn  68,0,6857,.LN1439-Emit_EmitStatement		# line 6857, column 9
	incl	Emit_s + 984 
.LN1440:
	.stabn  68,0,6858,.LN1440-Emit_EmitStatement		# line 6858, column 9
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab743:
	.long	0,63
	.text
	boundl	%eax,.Lab743
	cmpl	$1111111111,Emit_s + 352(,%eax,4)
	je	.Lab742
.Lab741:
.LN1441:
	.stabn  68,0,6859,.LN1441-Emit_EmitStatement		# line 6859, column 2
	.data
.Lab744:
 	.ascii	"\011fcompl\011\000"
	.text
	pushl	$8
	leal	.Lab744,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1442:
	.stabn  68,0,6859,.LN1442-Emit_EmitStatement		# line 6859, column 30
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab745:
	.long	0,63
	.text
	boundl	%eax,.Lab745
	pushl	Emit_s + 352(,%eax,4)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1443:
	.stabn  68,0,6859,.LN1443-Emit_EmitStatement		# line 6859, column 67
	.data
.Lab746:
 	.ascii	"(%ebp)\000"
	.text
	pushl	$6
	leal	.Lab746,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1444:
	.stabn  68,0,6859,.LN1444-Emit_EmitStatement		# line 6859, column 90
	call	CgAssOut_AssLn
.LN1445:
	.stabn  68,0,6860,.LN1445-Emit_EmitStatement		# line 6860, column 11
	decl	Emit_s + 980 
	jmp	.Lab740
.Lab742:
.LN1446:
	.stabn  68,0,6862,.LN1446-Emit_EmitStatement		# line 6862, column 2
	.data
.Lab747:
 	.ascii	"\011fcompp\000"
	.text
	pushl	$7
	leal	.Lab747,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1447:
	.stabn  68,0,6862,.LN1447-Emit_EmitStatement		# line 6862, column 28
	call	CgAssOut_AssLn
.LN1448:
	.stabn  68,0,6863,.LN1448-Emit_EmitStatement		# line 6863, column 11
	subl	$2,Emit_s + 980 
.Lab740:
.LN1449:
	.stabn  68,0,6865,.LN1449-Emit_EmitStatement		# line 6865, column 2
	.data
.Lab748:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab748,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1450:
	.stabn  68,0,6865,.LN1450-Emit_EmitStatement		# line 6865, column 33
	call	CgAssOut_AssLn
.LN1451:
	.stabn  68,0,6866,.LN1451-Emit_EmitStatement		# line 6866, column 2
	.data
.Lab749:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab749,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1452:
	.stabn  68,0,6866,.LN1452-Emit_EmitStatement		# line 6866, column 26
	call	CgAssOut_AssLn
.LN1453:
	.stabn  68,0,6867,.LN1453-Emit_EmitStatement		# line 6867, column 2
	.data
.Lab750:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab750,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1454:
	.stabn  68,0,6867,.LN1454-Emit_EmitStatement		# line 6867, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	5(%eax),%eax
	movzbl	Emit_s + 88(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1455:
	.stabn  68,0,6867,.LN1455-Emit_EmitStatement		# line 6867, column 146
	.data
.Lab751:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab751,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1456:
	.stabn  68,0,6867,.LN1456-Emit_EmitStatement		# line 6867, column 166
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1457:
	.stabn  68,0,6867,.LN1457-Emit_EmitStatement		# line 6867, column 216
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab28:
.LN1458:
	.stabn  68,0,6870,.LN1458-Emit_EmitStatement		# line 6870, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1459:
	.stabn  68,0,6871,.LN1459-Emit_EmitStatement		# line 6871, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN1460:
	.stabn  68,0,6872,.LN1460-Emit_EmitStatement		# line 6872, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab752
.Lab753:
.LN1461:
	.stabn  68,0,6873,.LN1461-Emit_EmitStatement		# line 6873, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab752:
.LN1462:
	.stabn  68,0,6875,.LN1462-Emit_EmitStatement		# line 6875, column 5
	cmpb	$0,IR_s + 133
	je	.Lab754
.Lab755:
.LN1463:
	.stabn  68,0,6876,.LN1463-Emit_EmitStatement		# line 6876, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1464:
	.stabn  68,0,6877,.LN1464-Emit_EmitStatement		# line 6877, column 8
	.data
.Lab756:
 	.ascii	"Rule 53/2290 Cost=\000"
	.text
	pushl	$18
	leal	.Lab756,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1465:
	.stabn  68,0,6878,.LN1465-Emit_EmitStatement		# line 6878, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1466:
	.stabn  68,0,6879,.LN1466-Emit_EmitStatement		# line 6879, column 8
	.data
.Lab757:
 	.ascii	" SetCompareAndBranch\000"
	.text
	pushl	$20
	leal	.Lab757,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1467:
	.stabn  68,0,6880,.LN1467-Emit_EmitStatement		# line 6880, column 8
	call	InOut_WriteLn
.LN1468:
	.stabn  68,0,6881,.LN1468-Emit_EmitStatement		# line 6881, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1469:
	.stabn  68,0,6882,.LN1469-Emit_EmitStatement		# line 6882, column 8
	cmpl	$0,8(%ebp)
	je	.Lab758
.Lab759:
.LN1470:
	.stabn  68,0,6882,.LN1470-Emit_EmitStatement		# line 6882, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab758:
.LN1471:
	.stabn  68,0,6882,.LN1471-Emit_EmitStatement		# line 6882, column 58
	call	InOut_WriteLn
.LN1472:
	.stabn  68,0,6883,.LN1472-Emit_EmitStatement		# line 6883, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1473:
	.stabn  68,0,6884,.LN1473-Emit_EmitStatement		# line 6884, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1474:
	.stabn  68,0,6884,.LN1474-Emit_EmitStatement		# line 6884, column 38
	call	InOut_WriteLn
.Lab754:
.LN1475:
	.stabn  68,0,6887,.LN1475-Emit_EmitStatement		# line 6887, column 22
	movb	$4,Emit_s + 976 
.LN1476:
	.stabn  68,0,6888,.LN1476-Emit_EmitStatement		# line 6888, column 2
	.data
.Lab760:
 	.ascii	"\011cmpl\011\000"
	.text
	pushl	$6
	leal	.Lab760,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1477:
	.stabn  68,0,6888,.LN1477-Emit_EmitStatement		# line 6888, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1478:
	.stabn  68,0,6888,.LN1478-Emit_EmitStatement		# line 6888, column 66
	.data
.Lab761:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab761,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1479:
	.stabn  68,0,6888,.LN1479-Emit_EmitStatement		# line 6888, column 84
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1480:
	.stabn  68,0,6888,.LN1480-Emit_EmitStatement		# line 6888, column 128
	call	CgAssOut_AssLn
.LN1481:
	.stabn  68,0,6889,.LN1481-Emit_EmitStatement		# line 6889, column 2
	.data
.Lab762:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab762,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1482:
	.stabn  68,0,6889,.LN1482-Emit_EmitStatement		# line 6889, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1483:
	.stabn  68,0,6889,.LN1483-Emit_EmitStatement		# line 6889, column 92
	.data
.Lab763:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab763,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1484:
	.stabn  68,0,6889,.LN1484-Emit_EmitStatement		# line 6889, column 110
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1485:
	.stabn  68,0,6889,.LN1485-Emit_EmitStatement		# line 6889, column 158
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab27:
.LN1486:
	.stabn  68,0,6892,.LN1486-Emit_EmitStatement		# line 6892, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1487:
	.stabn  68,0,6893,.LN1487-Emit_EmitStatement		# line 6893, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN1488:
	.stabn  68,0,6894,.LN1488-Emit_EmitStatement		# line 6894, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab764
.Lab765:
.LN1489:
	.stabn  68,0,6895,.LN1489-Emit_EmitStatement		# line 6895, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab764:
.LN1490:
	.stabn  68,0,6897,.LN1490-Emit_EmitStatement		# line 6897, column 5
	cmpb	$0,IR_s + 133
	je	.Lab766
.Lab767:
.LN1491:
	.stabn  68,0,6898,.LN1491-Emit_EmitStatement		# line 6898, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1492:
	.stabn  68,0,6899,.LN1492-Emit_EmitStatement		# line 6899, column 8
	.data
.Lab768:
 	.ascii	"Rule 54/2299 Cost=\000"
	.text
	pushl	$18
	leal	.Lab768,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1493:
	.stabn  68,0,6900,.LN1493-Emit_EmitStatement		# line 6900, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1494:
	.stabn  68,0,6901,.LN1494-Emit_EmitStatement		# line 6901, column 8
	.data
.Lab769:
 	.ascii	" SetCompareAndBranch\000"
	.text
	pushl	$20
	leal	.Lab769,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1495:
	.stabn  68,0,6902,.LN1495-Emit_EmitStatement		# line 6902, column 8
	call	InOut_WriteLn
.LN1496:
	.stabn  68,0,6903,.LN1496-Emit_EmitStatement		# line 6903, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1497:
	.stabn  68,0,6904,.LN1497-Emit_EmitStatement		# line 6904, column 8
	cmpl	$0,8(%ebp)
	je	.Lab770
.Lab771:
.LN1498:
	.stabn  68,0,6904,.LN1498-Emit_EmitStatement		# line 6904, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab770:
.LN1499:
	.stabn  68,0,6904,.LN1499-Emit_EmitStatement		# line 6904, column 58
	call	InOut_WriteLn
.LN1500:
	.stabn  68,0,6905,.LN1500-Emit_EmitStatement		# line 6905, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1501:
	.stabn  68,0,6906,.LN1501-Emit_EmitStatement		# line 6906, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1502:
	.stabn  68,0,6906,.LN1502-Emit_EmitStatement		# line 6906, column 38
	call	InOut_WriteLn
.Lab766:
.LN1503:
	.stabn  68,0,6909,.LN1503-Emit_EmitStatement		# line 6909, column 22
	movb	$4,Emit_s + 976 
.LN1504:
	.stabn  68,0,6910,.LN1504-Emit_EmitStatement		# line 6910, column 2
	.data
.Lab772:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab772,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1505:
	.stabn  68,0,6910,.LN1505-Emit_EmitStatement		# line 6910, column 30
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1506:
	.stabn  68,0,6910,.LN1506-Emit_EmitStatement		# line 6910, column 74
	.data
.Lab773:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab773,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1507:
	.stabn  68,0,6910,.LN1507-Emit_EmitStatement		# line 6910, column 92
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1508:
	.stabn  68,0,6910,.LN1508-Emit_EmitStatement		# line 6910, column 137
	call	CgAssOut_AssLn
.LN1509:
	.stabn  68,0,6911,.LN1509-Emit_EmitStatement		# line 6911, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	.data
	.align 4
.Lab780:
	.long	.Lab779
	.long	.Lab778
	.long	.Lab777
	.long	.Lab776
	.text
	subl	$2,%eax
	jb	.Lab774
	cmpl	$3,%eax
	ja	.Lab774
	jmp	*.Lab780(,%eax,4)
.Lab779:
.LN1510:
	.stabn  68,0,6913,.LN1510-Emit_EmitStatement		# line 6913, column 2
	.data
.Lab781:
 	.ascii	"\011or\011\000"
	.text
	pushl	$4
	leal	.Lab781,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1511:
	.stabn  68,0,6913,.LN1511-Emit_EmitStatement		# line 6913, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1512:
	.stabn  68,0,6913,.LN1512-Emit_EmitStatement		# line 6913, column 66
	.data
.Lab782:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab782,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1513:
	.stabn  68,0,6913,.LN1513-Emit_EmitStatement		# line 6913, column 84
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1514:
	.stabn  68,0,6913,.LN1514-Emit_EmitStatement		# line 6913, column 129
	call	CgAssOut_AssLn
.LN1515:
	.stabn  68,0,6914,.LN1515-Emit_EmitStatement		# line 6914, column 42
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$1,4(%eax) 
	jmp	.Lab775
.Lab778:
.LN1516:
	.stabn  68,0,6916,.LN1516-Emit_EmitStatement		# line 6916, column 2
	.data
.Lab783:
 	.ascii	"\011and\011\000"
	.text
	pushl	$5
	leal	.Lab783,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1517:
	.stabn  68,0,6916,.LN1517-Emit_EmitStatement		# line 6916, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1518:
	.stabn  68,0,6916,.LN1518-Emit_EmitStatement		# line 6916, column 66
	.data
.Lab784:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab784,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1519:
	.stabn  68,0,6916,.LN1519-Emit_EmitStatement		# line 6916, column 84
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1520:
	.stabn  68,0,6916,.LN1520-Emit_EmitStatement		# line 6916, column 129
	call	CgAssOut_AssLn
.LN1521:
	.stabn  68,0,6917,.LN1521-Emit_EmitStatement		# line 6917, column 42
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$0,4(%eax) 
	jmp	.Lab775
.Lab777:
.LN1522:
	.stabn  68,0,6919,.LN1522-Emit_EmitStatement		# line 6919, column 2
	.data
.Lab785:
 	.ascii	"\011and\011\000"
	.text
	pushl	$5
	leal	.Lab785,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1523:
	.stabn  68,0,6919,.LN1523-Emit_EmitStatement		# line 6919, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1524:
	.stabn  68,0,6919,.LN1524-Emit_EmitStatement		# line 6919, column 66
	.data
.Lab786:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab786,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1525:
	.stabn  68,0,6919,.LN1525-Emit_EmitStatement		# line 6919, column 84
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1526:
	.stabn  68,0,6919,.LN1526-Emit_EmitStatement		# line 6919, column 129
	call	CgAssOut_AssLn
.LN1527:
	.stabn  68,0,6920,.LN1527-Emit_EmitStatement		# line 6920, column 42
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$1,4(%eax) 
	jmp	.Lab775
.Lab776:
.LN1528:
	.stabn  68,0,6922,.LN1528-Emit_EmitStatement		# line 6922, column 2
	.data
.Lab787:
 	.ascii	"\011or\011\000"
	.text
	pushl	$4
	leal	.Lab787,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1529:
	.stabn  68,0,6922,.LN1529-Emit_EmitStatement		# line 6922, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1530:
	.stabn  68,0,6922,.LN1530-Emit_EmitStatement		# line 6922, column 66
	.data
.Lab788:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab788,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1531:
	.stabn  68,0,6922,.LN1531-Emit_EmitStatement		# line 6922, column 84
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1532:
	.stabn  68,0,6922,.LN1532-Emit_EmitStatement		# line 6922, column 129
	call	CgAssOut_AssLn
.LN1533:
	.stabn  68,0,6923,.LN1533-Emit_EmitStatement		# line 6923, column 42
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$0,4(%eax) 
	jmp	.Lab775
.Lab774:
	call	CaseErr_
.Lab775:
.LN1534:
	.stabn  68,0,6925,.LN1534-Emit_EmitStatement		# line 6925, column 2
	.data
.Lab789:
 	.ascii	"\011cmpl\011\000"
	.text
	pushl	$6
	leal	.Lab789,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1535:
	.stabn  68,0,6925,.LN1535-Emit_EmitStatement		# line 6925, column 30
	movzbl	RegAlloc_s + 16,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1536:
	.stabn  68,0,6925,.LN1536-Emit_EmitStatement		# line 6925, column 75
	.data
.Lab790:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab790,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1537:
	.stabn  68,0,6925,.LN1537-Emit_EmitStatement		# line 6925, column 93
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1538:
	.stabn  68,0,6925,.LN1538-Emit_EmitStatement		# line 6925, column 137
	call	CgAssOut_AssLn
.LN1539:
	.stabn  68,0,6926,.LN1539-Emit_EmitStatement		# line 6926, column 2
	.data
.Lab791:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab791,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1540:
	.stabn  68,0,6926,.LN1540-Emit_EmitStatement		# line 6926, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1541:
	.stabn  68,0,6926,.LN1541-Emit_EmitStatement		# line 6926, column 92
	.data
.Lab792:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab792,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1542:
	.stabn  68,0,6926,.LN1542-Emit_EmitStatement		# line 6926, column 110
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1543:
	.stabn  68,0,6926,.LN1543-Emit_EmitStatement		# line 6926, column 158
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab26:
.LN1544:
	.stabn  68,0,6929,.LN1544-Emit_EmitStatement		# line 6929, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN1545:
	.stabn  68,0,6930,.LN1545-Emit_EmitStatement		# line 6930, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN1546:
	.stabn  68,0,6931,.LN1546-Emit_EmitStatement		# line 6931, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab793
.Lab794:
.LN1547:
	.stabn  68,0,6932,.LN1547-Emit_EmitStatement		# line 6932, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab793:
.LN1548:
	.stabn  68,0,6934,.LN1548-Emit_EmitStatement		# line 6934, column 5
	cmpb	$0,IR_s + 133
	je	.Lab795
.Lab796:
.LN1549:
	.stabn  68,0,6935,.LN1549-Emit_EmitStatement		# line 6935, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1550:
	.stabn  68,0,6936,.LN1550-Emit_EmitStatement		# line 6936, column 8
	.data
.Lab797:
 	.ascii	"Rule 55/2331 Cost=\000"
	.text
	pushl	$18
	leal	.Lab797,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1551:
	.stabn  68,0,6937,.LN1551-Emit_EmitStatement		# line 6937, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1552:
	.stabn  68,0,6938,.LN1552-Emit_EmitStatement		# line 6938, column 8
	.data
.Lab798:
 	.ascii	" TestMembershipAndBranchL\000"
	.text
	pushl	$25
	leal	.Lab798,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1553:
	.stabn  68,0,6939,.LN1553-Emit_EmitStatement		# line 6939, column 8
	call	InOut_WriteLn
.LN1554:
	.stabn  68,0,6940,.LN1554-Emit_EmitStatement		# line 6940, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1555:
	.stabn  68,0,6941,.LN1555-Emit_EmitStatement		# line 6941, column 8
	cmpl	$0,8(%ebp)
	je	.Lab799
.Lab800:
.LN1556:
	.stabn  68,0,6941,.LN1556-Emit_EmitStatement		# line 6941, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab799:
.LN1557:
	.stabn  68,0,6941,.LN1557-Emit_EmitStatement		# line 6941, column 58
	call	InOut_WriteLn
.LN1558:
	.stabn  68,0,6942,.LN1558-Emit_EmitStatement		# line 6942, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1559:
	.stabn  68,0,6943,.LN1559-Emit_EmitStatement		# line 6943, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1560:
	.stabn  68,0,6943,.LN1560-Emit_EmitStatement		# line 6943, column 38
	call	InOut_WriteLn
.Lab795:
.LN1561:
	.stabn  68,0,6946,.LN1561-Emit_EmitStatement		# line 6946, column 22
	movb	$4,Emit_s + 976 
.LN1562:
	.stabn  68,0,6947,.LN1562-Emit_EmitStatement		# line 6947, column 2
	.data
.Lab801:
 	.ascii	"\011btl\011\000"
	.text
	pushl	$5
	leal	.Lab801,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1563:
	.stabn  68,0,6947,.LN1563-Emit_EmitStatement		# line 6947, column 30
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1564:
	.stabn  68,0,6947,.LN1564-Emit_EmitStatement		# line 6947, column 60
	.data
.Lab802:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab802,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1565:
	.stabn  68,0,6947,.LN1565-Emit_EmitStatement		# line 6947, column 78
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN1566:
	.stabn  68,0,6947,.LN1566-Emit_EmitStatement		# line 6947, column 110
	call	CgAssOut_AssLn
.LN1567:
	.stabn  68,0,6948,.LN1567-Emit_EmitStatement		# line 6948, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,5(%eax)
	je	.Lab805
.Lab804:
.LN1568:
	.stabn  68,0,6949,.LN1568-Emit_EmitStatement		# line 6949, column 2
	.data
.Lab806:
 	.ascii	"\011jc\011\000"
	.text
	pushl	$4
	leal	.Lab806,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1569:
	.stabn  68,0,6949,.LN1569-Emit_EmitStatement		# line 6949, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1570:
	.stabn  68,0,6949,.LN1570-Emit_EmitStatement		# line 6949, column 83
	call	CgAssOut_AssLn
	jmp	.Lab803
.Lab805:
.LN1571:
	.stabn  68,0,6951,.LN1571-Emit_EmitStatement		# line 6951, column 2
	.data
.Lab807:
 	.ascii	"\011jnc\011\000"
	.text
	pushl	$5
	leal	.Lab807,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1572:
	.stabn  68,0,6951,.LN1572-Emit_EmitStatement		# line 6951, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1573:
	.stabn  68,0,6951,.LN1573-Emit_EmitStatement		# line 6951, column 83
	call	CgAssOut_AssLn
.Lab803:
	jmp	.Lab11
.Lab25:
.LN1574:
	.stabn  68,0,6955,.LN1574-Emit_EmitStatement		# line 6955, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1575:
	.stabn  68,0,6956,.LN1575-Emit_EmitStatement		# line 6956, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab808
.Lab809:
.LN1576:
	.stabn  68,0,6957,.LN1576-Emit_EmitStatement		# line 6957, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab808:
.LN1577:
	.stabn  68,0,6959,.LN1577-Emit_EmitStatement		# line 6959, column 5
	cmpb	$0,IR_s + 133
	je	.Lab810
.Lab811:
.LN1578:
	.stabn  68,0,6960,.LN1578-Emit_EmitStatement		# line 6960, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1579:
	.stabn  68,0,6961,.LN1579-Emit_EmitStatement		# line 6961, column 8
	.data
.Lab812:
 	.ascii	"Rule 56/2343 Cost=\000"
	.text
	pushl	$18
	leal	.Lab812,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1580:
	.stabn  68,0,6962,.LN1580-Emit_EmitStatement		# line 6962, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1581:
	.stabn  68,0,6963,.LN1581-Emit_EmitStatement		# line 6963, column 8
	.data
.Lab813:
 	.ascii	" TestOddAndBranch\000"
	.text
	pushl	$17
	leal	.Lab813,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1582:
	.stabn  68,0,6964,.LN1582-Emit_EmitStatement		# line 6964, column 8
	call	InOut_WriteLn
.LN1583:
	.stabn  68,0,6965,.LN1583-Emit_EmitStatement		# line 6965, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1584:
	.stabn  68,0,6966,.LN1584-Emit_EmitStatement		# line 6966, column 8
	cmpl	$0,8(%ebp)
	je	.Lab814
.Lab815:
.LN1585:
	.stabn  68,0,6966,.LN1585-Emit_EmitStatement		# line 6966, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab814:
.LN1586:
	.stabn  68,0,6966,.LN1586-Emit_EmitStatement		# line 6966, column 58
	call	InOut_WriteLn
.LN1587:
	.stabn  68,0,6967,.LN1587-Emit_EmitStatement		# line 6967, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1588:
	.stabn  68,0,6968,.LN1588-Emit_EmitStatement		# line 6968, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1589:
	.stabn  68,0,6968,.LN1589-Emit_EmitStatement		# line 6968, column 38
	call	InOut_WriteLn
.Lab810:
.LN1590:
	.stabn  68,0,6971,.LN1590-Emit_EmitStatement		# line 6971, column 22
	movb	$4,Emit_s + 976 
.LN1591:
	.stabn  68,0,6972,.LN1591-Emit_EmitStatement		# line 6972, column 2
	.data
.Lab816:
 	.ascii	"\011and\000"
	.text
	pushl	$4
	leal	.Lab816,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1592:
	.stabn  68,0,6972,.LN1592-Emit_EmitStatement		# line 6972, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1593:
	.stabn  68,0,6972,.LN1593-Emit_EmitStatement		# line 6972, column 70
	.data
.Lab817:
 	.ascii	"\011$1,\000"
	.text
	pushl	$4
	leal	.Lab817,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1594:
	.stabn  68,0,6972,.LN1594-Emit_EmitStatement		# line 6972, column 97
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN1595:
	.stabn  68,0,6972,.LN1595-Emit_EmitStatement		# line 6972, column 175
	call	CgAssOut_AssLn
.LN1596:
	.stabn  68,0,6973,.LN1596-Emit_EmitStatement		# line 6973, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$1,5(%eax)
	je	.Lab818
.Lab819:
.LN1597:
	.stabn  68,0,6974,.LN1597-Emit_EmitStatement		# line 6974, column 2
	.data
.Lab820:
 	.ascii	"\011xor\000"
	.text
	pushl	$4
	leal	.Lab820,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1598:
	.stabn  68,0,6974,.LN1598-Emit_EmitStatement		# line 6974, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN1599:
	.stabn  68,0,6974,.LN1599-Emit_EmitStatement		# line 6974, column 70
	.data
.Lab821:
 	.ascii	"\011$1,\000"
	.text
	pushl	$4
	leal	.Lab821,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1600:
	.stabn  68,0,6974,.LN1600-Emit_EmitStatement		# line 6974, column 97
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movzbl	RegAlloc_s + 13,%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN1601:
	.stabn  68,0,6974,.LN1601-Emit_EmitStatement		# line 6974, column 175
	call	CgAssOut_AssLn
.Lab818:
.LN1602:
	.stabn  68,0,6976,.LN1602-Emit_EmitStatement		# line 6976, column 2
	.data
.Lab822:
 	.ascii	"\011jnz\011\000"
	.text
	pushl	$5
	leal	.Lab822,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1603:
	.stabn  68,0,6976,.LN1603-Emit_EmitStatement		# line 6976, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1604:
	.stabn  68,0,6976,.LN1604-Emit_EmitStatement		# line 6976, column 75
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab24:
.LN1605:
	.stabn  68,0,6979,.LN1605-Emit_EmitStatement		# line 6979, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN1606:
	.stabn  68,0,6980,.LN1606-Emit_EmitStatement		# line 6980, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1607:
	.stabn  68,0,6981,.LN1607-Emit_EmitStatement		# line 6981, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab823
.Lab824:
.LN1608:
	.stabn  68,0,6982,.LN1608-Emit_EmitStatement		# line 6982, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab823:
.LN1609:
	.stabn  68,0,6984,.LN1609-Emit_EmitStatement		# line 6984, column 5
	cmpb	$0,IR_s + 133
	je	.Lab825
.Lab826:
.LN1610:
	.stabn  68,0,6985,.LN1610-Emit_EmitStatement		# line 6985, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1611:
	.stabn  68,0,6986,.LN1611-Emit_EmitStatement		# line 6986, column 8
	.data
.Lab827:
 	.ascii	"Rule 57/2483 Cost=\000"
	.text
	pushl	$18
	leal	.Lab827,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1612:
	.stabn  68,0,6987,.LN1612-Emit_EmitStatement		# line 6987, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1613:
	.stabn  68,0,6988,.LN1613-Emit_EmitStatement		# line 6988, column 8
	.data
.Lab828:
 	.ascii	" ProcedureCall\000"
	.text
	pushl	$14
	leal	.Lab828,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1614:
	.stabn  68,0,6989,.LN1614-Emit_EmitStatement		# line 6989, column 8
	call	InOut_WriteLn
.LN1615:
	.stabn  68,0,6990,.LN1615-Emit_EmitStatement		# line 6990, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1616:
	.stabn  68,0,6991,.LN1616-Emit_EmitStatement		# line 6991, column 8
	cmpl	$0,8(%ebp)
	je	.Lab829
.Lab830:
.LN1617:
	.stabn  68,0,6991,.LN1617-Emit_EmitStatement		# line 6991, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab829:
.LN1618:
	.stabn  68,0,6991,.LN1618-Emit_EmitStatement		# line 6991, column 58
	call	InOut_WriteLn
.LN1619:
	.stabn  68,0,6992,.LN1619-Emit_EmitStatement		# line 6992, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1620:
	.stabn  68,0,6993,.LN1620-Emit_EmitStatement		# line 6993, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1621:
	.stabn  68,0,6993,.LN1621-Emit_EmitStatement		# line 6993, column 38
	call	InOut_WriteLn
.Lab825:
.LN1622:
	.stabn  68,0,6996,.LN1622-Emit_EmitStatement		# line 6996, column 22
	movb	$4,Emit_s + 976 
.LN1623:
	.stabn  68,0,6997,.LN1623-Emit_EmitStatement		# line 6997, column 2
	.data
.Lab831:
 	.ascii	"\011call\011\000"
	.text
	pushl	$6
	leal	.Lab831,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1624:
	.stabn  68,0,6997,.LN1624-Emit_EmitStatement		# line 6997, column 30
	movzbl	RegAlloc_s + 14,%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN1625:
	.stabn  68,0,6997,.LN1625-Emit_EmitStatement		# line 6997, column 74
	call	CgAssOut_AssLn
.LN1626:
	.stabn  68,0,6998,.LN1626-Emit_EmitStatement		# line 6998, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,4(%eax)
	je	.Lab832
.Lab833:
.LN1627:
	.stabn  68,0,7000,.LN1627-Emit_EmitStatement		# line 7000, column 2
	.data
.Lab834:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab834,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1628:
	.stabn  68,0,7000,.LN1628-Emit_EmitStatement		# line 7000, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1629:
	.stabn  68,0,7000,.LN1629-Emit_EmitStatement		# line 7000, column 76
	.data
.Lab835:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab835,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1630:
	.stabn  68,0,7000,.LN1630-Emit_EmitStatement		# line 7000, column 99
	call	CgAssOut_AssLn
.Lab832:
	jmp	.Lab11
.Lab23:
.LN1631:
	.stabn  68,0,7004,.LN1631-Emit_EmitStatement		# line 7004, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN1632:
	.stabn  68,0,7005,.LN1632-Emit_EmitStatement		# line 7005, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab836
.Lab837:
.LN1633:
	.stabn  68,0,7006,.LN1633-Emit_EmitStatement		# line 7006, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab836:
.LN1634:
	.stabn  68,0,7008,.LN1634-Emit_EmitStatement		# line 7008, column 5
	cmpb	$0,IR_s + 133
	je	.Lab838
.Lab839:
.LN1635:
	.stabn  68,0,7009,.LN1635-Emit_EmitStatement		# line 7009, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1636:
	.stabn  68,0,7010,.LN1636-Emit_EmitStatement		# line 7010, column 8
	.data
.Lab840:
 	.ascii	"Rule 58/2495 Cost=\000"
	.text
	pushl	$18
	leal	.Lab840,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1637:
	.stabn  68,0,7011,.LN1637-Emit_EmitStatement		# line 7011, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1638:
	.stabn  68,0,7012,.LN1638-Emit_EmitStatement		# line 7012, column 8
	.data
.Lab841:
 	.ascii	" ProcedureCall\000"
	.text
	pushl	$14
	leal	.Lab841,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1639:
	.stabn  68,0,7013,.LN1639-Emit_EmitStatement		# line 7013, column 8
	call	InOut_WriteLn
.LN1640:
	.stabn  68,0,7014,.LN1640-Emit_EmitStatement		# line 7014, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1641:
	.stabn  68,0,7015,.LN1641-Emit_EmitStatement		# line 7015, column 8
	cmpl	$0,8(%ebp)
	je	.Lab842
.Lab843:
.LN1642:
	.stabn  68,0,7015,.LN1642-Emit_EmitStatement		# line 7015, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab842:
.LN1643:
	.stabn  68,0,7015,.LN1643-Emit_EmitStatement		# line 7015, column 58
	call	InOut_WriteLn
.LN1644:
	.stabn  68,0,7016,.LN1644-Emit_EmitStatement		# line 7016, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1645:
	.stabn  68,0,7017,.LN1645-Emit_EmitStatement		# line 7017, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1646:
	.stabn  68,0,7017,.LN1646-Emit_EmitStatement		# line 7017, column 38
	call	InOut_WriteLn
.Lab838:
.LN1647:
	.stabn  68,0,7020,.LN1647-Emit_EmitStatement		# line 7020, column 22
	movb	$4,Emit_s + 976 
.LN1648:
	.stabn  68,0,7021,.LN1648-Emit_EmitStatement		# line 7021, column 2
	.data
.Lab844:
 	.ascii	"\011call\011\000"
	.text
	pushl	$6
	leal	.Lab844,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1649:
	.stabn  68,0,7021,.LN1649-Emit_EmitStatement		# line 7021, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1650:
	.stabn  68,0,7021,.LN1650-Emit_EmitStatement		# line 7021, column 93
	call	CgAssOut_AssLn
.LN1651:
	.stabn  68,0,7022,.LN1651-Emit_EmitStatement		# line 7022, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,4(%eax)
	je	.Lab845
.Lab846:
.LN1652:
	.stabn  68,0,7024,.LN1652-Emit_EmitStatement		# line 7024, column 2
	.data
.Lab847:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab847,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1653:
	.stabn  68,0,7024,.LN1653-Emit_EmitStatement		# line 7024, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1654:
	.stabn  68,0,7024,.LN1654-Emit_EmitStatement		# line 7024, column 76
	.data
.Lab848:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab848,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1655:
	.stabn  68,0,7024,.LN1655-Emit_EmitStatement		# line 7024, column 99
	call	CgAssOut_AssLn
.Lab845:
	jmp	.Lab11
.Lab22:
.LN1656:
	.stabn  68,0,7028,.LN1656-Emit_EmitStatement		# line 7028, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN1657:
	.stabn  68,0,7029,.LN1657-Emit_EmitStatement		# line 7029, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab849
.Lab850:
.LN1658:
	.stabn  68,0,7030,.LN1658-Emit_EmitStatement		# line 7030, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab849:
.LN1659:
	.stabn  68,0,7032,.LN1659-Emit_EmitStatement		# line 7032, column 5
	cmpb	$0,IR_s + 133
	je	.Lab851
.Lab852:
.LN1660:
	.stabn  68,0,7033,.LN1660-Emit_EmitStatement		# line 7033, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1661:
	.stabn  68,0,7034,.LN1661-Emit_EmitStatement		# line 7034, column 8
	.data
.Lab853:
 	.ascii	"Rule 59/2567 Cost=\000"
	.text
	pushl	$18
	leal	.Lab853,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1662:
	.stabn  68,0,7035,.LN1662-Emit_EmitStatement		# line 7035, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1663:
	.stabn  68,0,7036,.LN1663-Emit_EmitStatement		# line 7036, column 8
	.data
.Lab854:
 	.ascii	" RTSCall\000"
	.text
	pushl	$8
	leal	.Lab854,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1664:
	.stabn  68,0,7037,.LN1664-Emit_EmitStatement		# line 7037, column 8
	call	InOut_WriteLn
.LN1665:
	.stabn  68,0,7038,.LN1665-Emit_EmitStatement		# line 7038, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1666:
	.stabn  68,0,7039,.LN1666-Emit_EmitStatement		# line 7039, column 8
	cmpl	$0,8(%ebp)
	je	.Lab855
.Lab856:
.LN1667:
	.stabn  68,0,7039,.LN1667-Emit_EmitStatement		# line 7039, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab855:
.LN1668:
	.stabn  68,0,7039,.LN1668-Emit_EmitStatement		# line 7039, column 58
	call	InOut_WriteLn
.LN1669:
	.stabn  68,0,7040,.LN1669-Emit_EmitStatement		# line 7040, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1670:
	.stabn  68,0,7041,.LN1670-Emit_EmitStatement		# line 7041, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1671:
	.stabn  68,0,7041,.LN1671-Emit_EmitStatement		# line 7041, column 38
	call	InOut_WriteLn
.Lab851:
.LN1672:
	.stabn  68,0,7044,.LN1672-Emit_EmitStatement		# line 7044, column 22
	movb	$4,Emit_s + 976 
.LN1673:
	.stabn  68,0,7045,.LN1673-Emit_EmitStatement		# line 7045, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	8(%eax),%eax
	.data
	.align 4
.Lab864:
	.long	.Lab863
	.long	.Lab861
	.long	.Lab862
	.long	.Lab860
	.long	.Lab859
	.text
	subl	$0,%eax
	jb	.Lab857
	cmpl	$4,%eax
	ja	.Lab857
	jmp	*.Lab864(,%eax,4)
.Lab863:
.LN1674:
	.stabn  68,0,7047,.LN1674-Emit_EmitStatement		# line 7047, column 2
	.data
.Lab865:
 	.ascii	"\011call\011exit_\000"
	.text
	pushl	$11
	leal	.Lab865,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1675:
	.stabn  68,0,7047,.LN1675-Emit_EmitStatement		# line 7047, column 35
	call	CgAssOut_AssLn
	jmp	.Lab858
.Lab862:
.LN1676:
	.stabn  68,0,7049,.LN1676-Emit_EmitStatement		# line 7049, column 2
	.data
.Lab866:
 	.ascii	"\011call\011Transfer_\000"
	.text
	pushl	$15
	leal	.Lab866,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1677:
	.stabn  68,0,7049,.LN1677-Emit_EmitStatement		# line 7049, column 39
	call	CgAssOut_AssLn
	jmp	.Lab858
.Lab861:
.LN1678:
	.stabn  68,0,7051,.LN1678-Emit_EmitStatement		# line 7051, column 2
	.data
.Lab867:
 	.ascii	"\011call\011NewProcess_\000"
	.text
	pushl	$17
	leal	.Lab867,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1679:
	.stabn  68,0,7051,.LN1679-Emit_EmitStatement		# line 7051, column 41
	call	CgAssOut_AssLn
	jmp	.Lab858
.Lab860:
.LN1680:
	.stabn  68,0,7053,.LN1680-Emit_EmitStatement		# line 7053, column 2
	.data
.Lab868:
 	.ascii	"\011call\011CaseErr_\000"
	.text
	pushl	$14
	leal	.Lab868,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1681:
	.stabn  68,0,7053,.LN1681-Emit_EmitStatement		# line 7053, column 38
	call	CgAssOut_AssLn
	jmp	.Lab858
.Lab859:
.LN1682:
	.stabn  68,0,7055,.LN1682-Emit_EmitStatement		# line 7055, column 2
	.data
.Lab869:
 	.ascii	"\011call\011ReturnErr_\000"
	.text
	pushl	$16
	leal	.Lab869,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1683:
	.stabn  68,0,7055,.LN1683-Emit_EmitStatement		# line 7055, column 40
	call	CgAssOut_AssLn
	jmp	.Lab858
.Lab857:
	call	CaseErr_
.Lab858:
.LN1684:
	.stabn  68,0,7057,.LN1684-Emit_EmitStatement		# line 7057, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,4(%eax)
	je	.Lab870
.Lab871:
.LN1685:
	.stabn  68,0,7059,.LN1685-Emit_EmitStatement		# line 7059, column 2
	.data
.Lab872:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab872,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1686:
	.stabn  68,0,7059,.LN1686-Emit_EmitStatement		# line 7059, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1687:
	.stabn  68,0,7059,.LN1687-Emit_EmitStatement		# line 7059, column 70
	.data
.Lab873:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab873,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1688:
	.stabn  68,0,7059,.LN1688-Emit_EmitStatement		# line 7059, column 93
	call	CgAssOut_AssLn
.Lab870:
	jmp	.Lab11
.Lab21:
.LN1689:
	.stabn  68,0,7063,.LN1689-Emit_EmitStatement		# line 7063, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN1690:
	.stabn  68,0,7064,.LN1690-Emit_EmitStatement		# line 7064, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN1691:
	.stabn  68,0,7065,.LN1691-Emit_EmitStatement		# line 7065, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab874
.Lab875:
.LN1692:
	.stabn  68,0,7066,.LN1692-Emit_EmitStatement		# line 7066, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab874:
.LN1693:
	.stabn  68,0,7068,.LN1693-Emit_EmitStatement		# line 7068, column 5
	cmpb	$0,IR_s + 133
	je	.Lab876
.Lab877:
.LN1694:
	.stabn  68,0,7069,.LN1694-Emit_EmitStatement		# line 7069, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1695:
	.stabn  68,0,7070,.LN1695-Emit_EmitStatement		# line 7070, column 8
	.data
.Lab878:
 	.ascii	"Rule 60/2791 Cost=\000"
	.text
	pushl	$18
	leal	.Lab878,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1696:
	.stabn  68,0,7071,.LN1696-Emit_EmitStatement		# line 7071, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1697:
	.stabn  68,0,7072,.LN1697-Emit_EmitStatement		# line 7072, column 8
	.data
.Lab879:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab879,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1698:
	.stabn  68,0,7073,.LN1698-Emit_EmitStatement		# line 7073, column 8
	call	InOut_WriteLn
.LN1699:
	.stabn  68,0,7074,.LN1699-Emit_EmitStatement		# line 7074, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1700:
	.stabn  68,0,7075,.LN1700-Emit_EmitStatement		# line 7075, column 8
	cmpl	$0,8(%ebp)
	je	.Lab880
.Lab881:
.LN1701:
	.stabn  68,0,7075,.LN1701-Emit_EmitStatement		# line 7075, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab880:
.LN1702:
	.stabn  68,0,7075,.LN1702-Emit_EmitStatement		# line 7075, column 58
	call	InOut_WriteLn
.LN1703:
	.stabn  68,0,7076,.LN1703-Emit_EmitStatement		# line 7076, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1704:
	.stabn  68,0,7077,.LN1704-Emit_EmitStatement		# line 7077, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1705:
	.stabn  68,0,7077,.LN1705-Emit_EmitStatement		# line 7077, column 38
	call	InOut_WriteLn
.Lab876:
.LN1706:
	.stabn  68,0,7080,.LN1706-Emit_EmitStatement		# line 7080, column 9
	pushl	$3
	call	Emit_CheckRoundMode
	addl	$4, %esp
.LN1707:
	.stabn  68,0,7081,.LN1707-Emit_EmitStatement		# line 7081, column 2
	.data
.Lab882:
 	.ascii	"\011fistpl\011\000"
	.text
	pushl	$8
	leal	.Lab882,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1708:
	.stabn  68,0,7081,.LN1708-Emit_EmitStatement		# line 7081, column 30
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1709:
	.stabn  68,0,7081,.LN1709-Emit_EmitStatement		# line 7081, column 55
	call	CgAssOut_AssLn
.LN1710:
	.stabn  68,0,7082,.LN1710-Emit_EmitStatement		# line 7082, column 9
	call	Emit_PopFStack
	jmp	.Lab11
.Lab20:
.LN1711:
	.stabn  68,0,7085,.LN1711-Emit_EmitStatement		# line 7085, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN1712:
	.stabn  68,0,7086,.LN1712-Emit_EmitStatement		# line 7086, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN1713:
	.stabn  68,0,7087,.LN1713-Emit_EmitStatement		# line 7087, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab883
.Lab884:
.LN1714:
	.stabn  68,0,7088,.LN1714-Emit_EmitStatement		# line 7088, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab883:
.LN1715:
	.stabn  68,0,7090,.LN1715-Emit_EmitStatement		# line 7090, column 5
	cmpb	$0,IR_s + 133
	je	.Lab885
.Lab886:
.LN1716:
	.stabn  68,0,7091,.LN1716-Emit_EmitStatement		# line 7091, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1717:
	.stabn  68,0,7092,.LN1717-Emit_EmitStatement		# line 7092, column 8
	.data
.Lab887:
 	.ascii	"Rule 61/2831 Cost=\000"
	.text
	pushl	$18
	leal	.Lab887,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1718:
	.stabn  68,0,7093,.LN1718-Emit_EmitStatement		# line 7093, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1719:
	.stabn  68,0,7094,.LN1719-Emit_EmitStatement		# line 7094, column 8
	.data
.Lab888:
 	.ascii	" Assign\000"
	.text
	pushl	$7
	leal	.Lab888,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1720:
	.stabn  68,0,7095,.LN1720-Emit_EmitStatement		# line 7095, column 8
	call	InOut_WriteLn
.LN1721:
	.stabn  68,0,7096,.LN1721-Emit_EmitStatement		# line 7096, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1722:
	.stabn  68,0,7097,.LN1722-Emit_EmitStatement		# line 7097, column 8
	cmpl	$0,8(%ebp)
	je	.Lab889
.Lab890:
.LN1723:
	.stabn  68,0,7097,.LN1723-Emit_EmitStatement		# line 7097, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab889:
.LN1724:
	.stabn  68,0,7097,.LN1724-Emit_EmitStatement		# line 7097, column 58
	call	InOut_WriteLn
.LN1725:
	.stabn  68,0,7098,.LN1725-Emit_EmitStatement		# line 7098, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1726:
	.stabn  68,0,7099,.LN1726-Emit_EmitStatement		# line 7099, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1727:
	.stabn  68,0,7099,.LN1727-Emit_EmitStatement		# line 7099, column 38
	call	InOut_WriteLn
.Lab885:
.LN1728:
	.stabn  68,0,7102,.LN1728-Emit_EmitStatement		# line 7102, column 9
	pushl	$1
	call	Emit_CheckRoundMode
	addl	$4, %esp
.LN1729:
	.stabn  68,0,7103,.LN1729-Emit_EmitStatement		# line 7103, column 2
	.data
.Lab891:
 	.ascii	"\011fistpl\011\000"
	.text
	pushl	$8
	leal	.Lab891,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1730:
	.stabn  68,0,7103,.LN1730-Emit_EmitStatement		# line 7103, column 30
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN1731:
	.stabn  68,0,7103,.LN1731-Emit_EmitStatement		# line 7103, column 55
	call	CgAssOut_AssLn
.LN1732:
	.stabn  68,0,7104,.LN1732-Emit_EmitStatement		# line 7104, column 9
	call	Emit_PopFStack
	jmp	.Lab11
.Lab19:
.LN1733:
	.stabn  68,0,7107,.LN1733-Emit_EmitStatement		# line 7107, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab892
.Lab893:
.LN1734:
	.stabn  68,0,7108,.LN1734-Emit_EmitStatement		# line 7108, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab892:
.LN1735:
	.stabn  68,0,7110,.LN1735-Emit_EmitStatement		# line 7110, column 5
	cmpb	$0,IR_s + 133
	je	.Lab894
.Lab895:
.LN1736:
	.stabn  68,0,7111,.LN1736-Emit_EmitStatement		# line 7111, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1737:
	.stabn  68,0,7112,.LN1737-Emit_EmitStatement		# line 7112, column 8
	.data
.Lab896:
 	.ascii	"Rule 62/2848 Cost=\000"
	.text
	pushl	$18
	leal	.Lab896,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1738:
	.stabn  68,0,7113,.LN1738-Emit_EmitStatement		# line 7113, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1739:
	.stabn  68,0,7114,.LN1739-Emit_EmitStatement		# line 7114, column 8
	.data
.Lab897:
 	.ascii	" BeginProcedure\000"
	.text
	pushl	$15
	leal	.Lab897,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1740:
	.stabn  68,0,7115,.LN1740-Emit_EmitStatement		# line 7115, column 8
	call	InOut_WriteLn
.LN1741:
	.stabn  68,0,7116,.LN1741-Emit_EmitStatement		# line 7116, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1742:
	.stabn  68,0,7117,.LN1742-Emit_EmitStatement		# line 7117, column 8
	cmpl	$0,8(%ebp)
	je	.Lab898
.Lab899:
.LN1743:
	.stabn  68,0,7117,.LN1743-Emit_EmitStatement		# line 7117, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab898:
.LN1744:
	.stabn  68,0,7117,.LN1744-Emit_EmitStatement		# line 7117, column 58
	call	InOut_WriteLn
.LN1745:
	.stabn  68,0,7118,.LN1745-Emit_EmitStatement		# line 7118, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1746:
	.stabn  68,0,7119,.LN1746-Emit_EmitStatement		# line 7119, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1747:
	.stabn  68,0,7119,.LN1747-Emit_EmitStatement		# line 7119, column 38
	call	InOut_WriteLn
.Lab894:
.LN1748:
	.stabn  68,0,7122,.LN1748-Emit_EmitStatement		# line 7122, column 17
	movl	IR_s + 60,%eax
	movl	%eax,CgMobil_s + 8 
.LN1749:
	.stabn  68,0,7123,.LN1749-Emit_EmitStatement		# line 7123, column 13
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movw	8(%eax),%ax
	movw	%ax,Emit_s + 48 
.LN1750:
	.stabn  68,0,7124,.LN1750-Emit_EmitStatement		# line 7124, column 17
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	12(%eax),%eax
	.data
	.align 4
.Lab900:
	.long	-2147483647,2147483647
	.text
	boundl	%eax,.Lab900
	cmpl	$0,%eax
	jg	.Lab901
	negl	%eax
.Lab901:
 	addl	$3,%eax 
	sarl	$2, %eax 
	addl	%eax, %eax
	addl	%eax, %eax
	movl	%eax,Emit_s + 972 
.LN1751:
	.stabn  68,0,7125,.LN1751-Emit_EmitStatement		# line 7125, column 17
	movb	$4,Emit_s + 976 
.LN1752:
	.stabn  68,0,7126,.LN1752-Emit_EmitStatement		# line 7126, column 4
	cmpw	$15,Emit_s + 48
	jbe	.Lab902
.Lab903:
.LN1753:
	.stabn  68,0,7127,.LN1753-Emit_EmitStatement		# line 7127, column 7
	.data
.Lab904:
 	.ascii	"too many nested procedures\000"
	.text
	pushl	Emit_s + 44
	pushl	$26
	leal	.Lab904,%eax
	pushl	%eax
	call	SuErrors_ERROR
	addl	$12, %esp
.LN1754:
	.stabn  68,0,7128,.LN1754-Emit_EmitStatement		# line 7128, column 16
	movw	$0,Emit_s + 48 
.Lab902:
.LN1755:
	.stabn  68,0,7130,.LN1755-Emit_EmitStatement		# line 7130, column 18
	movl	$0,Emit_s + 980 
.LN1756:
	.stabn  68,0,7131,.LN1756-Emit_EmitStatement		# line 7131, column 16
	movl	$64,Emit_s + 984 
.LN1757:
	.stabn  68,0,7132,.LN1757-Emit_EmitStatement		# line 7132, column 18
	movl	$1111111111,Emit_s + 608 
.LN1758:
	.stabn  68,0,7174,.LN1758-Emit_EmitStatement		# line 7174, column 9
	leal	Emit_s + 988,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN1759:
	.stabn  68,0,7176,.LN1759-Emit_EmitStatement		# line 7176, column 2
	.data
.Lab905:
 	.ascii	"\011.align 4\000"
	.text
	pushl	$9
	leal	.Lab905,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1760:
	.stabn  68,0,7176,.LN1760-Emit_EmitStatement		# line 7176, column 30
	call	CgAssOut_AssLn
.LN1761:
	.stabn  68,0,7177,.LN1761-Emit_EmitStatement		# line 7177, column 2
	pushl	$255
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1762:
	.stabn  68,0,7177,.LN1762-Emit_EmitStatement		# line 7177, column 54
	.data
.Lab906:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab906,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1763:
	.stabn  68,0,7177,.LN1763-Emit_EmitStatement		# line 7177, column 72
	call	CgAssOut_AssLn
.LN1764:
	.stabn  68,0,7179,.LN1764-Emit_EmitStatement		# line 7179, column 2
	.data
.Lab907:
 	.ascii	"\011pushl\011%ebp\000"
	.text
	pushl	$11
	leal	.Lab907,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1765:
	.stabn  68,0,7179,.LN1765-Emit_EmitStatement		# line 7179, column 34
	call	CgAssOut_AssLn
.LN1766:
	.stabn  68,0,7181,.LN1766-Emit_EmitStatement		# line 7181, column 2
	.data
.Lab908:
 	.ascii	"\011movl\011%esp,%ebp\000"
	.text
	pushl	$15
	leal	.Lab908,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1767:
	.stabn  68,0,7181,.LN1767-Emit_EmitStatement		# line 7181, column 39
	call	CgAssOut_AssLn
.LN1768:
	.stabn  68,0,7184,.LN1768-Emit_EmitStatement		# line 7184, column 2
	.data
.Lab909:
 	.ascii	"\011subl\011$\000"
	.text
	pushl	$7
	leal	.Lab909,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1769:
	.stabn  68,0,7184,.LN1769-Emit_EmitStatement		# line 7184, column 31
	pushl	$255
	pushl	Emit_s + 988
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1770:
	.stabn  68,0,7184,.LN1770-Emit_EmitStatement		# line 7184, column 56
	.data
.Lab910:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab910,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1771:
	.stabn  68,0,7184,.LN1771-Emit_EmitStatement		# line 7184, column 79
	call	CgAssOut_AssLn
.LN1772:
	.stabn  68,0,7185,.LN1772-Emit_EmitStatement		# line 7185, column 6
	movzwl	Emit_s + 48,%eax
	cmpl	$15,%eax
	jbe	.Lab913
.Lab914:
   	call	BoundErr_		
.Lab913:
	cmpb	$0,Emit_s + 334(%eax)
	je	.Lab911
.Lab912:
.LN1773:
	.stabn  68,0,7188,.LN1773-Emit_EmitStatement		# line 7188, column 2
	.data
.Lab915:
 	.ascii	"\011movl\011DISPLAY_+\000"
	.text
	pushl	$15
	leal	.Lab915,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1774:
	.stabn  68,0,7188,.LN1774-Emit_EmitStatement		# line 7188, column 39
	movw	Emit_s + 48,%ax
	addw	%ax, %ax
	addw	%ax, %ax
	movzwl	%ax,%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1775:
	.stabn  68,0,7188,.LN1775-Emit_EmitStatement		# line 7188, column 64
	.data
.Lab916:
 	.ascii	",%ecx\000"
	.text
	pushl	$5
	leal	.Lab916,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1776:
	.stabn  68,0,7188,.LN1776-Emit_EmitStatement		# line 7188, column 86
	call	CgAssOut_AssLn
.LN1777:
	.stabn  68,0,7190,.LN1777-Emit_EmitStatement		# line 7190, column 2
	.data
.Lab917:
 	.ascii	"\011movl\011%ecx,-4(%ebp)\000"
	.text
	pushl	$19
	leal	.Lab917,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1778:
	.stabn  68,0,7190,.LN1778-Emit_EmitStatement		# line 7190, column 43
	call	CgAssOut_AssLn
.LN1779:
	.stabn  68,0,7192,.LN1779-Emit_EmitStatement		# line 7192, column 2
	.data
.Lab918:
 	.ascii	"\011movl\011%ebp,DISPLAY_+\000"
	.text
	pushl	$20
	leal	.Lab918,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1780:
	.stabn  68,0,7192,.LN1780-Emit_EmitStatement		# line 7192, column 44
	movw	Emit_s + 48,%ax
	addw	%ax, %ax
	addw	%ax, %ax
	movzwl	%ax,%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1781:
	.stabn  68,0,7192,.LN1781-Emit_EmitStatement		# line 7192, column 69
	call	CgAssOut_AssLn
.Lab911:
.LN1782:
	.stabn  68,0,7210,.LN1782-Emit_EmitStatement		# line 7210, column 6
	pushl	Emit_s + 628
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab919
.Lab920:
.LN1783:
	.stabn  68,0,7211,.LN1783-Emit_EmitStatement		# line 7211, column 2
	.data
.Lab921:
 	.ascii	"\011pushl %edi\000"
	.text
	pushl	$11
	leal	.Lab921,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1784:
	.stabn  68,0,7211,.LN1784-Emit_EmitStatement		# line 7211, column 32
	call	CgAssOut_AssLn
.LN1785:
	.stabn  68,0,7212,.LN1785-Emit_EmitStatement		# line 7212, column 2
	.data
.Lab922:
 	.ascii	"\011pushl %esi\000"
	.text
	pushl	$11
	leal	.Lab922,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1786:
	.stabn  68,0,7212,.LN1786-Emit_EmitStatement		# line 7212, column 32
	call	CgAssOut_AssLn
.LN1787:
	.stabn  68,0,7213,.LN1787-Emit_EmitStatement		# line 7213, column 2
	.data
.Lab923:
 	.ascii	"\011pushl %ebx\000"
	.text
	pushl	$11
	leal	.Lab923,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1788:
	.stabn  68,0,7213,.LN1788-Emit_EmitStatement		# line 7213, column 32
	call	CgAssOut_AssLn
.Lab919:
.LN1789:
	.stabn  68,0,7216,.LN1789-Emit_EmitStatement		# line 7216, column 6
	jmp	.Lab924
.Lab925:
.LN1790:
	.stabn  68,0,7217,.LN1790-Emit_EmitStatement		# line 7217, column 2
	.data
.Lab926:
 	.ascii	"\011/* --------------------------------------------------------- */\000"
	.text
	pushl	$64
	leal	.Lab926,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1791:
	.stabn  68,0,7217,.LN1791-Emit_EmitStatement		# line 7217, column 85
	call	CgAssOut_AssLn
.LN1792:
	.stabn  68,0,7218,.LN1792-Emit_EmitStatement		# line 7218, column 2
	.data
.Lab927:
 	.ascii	"\011/* Level : \000"
	.text
	pushl	$12
	leal	.Lab927,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1793:
	.stabn  68,0,7218,.LN1793-Emit_EmitStatement		# line 7218, column 33
	movzwl	Emit_s + 48,%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1794:
	.stabn  68,0,7218,.LN1794-Emit_EmitStatement		# line 7218, column 54
	.data
.Lab928:
 	.ascii	" */\000"
	.text
	pushl	$3
	leal	.Lab928,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1795:
	.stabn  68,0,7218,.LN1795-Emit_EmitStatement		# line 7218, column 74
	call	CgAssOut_AssLn
.LN1796:
	.stabn  68,0,7219,.LN1796-Emit_EmitStatement		# line 7219, column 2
	.data
.Lab929:
 	.ascii	"\011/* --------------------------------------------------------- */\000"
	.text
	pushl	$64
	leal	.Lab929,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1797:
	.stabn  68,0,7219,.LN1797-Emit_EmitStatement		# line 7219, column 85
	call	CgAssOut_AssLn
.Lab924:
	jmp	.Lab11
.Lab18:
.LN1798:
	.stabn  68,0,7223,.LN1798-Emit_EmitStatement		# line 7223, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab930
.Lab931:
.LN1799:
	.stabn  68,0,7224,.LN1799-Emit_EmitStatement		# line 7224, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab930:
.LN1800:
	.stabn  68,0,7226,.LN1800-Emit_EmitStatement		# line 7226, column 5
	cmpb	$0,IR_s + 133
	je	.Lab932
.Lab933:
.LN1801:
	.stabn  68,0,7227,.LN1801-Emit_EmitStatement		# line 7227, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1802:
	.stabn  68,0,7228,.LN1802-Emit_EmitStatement		# line 7228, column 8
	.data
.Lab934:
 	.ascii	"Rule 63/2952 Cost=\000"
	.text
	pushl	$18
	leal	.Lab934,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1803:
	.stabn  68,0,7229,.LN1803-Emit_EmitStatement		# line 7229, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1804:
	.stabn  68,0,7230,.LN1804-Emit_EmitStatement		# line 7230, column 8
	.data
.Lab935:
 	.ascii	" CopyOpenArray\000"
	.text
	pushl	$14
	leal	.Lab935,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1805:
	.stabn  68,0,7231,.LN1805-Emit_EmitStatement		# line 7231, column 8
	call	InOut_WriteLn
.LN1806:
	.stabn  68,0,7232,.LN1806-Emit_EmitStatement		# line 7232, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1807:
	.stabn  68,0,7233,.LN1807-Emit_EmitStatement		# line 7233, column 8
	cmpl	$0,8(%ebp)
	je	.Lab936
.Lab937:
.LN1808:
	.stabn  68,0,7233,.LN1808-Emit_EmitStatement		# line 7233, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab936:
.LN1809:
	.stabn  68,0,7233,.LN1809-Emit_EmitStatement		# line 7233, column 58
	call	InOut_WriteLn
.LN1810:
	.stabn  68,0,7234,.LN1810-Emit_EmitStatement		# line 7234, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1811:
	.stabn  68,0,7235,.LN1811-Emit_EmitStatement		# line 7235, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1812:
	.stabn  68,0,7235,.LN1812-Emit_EmitStatement		# line 7235, column 38
	call	InOut_WriteLn
.Lab932:
.LN1813:
	.stabn  68,0,7238,.LN1813-Emit_EmitStatement		# line 7238, column 9
	jmp	.Lab938
.Lab939:
.LN1814:
	.stabn  68,0,7239,.LN1814-Emit_EmitStatement		# line 7239, column 2
	.data
.Lab940:
 	.ascii	"\011/* Copy Open Array Begin */\000"
	.text
	pushl	$28
	leal	.Lab940,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1815:
	.stabn  68,0,7239,.LN1815-Emit_EmitStatement		# line 7239, column 49
	call	CgAssOut_AssLn
.Lab938:
.LN1816:
	.stabn  68,0,7241,.LN1816-Emit_EmitStatement		# line 7241, column 4
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$1,12(%eax)
	je	.Lab941
.Lab943:
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	12(%eax),%eax
	andl	$1,%eax
	xorl	$1,%eax
	jnz	.Lab941
.Lab942:
.LN1817:
	.stabn  68,0,7241,.LN1817-Emit_EmitStatement		# line 7241, column 97
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	incl	12(%eax) 
.Lab941:
.LN1818:
	.stabn  68,0,7243,.LN1818-Emit_EmitStatement		# line 7243, column 2
	.data
.Lab944:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab944,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1819:
	.stabn  68,0,7243,.LN1819-Emit_EmitStatement		# line 7243, column 30
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1820:
	.stabn  68,0,7243,.LN1820-Emit_EmitStatement		# line 7243, column 76
	.data
.Lab945:
 	.ascii	"(%ebp),%ecx\000"
	.text
	pushl	$11
	leal	.Lab945,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1821:
	.stabn  68,0,7243,.LN1821-Emit_EmitStatement		# line 7243, column 104
	call	CgAssOut_AssLn
.LN1822:
	.stabn  68,0,7245,.LN1822-Emit_EmitStatement		# line 7245, column 2
	.data
.Lab946:
 	.ascii	"\011incl\011%ecx\000"
	.text
	pushl	$10
	leal	.Lab946,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1823:
	.stabn  68,0,7245,.LN1823-Emit_EmitStatement		# line 7245, column 34
	call	CgAssOut_AssLn
.LN1824:
	.stabn  68,0,7248,.LN1824-Emit_EmitStatement		# line 7248, column 7
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$1,12(%eax)
	je	.Lab947
.Lab948:
.LN1825:
	.stabn  68,0,7251,.LN1825-Emit_EmitStatement		# line 7251, column 10
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	12(%eax),%eax
	.data
	.align 4
.Lab952:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab952
	pushl	%eax
	call	CgUtilities_IsPowerOfTwo
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab951
.Lab950:
.LN1826:
	.stabn  68,0,7252,.LN1826-Emit_EmitStatement		# line 7252, column 2
	.data
.Lab953:
 	.ascii	"\011shll\011$\000"
	.text
	pushl	$7
	leal	.Lab953,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1827:
	.stabn  68,0,7252,.LN1827-Emit_EmitStatement		# line 7252, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	12(%eax),%eax
	.data
	.align 4
.Lab954:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab954
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab955
.Lab956:
   	call	BoundErr_		
.Lab955:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1828:
	.stabn  68,0,7252,.LN1828-Emit_EmitStatement		# line 7252, column 82
	.data
.Lab957:
 	.ascii	", %ecx\000"
	.text
	pushl	$6
	leal	.Lab957,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1829:
	.stabn  68,0,7252,.LN1829-Emit_EmitStatement		# line 7252, column 105
	call	CgAssOut_AssLn
	jmp	.Lab949
.Lab951:
.LN1830:
	.stabn  68,0,7254,.LN1830-Emit_EmitStatement		# line 7254, column 2
	.data
.Lab958:
 	.ascii	"\011imull\011$\000"
	.text
	pushl	$8
	leal	.Lab958,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1831:
	.stabn  68,0,7254,.LN1831-Emit_EmitStatement		# line 7254, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	12(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1832:
	.stabn  68,0,7254,.LN1832-Emit_EmitStatement		# line 7254, column 75
	.data
.Lab959:
 	.ascii	",%ecx\000"
	.text
	pushl	$5
	leal	.Lab959,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1833:
	.stabn  68,0,7254,.LN1833-Emit_EmitStatement		# line 7254, column 97
	call	CgAssOut_AssLn
.Lab949:
.Lab947:
.LN1834:
	.stabn  68,0,7258,.LN1834-Emit_EmitStatement		# line 7258, column 2
	.data
.Lab960:
 	.ascii	"\011addl\011$3,%ecx\000"
	.text
	pushl	$13
	leal	.Lab960,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1835:
	.stabn  68,0,7258,.LN1835-Emit_EmitStatement		# line 7258, column 37
	call	CgAssOut_AssLn
.LN1836:
	.stabn  68,0,7259,.LN1836-Emit_EmitStatement		# line 7259, column 2
	.data
.Lab961:
 	.ascii	"\011andl\011$0xfffffffc, %ecx\000"
	.text
	pushl	$23
	leal	.Lab961,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1837:
	.stabn  68,0,7259,.LN1837-Emit_EmitStatement		# line 7259, column 47
	call	CgAssOut_AssLn
.LN1838:
	.stabn  68,0,7261,.LN1838-Emit_EmitStatement		# line 7261, column 2
	.data
.Lab962:
 	.ascii	"\011subl \011%ecx,%esp\000"
	.text
	pushl	$16
	leal	.Lab962,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1839:
	.stabn  68,0,7261,.LN1839-Emit_EmitStatement		# line 7261, column 39
	call	CgAssOut_AssLn
.LN1840:
	.stabn  68,0,7263,.LN1840-Emit_EmitStatement		# line 7263, column 2
	.data
.Lab963:
 	.ascii	"\011movl\011%esp,%edi\000"
	.text
	pushl	$15
	leal	.Lab963,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1841:
	.stabn  68,0,7263,.LN1841-Emit_EmitStatement		# line 7263, column 39
	call	CgAssOut_AssLn
.LN1842:
	.stabn  68,0,7265,.LN1842-Emit_EmitStatement		# line 7265, column 2
	.data
.Lab964:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab964,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1843:
	.stabn  68,0,7265,.LN1843-Emit_EmitStatement		# line 7265, column 30
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1844:
	.stabn  68,0,7265,.LN1844-Emit_EmitStatement		# line 7265, column 76
	.data
.Lab965:
 	.ascii	"(%ebp),%esi\000"
	.text
	pushl	$11
	leal	.Lab965,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1845:
	.stabn  68,0,7265,.LN1845-Emit_EmitStatement		# line 7265, column 104
	call	CgAssOut_AssLn
.LN1846:
	.stabn  68,0,7268,.LN1846-Emit_EmitStatement		# line 7268, column 2
	.data
.Lab966:
 	.ascii	"\011movl\011%edi,\000"
	.text
	pushl	$11
	leal	.Lab966,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1847:
	.stabn  68,0,7268,.LN1847-Emit_EmitStatement		# line 7268, column 35
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1848:
	.stabn  68,0,7268,.LN1848-Emit_EmitStatement		# line 7268, column 81
	.data
.Lab967:
 	.ascii	"(%ebp)\000"
	.text
	pushl	$6
	leal	.Lab967,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1849:
	.stabn  68,0,7268,.LN1849-Emit_EmitStatement		# line 7268, column 104
	call	CgAssOut_AssLn
.LN1850:
	.stabn  68,0,7273,.LN1850-Emit_EmitStatement		# line 7273, column 2
	.data
.Lab968:
 	.ascii	"\011shrl\011$2,%ecx\000"
	.text
	pushl	$13
	leal	.Lab968,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1851:
	.stabn  68,0,7273,.LN1851-Emit_EmitStatement		# line 7273, column 37
	call	CgAssOut_AssLn
.LN1852:
	.stabn  68,0,7274,.LN1852-Emit_EmitStatement		# line 7274, column 2
	.data
.Lab969:
 	.ascii	"\011cld\000"
	.text
	pushl	$4
	leal	.Lab969,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1853:
	.stabn  68,0,7274,.LN1853-Emit_EmitStatement		# line 7274, column 25
	call	CgAssOut_AssLn
.LN1854:
	.stabn  68,0,7275,.LN1854-Emit_EmitStatement		# line 7275, column 2
	.data
.Lab970:
 	.ascii	"\011repz\000"
	.text
	pushl	$5
	leal	.Lab970,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1855:
	.stabn  68,0,7275,.LN1855-Emit_EmitStatement		# line 7275, column 26
	call	CgAssOut_AssLn
.LN1856:
	.stabn  68,0,7276,.LN1856-Emit_EmitStatement		# line 7276, column 2
	.data
.Lab971:
 	.ascii	"\011movsl\000"
	.text
	pushl	$6
	leal	.Lab971,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1857:
	.stabn  68,0,7276,.LN1857-Emit_EmitStatement		# line 7276, column 27
	call	CgAssOut_AssLn
.LN1858:
	.stabn  68,0,7277,.LN1858-Emit_EmitStatement		# line 7277, column 9
	jmp	.Lab972
.Lab973:
.LN1859:
	.stabn  68,0,7278,.LN1859-Emit_EmitStatement		# line 7278, column 2
	.data
.Lab974:
 	.ascii	"\011/* Copy Open Array End */\000"
	.text
	pushl	$26
	leal	.Lab974,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1860:
	.stabn  68,0,7278,.LN1860-Emit_EmitStatement		# line 7278, column 47
	call	CgAssOut_AssLn
.Lab972:
	jmp	.Lab11
.Lab17:
.LN1861:
	.stabn  68,0,7282,.LN1861-Emit_EmitStatement		# line 7282, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab975
.Lab976:
.LN1862:
	.stabn  68,0,7283,.LN1862-Emit_EmitStatement		# line 7283, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab975:
.LN1863:
	.stabn  68,0,7285,.LN1863-Emit_EmitStatement		# line 7285, column 5
	cmpb	$0,IR_s + 133
	je	.Lab977
.Lab978:
.LN1864:
	.stabn  68,0,7286,.LN1864-Emit_EmitStatement		# line 7286, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1865:
	.stabn  68,0,7287,.LN1865-Emit_EmitStatement		# line 7287, column 8
	.data
.Lab979:
 	.ascii	"Rule 64/3000 Cost=\000"
	.text
	pushl	$18
	leal	.Lab979,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1866:
	.stabn  68,0,7288,.LN1866-Emit_EmitStatement		# line 7288, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1867:
	.stabn  68,0,7289,.LN1867-Emit_EmitStatement		# line 7289, column 8
	.data
.Lab980:
 	.ascii	" Return\000"
	.text
	pushl	$7
	leal	.Lab980,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1868:
	.stabn  68,0,7290,.LN1868-Emit_EmitStatement		# line 7290, column 8
	call	InOut_WriteLn
.LN1869:
	.stabn  68,0,7291,.LN1869-Emit_EmitStatement		# line 7291, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1870:
	.stabn  68,0,7292,.LN1870-Emit_EmitStatement		# line 7292, column 8
	cmpl	$0,8(%ebp)
	je	.Lab981
.Lab982:
.LN1871:
	.stabn  68,0,7292,.LN1871-Emit_EmitStatement		# line 7292, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab981:
.LN1872:
	.stabn  68,0,7292,.LN1872-Emit_EmitStatement		# line 7292, column 58
	call	InOut_WriteLn
.LN1873:
	.stabn  68,0,7293,.LN1873-Emit_EmitStatement		# line 7293, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1874:
	.stabn  68,0,7294,.LN1874-Emit_EmitStatement		# line 7294, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1875:
	.stabn  68,0,7294,.LN1875-Emit_EmitStatement		# line 7294, column 38
	call	InOut_WriteLn
.Lab977:
.LN1876:
	.stabn  68,0,7297,.LN1876-Emit_EmitStatement		# line 7297, column 9
	cmpl	$0,Emit_s + 980
	je	.Lab983
.Lab985:
	cmpb	$0,SuErrors_s
	je	.Lab983
.Lab984:
.LN1877:
	.stabn  68,0,7298,.LN1877-Emit_EmitStatement		# line 7298, column 2
	.data
.Lab986:
 	.ascii	"\011ERROR: CurFStackSize <> 0\000"
	.text
	pushl	$26
	leal	.Lab986,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1878:
	.stabn  68,0,7298,.LN1878-Emit_EmitStatement		# line 7298, column 47
	call	CgAssOut_AssLn
.LN1879:
	.stabn  68,0,7299,.LN1879-Emit_EmitStatement		# line 7299, column 9
	call	CgAssOut_AssClose
.LN1880:
	.stabn  68,0,7300,.LN1880-Emit_EmitStatement		# line 7300, column 9
	.data
.Lab987:
 	.ascii	"Something's going wrong in fp expression\000"
	.text
	pushl	$40
	leal	.Lab987,%eax
	pushl	%eax
	call	SuErrors_CompilerError
	addl	$8, %esp
.Lab983:
.LN1881:
	.stabn  68,0,7302,.LN1881-Emit_EmitStatement		# line 7302, column 22
	movb	$4,Emit_s + 976 
.LN1882:
	.stabn  68,0,7303,.LN1882-Emit_EmitStatement		# line 7303, column 9
	movzwl	Emit_s + 48,%eax
	cmpl	$15,%eax
	jbe	.Lab990
.Lab991:
   	call	BoundErr_		
.Lab990:
	cmpb	$0,Emit_s + 334(%eax)
	je	.Lab988
.Lab989:
.LN1883:
	.stabn  68,0,7305,.LN1883-Emit_EmitStatement		# line 7305, column 2
	.data
.Lab992:
 	.ascii	"\011movl\011-4(%ebp),%ecx\000"
	.text
	pushl	$19
	leal	.Lab992,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1884:
	.stabn  68,0,7305,.LN1884-Emit_EmitStatement		# line 7305, column 43
	call	CgAssOut_AssLn
.LN1885:
	.stabn  68,0,7307,.LN1885-Emit_EmitStatement		# line 7307, column 2
	.data
.Lab993:
 	.ascii	"\011movl\011%ecx,DISPLAY_+\000"
	.text
	pushl	$20
	leal	.Lab993,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1886:
	.stabn  68,0,7307,.LN1886-Emit_EmitStatement		# line 7307, column 44
	movw	Emit_s + 48,%ax
	addw	%ax, %ax
	addw	%ax, %ax
	movzwl	%ax,%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1887:
	.stabn  68,0,7307,.LN1887-Emit_EmitStatement		# line 7307, column 69
	call	CgAssOut_AssLn
.Lab988:
.LN1888:
	.stabn  68,0,7312,.LN1888-Emit_EmitStatement		# line 7312, column 9
	pushl	Emit_s + 628
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab994
.Lab995:
.LN1889:
	.stabn  68,0,7313,.LN1889-Emit_EmitStatement		# line 7313, column 2
	.data
.Lab996:
 	.ascii	"\011popl %ebx\000"
	.text
	pushl	$10
	leal	.Lab996,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1890:
	.stabn  68,0,7313,.LN1890-Emit_EmitStatement		# line 7313, column 31
	call	CgAssOut_AssLn
.LN1891:
	.stabn  68,0,7314,.LN1891-Emit_EmitStatement		# line 7314, column 2
	.data
.Lab997:
 	.ascii	"\011popl %esi\000"
	.text
	pushl	$10
	leal	.Lab997,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1892:
	.stabn  68,0,7314,.LN1892-Emit_EmitStatement		# line 7314, column 31
	call	CgAssOut_AssLn
.LN1893:
	.stabn  68,0,7315,.LN1893-Emit_EmitStatement		# line 7315, column 2
	.data
.Lab998:
 	.ascii	"\011popl %edi\000"
	.text
	pushl	$10
	leal	.Lab998,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1894:
	.stabn  68,0,7315,.LN1894-Emit_EmitStatement		# line 7315, column 31
	call	CgAssOut_AssLn
.Lab994:
.LN1895:
	.stabn  68,0,7318,.LN1895-Emit_EmitStatement		# line 7318, column 2
	.data
.Lab999:
 	.ascii	"\011leave\000"
	.text
	pushl	$6
	leal	.Lab999,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1896:
	.stabn  68,0,7318,.LN1896-Emit_EmitStatement		# line 7318, column 27
	call	CgAssOut_AssLn
.LN1897:
	.stabn  68,0,7319,.LN1897-Emit_EmitStatement		# line 7319, column 2
	.data
.Lab1000:
 	.ascii	"\011ret\000"
	.text
	pushl	$4
	leal	.Lab1000,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1898:
	.stabn  68,0,7319,.LN1898-Emit_EmitStatement		# line 7319, column 25
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab16:
.LN1899:
	.stabn  68,0,7322,.LN1899-Emit_EmitStatement		# line 7322, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN1900:
	.stabn  68,0,7323,.LN1900-Emit_EmitStatement		# line 7323, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab1001
.Lab1002:
.LN1901:
	.stabn  68,0,7324,.LN1901-Emit_EmitStatement		# line 7324, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1001:
.LN1902:
	.stabn  68,0,7326,.LN1902-Emit_EmitStatement		# line 7326, column 5
	cmpb	$0,IR_s + 133
	je	.Lab1003
.Lab1004:
.LN1903:
	.stabn  68,0,7327,.LN1903-Emit_EmitStatement		# line 7327, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1904:
	.stabn  68,0,7328,.LN1904-Emit_EmitStatement		# line 7328, column 8
	.data
.Lab1005:
 	.ascii	"Rule 65/3033 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1005,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1905:
	.stabn  68,0,7329,.LN1905-Emit_EmitStatement		# line 7329, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1906:
	.stabn  68,0,7330,.LN1906-Emit_EmitStatement		# line 7330, column 8
	.data
.Lab1006:
 	.ascii	" ReturnValueL\000"
	.text
	pushl	$13
	leal	.Lab1006,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1907:
	.stabn  68,0,7331,.LN1907-Emit_EmitStatement		# line 7331, column 8
	call	InOut_WriteLn
.LN1908:
	.stabn  68,0,7332,.LN1908-Emit_EmitStatement		# line 7332, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1909:
	.stabn  68,0,7333,.LN1909-Emit_EmitStatement		# line 7333, column 8
	cmpl	$0,8(%ebp)
	je	.Lab1007
.Lab1008:
.LN1910:
	.stabn  68,0,7333,.LN1910-Emit_EmitStatement		# line 7333, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab1007:
.LN1911:
	.stabn  68,0,7333,.LN1911-Emit_EmitStatement		# line 7333, column 58
	call	InOut_WriteLn
.LN1912:
	.stabn  68,0,7334,.LN1912-Emit_EmitStatement		# line 7334, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1913:
	.stabn  68,0,7335,.LN1913-Emit_EmitStatement		# line 7335, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1914:
	.stabn  68,0,7335,.LN1914-Emit_EmitStatement		# line 7335, column 38
	call	InOut_WriteLn
.Lab1003:
	jmp	.Lab11
.Lab15:
.LN1915:
	.stabn  68,0,7339,.LN1915-Emit_EmitStatement		# line 7339, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	pushl	$1
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN1916:
	.stabn  68,0,7340,.LN1916-Emit_EmitStatement		# line 7340, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab1009
.Lab1010:
.LN1917:
	.stabn  68,0,7341,.LN1917-Emit_EmitStatement		# line 7341, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1009:
.LN1918:
	.stabn  68,0,7343,.LN1918-Emit_EmitStatement		# line 7343, column 5
	cmpb	$0,IR_s + 133
	je	.Lab1011
.Lab1012:
.LN1919:
	.stabn  68,0,7344,.LN1919-Emit_EmitStatement		# line 7344, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1920:
	.stabn  68,0,7345,.LN1920-Emit_EmitStatement		# line 7345, column 8
	.data
.Lab1013:
 	.ascii	"Rule 66/3036 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1013,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1921:
	.stabn  68,0,7346,.LN1921-Emit_EmitStatement		# line 7346, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1922:
	.stabn  68,0,7347,.LN1922-Emit_EmitStatement		# line 7347, column 8
	.data
.Lab1014:
 	.ascii	" ReturnValueL\000"
	.text
	pushl	$13
	leal	.Lab1014,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1923:
	.stabn  68,0,7348,.LN1923-Emit_EmitStatement		# line 7348, column 8
	call	InOut_WriteLn
.LN1924:
	.stabn  68,0,7349,.LN1924-Emit_EmitStatement		# line 7349, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1925:
	.stabn  68,0,7350,.LN1925-Emit_EmitStatement		# line 7350, column 8
	cmpl	$0,8(%ebp)
	je	.Lab1015
.Lab1016:
.LN1926:
	.stabn  68,0,7350,.LN1926-Emit_EmitStatement		# line 7350, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab1015:
.LN1927:
	.stabn  68,0,7350,.LN1927-Emit_EmitStatement		# line 7350, column 58
	call	InOut_WriteLn
.LN1928:
	.stabn  68,0,7351,.LN1928-Emit_EmitStatement		# line 7351, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1929:
	.stabn  68,0,7352,.LN1929-Emit_EmitStatement		# line 7352, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1930:
	.stabn  68,0,7352,.LN1930-Emit_EmitStatement		# line 7352, column 38
	call	InOut_WriteLn
.Lab1011:
.LN1931:
	.stabn  68,0,7355,.LN1931-Emit_EmitStatement		# line 7355, column 9
	call	Emit_PopFStack
	jmp	.Lab11
.Lab14:
.LN1932:
	.stabn  68,0,7358,.LN1932-Emit_EmitStatement		# line 7358, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab1017
.Lab1018:
.LN1933:
	.stabn  68,0,7359,.LN1933-Emit_EmitStatement		# line 7359, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1017:
.LN1934:
	.stabn  68,0,7361,.LN1934-Emit_EmitStatement		# line 7361, column 5
	cmpb	$0,IR_s + 133
	je	.Lab1019
.Lab1020:
.LN1935:
	.stabn  68,0,7362,.LN1935-Emit_EmitStatement		# line 7362, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1936:
	.stabn  68,0,7363,.LN1936-Emit_EmitStatement		# line 7363, column 8
	.data
.Lab1021:
 	.ascii	"Rule 67/3042 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1021,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1937:
	.stabn  68,0,7364,.LN1937-Emit_EmitStatement		# line 7364, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1938:
	.stabn  68,0,7365,.LN1938-Emit_EmitStatement		# line 7365, column 8
	.data
.Lab1022:
 	.ascii	" EndProcedure\000"
	.text
	pushl	$13
	leal	.Lab1022,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1939:
	.stabn  68,0,7366,.LN1939-Emit_EmitStatement		# line 7366, column 8
	call	InOut_WriteLn
.LN1940:
	.stabn  68,0,7367,.LN1940-Emit_EmitStatement		# line 7367, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1941:
	.stabn  68,0,7368,.LN1941-Emit_EmitStatement		# line 7368, column 8
	cmpl	$0,8(%ebp)
	je	.Lab1023
.Lab1024:
.LN1942:
	.stabn  68,0,7368,.LN1942-Emit_EmitStatement		# line 7368, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab1023:
.LN1943:
	.stabn  68,0,7368,.LN1943-Emit_EmitStatement		# line 7368, column 58
	call	InOut_WriteLn
.LN1944:
	.stabn  68,0,7369,.LN1944-Emit_EmitStatement		# line 7369, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1945:
	.stabn  68,0,7370,.LN1945-Emit_EmitStatement		# line 7370, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1946:
	.stabn  68,0,7370,.LN1946-Emit_EmitStatement		# line 7370, column 38
	call	InOut_WriteLn
.Lab1019:
.LN1947:
	.stabn  68,0,7373,.LN1947-Emit_EmitStatement		# line 7373, column 32
	movzwl	Emit_s + 48,%eax
	cmpl	$15,%eax
	jbe	.Lab1025
.Lab1026:
   	call	BoundErr_		
.Lab1025:
	movb	$0,Emit_s + 334(%eax) 
.LN1948:
	.stabn  68,0,7374,.LN1948-Emit_EmitStatement		# line 7374, column 22
	movl	Emit_s + 972,%eax
	.data
	.align 4
.Lab1027:
	.long	-2147483647,2147483647
	.text
	boundl	%eax,.Lab1027
	cmpl	$0,%eax
	jg	.Lab1028
	negl	%eax
.Lab1028:
 	addl	$3,%eax 
	sarl	$2, %eax 
	addl	%eax, %eax
	addl	%eax, %eax
	movl	%eax,Emit_s + 972 
.LN1949:
	.stabn  68,0,7375,.LN1949-Emit_EmitStatement		# line 7375, column 2
	.data
.Lab1029:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab1029,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1950:
	.stabn  68,0,7375,.LN1950-Emit_EmitStatement		# line 7375, column 22
	pushl	$255
	pushl	Emit_s + 988
	call	CgAssOut_AssString
	addl	$8, %esp
.LN1951:
	.stabn  68,0,7375,.LN1951-Emit_EmitStatement		# line 7375, column 47
	.data
.Lab1030:
 	.ascii	" = \000"
	.text
	pushl	$3
	leal	.Lab1030,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN1952:
	.stabn  68,0,7375,.LN1952-Emit_EmitStatement		# line 7375, column 67
	pushl	Emit_s + 972
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN1953:
	.stabn  68,0,7375,.LN1953-Emit_EmitStatement		# line 7375, column 92
	call	CgAssOut_AssLn
	jmp	.Lab11
.Lab13:
.LN1954:
	.stabn  68,0,7378,.LN1954-Emit_EmitStatement		# line 7378, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab1031
.Lab1032:
.LN1955:
	.stabn  68,0,7379,.LN1955-Emit_EmitStatement		# line 7379, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1031:
.LN1956:
	.stabn  68,0,7381,.LN1956-Emit_EmitStatement		# line 7381, column 5
	cmpb	$0,IR_s + 133
	je	.Lab1033
.Lab1034:
.LN1957:
	.stabn  68,0,7382,.LN1957-Emit_EmitStatement		# line 7382, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1958:
	.stabn  68,0,7383,.LN1958-Emit_EmitStatement		# line 7383, column 8
	.data
.Lab1035:
 	.ascii	"Rule 68/3052 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1035,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1959:
	.stabn  68,0,7384,.LN1959-Emit_EmitStatement		# line 7384, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1960:
	.stabn  68,0,7385,.LN1960-Emit_EmitStatement		# line 7385, column 8
	.data
.Lab1036:
 	.ascii	" EndModule\000"
	.text
	pushl	$10
	leal	.Lab1036,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1961:
	.stabn  68,0,7386,.LN1961-Emit_EmitStatement		# line 7386, column 8
	call	InOut_WriteLn
.LN1962:
	.stabn  68,0,7387,.LN1962-Emit_EmitStatement		# line 7387, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1963:
	.stabn  68,0,7388,.LN1963-Emit_EmitStatement		# line 7388, column 8
	cmpl	$0,8(%ebp)
	je	.Lab1037
.Lab1038:
.LN1964:
	.stabn  68,0,7388,.LN1964-Emit_EmitStatement		# line 7388, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab1037:
.LN1965:
	.stabn  68,0,7388,.LN1965-Emit_EmitStatement		# line 7388, column 58
	call	InOut_WriteLn
.LN1966:
	.stabn  68,0,7389,.LN1966-Emit_EmitStatement		# line 7389, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1967:
	.stabn  68,0,7390,.LN1967-Emit_EmitStatement		# line 7390, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN1968:
	.stabn  68,0,7390,.LN1968-Emit_EmitStatement		# line 7390, column 38
	call	InOut_WriteLn
.Lab1033:
.LN1969:
	.stabn  68,0,7393,.LN1969-Emit_EmitStatement		# line 7393, column 4
	call	CgAssOut_AssClose
.LN1970:
	.stabn  68,0,7394,.LN1970-Emit_EmitStatement		# line 7394, column 4
	cmpb	$0,SuErrors_s
	je	.Lab1039
.Lab1040:
.LN1971:
	.stabn  68,0,7395,.LN1971-Emit_EmitStatement		# line 7395, column 7
	.data
.Lab1041:
 	.ascii	"cd \000"
	.text
	pushl	$3
	leal	.Lab1041,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 1266,%eax
	pushl	%eax
	call	CgUtilities_StringAssign
	addl	$16, %esp
.LN1972:
	.stabn  68,0,7396,.LN1972-Emit_EmitStatement		# line 7396, column 7
	.data
.Lab1042:
 	.ascii	"; \000"
	.text
	pushl	$2
	leal	.Lab1042,%eax
	pushl	%eax
	pushl	$255
	leal	SuBase_s + 545,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 1266,%eax
	pushl	%eax
	call	CgUtilities_StringAppend2
	addl	$24, %esp
.LN1973:
	.stabn  68,0,7397,.LN1973-Emit_EmitStatement		# line 7397, column 7
	pushl	$255
	leal	SuBase_s + 1576,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 1266,%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.LN1974:
	.stabn  68,0,7398,.LN1974-Emit_EmitStatement		# line 7398, column 7
	pushl	CgBase_s
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab1043
.Lab1044:
.LN1975:
	.stabn  68,0,7399,.LN1975-Emit_EmitStatement		# line 7399, column 10
	.data
.Lab1045:
 	.ascii	" -elf\000"
	.text
	pushl	$5
	leal	.Lab1045,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 1266,%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.Lab1043:
.LN1976:
	.stabn  68,0,7401,.LN1976-Emit_EmitStatement		# line 7401, column 7
	pushl	SuBase_s + 284
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab1046
.Lab1047:
.LN1977:
	.stabn  68,0,7402,.LN1977-Emit_EmitStatement		# line 7402, column 10
	.data
.Lab1048:
 	.ascii	" -g\000"
	.text
	pushl	$3
	leal	.Lab1048,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 1266,%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.Lab1046:
.LN1978:
	.stabn  68,0,7404,.LN1978-Emit_EmitStatement		# line 7404, column 7
	.data
.Lab1049:
 	.ascii	" \000"
	.text
	pushl	$80
	leal	Emit_s + 888,%eax
	pushl	%eax
	pushl	$1
	leal	.Lab1049,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 1266,%eax
	pushl	%eax
	call	CgUtilities_StringAppend2
	addl	$24, %esp
.LN1979:
	.stabn  68,0,7405,.LN1979-Emit_EmitStatement		# line 7405, column 7
	leal	Emit_s + 1522,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 1266,%eax
	pushl	%eax
	call	SuBase_SystemCommand
	addl	$12, %esp
.LN1980:
	.stabn  68,0,7406,.LN1980-Emit_EmitStatement		# line 7406, column 7
	cmpb	$1,Emit_s + 1522
	je	.Lab1050
.Lab1051:
.LN1981:
	.stabn  68,0,7407,.LN1981-Emit_EmitStatement		# line 7407, column 10
	.data
.Lab1052:
 	.ascii	"Assembler terminated with error\000"
	.text
	pushl	$31
	leal	.Lab1052,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1982:
	.stabn  68,0,7407,.LN1982-Emit_EmitStatement		# line 7407, column 59
	call	InOut_WriteLn
.LN1983:
	.stabn  68,0,7408,.LN1983-Emit_EmitStatement		# line 7408, column 10
	pushl	$1
	call	exit
	addl	$4, %esp
.Lab1050:
.Lab1039:
.LN1984:
	.stabn  68,0,7411,.LN1984-Emit_EmitStatement		# line 7411, column 4
	pushl	Emit_s + 624
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$1,%al
	je	.Lab1053
.Lab1054:
.LN1985:
	.stabn  68,0,7412,.LN1985-Emit_EmitStatement		# line 7412, column 7
	leal	Emit_s + 1522,%eax
	pushl	%eax
	pushl	$255
	leal	Emit_s + 632,%eax
	pushl	%eax
	call	BasicIO_Erase
	addl	$12, %esp
.Lab1053:
	jmp	.Lab11
.Lab12:
.LN1986:
	.stabn  68,0,7416,.LN1986-Emit_EmitStatement		# line 7416, column 5
	cmpl	$0,RegAlloc_s + 20
	jbe	.Lab1055
.Lab1056:
.LN1987:
	.stabn  68,0,7417,.LN1987-Emit_EmitStatement		# line 7417, column 8
	pushl	$1
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1055:
.LN1988:
	.stabn  68,0,7419,.LN1988-Emit_EmitStatement		# line 7419, column 5
	cmpb	$0,IR_s + 133
	je	.Lab1057
.Lab1058:
.LN1989:
	.stabn  68,0,7420,.LN1989-Emit_EmitStatement		# line 7420, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1990:
	.stabn  68,0,7421,.LN1990-Emit_EmitStatement		# line 7421, column 8
	.data
.Lab1059:
 	.ascii	"Rule 69/3078 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1059,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1991:
	.stabn  68,0,7422,.LN1991-Emit_EmitStatement		# line 7422, column 8
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN1992:
	.stabn  68,0,7423,.LN1992-Emit_EmitStatement		# line 7423, column 8
	.data
.Lab1060:
 	.ascii	" Mark\000"
	.text
	pushl	$5
	leal	.Lab1060,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN1993:
	.stabn  68,0,7424,.LN1993-Emit_EmitStatement		# line 7424, column 8
	call	InOut_WriteLn
.LN1994:
	.stabn  68,0,7425,.LN1994-Emit_EmitStatement		# line 7425, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1995:
	.stabn  68,0,7426,.LN1995-Emit_EmitStatement		# line 7426, column 8
	cmpl	$0,8(%ebp)
	je	.Lab1061
.Lab1062:
.LN1996:
	.stabn  68,0,7426,.LN1996-Emit_EmitStatement		# line 7426, column 22
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
.Lab1061:
.LN1997:
	.stabn  68,0,7426,.LN1997-Emit_EmitStatement		# line 7426, column 58
	call	InOut_WriteLn
.LN1998:
	.stabn  68,0,7427,.LN1998-Emit_EmitStatement		# line 7427, column 8
	pushl	$0
	call	Emit_WriteNest
	addl	$4, %esp
.LN1999:
	.stabn  68,0,7428,.LN1999-Emit_EmitStatement		# line 7428, column 8
	pushl	$1
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.LN2000:
	.stabn  68,0,7428,.LN2000-Emit_EmitStatement		# line 7428, column 38
	call	InOut_WriteLn
.Lab1057:
.LN2001:
	.stabn  68,0,7430,.LN2001-Emit_EmitStatement		# line 7430, column 14
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movw	2(%eax),%ax
	movw	%ax,Emit_s + 44 
.LN2002:
	.stabn  68,0,7430,.LN2002-Emit_EmitStatement		# line 7430, column 48
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movw	4(%eax),%ax
	movw	%ax,Emit_s + 46 
	jmp	.Lab11
.Lab10:
	call	CaseErr_
.Lab11:
.Lab5:
.LN2003:
	.stabn  68,0,7431,.LN2003-Emit_EmitStatement		# line 7431, column 0
.LBE2:
	leave
	ret
	.Lab4 = 68
	.stabs "i:7",128,0,4,-68
	.stabs "AdrModeMode:t138=eMmem:2,Mreg:1,Mconst:0,;",128,0,0,0
	.stabs "AdrMode:t137=s20mem:35,32,128;reg:38,16,8;constant:7,32,32;kind:138,8,8;mode:26,0,8;;",128,0,0,0
	.stabs "NtAttributes:t133=s20loadln2:134=s0;,0,0;arglist:135=s0;,0,0;RegOrCMemOrIm:136=s20am:137,0,160;;,0,160;RegOrCMem:139=s20am:137,0,160;;,0,160;RegOrIm:140=s20am:137,0,160;;,0,160;CMem:141=s16am:35,0,128;;,0,128;mem:142=s16am:35,0,128;;,0,128;OffsetPlusIndexMultFaktor:143=s1index:38,0,8;;,0,8;RegPlusSymPlusOffset:144=s8symbol:36,32,32;base:38,0,8;;,0,64;SymPlusOffset:145=s4symbol:36,0,32;;,0,32;SimpleVariable:146=s0;,0,0;FloatConstant:147=s0;,0,0;Constant:148=s0;,0,0;fstack:149=s0;,0,0;freg:150=s0;,0,0;reg:151=s0;,0,0;;",128,0,0,0
	.stabs "AT2:133",128,0,20,-64
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "nest:c=i0",128,0,0,0
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB2-Emit_EmitStatement
	.stabn 224,0,0,.LBE2-Emit_EmitStatement
	.stabs "Emit_EmitNtloadln2:F16",36,0,0,Emit_EmitNtloadln2
	.align 4
Emit_EmitNtloadln2:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1063, %esp
.LN2004:
	.stabn  68,0,5648,.LN2004-Emit_EmitNtloadln2		# line 5648, column 1
.LBB3:
.LN2005:
	.stabn  68,0,5649,.LN2005-Emit_EmitNtloadln2		# line 5649, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	212(%eax),%eax
	.data
	.align 4
.Lab1067:
	.long	.Lab1066
	.text
	subl	$279,%eax
	jb	.Lab1064
	cmpl	$0,%eax
	ja	.Lab1064
	jmp	*.Lab1067(,%eax,4)
.Lab1066:
.LN2006:
	.stabn  68,0,5651,.LN2006-Emit_EmitNtloadln2		# line 5651, column 10
	decl	Emit_s + 1536
.LN2007:
	.stabn  68,0,5652,.LN2007-Emit_EmitNtloadln2		# line 5652, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1071
	cmpl	$4096,%eax
	jbe	.Lab1070
.Lab1071:
   	call	BoundErr_		
.Lab1070:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1068
.Lab1069:
.LN2008:
	.stabn  68,0,5653,.LN2008-Emit_EmitNtloadln2		# line 5653, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1073
	cmpl	$4096,%eax
	jbe	.Lab1072
.Lab1073:
   	call	BoundErr_		
.Lab1072:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1068:
.LN2009:
	.stabn  68,0,5655,.LN2009-Emit_EmitNtloadln2		# line 5655, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1074
.Lab1075:
.LN2010:
	.stabn  68,0,5656,.LN2010-Emit_EmitNtloadln2		# line 5656, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2011:
	.stabn  68,0,5657,.LN2011-Emit_EmitNtloadln2		# line 5657, column 11
	.data
.Lab1076:
 	.ascii	"Rule 279/2668 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1076,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2012:
	.stabn  68,0,5658,.LN2012-Emit_EmitNtloadln2		# line 5658, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	148(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2013:
	.stabn  68,0,5659,.LN2013-Emit_EmitNtloadln2		# line 5659, column 11
	.data
.Lab1077:
 	.ascii	" Nil ->   loadln2\000"
	.text
	pushl	$17
	leal	.Lab1077,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2014:
	.stabn  68,0,5660,.LN2014-Emit_EmitNtloadln2		# line 5660, column 11
	call	InOut_WriteLn
.LN2015:
	.stabn  68,0,5661,.LN2015-Emit_EmitNtloadln2		# line 5661, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2016:
	.stabn  68,0,5662,.LN2016-Emit_EmitNtloadln2		# line 5662, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2017:
	.stabn  68,0,5662,.LN2017-Emit_EmitNtloadln2		# line 5662, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2018:
	.stabn  68,0,5663,.LN2018-Emit_EmitNtloadln2		# line 5663, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1080
.Lab1079:
.LN2019:
	.stabn  68,0,5663,.LN2019-Emit_EmitNtloadln2		# line 5663, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1078
.Lab1080:
.LN2020:
	.stabn  68,0,5663,.LN2020-Emit_EmitNtloadln2		# line 5663, column 61
	call	InOut_WriteLn
.Lab1078:
.LN2021:
	.stabn  68,0,5664,.LN2021-Emit_EmitNtloadln2		# line 5664, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2022:
	.stabn  68,0,5665,.LN2022-Emit_EmitNtloadln2		# line 5665, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1082
	cmpl	$4096,%eax
	jbe	.Lab1081
.Lab1082:
   	call	BoundErr_		
.Lab1081:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1074:
.LN2023:
	.stabn  68,0,5668,.LN2023-Emit_EmitNtloadln2		# line 5668, column 9
	call	Emit_PushFStack
.LN2024:
	.stabn  68,0,5669,.LN2024-Emit_EmitNtloadln2		# line 5669, column 2
	.data
.Lab1083:
 	.ascii	"\011fldl\011RealLn2_\000"
	.text
	pushl	$14
	leal	.Lab1083,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2025:
	.stabn  68,0,5669,.LN2025-Emit_EmitNtloadln2		# line 5669, column 38
	call	CgAssOut_AssLn
	jmp	.Lab1065
.Lab1064:
	call	CaseErr_
.Lab1065:
.LN2026:
	.stabn  68,0,5672,.LN2026-Emit_EmitNtloadln2		# line 5672, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1084
.Lab1085:
.LN2027:
	.stabn  68,0,5673,.LN2027-Emit_EmitNtloadln2		# line 5673, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2028:
	.stabn  68,0,5674,.LN2028-Emit_EmitNtloadln2		# line 5674, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrloadln2
	addl	$20, %esp
.LN2029:
	.stabn  68,0,5675,.LN2029-Emit_EmitNtloadln2		# line 5675, column 8
	call	InOut_WriteLn
.Lab1084:
.LN2030:
	.stabn  68,0,5676,.LN2030-Emit_EmitNtloadln2		# line 5676, column 0
.LBE3:
	leave
	ret
	.Lab1063 = 4
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB3-Emit_EmitNtloadln2
	.stabn 224,0,0,.LBE3-Emit_EmitNtloadln2
	.stabs "Emit_EmitNtarglist:F16",36,0,0,Emit_EmitNtarglist
	.align 4
Emit_EmitNtarglist:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1086, %esp
.LN2031:
	.stabn  68,0,5471,.LN2031-Emit_EmitNtarglist		# line 5471, column 1
.LBB4:
.LN2032:
	.stabn  68,0,5472,.LN2032-Emit_EmitNtarglist		# line 5472, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	208(%eax),%eax
	.data
	.align 4
.Lab1096:
	.long	.Lab1095
	.long	.Lab1094
	.long	.Lab1093
	.long	.Lab1092
	.long	.Lab1091
	.long	.Lab1090
	.long	.Lab1089
	.text
	subl	$272,%eax
	jb	.Lab1087
	cmpl	$6,%eax
	ja	.Lab1087
	jmp	*.Lab1096(,%eax,4)
.Lab1095:
.LN2033:
	.stabn  68,0,5474,.LN2033-Emit_EmitNtarglist		# line 5474, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN2034:
	.stabn  68,0,5475,.LN2034-Emit_EmitNtarglist		# line 5475, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2035:
	.stabn  68,0,5476,.LN2035-Emit_EmitNtarglist		# line 5476, column 10
	decl	Emit_s + 1536
.LN2036:
	.stabn  68,0,5477,.LN2036-Emit_EmitNtarglist		# line 5477, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1100
	cmpl	$4096,%eax
	jbe	.Lab1099
.Lab1100:
   	call	BoundErr_		
.Lab1099:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1097
.Lab1098:
.LN2037:
	.stabn  68,0,5478,.LN2037-Emit_EmitNtarglist		# line 5478, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1102
	cmpl	$4096,%eax
	jbe	.Lab1101
.Lab1102:
   	call	BoundErr_		
.Lab1101:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1097:
.LN2038:
	.stabn  68,0,5480,.LN2038-Emit_EmitNtarglist		# line 5480, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1103
.Lab1104:
.LN2039:
	.stabn  68,0,5481,.LN2039-Emit_EmitNtarglist		# line 5481, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2040:
	.stabn  68,0,5482,.LN2040-Emit_EmitNtarglist		# line 5482, column 11
	.data
.Lab1105:
 	.ascii	"Rule 272/2471 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1105,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2041:
	.stabn  68,0,5483,.LN2041-Emit_EmitNtarglist		# line 5483, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	144(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2042:
	.stabn  68,0,5484,.LN2042-Emit_EmitNtarglist		# line 5484, column 11
	.data
.Lab1106:
 	.ascii	" PassLong ->   arglist\000"
	.text
	pushl	$22
	leal	.Lab1106,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2043:
	.stabn  68,0,5485,.LN2043-Emit_EmitNtarglist		# line 5485, column 11
	call	InOut_WriteLn
.LN2044:
	.stabn  68,0,5486,.LN2044-Emit_EmitNtarglist		# line 5486, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2045:
	.stabn  68,0,5487,.LN2045-Emit_EmitNtarglist		# line 5487, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2046:
	.stabn  68,0,5487,.LN2046-Emit_EmitNtarglist		# line 5487, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2047:
	.stabn  68,0,5488,.LN2047-Emit_EmitNtarglist		# line 5488, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1109
.Lab1108:
.LN2048:
	.stabn  68,0,5488,.LN2048-Emit_EmitNtarglist		# line 5488, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1107
.Lab1109:
.LN2049:
	.stabn  68,0,5488,.LN2049-Emit_EmitNtarglist		# line 5488, column 61
	call	InOut_WriteLn
.Lab1107:
.LN2050:
	.stabn  68,0,5489,.LN2050-Emit_EmitNtarglist		# line 5489, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2051:
	.stabn  68,0,5490,.LN2051-Emit_EmitNtarglist		# line 5490, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1111
	cmpl	$4096,%eax
	jbe	.Lab1110
.Lab1111:
   	call	BoundErr_		
.Lab1110:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1103:
.LN2052:
	.stabn  68,0,5493,.LN2052-Emit_EmitNtarglist		# line 5493, column 2
	.data
.Lab1112:
 	.ascii	"\011subl\011$\000"
	.text
	pushl	$7
	leal	.Lab1112,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2053:
	.stabn  68,0,5493,.LN2053-Emit_EmitNtarglist		# line 5493, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	12(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2054:
	.stabn  68,0,5493,.LN2054-Emit_EmitNtarglist		# line 5493, column 67
	.data
.Lab1113:
 	.ascii	",%esp\000"
	.text
	pushl	$5
	leal	.Lab1113,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2055:
	.stabn  68,0,5493,.LN2055-Emit_EmitNtarglist		# line 5493, column 89
	call	CgAssOut_AssLn
.LN2056:
	.stabn  68,0,5494,.LN2056-Emit_EmitNtarglist		# line 5494, column 2
	.data
.Lab1114:
 	.ascii	"\011movl\011%esp,%edi\000"
	.text
	pushl	$15
	leal	.Lab1114,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2057:
	.stabn  68,0,5494,.LN2057-Emit_EmitNtarglist		# line 5494, column 39
	call	CgAssOut_AssLn
.LN2058:
	.stabn  68,0,5495,.LN2058-Emit_EmitNtarglist		# line 5495, column 2
	.data
.Lab1115:
 	.ascii	"\011movl\011$\000"
	.text
	pushl	$7
	leal	.Lab1115,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2059:
	.stabn  68,0,5495,.LN2059-Emit_EmitNtarglist		# line 5495, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%ebx
	movl	$3,%eax
 	addl	4(%ebx),%eax 
	sarl	$2, %eax 
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2060:
	.stabn  68,0,5495,.LN2060-Emit_EmitNtarglist		# line 5495, column 78
	.data
.Lab1116:
 	.ascii	",%ecx\000"
	.text
	pushl	$5
	leal	.Lab1116,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2061:
	.stabn  68,0,5495,.LN2061-Emit_EmitNtarglist		# line 5495, column 100
	call	CgAssOut_AssLn
.LN2062:
	.stabn  68,0,5496,.LN2062-Emit_EmitNtarglist		# line 5496, column 2
	.data
.Lab1117:
 	.ascii	"\011cld\000"
	.text
	pushl	$4
	leal	.Lab1117,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2063:
	.stabn  68,0,5496,.LN2063-Emit_EmitNtarglist		# line 5496, column 25
	call	CgAssOut_AssLn
.LN2064:
	.stabn  68,0,5497,.LN2064-Emit_EmitNtarglist		# line 5497, column 2
	.data
.Lab1118:
 	.ascii	"\011repz\000"
	.text
	pushl	$5
	leal	.Lab1118,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2065:
	.stabn  68,0,5497,.LN2065-Emit_EmitNtarglist		# line 5497, column 26
	call	CgAssOut_AssLn
.LN2066:
	.stabn  68,0,5498,.LN2066-Emit_EmitNtarglist		# line 5498, column 2
	.data
.Lab1119:
 	.ascii	"\011movsl\000"
	.text
	pushl	$6
	leal	.Lab1119,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2067:
	.stabn  68,0,5498,.LN2067-Emit_EmitNtarglist		# line 5498, column 27
	call	CgAssOut_AssLn
	jmp	.Lab1088
.Lab1094:
.LN2068:
	.stabn  68,0,5501,.LN2068-Emit_EmitNtarglist		# line 5501, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN2069:
	.stabn  68,0,5502,.LN2069-Emit_EmitNtarglist		# line 5502, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN2070:
	.stabn  68,0,5503,.LN2070-Emit_EmitNtarglist		# line 5503, column 10
	decl	Emit_s + 1536
.LN2071:
	.stabn  68,0,5504,.LN2071-Emit_EmitNtarglist		# line 5504, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1123
	cmpl	$4096,%eax
	jbe	.Lab1122
.Lab1123:
   	call	BoundErr_		
.Lab1122:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1120
.Lab1121:
.LN2072:
	.stabn  68,0,5505,.LN2072-Emit_EmitNtarglist		# line 5505, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1125
	cmpl	$4096,%eax
	jbe	.Lab1124
.Lab1125:
   	call	BoundErr_		
.Lab1124:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1120:
.LN2073:
	.stabn  68,0,5507,.LN2073-Emit_EmitNtarglist		# line 5507, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1126
.Lab1127:
.LN2074:
	.stabn  68,0,5508,.LN2074-Emit_EmitNtarglist		# line 5508, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2075:
	.stabn  68,0,5509,.LN2075-Emit_EmitNtarglist		# line 5509, column 11
	.data
.Lab1128:
 	.ascii	"Rule 273/2461 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1128,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2076:
	.stabn  68,0,5510,.LN2076-Emit_EmitNtarglist		# line 5510, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	144(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2077:
	.stabn  68,0,5511,.LN2077-Emit_EmitNtarglist		# line 5511, column 11
	.data
.Lab1129:
 	.ascii	" PassLong ->   arglist\000"
	.text
	pushl	$22
	leal	.Lab1129,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2078:
	.stabn  68,0,5512,.LN2078-Emit_EmitNtarglist		# line 5512, column 11
	call	InOut_WriteLn
.LN2079:
	.stabn  68,0,5513,.LN2079-Emit_EmitNtarglist		# line 5513, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2080:
	.stabn  68,0,5514,.LN2080-Emit_EmitNtarglist		# line 5514, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2081:
	.stabn  68,0,5514,.LN2081-Emit_EmitNtarglist		# line 5514, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2082:
	.stabn  68,0,5515,.LN2082-Emit_EmitNtarglist		# line 5515, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1132
.Lab1131:
.LN2083:
	.stabn  68,0,5515,.LN2083-Emit_EmitNtarglist		# line 5515, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1130
.Lab1132:
.LN2084:
	.stabn  68,0,5515,.LN2084-Emit_EmitNtarglist		# line 5515, column 61
	call	InOut_WriteLn
.Lab1130:
.LN2085:
	.stabn  68,0,5516,.LN2085-Emit_EmitNtarglist		# line 5516, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2086:
	.stabn  68,0,5517,.LN2086-Emit_EmitNtarglist		# line 5517, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1134
	cmpl	$4096,%eax
	jbe	.Lab1133
.Lab1134:
   	call	BoundErr_		
.Lab1133:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1126:
.LN2087:
	.stabn  68,0,5520,.LN2087-Emit_EmitNtarglist		# line 5520, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$4,12(%eax)
	jle	.Lab1135
.Lab1136:
.LN2088:
	.stabn  68,0,5521,.LN2088-Emit_EmitNtarglist		# line 5521, column 2
	.data
.Lab1137:
 	.ascii	"\011subl\011$\000"
	.text
	pushl	$7
	leal	.Lab1137,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2089:
	.stabn  68,0,5521,.LN2089-Emit_EmitNtarglist		# line 5521, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	12(%eax),%eax
 	subl	$4,%eax 
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2090:
	.stabn  68,0,5521,.LN2090-Emit_EmitNtarglist		# line 5521, column 71
	.data
.Lab1138:
 	.ascii	",%esp\000"
	.text
	pushl	$5
	leal	.Lab1138,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2091:
	.stabn  68,0,5521,.LN2091-Emit_EmitNtarglist		# line 5521, column 93
	call	CgAssOut_AssLn
.Lab1135:
.LN2092:
	.stabn  68,0,5523,.LN2092-Emit_EmitNtarglist		# line 5523, column 2
	.data
.Lab1139:
 	.ascii	"\011pushl\011\000"
	.text
	pushl	$7
	leal	.Lab1139,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2093:
	.stabn  68,0,5523,.LN2093-Emit_EmitNtarglist		# line 5523, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN2094:
	.stabn  68,0,5523,.LN2094-Emit_EmitNtarglist		# line 5523, column 55
	call	CgAssOut_AssLn
	jmp	.Lab1088
.Lab1093:
.LN2095:
	.stabn  68,0,5526,.LN2095-Emit_EmitNtarglist		# line 5526, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN2096:
	.stabn  68,0,5527,.LN2096-Emit_EmitNtarglist		# line 5527, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN2097:
	.stabn  68,0,5528,.LN2097-Emit_EmitNtarglist		# line 5528, column 10
	decl	Emit_s + 1536
.LN2098:
	.stabn  68,0,5529,.LN2098-Emit_EmitNtarglist		# line 5529, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1143
	cmpl	$4096,%eax
	jbe	.Lab1142
.Lab1143:
   	call	BoundErr_		
.Lab1142:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1140
.Lab1141:
.LN2099:
	.stabn  68,0,5530,.LN2099-Emit_EmitNtarglist		# line 5530, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1145
	cmpl	$4096,%eax
	jbe	.Lab1144
.Lab1145:
   	call	BoundErr_		
.Lab1144:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1140:
.LN2100:
	.stabn  68,0,5532,.LN2100-Emit_EmitNtarglist		# line 5532, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1146
.Lab1147:
.LN2101:
	.stabn  68,0,5533,.LN2101-Emit_EmitNtarglist		# line 5533, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2102:
	.stabn  68,0,5534,.LN2102-Emit_EmitNtarglist		# line 5534, column 11
	.data
.Lab1148:
 	.ascii	"Rule 274/2452 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1148,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2103:
	.stabn  68,0,5535,.LN2103-Emit_EmitNtarglist		# line 5535, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	144(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2104:
	.stabn  68,0,5536,.LN2104-Emit_EmitNtarglist		# line 5536, column 11
	.data
.Lab1149:
 	.ascii	" Pass ->   arglist\000"
	.text
	pushl	$18
	leal	.Lab1149,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2105:
	.stabn  68,0,5537,.LN2105-Emit_EmitNtarglist		# line 5537, column 11
	call	InOut_WriteLn
.LN2106:
	.stabn  68,0,5538,.LN2106-Emit_EmitNtarglist		# line 5538, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2107:
	.stabn  68,0,5539,.LN2107-Emit_EmitNtarglist		# line 5539, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2108:
	.stabn  68,0,5539,.LN2108-Emit_EmitNtarglist		# line 5539, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2109:
	.stabn  68,0,5540,.LN2109-Emit_EmitNtarglist		# line 5540, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1152
.Lab1151:
.LN2110:
	.stabn  68,0,5540,.LN2110-Emit_EmitNtarglist		# line 5540, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1150
.Lab1152:
.LN2111:
	.stabn  68,0,5540,.LN2111-Emit_EmitNtarglist		# line 5540, column 61
	call	InOut_WriteLn
.Lab1150:
.LN2112:
	.stabn  68,0,5541,.LN2112-Emit_EmitNtarglist		# line 5541, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2113:
	.stabn  68,0,5542,.LN2113-Emit_EmitNtarglist		# line 5542, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1154
	cmpl	$4096,%eax
	jbe	.Lab1153
.Lab1154:
   	call	BoundErr_		
.Lab1153:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1146:
.LN2114:
	.stabn  68,0,5545,.LN2114-Emit_EmitNtarglist		# line 5545, column 2
	.data
.Lab1155:
 	.ascii	"\011subl\011$\000"
	.text
	pushl	$7
	leal	.Lab1155,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2115:
	.stabn  68,0,5545,.LN2115-Emit_EmitNtarglist		# line 5545, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	movswl	Emit_s(,%eax,2),%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2116:
	.stabn  68,0,5545,.LN2116-Emit_EmitNtarglist		# line 5545, column 73
	.data
.Lab1156:
 	.ascii	",%esp\000"
	.text
	pushl	$5
	leal	.Lab1156,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2117:
	.stabn  68,0,5545,.LN2117-Emit_EmitNtarglist		# line 5545, column 95
	call	CgAssOut_AssLn
.LN2118:
	.stabn  68,0,5546,.LN2118-Emit_EmitNtarglist		# line 5546, column 2
	.data
.Lab1157:
 	.ascii	"\011fstp\000"
	.text
	pushl	$5
	leal	.Lab1157,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2119:
	.stabn  68,0,5546,.LN2119-Emit_EmitNtarglist		# line 5546, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2120:
	.stabn  68,0,5546,.LN2120-Emit_EmitNtarglist		# line 5546, column 59
	.data
.Lab1158:
 	.ascii	"\011(%esp)\000"
	.text
	pushl	$7
	leal	.Lab1158,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2121:
	.stabn  68,0,5546,.LN2121-Emit_EmitNtarglist		# line 5546, column 84
	call	CgAssOut_AssLn
.LN2122:
	.stabn  68,0,5547,.LN2122-Emit_EmitNtarglist		# line 5547, column 9
	call	Emit_PopFStack
	jmp	.Lab1088
.Lab1092:
.LN2123:
	.stabn  68,0,5550,.LN2123-Emit_EmitNtarglist		# line 5550, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN2124:
	.stabn  68,0,5551,.LN2124-Emit_EmitNtarglist		# line 5551, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN2125:
	.stabn  68,0,5552,.LN2125-Emit_EmitNtarglist		# line 5552, column 10
	decl	Emit_s + 1536
.LN2126:
	.stabn  68,0,5553,.LN2126-Emit_EmitNtarglist		# line 5553, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1162
	cmpl	$4096,%eax
	jbe	.Lab1161
.Lab1162:
   	call	BoundErr_		
.Lab1161:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1159
.Lab1160:
.LN2127:
	.stabn  68,0,5554,.LN2127-Emit_EmitNtarglist		# line 5554, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1164
	cmpl	$4096,%eax
	jbe	.Lab1163
.Lab1164:
   	call	BoundErr_		
.Lab1163:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1159:
.LN2128:
	.stabn  68,0,5556,.LN2128-Emit_EmitNtarglist		# line 5556, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1165
.Lab1166:
.LN2129:
	.stabn  68,0,5557,.LN2129-Emit_EmitNtarglist		# line 5557, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2130:
	.stabn  68,0,5558,.LN2130-Emit_EmitNtarglist		# line 5558, column 11
	.data
.Lab1167:
 	.ascii	"Rule 275/2442 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1167,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2131:
	.stabn  68,0,5559,.LN2131-Emit_EmitNtarglist		# line 5559, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	144(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2132:
	.stabn  68,0,5560,.LN2132-Emit_EmitNtarglist		# line 5560, column 11
	.data
.Lab1168:
 	.ascii	" Pass ->   arglist\000"
	.text
	pushl	$18
	leal	.Lab1168,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2133:
	.stabn  68,0,5561,.LN2133-Emit_EmitNtarglist		# line 5561, column 11
	call	InOut_WriteLn
.LN2134:
	.stabn  68,0,5562,.LN2134-Emit_EmitNtarglist		# line 5562, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2135:
	.stabn  68,0,5563,.LN2135-Emit_EmitNtarglist		# line 5563, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2136:
	.stabn  68,0,5563,.LN2136-Emit_EmitNtarglist		# line 5563, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2137:
	.stabn  68,0,5564,.LN2137-Emit_EmitNtarglist		# line 5564, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1171
.Lab1170:
.LN2138:
	.stabn  68,0,5564,.LN2138-Emit_EmitNtarglist		# line 5564, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1169
.Lab1171:
.LN2139:
	.stabn  68,0,5564,.LN2139-Emit_EmitNtarglist		# line 5564, column 61
	call	InOut_WriteLn
.Lab1169:
.LN2140:
	.stabn  68,0,5565,.LN2140-Emit_EmitNtarglist		# line 5565, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2141:
	.stabn  68,0,5566,.LN2141-Emit_EmitNtarglist		# line 5566, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1173
	cmpl	$4096,%eax
	jbe	.Lab1172
.Lab1173:
   	call	BoundErr_		
.Lab1172:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1165:
.LN2142:
	.stabn  68,0,5569,.LN2142-Emit_EmitNtarglist		# line 5569, column 9
	addl	$4,-44(%ebp) 
.LN2143:
	.stabn  68,0,5570,.LN2143-Emit_EmitNtarglist		# line 5570, column 2
	.data
.Lab1174:
 	.ascii	"\011pushl\011\000"
	.text
	pushl	$7
	leal	.Lab1174,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2144:
	.stabn  68,0,5570,.LN2144-Emit_EmitNtarglist		# line 5570, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN2145:
	.stabn  68,0,5570,.LN2145-Emit_EmitNtarglist		# line 5570, column 56
	call	CgAssOut_AssLn
.LN2146:
	.stabn  68,0,5571,.LN2146-Emit_EmitNtarglist		# line 5571, column 9
	subl	$4,-44(%ebp) 
.LN2147:
	.stabn  68,0,5572,.LN2147-Emit_EmitNtarglist		# line 5572, column 2
	.data
.Lab1175:
 	.ascii	"\011pushl\011\000"
	.text
	pushl	$7
	leal	.Lab1175,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2148:
	.stabn  68,0,5572,.LN2148-Emit_EmitNtarglist		# line 5572, column 30
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN2149:
	.stabn  68,0,5572,.LN2149-Emit_EmitNtarglist		# line 5572, column 56
	call	CgAssOut_AssLn
	jmp	.Lab1088
.Lab1091:
.LN2150:
	.stabn  68,0,5575,.LN2150-Emit_EmitNtarglist		# line 5575, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN2151:
	.stabn  68,0,5576,.LN2151-Emit_EmitNtarglist		# line 5576, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2152:
	.stabn  68,0,5577,.LN2152-Emit_EmitNtarglist		# line 5577, column 10
	decl	Emit_s + 1536
.LN2153:
	.stabn  68,0,5578,.LN2153-Emit_EmitNtarglist		# line 5578, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1179
	cmpl	$4096,%eax
	jbe	.Lab1178
.Lab1179:
   	call	BoundErr_		
.Lab1178:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1176
.Lab1177:
.LN2154:
	.stabn  68,0,5579,.LN2154-Emit_EmitNtarglist		# line 5579, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1181
	cmpl	$4096,%eax
	jbe	.Lab1180
.Lab1181:
   	call	BoundErr_		
.Lab1180:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1176:
.LN2155:
	.stabn  68,0,5581,.LN2155-Emit_EmitNtarglist		# line 5581, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1182
.Lab1183:
.LN2156:
	.stabn  68,0,5582,.LN2156-Emit_EmitNtarglist		# line 5582, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2157:
	.stabn  68,0,5583,.LN2157-Emit_EmitNtarglist		# line 5583, column 11
	.data
.Lab1184:
 	.ascii	"Rule 276/2436 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1184,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2158:
	.stabn  68,0,5584,.LN2158-Emit_EmitNtarglist		# line 5584, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	144(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2159:
	.stabn  68,0,5585,.LN2159-Emit_EmitNtarglist		# line 5585, column 11
	.data
.Lab1185:
 	.ascii	" Pass ->   arglist\000"
	.text
	pushl	$18
	leal	.Lab1185,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2160:
	.stabn  68,0,5586,.LN2160-Emit_EmitNtarglist		# line 5586, column 11
	call	InOut_WriteLn
.LN2161:
	.stabn  68,0,5587,.LN2161-Emit_EmitNtarglist		# line 5587, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2162:
	.stabn  68,0,5588,.LN2162-Emit_EmitNtarglist		# line 5588, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2163:
	.stabn  68,0,5588,.LN2163-Emit_EmitNtarglist		# line 5588, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2164:
	.stabn  68,0,5589,.LN2164-Emit_EmitNtarglist		# line 5589, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1188
.Lab1187:
.LN2165:
	.stabn  68,0,5589,.LN2165-Emit_EmitNtarglist		# line 5589, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1186
.Lab1188:
.LN2166:
	.stabn  68,0,5589,.LN2166-Emit_EmitNtarglist		# line 5589, column 61
	call	InOut_WriteLn
.Lab1186:
.LN2167:
	.stabn  68,0,5590,.LN2167-Emit_EmitNtarglist		# line 5590, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2168:
	.stabn  68,0,5591,.LN2168-Emit_EmitNtarglist		# line 5591, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1190
	cmpl	$4096,%eax
	jbe	.Lab1189
.Lab1190:
   	call	BoundErr_		
.Lab1189:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1182:
.LN2169:
	.stabn  68,0,5594,.LN2169-Emit_EmitNtarglist		# line 5594, column 2
	.data
.Lab1191:
 	.ascii	"\011pushl\011$\000"
	.text
	pushl	$8
	leal	.Lab1191,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2170:
	.stabn  68,0,5594,.LN2170-Emit_EmitNtarglist		# line 5594, column 31
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2171:
	.stabn  68,0,5594,.LN2171-Emit_EmitNtarglist		# line 5594, column 72
	call	CgAssOut_AssLn
	jmp	.Lab1088
.Lab1090:
.LN2172:
	.stabn  68,0,5597,.LN2172-Emit_EmitNtarglist		# line 5597, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN2173:
	.stabn  68,0,5598,.LN2173-Emit_EmitNtarglist		# line 5598, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN2174:
	.stabn  68,0,5599,.LN2174-Emit_EmitNtarglist		# line 5599, column 10
	decl	Emit_s + 1536
.LN2175:
	.stabn  68,0,5600,.LN2175-Emit_EmitNtarglist		# line 5600, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1195
	cmpl	$4096,%eax
	jbe	.Lab1194
.Lab1195:
   	call	BoundErr_		
.Lab1194:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1192
.Lab1193:
.LN2176:
	.stabn  68,0,5601,.LN2176-Emit_EmitNtarglist		# line 5601, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1197
	cmpl	$4096,%eax
	jbe	.Lab1196
.Lab1197:
   	call	BoundErr_		
.Lab1196:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1192:
.LN2177:
	.stabn  68,0,5603,.LN2177-Emit_EmitNtarglist		# line 5603, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1198
.Lab1199:
.LN2178:
	.stabn  68,0,5604,.LN2178-Emit_EmitNtarglist		# line 5604, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2179:
	.stabn  68,0,5605,.LN2179-Emit_EmitNtarglist		# line 5605, column 11
	.data
.Lab1200:
 	.ascii	"Rule 277/2418 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1200,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2180:
	.stabn  68,0,5606,.LN2180-Emit_EmitNtarglist		# line 5606, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	144(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2181:
	.stabn  68,0,5607,.LN2181-Emit_EmitNtarglist		# line 5607, column 11
	.data
.Lab1201:
 	.ascii	" Pass ->   arglist\000"
	.text
	pushl	$18
	leal	.Lab1201,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2182:
	.stabn  68,0,5608,.LN2182-Emit_EmitNtarglist		# line 5608, column 11
	call	InOut_WriteLn
.LN2183:
	.stabn  68,0,5609,.LN2183-Emit_EmitNtarglist		# line 5609, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2184:
	.stabn  68,0,5610,.LN2184-Emit_EmitNtarglist		# line 5610, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2185:
	.stabn  68,0,5610,.LN2185-Emit_EmitNtarglist		# line 5610, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2186:
	.stabn  68,0,5611,.LN2186-Emit_EmitNtarglist		# line 5611, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1204
.Lab1203:
.LN2187:
	.stabn  68,0,5611,.LN2187-Emit_EmitNtarglist		# line 5611, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1202
.Lab1204:
.LN2188:
	.stabn  68,0,5611,.LN2188-Emit_EmitNtarglist		# line 5611, column 61
	call	InOut_WriteLn
.Lab1202:
.LN2189:
	.stabn  68,0,5612,.LN2189-Emit_EmitNtarglist		# line 5612, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2190:
	.stabn  68,0,5613,.LN2190-Emit_EmitNtarglist		# line 5613, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1206
	cmpl	$4096,%eax
	jbe	.Lab1205
.Lab1206:
   	call	BoundErr_		
.Lab1205:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1198:
.LN2191:
	.stabn  68,0,5616,.LN2191-Emit_EmitNtarglist		# line 5616, column 2
	.data
.Lab1207:
 	.ascii	"\011pushl\011\000"
	.text
	pushl	$7
	leal	.Lab1207,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2192:
	.stabn  68,0,5616,.LN2192-Emit_EmitNtarglist		# line 5616, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN2193:
	.stabn  68,0,5616,.LN2193-Emit_EmitNtarglist		# line 5616, column 66
	call	CgAssOut_AssLn
	jmp	.Lab1088
.Lab1089:
.LN2194:
	.stabn  68,0,5619,.LN2194-Emit_EmitNtarglist		# line 5619, column 10
	decl	Emit_s + 1536
.LN2195:
	.stabn  68,0,5620,.LN2195-Emit_EmitNtarglist		# line 5620, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1211
	cmpl	$4096,%eax
	jbe	.Lab1210
.Lab1211:
   	call	BoundErr_		
.Lab1210:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1208
.Lab1209:
.LN2196:
	.stabn  68,0,5621,.LN2196-Emit_EmitNtarglist		# line 5621, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1213
	cmpl	$4096,%eax
	jbe	.Lab1212
.Lab1213:
   	call	BoundErr_		
.Lab1212:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1208:
.LN2197:
	.stabn  68,0,5623,.LN2197-Emit_EmitNtarglist		# line 5623, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1214
.Lab1215:
.LN2198:
	.stabn  68,0,5624,.LN2198-Emit_EmitNtarglist		# line 5624, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2199:
	.stabn  68,0,5625,.LN2199-Emit_EmitNtarglist		# line 5625, column 11
	.data
.Lab1216:
 	.ascii	"Rule 278/2416 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1216,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2200:
	.stabn  68,0,5626,.LN2200-Emit_EmitNtarglist		# line 5626, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	144(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2201:
	.stabn  68,0,5627,.LN2201-Emit_EmitNtarglist		# line 5627, column 11
	.data
.Lab1217:
 	.ascii	" Nil ->   arglist\000"
	.text
	pushl	$17
	leal	.Lab1217,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2202:
	.stabn  68,0,5628,.LN2202-Emit_EmitNtarglist		# line 5628, column 11
	call	InOut_WriteLn
.LN2203:
	.stabn  68,0,5629,.LN2203-Emit_EmitNtarglist		# line 5629, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2204:
	.stabn  68,0,5630,.LN2204-Emit_EmitNtarglist		# line 5630, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2205:
	.stabn  68,0,5630,.LN2205-Emit_EmitNtarglist		# line 5630, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2206:
	.stabn  68,0,5631,.LN2206-Emit_EmitNtarglist		# line 5631, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1220
.Lab1219:
.LN2207:
	.stabn  68,0,5631,.LN2207-Emit_EmitNtarglist		# line 5631, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1218
.Lab1220:
.LN2208:
	.stabn  68,0,5631,.LN2208-Emit_EmitNtarglist		# line 5631, column 61
	call	InOut_WriteLn
.Lab1218:
.LN2209:
	.stabn  68,0,5632,.LN2209-Emit_EmitNtarglist		# line 5632, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2210:
	.stabn  68,0,5633,.LN2210-Emit_EmitNtarglist		# line 5633, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1222
	cmpl	$4096,%eax
	jbe	.Lab1221
.Lab1222:
   	call	BoundErr_		
.Lab1221:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1214:
	jmp	.Lab1088
.Lab1087:
	call	CaseErr_
.Lab1088:
.LN2211:
	.stabn  68,0,5637,.LN2211-Emit_EmitNtarglist		# line 5637, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1223
.Lab1224:
.LN2212:
	.stabn  68,0,5638,.LN2212-Emit_EmitNtarglist		# line 5638, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2213:
	.stabn  68,0,5639,.LN2213-Emit_EmitNtarglist		# line 5639, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrarglist
	addl	$20, %esp
.LN2214:
	.stabn  68,0,5640,.LN2214-Emit_EmitNtarglist		# line 5640, column 8
	call	InOut_WriteLn
.Lab1223:
.LN2215:
	.stabn  68,0,5641,.LN2215-Emit_EmitNtarglist		# line 5641, column 0
.LBE4:
	leave
	ret
	.Lab1086 = 44
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB4-Emit_EmitNtarglist
	.stabn 224,0,0,.LBE4-Emit_EmitNtarglist
	.stabs "Emit_EmitNtRegOrCMemOrIm:F16",36,0,0,Emit_EmitNtRegOrCMemOrIm
	.align 4
Emit_EmitNtRegOrCMemOrIm:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1225, %esp
.LN2216:
	.stabn  68,0,5410,.LN2216-Emit_EmitNtRegOrCMemOrIm		# line 5410, column 1
.LBB5:
.LN2217:
	.stabn  68,0,5411,.LN2217-Emit_EmitNtRegOrCMemOrIm		# line 5411, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	204(%eax),%eax
	.data
	.align 4
.Lab1230:
	.long	.Lab1229
	.long	.Lab1228
	.text
	subl	$270,%eax
	jb	.Lab1226
	cmpl	$1,%eax
	ja	.Lab1226
	jmp	*.Lab1230(,%eax,4)
.Lab1229:
.LN2218:
	.stabn  68,0,5413,.LN2218-Emit_EmitNtRegOrCMemOrIm		# line 5413, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2219:
	.stabn  68,0,5414,.LN2219-Emit_EmitNtRegOrCMemOrIm		# line 5414, column 10
	decl	Emit_s + 1536
.LN2220:
	.stabn  68,0,5415,.LN2220-Emit_EmitNtRegOrCMemOrIm		# line 5415, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1234
	cmpl	$4096,%eax
	jbe	.Lab1233
.Lab1234:
   	call	BoundErr_		
.Lab1233:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1231
.Lab1232:
.LN2221:
	.stabn  68,0,5416,.LN2221-Emit_EmitNtRegOrCMemOrIm		# line 5416, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1236
	cmpl	$4096,%eax
	jbe	.Lab1235
.Lab1236:
   	call	BoundErr_		
.Lab1235:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1231:
.LN2222:
	.stabn  68,0,5418,.LN2222-Emit_EmitNtRegOrCMemOrIm		# line 5418, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1237
.Lab1238:
.LN2223:
	.stabn  68,0,5419,.LN2223-Emit_EmitNtRegOrCMemOrIm		# line 5419, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2224:
	.stabn  68,0,5420,.LN2224-Emit_EmitNtRegOrCMemOrIm		# line 5420, column 11
	.data
.Lab1239:
 	.ascii	"Rule 270/424 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1239,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2225:
	.stabn  68,0,5421,.LN2225-Emit_EmitNtRegOrCMemOrIm		# line 5421, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	140(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2226:
	.stabn  68,0,5422,.LN2226-Emit_EmitNtRegOrCMemOrIm		# line 5422, column 11
	.data
.Lab1240:
 	.ascii	" Constant ->   RegOrCMemOrIm\000"
	.text
	pushl	$28
	leal	.Lab1240,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2227:
	.stabn  68,0,5423,.LN2227-Emit_EmitNtRegOrCMemOrIm		# line 5423, column 11
	call	InOut_WriteLn
.LN2228:
	.stabn  68,0,5424,.LN2228-Emit_EmitNtRegOrCMemOrIm		# line 5424, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2229:
	.stabn  68,0,5425,.LN2229-Emit_EmitNtRegOrCMemOrIm		# line 5425, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2230:
	.stabn  68,0,5425,.LN2230-Emit_EmitNtRegOrCMemOrIm		# line 5425, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2231:
	.stabn  68,0,5426,.LN2231-Emit_EmitNtRegOrCMemOrIm		# line 5426, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1243
.Lab1242:
.LN2232:
	.stabn  68,0,5426,.LN2232-Emit_EmitNtRegOrCMemOrIm		# line 5426, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1241
.Lab1243:
.LN2233:
	.stabn  68,0,5426,.LN2233-Emit_EmitNtRegOrCMemOrIm		# line 5426, column 61
	call	InOut_WriteLn
.Lab1241:
.LN2234:
	.stabn  68,0,5427,.LN2234-Emit_EmitNtRegOrCMemOrIm		# line 5427, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2235:
	.stabn  68,0,5428,.LN2235-Emit_EmitNtRegOrCMemOrIm		# line 5428, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1245
	cmpl	$4096,%eax
	jbe	.Lab1244
.Lab1245:
   	call	BoundErr_		
.Lab1244:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1237:
.LN2236:
	.stabn  68,0,5430,.LN2236-Emit_EmitNtRegOrCMemOrIm		# line 5430, column 39
	movl	16(%ebp),%eax
	movb	$0,1(%eax) 
.LN2237:
	.stabn  68,0,5431,.LN2237-Emit_EmitNtRegOrCMemOrIm		# line 5431, column 48
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movb	12(%eax),%al
	movb	%al,(%ebx) 
.LN2238:
	.stabn  68,0,5432,.LN2238-Emit_EmitNtRegOrCMemOrIm		# line 5432, column 51
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1227
.Lab1228:
.LN2239:
	.stabn  68,0,5434,.LN2239-Emit_EmitNtRegOrCMemOrIm		# line 5434, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN2240:
	.stabn  68,0,5435,.LN2240-Emit_EmitNtRegOrCMemOrIm		# line 5435, column 10
	decl	Emit_s + 1536
.LN2241:
	.stabn  68,0,5436,.LN2241-Emit_EmitNtRegOrCMemOrIm		# line 5436, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1249
	cmpl	$4096,%eax
	jbe	.Lab1248
.Lab1249:
   	call	BoundErr_		
.Lab1248:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1246
.Lab1247:
.LN2242:
	.stabn  68,0,5437,.LN2242-Emit_EmitNtRegOrCMemOrIm		# line 5437, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1251
	cmpl	$4096,%eax
	jbe	.Lab1250
.Lab1251:
   	call	BoundErr_		
.Lab1250:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1246:
.LN2243:
	.stabn  68,0,5439,.LN2243-Emit_EmitNtRegOrCMemOrIm		# line 5439, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1252
.Lab1253:
.LN2244:
	.stabn  68,0,5440,.LN2244-Emit_EmitNtRegOrCMemOrIm		# line 5440, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2245:
	.stabn  68,0,5441,.LN2245-Emit_EmitNtRegOrCMemOrIm		# line 5441, column 11
	.data
.Lab1254:
 	.ascii	"Rule 271/409 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1254,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2246:
	.stabn  68,0,5442,.LN2246-Emit_EmitNtRegOrCMemOrIm		# line 5442, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	140(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2247:
	.stabn  68,0,5443,.LN2247-Emit_EmitNtRegOrCMemOrIm		# line 5443, column 11
	.data
.Lab1255:
 	.ascii	" RegOrCMem ->   RegOrCMemOrIm\000"
	.text
	pushl	$29
	leal	.Lab1255,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2248:
	.stabn  68,0,5444,.LN2248-Emit_EmitNtRegOrCMemOrIm		# line 5444, column 11
	call	InOut_WriteLn
.LN2249:
	.stabn  68,0,5445,.LN2249-Emit_EmitNtRegOrCMemOrIm		# line 5445, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2250:
	.stabn  68,0,5446,.LN2250-Emit_EmitNtRegOrCMemOrIm		# line 5446, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2251:
	.stabn  68,0,5446,.LN2251-Emit_EmitNtRegOrCMemOrIm		# line 5446, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2252:
	.stabn  68,0,5447,.LN2252-Emit_EmitNtRegOrCMemOrIm		# line 5447, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1258
.Lab1257:
.LN2253:
	.stabn  68,0,5447,.LN2253-Emit_EmitNtRegOrCMemOrIm		# line 5447, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1256
.Lab1258:
.LN2254:
	.stabn  68,0,5447,.LN2254-Emit_EmitNtRegOrCMemOrIm		# line 5447, column 61
	call	InOut_WriteLn
.Lab1256:
.LN2255:
	.stabn  68,0,5448,.LN2255-Emit_EmitNtRegOrCMemOrIm		# line 5448, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2256:
	.stabn  68,0,5449,.LN2256-Emit_EmitNtRegOrCMemOrIm		# line 5449, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1260
	cmpl	$4096,%eax
	jbe	.Lab1259
.Lab1260:
   	call	BoundErr_		
.Lab1259:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1252:
.LN2257:
	.stabn  68,0,5451,.LN2257-Emit_EmitNtRegOrCMemOrIm		# line 5451, column 38
	movl	16(%ebp),%ebx
	movb	-23(%ebp),%al
	movb	%al,1(%ebx) 
.LN2258:
	.stabn  68,0,5452,.LN2258-Emit_EmitNtRegOrCMemOrIm		# line 5452, column 47
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movb	84(%eax),%al
	movb	%al,(%ebx) 
.LN2259:
	.stabn  68,0,5453,.LN2259-Emit_EmitNtRegOrCMemOrIm		# line 5453, column 11
	cmpb	$1,-23(%ebp)
	jne	.Lab1263
.Lab1262:
.LN2260:
	.stabn  68,0,5454,.LN2260-Emit_EmitNtRegOrCMemOrIm		# line 5454, column 53
	movl	16(%ebp),%ebx
	movb	-22(%ebp),%al
	movb	%al,2(%ebx) 
	jmp	.Lab1261
.Lab1263:
.LN2261:
	.stabn  68,0,5455,.LN2261-Emit_EmitNtRegOrCMemOrIm		# line 5455, column 53
	movl	16(%ebp),%eax
	leal	-20(%ebp),%esi
	leal	4(%eax),%edi
	movl	$4,%ecx
	cld
	repz
	movsl
.Lab1261:
	jmp	.Lab1227
.Lab1226:
	call	CaseErr_
.Lab1227:
.LN2262:
	.stabn  68,0,5458,.LN2262-Emit_EmitNtRegOrCMemOrIm		# line 5458, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1264
.Lab1265:
.LN2263:
	.stabn  68,0,5459,.LN2263-Emit_EmitNtRegOrCMemOrIm		# line 5459, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2264:
	.stabn  68,0,5460,.LN2264-Emit_EmitNtRegOrCMemOrIm		# line 5460, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrRegOrCMemOrIm
	addl	$20, %esp
.LN2265:
	.stabn  68,0,5461,.LN2265-Emit_EmitNtRegOrCMemOrIm		# line 5461, column 8
	call	InOut_WriteLn
.Lab1264:
.LN2266:
	.stabn  68,0,5462,.LN2266-Emit_EmitNtRegOrCMemOrIm		# line 5462, column 0
.LBE5:
	leave
	ret
	.Lab1225 = 24
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB5-Emit_EmitNtRegOrCMemOrIm
	.stabn 224,0,0,.LBE5-Emit_EmitNtRegOrCMemOrIm
	.stabs "Emit_EmitNtRegOrCMem:F16",36,0,0,Emit_EmitNtRegOrCMem
	.align 4
Emit_EmitNtRegOrCMem:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1266, %esp
.LN2267:
	.stabn  68,0,5353,.LN2267-Emit_EmitNtRegOrCMem		# line 5353, column 1
.LBB6:
.LN2268:
	.stabn  68,0,5354,.LN2268-Emit_EmitNtRegOrCMem		# line 5354, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	200(%eax),%eax
	.data
	.align 4
.Lab1271:
	.long	.Lab1270
	.long	.Lab1269
	.text
	subl	$268,%eax
	jb	.Lab1267
	cmpl	$1,%eax
	ja	.Lab1267
	jmp	*.Lab1271(,%eax,4)
.Lab1270:
.LN2269:
	.stabn  68,0,5356,.LN2269-Emit_EmitNtRegOrCMem		# line 5356, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN2270:
	.stabn  68,0,5357,.LN2270-Emit_EmitNtRegOrCMem		# line 5357, column 10
	decl	Emit_s + 1536
.LN2271:
	.stabn  68,0,5358,.LN2271-Emit_EmitNtRegOrCMem		# line 5358, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1275
	cmpl	$4096,%eax
	jbe	.Lab1274
.Lab1275:
   	call	BoundErr_		
.Lab1274:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1272
.Lab1273:
.LN2272:
	.stabn  68,0,5359,.LN2272-Emit_EmitNtRegOrCMem		# line 5359, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1277
	cmpl	$4096,%eax
	jbe	.Lab1276
.Lab1277:
   	call	BoundErr_		
.Lab1276:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1272:
.LN2273:
	.stabn  68,0,5361,.LN2273-Emit_EmitNtRegOrCMem		# line 5361, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1278
.Lab1279:
.LN2274:
	.stabn  68,0,5362,.LN2274-Emit_EmitNtRegOrCMem		# line 5362, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2275:
	.stabn  68,0,5363,.LN2275-Emit_EmitNtRegOrCMem		# line 5363, column 11
	.data
.Lab1280:
 	.ascii	"Rule 268/403 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1280,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2276:
	.stabn  68,0,5364,.LN2276-Emit_EmitNtRegOrCMem		# line 5364, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	136(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2277:
	.stabn  68,0,5365,.LN2277-Emit_EmitNtRegOrCMem		# line 5365, column 11
	.data
.Lab1281:
 	.ascii	" CMem ->   RegOrCMem\000"
	.text
	pushl	$20
	leal	.Lab1281,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2278:
	.stabn  68,0,5366,.LN2278-Emit_EmitNtRegOrCMem		# line 5366, column 11
	call	InOut_WriteLn
.LN2279:
	.stabn  68,0,5367,.LN2279-Emit_EmitNtRegOrCMem		# line 5367, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2280:
	.stabn  68,0,5368,.LN2280-Emit_EmitNtRegOrCMem		# line 5368, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2281:
	.stabn  68,0,5368,.LN2281-Emit_EmitNtRegOrCMem		# line 5368, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2282:
	.stabn  68,0,5369,.LN2282-Emit_EmitNtRegOrCMem		# line 5369, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1284
.Lab1283:
.LN2283:
	.stabn  68,0,5369,.LN2283-Emit_EmitNtRegOrCMem		# line 5369, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1282
.Lab1284:
.LN2284:
	.stabn  68,0,5369,.LN2284-Emit_EmitNtRegOrCMem		# line 5369, column 61
	call	InOut_WriteLn
.Lab1282:
.LN2285:
	.stabn  68,0,5370,.LN2285-Emit_EmitNtRegOrCMem		# line 5370, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2286:
	.stabn  68,0,5371,.LN2286-Emit_EmitNtRegOrCMem		# line 5371, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1286
	cmpl	$4096,%eax
	jbe	.Lab1285
.Lab1286:
   	call	BoundErr_		
.Lab1285:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1278:
.LN2287:
	.stabn  68,0,5373,.LN2287-Emit_EmitNtRegOrCMem		# line 5373, column 34
	movl	16(%ebp),%eax
	movb	$2,1(%eax) 
.LN2288:
	.stabn  68,0,5374,.LN2288-Emit_EmitNtRegOrCMem		# line 5374, column 43
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movb	82(%eax),%al
	movb	%al,(%ebx) 
.LN2289:
	.stabn  68,0,5375,.LN2289-Emit_EmitNtRegOrCMem		# line 5375, column 43
	movl	16(%ebp),%eax
	leal	-24(%ebp),%esi
	leal	4(%eax),%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	jmp	.Lab1268
.Lab1269:
.LN2290:
	.stabn  68,0,5377,.LN2290-Emit_EmitNtRegOrCMem		# line 5377, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2291:
	.stabn  68,0,5378,.LN2291-Emit_EmitNtRegOrCMem		# line 5378, column 10
	decl	Emit_s + 1536
.LN2292:
	.stabn  68,0,5379,.LN2292-Emit_EmitNtRegOrCMem		# line 5379, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1290
	cmpl	$4096,%eax
	jbe	.Lab1289
.Lab1290:
   	call	BoundErr_		
.Lab1289:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1287
.Lab1288:
.LN2293:
	.stabn  68,0,5380,.LN2293-Emit_EmitNtRegOrCMem		# line 5380, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1292
	cmpl	$4096,%eax
	jbe	.Lab1291
.Lab1292:
   	call	BoundErr_		
.Lab1291:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1287:
.LN2294:
	.stabn  68,0,5382,.LN2294-Emit_EmitNtRegOrCMem		# line 5382, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1293
.Lab1294:
.LN2295:
	.stabn  68,0,5383,.LN2295-Emit_EmitNtRegOrCMem		# line 5383, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2296:
	.stabn  68,0,5384,.LN2296-Emit_EmitNtRegOrCMem		# line 5384, column 11
	.data
.Lab1295:
 	.ascii	"Rule 269/397 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1295,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2297:
	.stabn  68,0,5385,.LN2297-Emit_EmitNtRegOrCMem		# line 5385, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	136(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2298:
	.stabn  68,0,5386,.LN2298-Emit_EmitNtRegOrCMem		# line 5386, column 11
	.data
.Lab1296:
 	.ascii	" reg ->   RegOrCMem\000"
	.text
	pushl	$19
	leal	.Lab1296,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2299:
	.stabn  68,0,5387,.LN2299-Emit_EmitNtRegOrCMem		# line 5387, column 11
	call	InOut_WriteLn
.LN2300:
	.stabn  68,0,5388,.LN2300-Emit_EmitNtRegOrCMem		# line 5388, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2301:
	.stabn  68,0,5389,.LN2301-Emit_EmitNtRegOrCMem		# line 5389, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2302:
	.stabn  68,0,5389,.LN2302-Emit_EmitNtRegOrCMem		# line 5389, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2303:
	.stabn  68,0,5390,.LN2303-Emit_EmitNtRegOrCMem		# line 5390, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1299
.Lab1298:
.LN2304:
	.stabn  68,0,5390,.LN2304-Emit_EmitNtRegOrCMem		# line 5390, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1297
.Lab1299:
.LN2305:
	.stabn  68,0,5390,.LN2305-Emit_EmitNtRegOrCMem		# line 5390, column 61
	call	InOut_WriteLn
.Lab1297:
.LN2306:
	.stabn  68,0,5391,.LN2306-Emit_EmitNtRegOrCMem		# line 5391, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2307:
	.stabn  68,0,5392,.LN2307-Emit_EmitNtRegOrCMem		# line 5392, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1301
	cmpl	$4096,%eax
	jbe	.Lab1300
.Lab1301:
   	call	BoundErr_		
.Lab1300:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1293:
.LN2308:
	.stabn  68,0,5394,.LN2308-Emit_EmitNtRegOrCMem		# line 5394, column 34
	movl	16(%ebp),%eax
	movb	$1,1(%eax) 
.LN2309:
	.stabn  68,0,5395,.LN2309-Emit_EmitNtRegOrCMem		# line 5395, column 43
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movb	4(%eax),%al
	movb	%al,(%ebx) 
.LN2310:
	.stabn  68,0,5396,.LN2310-Emit_EmitNtRegOrCMem		# line 5396, column 43
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1303
	cmpl	$4096,%eax
	jbe	.Lab1302
.Lab1303:
   	call	BoundErr_		
.Lab1302:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,2(%ebx) 
	jmp	.Lab1268
.Lab1267:
	call	CaseErr_
.Lab1268:
.LN2311:
	.stabn  68,0,5398,.LN2311-Emit_EmitNtRegOrCMem		# line 5398, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1304
.Lab1305:
.LN2312:
	.stabn  68,0,5399,.LN2312-Emit_EmitNtRegOrCMem		# line 5399, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2313:
	.stabn  68,0,5400,.LN2313-Emit_EmitNtRegOrCMem		# line 5400, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrRegOrCMem
	addl	$20, %esp
.LN2314:
	.stabn  68,0,5401,.LN2314-Emit_EmitNtRegOrCMem		# line 5401, column 8
	call	InOut_WriteLn
.Lab1304:
.LN2315:
	.stabn  68,0,5402,.LN2315-Emit_EmitNtRegOrCMem		# line 5402, column 0
.LBE6:
	leave
	ret
	.Lab1266 = 24
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB6-Emit_EmitNtRegOrCMem
	.stabn 224,0,0,.LBE6-Emit_EmitNtRegOrCMem
	.stabs "Emit_EmitNtRegOrIm:F16",36,0,0,Emit_EmitNtRegOrIm
	.align 4
Emit_EmitNtRegOrIm:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1306, %esp
.LN2316:
	.stabn  68,0,5296,.LN2316-Emit_EmitNtRegOrIm		# line 5296, column 1
.LBB7:
.LN2317:
	.stabn  68,0,5297,.LN2317-Emit_EmitNtRegOrIm		# line 5297, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	196(%eax),%eax
	.data
	.align 4
.Lab1311:
	.long	.Lab1310
	.long	.Lab1309
	.text
	subl	$266,%eax
	jb	.Lab1307
	cmpl	$1,%eax
	ja	.Lab1307
	jmp	*.Lab1311(,%eax,4)
.Lab1310:
.LN2318:
	.stabn  68,0,5299,.LN2318-Emit_EmitNtRegOrIm		# line 5299, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2319:
	.stabn  68,0,5300,.LN2319-Emit_EmitNtRegOrIm		# line 5300, column 10
	decl	Emit_s + 1536
.LN2320:
	.stabn  68,0,5301,.LN2320-Emit_EmitNtRegOrIm		# line 5301, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1315
	cmpl	$4096,%eax
	jbe	.Lab1314
.Lab1315:
   	call	BoundErr_		
.Lab1314:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1312
.Lab1313:
.LN2321:
	.stabn  68,0,5302,.LN2321-Emit_EmitNtRegOrIm		# line 5302, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1317
	cmpl	$4096,%eax
	jbe	.Lab1316
.Lab1317:
   	call	BoundErr_		
.Lab1316:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1312:
.LN2322:
	.stabn  68,0,5304,.LN2322-Emit_EmitNtRegOrIm		# line 5304, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1318
.Lab1319:
.LN2323:
	.stabn  68,0,5305,.LN2323-Emit_EmitNtRegOrIm		# line 5305, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2324:
	.stabn  68,0,5306,.LN2324-Emit_EmitNtRegOrIm		# line 5306, column 11
	.data
.Lab1320:
 	.ascii	"Rule 266/418 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1320,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2325:
	.stabn  68,0,5307,.LN2325-Emit_EmitNtRegOrIm		# line 5307, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	132(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2326:
	.stabn  68,0,5308,.LN2326-Emit_EmitNtRegOrIm		# line 5308, column 11
	.data
.Lab1321:
 	.ascii	" Constant ->   RegOrIm\000"
	.text
	pushl	$22
	leal	.Lab1321,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2327:
	.stabn  68,0,5309,.LN2327-Emit_EmitNtRegOrIm		# line 5309, column 11
	call	InOut_WriteLn
.LN2328:
	.stabn  68,0,5310,.LN2328-Emit_EmitNtRegOrIm		# line 5310, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2329:
	.stabn  68,0,5311,.LN2329-Emit_EmitNtRegOrIm		# line 5311, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2330:
	.stabn  68,0,5311,.LN2330-Emit_EmitNtRegOrIm		# line 5311, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2331:
	.stabn  68,0,5312,.LN2331-Emit_EmitNtRegOrIm		# line 5312, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1324
.Lab1323:
.LN2332:
	.stabn  68,0,5312,.LN2332-Emit_EmitNtRegOrIm		# line 5312, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1322
.Lab1324:
.LN2333:
	.stabn  68,0,5312,.LN2333-Emit_EmitNtRegOrIm		# line 5312, column 61
	call	InOut_WriteLn
.Lab1322:
.LN2334:
	.stabn  68,0,5313,.LN2334-Emit_EmitNtRegOrIm		# line 5313, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2335:
	.stabn  68,0,5314,.LN2335-Emit_EmitNtRegOrIm		# line 5314, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1326
	cmpl	$4096,%eax
	jbe	.Lab1325
.Lab1326:
   	call	BoundErr_		
.Lab1325:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1318:
.LN2336:
	.stabn  68,0,5316,.LN2336-Emit_EmitNtRegOrIm		# line 5316, column 33
	movl	16(%ebp),%eax
	movb	$0,1(%eax) 
.LN2337:
	.stabn  68,0,5317,.LN2337-Emit_EmitNtRegOrIm		# line 5317, column 42
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movb	12(%eax),%al
	movb	%al,(%ebx) 
.LN2338:
	.stabn  68,0,5318,.LN2338-Emit_EmitNtRegOrIm		# line 5318, column 45
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1308
.Lab1309:
.LN2339:
	.stabn  68,0,5320,.LN2339-Emit_EmitNtRegOrIm		# line 5320, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2340:
	.stabn  68,0,5321,.LN2340-Emit_EmitNtRegOrIm		# line 5321, column 10
	decl	Emit_s + 1536
.LN2341:
	.stabn  68,0,5322,.LN2341-Emit_EmitNtRegOrIm		# line 5322, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1330
	cmpl	$4096,%eax
	jbe	.Lab1329
.Lab1330:
   	call	BoundErr_		
.Lab1329:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1327
.Lab1328:
.LN2342:
	.stabn  68,0,5323,.LN2342-Emit_EmitNtRegOrIm		# line 5323, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1332
	cmpl	$4096,%eax
	jbe	.Lab1331
.Lab1332:
   	call	BoundErr_		
.Lab1331:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1327:
.LN2343:
	.stabn  68,0,5325,.LN2343-Emit_EmitNtRegOrIm		# line 5325, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1333
.Lab1334:
.LN2344:
	.stabn  68,0,5326,.LN2344-Emit_EmitNtRegOrIm		# line 5326, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2345:
	.stabn  68,0,5327,.LN2345-Emit_EmitNtRegOrIm		# line 5327, column 11
	.data
.Lab1335:
 	.ascii	"Rule 267/391 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1335,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2346:
	.stabn  68,0,5328,.LN2346-Emit_EmitNtRegOrIm		# line 5328, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	132(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2347:
	.stabn  68,0,5329,.LN2347-Emit_EmitNtRegOrIm		# line 5329, column 11
	.data
.Lab1336:
 	.ascii	" reg ->   RegOrIm\000"
	.text
	pushl	$17
	leal	.Lab1336,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2348:
	.stabn  68,0,5330,.LN2348-Emit_EmitNtRegOrIm		# line 5330, column 11
	call	InOut_WriteLn
.LN2349:
	.stabn  68,0,5331,.LN2349-Emit_EmitNtRegOrIm		# line 5331, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2350:
	.stabn  68,0,5332,.LN2350-Emit_EmitNtRegOrIm		# line 5332, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2351:
	.stabn  68,0,5332,.LN2351-Emit_EmitNtRegOrIm		# line 5332, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2352:
	.stabn  68,0,5333,.LN2352-Emit_EmitNtRegOrIm		# line 5333, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1339
.Lab1338:
.LN2353:
	.stabn  68,0,5333,.LN2353-Emit_EmitNtRegOrIm		# line 5333, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1337
.Lab1339:
.LN2354:
	.stabn  68,0,5333,.LN2354-Emit_EmitNtRegOrIm		# line 5333, column 61
	call	InOut_WriteLn
.Lab1337:
.LN2355:
	.stabn  68,0,5334,.LN2355-Emit_EmitNtRegOrIm		# line 5334, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2356:
	.stabn  68,0,5335,.LN2356-Emit_EmitNtRegOrIm		# line 5335, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1341
	cmpl	$4096,%eax
	jbe	.Lab1340
.Lab1341:
   	call	BoundErr_		
.Lab1340:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1333:
.LN2357:
	.stabn  68,0,5337,.LN2357-Emit_EmitNtRegOrIm		# line 5337, column 32
	movl	16(%ebp),%eax
	movb	$1,1(%eax) 
.LN2358:
	.stabn  68,0,5338,.LN2358-Emit_EmitNtRegOrIm		# line 5338, column 41
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movb	4(%eax),%al
	movb	%al,(%ebx) 
.LN2359:
	.stabn  68,0,5339,.LN2359-Emit_EmitNtRegOrIm		# line 5339, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1343
	cmpl	$4096,%eax
	jbe	.Lab1342
.Lab1343:
   	call	BoundErr_		
.Lab1342:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,2(%ebx) 
	jmp	.Lab1308
.Lab1307:
	call	CaseErr_
.Lab1308:
.LN2360:
	.stabn  68,0,5341,.LN2360-Emit_EmitNtRegOrIm		# line 5341, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1344
.Lab1345:
.LN2361:
	.stabn  68,0,5342,.LN2361-Emit_EmitNtRegOrIm		# line 5342, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2362:
	.stabn  68,0,5343,.LN2362-Emit_EmitNtRegOrIm		# line 5343, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrRegOrIm
	addl	$20, %esp
.LN2363:
	.stabn  68,0,5344,.LN2363-Emit_EmitNtRegOrIm		# line 5344, column 8
	call	InOut_WriteLn
.Lab1344:
.LN2364:
	.stabn  68,0,5345,.LN2364-Emit_EmitNtRegOrIm		# line 5345, column 0
.LBE7:
	leave
	ret
	.Lab1306 = 24
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB7-Emit_EmitNtRegOrIm
	.stabn 224,0,0,.LBE7-Emit_EmitNtRegOrIm
	.stabs "Emit_EmitNtCMem:F16",36,0,0,Emit_EmitNtCMem
	.align 4
Emit_EmitNtCMem:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1346, %esp
.LN2365:
	.stabn  68,0,5095,.LN2365-Emit_EmitNtCMem		# line 5095, column 1
.LBB8:
.LN2366:
	.stabn  68,0,5096,.LN2366-Emit_EmitNtCMem		# line 5096, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	192(%eax),%eax
	.data
	.align 4
.Lab1356:
	.long	.Lab1355
	.long	.Lab1354
	.long	.Lab1353
	.long	.Lab1352
	.long	.Lab1351
	.long	.Lab1350
	.long	.Lab1349
	.text
	subl	$259,%eax
	jb	.Lab1347
	cmpl	$6,%eax
	ja	.Lab1347
	jmp	*.Lab1356(,%eax,4)
.Lab1355:
.LN2367:
	.stabn  68,0,5098,.LN2367-Emit_EmitNtCMem		# line 5098, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN2368:
	.stabn  68,0,5099,.LN2368-Emit_EmitNtCMem		# line 5099, column 10
	decl	Emit_s + 1536
.LN2369:
	.stabn  68,0,5100,.LN2369-Emit_EmitNtCMem		# line 5100, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1360
	cmpl	$4096,%eax
	jbe	.Lab1359
.Lab1360:
   	call	BoundErr_		
.Lab1359:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1357
.Lab1358:
.LN2370:
	.stabn  68,0,5101,.LN2370-Emit_EmitNtCMem		# line 5101, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1362
	cmpl	$4096,%eax
	jbe	.Lab1361
.Lab1362:
   	call	BoundErr_		
.Lab1361:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1357:
.LN2371:
	.stabn  68,0,5103,.LN2371-Emit_EmitNtCMem		# line 5103, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1363
.Lab1364:
.LN2372:
	.stabn  68,0,5104,.LN2372-Emit_EmitNtCMem		# line 5104, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2373:
	.stabn  68,0,5105,.LN2373-Emit_EmitNtCMem		# line 5105, column 11
	.data
.Lab1365:
 	.ascii	"Rule 259/1917 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1365,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2374:
	.stabn  68,0,5106,.LN2374-Emit_EmitNtCMem		# line 5106, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	128(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2375:
	.stabn  68,0,5107,.LN2375-Emit_EmitNtCMem		# line 5107, column 11
	.data
.Lab1366:
 	.ascii	" Coerce ->   CMem\000"
	.text
	pushl	$17
	leal	.Lab1366,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2376:
	.stabn  68,0,5108,.LN2376-Emit_EmitNtCMem		# line 5108, column 11
	call	InOut_WriteLn
.LN2377:
	.stabn  68,0,5109,.LN2377-Emit_EmitNtCMem		# line 5109, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2378:
	.stabn  68,0,5110,.LN2378-Emit_EmitNtCMem		# line 5110, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2379:
	.stabn  68,0,5110,.LN2379-Emit_EmitNtCMem		# line 5110, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2380:
	.stabn  68,0,5111,.LN2380-Emit_EmitNtCMem		# line 5111, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1369
.Lab1368:
.LN2381:
	.stabn  68,0,5111,.LN2381-Emit_EmitNtCMem		# line 5111, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1367
.Lab1369:
.LN2382:
	.stabn  68,0,5111,.LN2382-Emit_EmitNtCMem		# line 5111, column 61
	call	InOut_WriteLn
.Lab1367:
.LN2383:
	.stabn  68,0,5112,.LN2383-Emit_EmitNtCMem		# line 5112, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2384:
	.stabn  68,0,5113,.LN2384-Emit_EmitNtCMem		# line 5113, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1371
	cmpl	$4096,%eax
	jbe	.Lab1370
.Lab1371:
   	call	BoundErr_		
.Lab1370:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1363:
.LN2385:
	.stabn  68,0,5116,.LN2385-Emit_EmitNtCMem		# line 5116, column 9
	call	Emit_DeclareTransferTempo
.LN2386:
	.stabn  68,0,5117,.LN2386-Emit_EmitNtCMem		# line 5117, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 608,%eax
	movl	%eax,(%ebx) 
.LN2387:
	.stabn  68,0,5118,.LN2387-Emit_EmitNtCMem		# line 5118, column 41
	movl	16(%ebp),%eax
	movl	$0,4(%eax) 
.LN2388:
	.stabn  68,0,5119,.LN2388-Emit_EmitNtCMem		# line 5119, column 41
	movl	16(%ebp),%eax
	movb	$7,8(%eax) 
.LN2389:
	.stabn  68,0,5120,.LN2389-Emit_EmitNtCMem		# line 5120, column 41
	movl	16(%ebp),%eax
	movb	$0,9(%eax) 
.LN2390:
	.stabn  68,0,5121,.LN2390-Emit_EmitNtCMem		# line 5121, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
.LN2391:
	.stabn  68,0,5122,.LN2391-Emit_EmitNtCMem		# line 5122, column 2
	.data
.Lab1372:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab1372,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2392:
	.stabn  68,0,5122,.LN2392-Emit_EmitNtCMem		# line 5122, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2393:
	.stabn  68,0,5122,.LN2393-Emit_EmitNtCMem		# line 5122, column 63
	.data
.Lab1373:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab1373,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2394:
	.stabn  68,0,5122,.LN2394-Emit_EmitNtCMem		# line 5122, column 86
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN2395:
	.stabn  68,0,5122,.LN2395-Emit_EmitNtCMem		# line 5122, column 116
	.data
.Lab1374:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab1374,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2396:
	.stabn  68,0,5122,.LN2396-Emit_EmitNtCMem		# line 5122, column 134
	movl	16(%ebp),%eax
	leal	(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN2397:
	.stabn  68,0,5122,.LN2397-Emit_EmitNtCMem		# line 5122, column 170
	call	CgAssOut_AssLn
	jmp	.Lab1348
.Lab1354:
.LN2398:
	.stabn  68,0,5125,.LN2398-Emit_EmitNtCMem		# line 5125, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN2399:
	.stabn  68,0,5126,.LN2399-Emit_EmitNtCMem		# line 5126, column 10
	decl	Emit_s + 1536
.LN2400:
	.stabn  68,0,5127,.LN2400-Emit_EmitNtCMem		# line 5127, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1378
	cmpl	$4096,%eax
	jbe	.Lab1377
.Lab1378:
   	call	BoundErr_		
.Lab1377:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1375
.Lab1376:
.LN2401:
	.stabn  68,0,5128,.LN2401-Emit_EmitNtCMem		# line 5128, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1380
	cmpl	$4096,%eax
	jbe	.Lab1379
.Lab1380:
   	call	BoundErr_		
.Lab1379:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1375:
.LN2402:
	.stabn  68,0,5130,.LN2402-Emit_EmitNtCMem		# line 5130, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1381
.Lab1382:
.LN2403:
	.stabn  68,0,5131,.LN2403-Emit_EmitNtCMem		# line 5131, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2404:
	.stabn  68,0,5132,.LN2404-Emit_EmitNtCMem		# line 5132, column 11
	.data
.Lab1383:
 	.ascii	"Rule 260/1901 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1383,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2405:
	.stabn  68,0,5133,.LN2405-Emit_EmitNtCMem		# line 5133, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	128(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2406:
	.stabn  68,0,5134,.LN2406-Emit_EmitNtCMem		# line 5134, column 11
	.data
.Lab1384:
 	.ascii	" Coerce ->   CMem\000"
	.text
	pushl	$17
	leal	.Lab1384,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2407:
	.stabn  68,0,5135,.LN2407-Emit_EmitNtCMem		# line 5135, column 11
	call	InOut_WriteLn
.LN2408:
	.stabn  68,0,5136,.LN2408-Emit_EmitNtCMem		# line 5136, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2409:
	.stabn  68,0,5137,.LN2409-Emit_EmitNtCMem		# line 5137, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2410:
	.stabn  68,0,5137,.LN2410-Emit_EmitNtCMem		# line 5137, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2411:
	.stabn  68,0,5138,.LN2411-Emit_EmitNtCMem		# line 5138, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1387
.Lab1386:
.LN2412:
	.stabn  68,0,5138,.LN2412-Emit_EmitNtCMem		# line 5138, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1385
.Lab1387:
.LN2413:
	.stabn  68,0,5138,.LN2413-Emit_EmitNtCMem		# line 5138, column 61
	call	InOut_WriteLn
.Lab1385:
.LN2414:
	.stabn  68,0,5139,.LN2414-Emit_EmitNtCMem		# line 5139, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2415:
	.stabn  68,0,5140,.LN2415-Emit_EmitNtCMem		# line 5140, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1389
	cmpl	$4096,%eax
	jbe	.Lab1388
.Lab1389:
   	call	BoundErr_		
.Lab1388:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1381:
.LN2416:
	.stabn  68,0,5143,.LN2416-Emit_EmitNtCMem		# line 5143, column 9
	call	Emit_DeclareTransferTempo
.LN2417:
	.stabn  68,0,5144,.LN2417-Emit_EmitNtCMem		# line 5144, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 608,%eax
	movl	%eax,(%ebx) 
.LN2418:
	.stabn  68,0,5145,.LN2418-Emit_EmitNtCMem		# line 5145, column 41
	movl	16(%ebp),%eax
	movl	$0,4(%eax) 
.LN2419:
	.stabn  68,0,5146,.LN2419-Emit_EmitNtCMem		# line 5146, column 41
	movl	16(%ebp),%eax
	movb	$7,8(%eax) 
.LN2420:
	.stabn  68,0,5147,.LN2420-Emit_EmitNtCMem		# line 5147, column 41
	movl	16(%ebp),%eax
	movb	$0,9(%eax) 
.LN2421:
	.stabn  68,0,5148,.LN2421-Emit_EmitNtCMem		# line 5148, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
.LN2422:
	.stabn  68,0,5149,.LN2422-Emit_EmitNtCMem		# line 5149, column 2
	.data
.Lab1390:
 	.ascii	"\011fstp\000"
	.text
	pushl	$5
	leal	.Lab1390,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2423:
	.stabn  68,0,5149,.LN2423-Emit_EmitNtCMem		# line 5149, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2424:
	.stabn  68,0,5149,.LN2424-Emit_EmitNtCMem		# line 5149, column 64
	.data
.Lab1391:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab1391,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2425:
	.stabn  68,0,5149,.LN2425-Emit_EmitNtCMem		# line 5149, column 86
	movl	16(%ebp),%eax
	leal	(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN2426:
	.stabn  68,0,5149,.LN2426-Emit_EmitNtCMem		# line 5149, column 122
	call	CgAssOut_AssLn
.LN2427:
	.stabn  68,0,5150,.LN2427-Emit_EmitNtCMem		# line 5150, column 9
	call	Emit_PopFStack
	jmp	.Lab1348
.Lab1353:
.LN2428:
	.stabn  68,0,5153,.LN2428-Emit_EmitNtCMem		# line 5153, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN2429:
	.stabn  68,0,5154,.LN2429-Emit_EmitNtCMem		# line 5154, column 10
	decl	Emit_s + 1536
.LN2430:
	.stabn  68,0,5155,.LN2430-Emit_EmitNtCMem		# line 5155, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1395
	cmpl	$4096,%eax
	jbe	.Lab1394
.Lab1395:
   	call	BoundErr_		
.Lab1394:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1392
.Lab1393:
.LN2431:
	.stabn  68,0,5156,.LN2431-Emit_EmitNtCMem		# line 5156, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1397
	cmpl	$4096,%eax
	jbe	.Lab1396
.Lab1397:
   	call	BoundErr_		
.Lab1396:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1392:
.LN2432:
	.stabn  68,0,5158,.LN2432-Emit_EmitNtCMem		# line 5158, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1398
.Lab1399:
.LN2433:
	.stabn  68,0,5159,.LN2433-Emit_EmitNtCMem		# line 5159, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2434:
	.stabn  68,0,5160,.LN2434-Emit_EmitNtCMem		# line 5160, column 11
	.data
.Lab1400:
 	.ascii	"Rule 261/1859 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1400,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2435:
	.stabn  68,0,5161,.LN2435-Emit_EmitNtCMem		# line 5161, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	128(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2436:
	.stabn  68,0,5162,.LN2436-Emit_EmitNtCMem		# line 5162, column 11
	.data
.Lab1401:
 	.ascii	" Coerce ->   CMem\000"
	.text
	pushl	$17
	leal	.Lab1401,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2437:
	.stabn  68,0,5163,.LN2437-Emit_EmitNtCMem		# line 5163, column 11
	call	InOut_WriteLn
.LN2438:
	.stabn  68,0,5164,.LN2438-Emit_EmitNtCMem		# line 5164, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2439:
	.stabn  68,0,5165,.LN2439-Emit_EmitNtCMem		# line 5165, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2440:
	.stabn  68,0,5165,.LN2440-Emit_EmitNtCMem		# line 5165, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2441:
	.stabn  68,0,5166,.LN2441-Emit_EmitNtCMem		# line 5166, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1404
.Lab1403:
.LN2442:
	.stabn  68,0,5166,.LN2442-Emit_EmitNtCMem		# line 5166, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1402
.Lab1404:
.LN2443:
	.stabn  68,0,5166,.LN2443-Emit_EmitNtCMem		# line 5166, column 61
	call	InOut_WriteLn
.Lab1402:
.LN2444:
	.stabn  68,0,5167,.LN2444-Emit_EmitNtCMem		# line 5167, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2445:
	.stabn  68,0,5168,.LN2445-Emit_EmitNtCMem		# line 5168, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1406
	cmpl	$4096,%eax
	jbe	.Lab1405
.Lab1406:
   	call	BoundErr_		
.Lab1405:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1398:
.LN2446:
	.stabn  68,0,5170,.LN2446-Emit_EmitNtCMem		# line 5170, column 33
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,(%ebx) 
.LN2447:
	.stabn  68,0,5171,.LN2447-Emit_EmitNtCMem		# line 5171, column 41
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,4(%ebx) 
.LN2448:
	.stabn  68,0,5172,.LN2448-Emit_EmitNtCMem		# line 5172, column 41
	movl	16(%ebp),%ebx
	movb	-16(%ebp),%al
	movb	%al,8(%ebx) 
.LN2449:
	.stabn  68,0,5173,.LN2449-Emit_EmitNtCMem		# line 5173, column 41
	movl	16(%ebp),%ebx
	movb	-15(%ebp),%al
	movb	%al,9(%ebx) 
.LN2450:
	.stabn  68,0,5174,.LN2450-Emit_EmitNtCMem		# line 5174, column 41
	movl	16(%ebp),%ebx
	movl	-12(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1348
.Lab1352:
.LN2451:
	.stabn  68,0,5176,.LN2451-Emit_EmitNtCMem		# line 5176, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN2452:
	.stabn  68,0,5177,.LN2452-Emit_EmitNtCMem		# line 5177, column 10
	decl	Emit_s + 1536
.LN2453:
	.stabn  68,0,5178,.LN2453-Emit_EmitNtCMem		# line 5178, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1410
	cmpl	$4096,%eax
	jbe	.Lab1409
.Lab1410:
   	call	BoundErr_		
.Lab1409:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1407
.Lab1408:
.LN2454:
	.stabn  68,0,5179,.LN2454-Emit_EmitNtCMem		# line 5179, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1412
	cmpl	$4096,%eax
	jbe	.Lab1411
.Lab1412:
   	call	BoundErr_		
.Lab1411:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1407:
.LN2455:
	.stabn  68,0,5181,.LN2455-Emit_EmitNtCMem		# line 5181, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1413
.Lab1414:
.LN2456:
	.stabn  68,0,5182,.LN2456-Emit_EmitNtCMem		# line 5182, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2457:
	.stabn  68,0,5183,.LN2457-Emit_EmitNtCMem		# line 5183, column 11
	.data
.Lab1415:
 	.ascii	"Rule 262/689 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1415,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2458:
	.stabn  68,0,5184,.LN2458-Emit_EmitNtCMem		# line 5184, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	128(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2459:
	.stabn  68,0,5185,.LN2459-Emit_EmitNtCMem		# line 5185, column 11
	.data
.Lab1416:
 	.ascii	" Content ->   CMem\000"
	.text
	pushl	$18
	leal	.Lab1416,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2460:
	.stabn  68,0,5186,.LN2460-Emit_EmitNtCMem		# line 5186, column 11
	call	InOut_WriteLn
.LN2461:
	.stabn  68,0,5187,.LN2461-Emit_EmitNtCMem		# line 5187, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2462:
	.stabn  68,0,5188,.LN2462-Emit_EmitNtCMem		# line 5188, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2463:
	.stabn  68,0,5188,.LN2463-Emit_EmitNtCMem		# line 5188, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2464:
	.stabn  68,0,5189,.LN2464-Emit_EmitNtCMem		# line 5189, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1419
.Lab1418:
.LN2465:
	.stabn  68,0,5189,.LN2465-Emit_EmitNtCMem		# line 5189, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1417
.Lab1419:
.LN2466:
	.stabn  68,0,5189,.LN2466-Emit_EmitNtCMem		# line 5189, column 61
	call	InOut_WriteLn
.Lab1417:
.LN2467:
	.stabn  68,0,5190,.LN2467-Emit_EmitNtCMem		# line 5190, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2468:
	.stabn  68,0,5191,.LN2468-Emit_EmitNtCMem		# line 5191, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1421
	cmpl	$4096,%eax
	jbe	.Lab1420
.Lab1421:
   	call	BoundErr_		
.Lab1420:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1413:
.LN2469:
	.stabn  68,0,5193,.LN2469-Emit_EmitNtCMem		# line 5193, column 26
	movl	16(%ebp),%eax
	leal	-24(%ebp),%esi
	leal	(%eax),%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	jmp	.Lab1348
.Lab1351:
.LN2470:
	.stabn  68,0,5195,.LN2470-Emit_EmitNtCMem		# line 5195, column 10
	decl	Emit_s + 1536
.LN2471:
	.stabn  68,0,5196,.LN2471-Emit_EmitNtCMem		# line 5196, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1425
	cmpl	$4096,%eax
	jbe	.Lab1424
.Lab1425:
   	call	BoundErr_		
.Lab1424:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1422
.Lab1423:
.LN2472:
	.stabn  68,0,5197,.LN2472-Emit_EmitNtCMem		# line 5197, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1427
	cmpl	$4096,%eax
	jbe	.Lab1426
.Lab1427:
   	call	BoundErr_		
.Lab1426:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1422:
.LN2473:
	.stabn  68,0,5199,.LN2473-Emit_EmitNtCMem		# line 5199, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1428
.Lab1429:
.LN2474:
	.stabn  68,0,5200,.LN2474-Emit_EmitNtCMem		# line 5200, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2475:
	.stabn  68,0,5201,.LN2475-Emit_EmitNtCMem		# line 5201, column 11
	.data
.Lab1430:
 	.ascii	"Rule 263/624 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1430,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2476:
	.stabn  68,0,5202,.LN2476-Emit_EmitNtCMem		# line 5202, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	128(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2477:
	.stabn  68,0,5203,.LN2477-Emit_EmitNtCMem		# line 5203, column 11
	.data
.Lab1431:
 	.ascii	" FrameBase ->   CMem\000"
	.text
	pushl	$20
	leal	.Lab1431,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2478:
	.stabn  68,0,5204,.LN2478-Emit_EmitNtCMem		# line 5204, column 11
	call	InOut_WriteLn
.LN2479:
	.stabn  68,0,5205,.LN2479-Emit_EmitNtCMem		# line 5205, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2480:
	.stabn  68,0,5206,.LN2480-Emit_EmitNtCMem		# line 5206, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2481:
	.stabn  68,0,5206,.LN2481-Emit_EmitNtCMem		# line 5206, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2482:
	.stabn  68,0,5207,.LN2482-Emit_EmitNtCMem		# line 5207, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1434
.Lab1433:
.LN2483:
	.stabn  68,0,5207,.LN2483-Emit_EmitNtCMem		# line 5207, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1432
.Lab1434:
.LN2484:
	.stabn  68,0,5207,.LN2484-Emit_EmitNtCMem		# line 5207, column 61
	call	InOut_WriteLn
.Lab1432:
.LN2485:
	.stabn  68,0,5208,.LN2485-Emit_EmitNtCMem		# line 5208, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2486:
	.stabn  68,0,5209,.LN2486-Emit_EmitNtCMem		# line 5209, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1436
	cmpl	$4096,%eax
	jbe	.Lab1435
.Lab1436:
   	call	BoundErr_		
.Lab1435:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1428:
.LN2487:
	.stabn  68,0,5211,.LN2487-Emit_EmitNtCMem		# line 5211, column 33
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movw	8(%eax),%ax
	addw	%ax, %ax
	addw	%ax, %ax
	movzwl	%ax,%eax
	movl	%eax,(%ebx) 
.LN2488:
	.stabn  68,0,5212,.LN2488-Emit_EmitNtCMem		# line 5212, column 41
	movl	16(%ebp),%eax
	movl	$0,4(%eax) 
.LN2489:
	.stabn  68,0,5213,.LN2489-Emit_EmitNtCMem		# line 5213, column 41
	movl	16(%ebp),%eax
	movb	$0,8(%eax) 
.LN2490:
	.stabn  68,0,5214,.LN2490-Emit_EmitNtCMem		# line 5214, column 41
	movl	16(%ebp),%eax
	movb	$0,9(%eax) 
.LN2491:
	.stabn  68,0,5215,.LN2491-Emit_EmitNtCMem		# line 5215, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 40,%eax
	movl	%eax,12(%ebx) 
.LN2492:
	.stabn  68,0,5216,.LN2492-Emit_EmitNtCMem		# line 5216, column 50
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzwl	8(%eax),%eax
	cmpl	$15,%eax
	jbe	.Lab1437
.Lab1438:
   	call	BoundErr_		
.Lab1437:
	movb	$1,Emit_s + 334(%eax) 
	jmp	.Lab1348
.Lab1350:
.LN2493:
	.stabn  68,0,5218,.LN2493-Emit_EmitNtCMem		# line 5218, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN2494:
	.stabn  68,0,5219,.LN2494-Emit_EmitNtCMem		# line 5219, column 10
	decl	Emit_s + 1536
.LN2495:
	.stabn  68,0,5220,.LN2495-Emit_EmitNtCMem		# line 5220, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1442
	cmpl	$4096,%eax
	jbe	.Lab1441
.Lab1442:
   	call	BoundErr_		
.Lab1441:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1439
.Lab1440:
.LN2496:
	.stabn  68,0,5221,.LN2496-Emit_EmitNtCMem		# line 5221, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1444
	cmpl	$4096,%eax
	jbe	.Lab1443
.Lab1444:
   	call	BoundErr_		
.Lab1443:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1439:
.LN2497:
	.stabn  68,0,5223,.LN2497-Emit_EmitNtCMem		# line 5223, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1445
.Lab1446:
.LN2498:
	.stabn  68,0,5224,.LN2498-Emit_EmitNtCMem		# line 5224, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2499:
	.stabn  68,0,5225,.LN2499-Emit_EmitNtCMem		# line 5225, column 11
	.data
.Lab1447:
 	.ascii	"Rule 264/471 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1447,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2500:
	.stabn  68,0,5226,.LN2500-Emit_EmitNtCMem		# line 5226, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	128(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2501:
	.stabn  68,0,5227,.LN2501-Emit_EmitNtCMem		# line 5227, column 11
	.data
.Lab1448:
 	.ascii	" FloatConstant ->   CMem\000"
	.text
	pushl	$24
	leal	.Lab1448,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2502:
	.stabn  68,0,5228,.LN2502-Emit_EmitNtCMem		# line 5228, column 11
	call	InOut_WriteLn
.LN2503:
	.stabn  68,0,5229,.LN2503-Emit_EmitNtCMem		# line 5229, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2504:
	.stabn  68,0,5230,.LN2504-Emit_EmitNtCMem		# line 5230, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2505:
	.stabn  68,0,5230,.LN2505-Emit_EmitNtCMem		# line 5230, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2506:
	.stabn  68,0,5231,.LN2506-Emit_EmitNtCMem		# line 5231, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1451
.Lab1450:
.LN2507:
	.stabn  68,0,5231,.LN2507-Emit_EmitNtCMem		# line 5231, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1449
.Lab1451:
.LN2508:
	.stabn  68,0,5231,.LN2508-Emit_EmitNtCMem		# line 5231, column 61
	call	InOut_WriteLn
.Lab1449:
.LN2509:
	.stabn  68,0,5232,.LN2509-Emit_EmitNtCMem		# line 5232, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2510:
	.stabn  68,0,5233,.LN2510-Emit_EmitNtCMem		# line 5233, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1453
	cmpl	$4096,%eax
	jbe	.Lab1452
.Lab1453:
   	call	BoundErr_		
.Lab1452:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1445:
.LN2511:
	.stabn  68,0,5236,.LN2511-Emit_EmitNtCMem		# line 5236, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN2512:
	.stabn  68,0,5237,.LN2512-Emit_EmitNtCMem		# line 5237, column 41
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2513:
	.stabn  68,0,5238,.LN2513-Emit_EmitNtCMem		# line 5238, column 41
	movl	16(%ebp),%eax
	movl	$0,4(%eax) 
.LN2514:
	.stabn  68,0,5239,.LN2514-Emit_EmitNtCMem		# line 5239, column 41
	movl	16(%ebp),%eax
	movb	$0,8(%eax) 
.LN2515:
	.stabn  68,0,5240,.LN2515-Emit_EmitNtCMem		# line 5240, column 41
	movl	16(%ebp),%eax
	movb	$0,9(%eax) 
.LN2516:
	.stabn  68,0,5241,.LN2516-Emit_EmitNtCMem		# line 5241, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 992,%eax
	movl	%eax,12(%ebx) 
.LN2517:
	.stabn  68,0,5242,.LN2517-Emit_EmitNtCMem		# line 5242, column 15
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	16(%eax),%ebx
	movl	%ebx,Emit_s + 1528
	movl	20(%eax),%ebx
	movl	%ebx,Emit_s + 1532
.LN2518:
	.stabn  68,0,5243,.LN2518-Emit_EmitNtCMem		# line 5243, column 9
	pushl	$255
	leal	Emit_s + 1010,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	20(%eax)
	pushl	16(%eax)
	call	CgUtilities_ConvertREALtoString
	addl	$16, %esp
.LN2519:
	.stabn  68,0,5244,.LN2519-Emit_EmitNtCMem		# line 5244, column 2
	.data
.Lab1454:
 	.ascii	"\011.data\000"
	.text
	pushl	$6
	leal	.Lab1454,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2520:
	.stabn  68,0,5244,.LN2520-Emit_EmitNtCMem		# line 5244, column 27
	call	CgAssOut_AssLn
.LN2521:
	.stabn  68,0,5245,.LN2521-Emit_EmitNtCMem		# line 5245, column 2
	.data
.Lab1455:
 	.ascii	"\011.align 4\000"
	.text
	pushl	$9
	leal	.Lab1455,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2522:
	.stabn  68,0,5245,.LN2522-Emit_EmitNtCMem		# line 5245, column 30
	call	CgAssOut_AssLn
.LN2523:
	.stabn  68,0,5246,.LN2523-Emit_EmitNtCMem		# line 5246, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN2524:
	.stabn  68,0,5246,.LN2524-Emit_EmitNtCMem		# line 5246, column 21
	.data
.Lab1456:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab1456,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2525:
	.stabn  68,0,5246,.LN2525-Emit_EmitNtCMem		# line 5246, column 39
	call	CgAssOut_AssLn
.LN2526:
	.stabn  68,0,5247,.LN2526-Emit_EmitNtCMem		# line 5247, column 2
	.data
.Lab1457:
 	.ascii	"\011.long\011\000"
	.text
	pushl	$7
	leal	.Lab1457,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2527:
	.stabn  68,0,5247,.LN2527-Emit_EmitNtCMem		# line 5247, column 30
	pushl	Emit_s + 1528
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2528:
	.stabn  68,0,5247,.LN2528-Emit_EmitNtCMem		# line 5247, column 49
	.data
.Lab1458:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab1458,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2529:
	.stabn  68,0,5247,.LN2529-Emit_EmitNtCMem		# line 5247, column 67
	pushl	Emit_s + 1532
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2530:
	.stabn  68,0,5247,.LN2530-Emit_EmitNtCMem		# line 5247, column 86
	.data
.Lab1459:
 	.ascii	"\011\011# \000"
	.text
	pushl	$4
	leal	.Lab1459,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2531:
	.stabn  68,0,5247,.LN2531-Emit_EmitNtCMem		# line 5247, column 120
	pushl	$255
	leal	Emit_s + 1010,%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN2532:
	.stabn  68,0,5247,.LN2532-Emit_EmitNtCMem		# line 5247, column 138
	call	CgAssOut_AssLn
.LN2533:
	.stabn  68,0,5248,.LN2533-Emit_EmitNtCMem		# line 5248, column 2
	.data
.Lab1460:
 	.ascii	"\011.text\000"
	.text
	pushl	$6
	leal	.Lab1460,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2534:
	.stabn  68,0,5248,.LN2534-Emit_EmitNtCMem		# line 5248, column 27
	call	CgAssOut_AssLn
	jmp	.Lab1348
.Lab1349:
.LN2535:
	.stabn  68,0,5251,.LN2535-Emit_EmitNtCMem		# line 5251, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN2536:
	.stabn  68,0,5252,.LN2536-Emit_EmitNtCMem		# line 5252, column 10
	decl	Emit_s + 1536
.LN2537:
	.stabn  68,0,5253,.LN2537-Emit_EmitNtCMem		# line 5253, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1464
	cmpl	$4096,%eax
	jbe	.Lab1463
.Lab1464:
   	call	BoundErr_		
.Lab1463:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1461
.Lab1462:
.LN2538:
	.stabn  68,0,5254,.LN2538-Emit_EmitNtCMem		# line 5254, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1466
	cmpl	$4096,%eax
	jbe	.Lab1465
.Lab1466:
   	call	BoundErr_		
.Lab1465:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1461:
.LN2539:
	.stabn  68,0,5256,.LN2539-Emit_EmitNtCMem		# line 5256, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1467
.Lab1468:
.LN2540:
	.stabn  68,0,5257,.LN2540-Emit_EmitNtCMem		# line 5257, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2541:
	.stabn  68,0,5258,.LN2541-Emit_EmitNtCMem		# line 5258, column 11
	.data
.Lab1469:
 	.ascii	"Rule 265/452 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1469,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2542:
	.stabn  68,0,5259,.LN2542-Emit_EmitNtCMem		# line 5259, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	128(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2543:
	.stabn  68,0,5260,.LN2543-Emit_EmitNtCMem		# line 5260, column 11
	.data
.Lab1470:
 	.ascii	" FloatConstant ->   CMem\000"
	.text
	pushl	$24
	leal	.Lab1470,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2544:
	.stabn  68,0,5261,.LN2544-Emit_EmitNtCMem		# line 5261, column 11
	call	InOut_WriteLn
.LN2545:
	.stabn  68,0,5262,.LN2545-Emit_EmitNtCMem		# line 5262, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2546:
	.stabn  68,0,5263,.LN2546-Emit_EmitNtCMem		# line 5263, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2547:
	.stabn  68,0,5263,.LN2547-Emit_EmitNtCMem		# line 5263, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2548:
	.stabn  68,0,5264,.LN2548-Emit_EmitNtCMem		# line 5264, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1473
.Lab1472:
.LN2549:
	.stabn  68,0,5264,.LN2549-Emit_EmitNtCMem		# line 5264, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1471
.Lab1473:
.LN2550:
	.stabn  68,0,5264,.LN2550-Emit_EmitNtCMem		# line 5264, column 61
	call	InOut_WriteLn
.Lab1471:
.LN2551:
	.stabn  68,0,5265,.LN2551-Emit_EmitNtCMem		# line 5265, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2552:
	.stabn  68,0,5266,.LN2552-Emit_EmitNtCMem		# line 5266, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1475
	cmpl	$4096,%eax
	jbe	.Lab1474
.Lab1475:
   	call	BoundErr_		
.Lab1474:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1467:
.LN2553:
	.stabn  68,0,5269,.LN2553-Emit_EmitNtCMem		# line 5269, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN2554:
	.stabn  68,0,5270,.LN2554-Emit_EmitNtCMem		# line 5270, column 41
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2555:
	.stabn  68,0,5271,.LN2555-Emit_EmitNtCMem		# line 5271, column 41
	movl	16(%ebp),%eax
	movl	$0,4(%eax) 
.LN2556:
	.stabn  68,0,5272,.LN2556-Emit_EmitNtCMem		# line 5272, column 41
	movl	16(%ebp),%eax
	movb	$0,8(%eax) 
.LN2557:
	.stabn  68,0,5273,.LN2557-Emit_EmitNtCMem		# line 5273, column 41
	movl	16(%ebp),%eax
	movb	$0,9(%eax) 
.LN2558:
	.stabn  68,0,5274,.LN2558-Emit_EmitNtCMem		# line 5274, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 992,%eax
	movl	%eax,12(%ebx) 
.LN2559:
	.stabn  68,0,5275,.LN2559-Emit_EmitNtCMem		# line 5275, column 15
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	fldl	16(%eax)
	.data
	.align 4
.Lab1476:
	.long	-536870912,-940572673		# -0.34028234663852794E39
	.text
	.data
	.align 4
.Lab1477:
	.long	-536870912,1206910975		# +0.34028234663852794E39
	.text
	fcoml	.Lab1476
	fstsw	%ax
	sahf
	jb	.Lab1479
	fcoml	.Lab1477
	fstsw	%ax
	sahf
	jbe	.Lab1478
.Lab1479:
   	call	BoundErr_		
.Lab1478:
	fstps	Emit_s + 1524
.LN2560:
	.stabn  68,0,5276,.LN2560-Emit_EmitNtCMem		# line 5276, column 9
	pushl	$255
	leal	Emit_s + 1010,%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	20(%eax)
	pushl	16(%eax)
	call	CgUtilities_ConvertREALtoString
	addl	$16, %esp
.LN2561:
	.stabn  68,0,5277,.LN2561-Emit_EmitNtCMem		# line 5277, column 2
	.data
.Lab1480:
 	.ascii	"\011.data\000"
	.text
	pushl	$6
	leal	.Lab1480,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2562:
	.stabn  68,0,5277,.LN2562-Emit_EmitNtCMem		# line 5277, column 27
	call	CgAssOut_AssLn
.LN2563:
	.stabn  68,0,5278,.LN2563-Emit_EmitNtCMem		# line 5278, column 2
	.data
.Lab1481:
 	.ascii	"\011.align 4\000"
	.text
	pushl	$9
	leal	.Lab1481,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2564:
	.stabn  68,0,5278,.LN2564-Emit_EmitNtCMem		# line 5278, column 30
	call	CgAssOut_AssLn
.LN2565:
	.stabn  68,0,5279,.LN2565-Emit_EmitNtCMem		# line 5279, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN2566:
	.stabn  68,0,5279,.LN2566-Emit_EmitNtCMem		# line 5279, column 21
	.data
.Lab1482:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab1482,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2567:
	.stabn  68,0,5279,.LN2567-Emit_EmitNtCMem		# line 5279, column 39
	call	CgAssOut_AssLn
.LN2568:
	.stabn  68,0,5280,.LN2568-Emit_EmitNtCMem		# line 5280, column 2
	.data
.Lab1483:
 	.ascii	"\011.long\011\000"
	.text
	pushl	$7
	leal	.Lab1483,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2569:
	.stabn  68,0,5280,.LN2569-Emit_EmitNtCMem		# line 5280, column 30
	pushl	Emit_s + 1524
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2570:
	.stabn  68,0,5280,.LN2570-Emit_EmitNtCMem		# line 5280, column 48
	.data
.Lab1484:
 	.ascii	"\011\011# \000"
	.text
	pushl	$4
	leal	.Lab1484,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2571:
	.stabn  68,0,5280,.LN2571-Emit_EmitNtCMem		# line 5280, column 80
	pushl	$255
	leal	Emit_s + 1010,%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN2572:
	.stabn  68,0,5280,.LN2572-Emit_EmitNtCMem		# line 5280, column 98
	call	CgAssOut_AssLn
.LN2573:
	.stabn  68,0,5281,.LN2573-Emit_EmitNtCMem		# line 5281, column 2
	.data
.Lab1485:
 	.ascii	"\011.text\000"
	.text
	pushl	$6
	leal	.Lab1485,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2574:
	.stabn  68,0,5281,.LN2574-Emit_EmitNtCMem		# line 5281, column 27
	call	CgAssOut_AssLn
	jmp	.Lab1348
.Lab1347:
	call	CaseErr_
.Lab1348:
.LN2575:
	.stabn  68,0,5284,.LN2575-Emit_EmitNtCMem		# line 5284, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1486
.Lab1487:
.LN2576:
	.stabn  68,0,5285,.LN2576-Emit_EmitNtCMem		# line 5285, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2577:
	.stabn  68,0,5286,.LN2577-Emit_EmitNtCMem		# line 5286, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrCMem
	addl	$20, %esp
.LN2578:
	.stabn  68,0,5287,.LN2578-Emit_EmitNtCMem		# line 5287, column 8
	call	InOut_WriteLn
.Lab1486:
.LN2579:
	.stabn  68,0,5288,.LN2579-Emit_EmitNtCMem		# line 5288, column 0
.LBE8:
	leave
	ret
	.Lab1346 = 24
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB8-Emit_EmitNtCMem
	.stabn 224,0,0,.LBE8-Emit_EmitNtCMem
	.stabs "Emit_EmitNtmem:F16",36,0,0,Emit_EmitNtmem
	.align 4
Emit_EmitNtmem:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1488, %esp
.LN2580:
	.stabn  68,0,4681,.LN2580-Emit_EmitNtmem		# line 4681, column 1
.LBB9:
.LN2581:
	.stabn  68,0,4682,.LN2581-Emit_EmitNtmem		# line 4682, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	188(%eax),%eax
	.data
	.align 4
.Lab1507:
	.long	.Lab1506
	.long	.Lab1505
	.long	.Lab1504
	.long	.Lab1503
	.long	.Lab1502
	.long	.Lab1501
	.long	.Lab1500
	.long	.Lab1499
	.long	.Lab1498
	.long	.Lab1497
	.long	.Lab1496
	.long	.Lab1495
	.long	.Lab1494
	.long	.Lab1493
	.long	.Lab1492
	.long	.Lab1491
	.text
	subl	$243,%eax
	jb	.Lab1489
	cmpl	$15,%eax
	ja	.Lab1489
	jmp	*.Lab1507(,%eax,4)
.Lab1506:
.LN2582:
	.stabn  68,0,4684,.LN2582-Emit_EmitNtmem		# line 4684, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN2583:
	.stabn  68,0,4685,.LN2583-Emit_EmitNtmem		# line 4685, column 10
	decl	Emit_s + 1536
.LN2584:
	.stabn  68,0,4686,.LN2584-Emit_EmitNtmem		# line 4686, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1511
	cmpl	$4096,%eax
	jbe	.Lab1510
.Lab1511:
   	call	BoundErr_		
.Lab1510:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1508
.Lab1509:
.LN2585:
	.stabn  68,0,4687,.LN2585-Emit_EmitNtmem		# line 4687, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1513
	cmpl	$4096,%eax
	jbe	.Lab1512
.Lab1513:
   	call	BoundErr_		
.Lab1512:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1508:
.LN2586:
	.stabn  68,0,4689,.LN2586-Emit_EmitNtmem		# line 4689, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1514
.Lab1515:
.LN2587:
	.stabn  68,0,4690,.LN2587-Emit_EmitNtmem		# line 4690, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2588:
	.stabn  68,0,4691,.LN2588-Emit_EmitNtmem		# line 4691, column 11
	.data
.Lab1516:
 	.ascii	"Rule 243/1848 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1516,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2589:
	.stabn  68,0,4692,.LN2589-Emit_EmitNtmem		# line 4692, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2590:
	.stabn  68,0,4693,.LN2590-Emit_EmitNtmem		# line 4693, column 11
	.data
.Lab1517:
 	.ascii	" Coerce ->   mem\000"
	.text
	pushl	$16
	leal	.Lab1517,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2591:
	.stabn  68,0,4694,.LN2591-Emit_EmitNtmem		# line 4694, column 11
	call	InOut_WriteLn
.LN2592:
	.stabn  68,0,4695,.LN2592-Emit_EmitNtmem		# line 4695, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2593:
	.stabn  68,0,4696,.LN2593-Emit_EmitNtmem		# line 4696, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2594:
	.stabn  68,0,4696,.LN2594-Emit_EmitNtmem		# line 4696, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2595:
	.stabn  68,0,4697,.LN2595-Emit_EmitNtmem		# line 4697, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1520
.Lab1519:
.LN2596:
	.stabn  68,0,4697,.LN2596-Emit_EmitNtmem		# line 4697, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1518
.Lab1520:
.LN2597:
	.stabn  68,0,4697,.LN2597-Emit_EmitNtmem		# line 4697, column 61
	call	InOut_WriteLn
.Lab1518:
.LN2598:
	.stabn  68,0,4698,.LN2598-Emit_EmitNtmem		# line 4698, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2599:
	.stabn  68,0,4699,.LN2599-Emit_EmitNtmem		# line 4699, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1522
	cmpl	$4096,%eax
	jbe	.Lab1521
.Lab1522:
   	call	BoundErr_		
.Lab1521:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1514:
.LN2600:
	.stabn  68,0,4701,.LN2600-Emit_EmitNtmem		# line 4701, column 33
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,(%ebx) 
.LN2601:
	.stabn  68,0,4702,.LN2601-Emit_EmitNtmem		# line 4702, column 41
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,4(%ebx) 
.LN2602:
	.stabn  68,0,4703,.LN2602-Emit_EmitNtmem		# line 4703, column 41
	movl	16(%ebp),%ebx
	movb	-16(%ebp),%al
	movb	%al,8(%ebx) 
.LN2603:
	.stabn  68,0,4704,.LN2603-Emit_EmitNtmem		# line 4704, column 41
	movl	16(%ebp),%ebx
	movb	-15(%ebp),%al
	movb	%al,9(%ebx) 
.LN2604:
	.stabn  68,0,4705,.LN2604-Emit_EmitNtmem		# line 4705, column 41
	movl	16(%ebp),%ebx
	movl	-12(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1505:
.LN2605:
	.stabn  68,0,4707,.LN2605-Emit_EmitNtmem		# line 4707, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2606:
	.stabn  68,0,4708,.LN2606-Emit_EmitNtmem		# line 4708, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2607:
	.stabn  68,0,4709,.LN2607-Emit_EmitNtmem		# line 4709, column 10
	decl	Emit_s + 1536
.LN2608:
	.stabn  68,0,4710,.LN2608-Emit_EmitNtmem		# line 4710, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1526
	cmpl	$4096,%eax
	jbe	.Lab1525
.Lab1526:
   	call	BoundErr_		
.Lab1525:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1523
.Lab1524:
.LN2609:
	.stabn  68,0,4711,.LN2609-Emit_EmitNtmem		# line 4711, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1528
	cmpl	$4096,%eax
	jbe	.Lab1527
.Lab1528:
   	call	BoundErr_		
.Lab1527:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1523:
.LN2610:
	.stabn  68,0,4713,.LN2610-Emit_EmitNtmem		# line 4713, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1529
.Lab1530:
.LN2611:
	.stabn  68,0,4714,.LN2611-Emit_EmitNtmem		# line 4714, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2612:
	.stabn  68,0,4715,.LN2612-Emit_EmitNtmem		# line 4715, column 11
	.data
.Lab1531:
 	.ascii	"Rule 244/1259 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1531,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2613:
	.stabn  68,0,4716,.LN2613-Emit_EmitNtmem		# line 4716, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2614:
	.stabn  68,0,4717,.LN2614-Emit_EmitNtmem		# line 4717, column 11
	.data
.Lab1532:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1532,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2615:
	.stabn  68,0,4718,.LN2615-Emit_EmitNtmem		# line 4718, column 11
	call	InOut_WriteLn
.LN2616:
	.stabn  68,0,4719,.LN2616-Emit_EmitNtmem		# line 4719, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2617:
	.stabn  68,0,4720,.LN2617-Emit_EmitNtmem		# line 4720, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2618:
	.stabn  68,0,4720,.LN2618-Emit_EmitNtmem		# line 4720, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2619:
	.stabn  68,0,4721,.LN2619-Emit_EmitNtmem		# line 4721, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1535
.Lab1534:
.LN2620:
	.stabn  68,0,4721,.LN2620-Emit_EmitNtmem		# line 4721, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1533
.Lab1535:
.LN2621:
	.stabn  68,0,4721,.LN2621-Emit_EmitNtmem		# line 4721, column 61
	call	InOut_WriteLn
.Lab1533:
.LN2622:
	.stabn  68,0,4722,.LN2622-Emit_EmitNtmem		# line 4722, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2623:
	.stabn  68,0,4723,.LN2623-Emit_EmitNtmem		# line 4723, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1537
	cmpl	$4096,%eax
	jbe	.Lab1536
.Lab1537:
   	call	BoundErr_		
.Lab1536:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1529:
.LN2624:
	.stabn  68,0,4726,.LN2624-Emit_EmitNtmem		# line 4726, column 2
	.data
.Lab1538:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab1538,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2625:
	.stabn  68,0,4726,.LN2625-Emit_EmitNtmem		# line 4726, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2626:
	.stabn  68,0,4726,.LN2626-Emit_EmitNtmem		# line 4726, column 63
	.data
.Lab1539:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab1539,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2627:
	.stabn  68,0,4726,.LN2627-Emit_EmitNtmem		# line 4726, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	$9,%ebx
	cdq
	idivl	%ebx
	.data
	.align 4
.Lab1540:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab1540
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab1541
.Lab1542:
   	call	BoundErr_		
.Lab1541:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2628:
	.stabn  68,0,4726,.LN2628-Emit_EmitNtmem		# line 4726, column 140
	.data
.Lab1543:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab1543,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2629:
	.stabn  68,0,4726,.LN2629-Emit_EmitNtmem		# line 4726, column 159
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1545
	cmpl	$4096,%eax
	jbe	.Lab1544
.Lab1545:
   	call	BoundErr_		
.Lab1544:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN2630:
	.stabn  68,0,4726,.LN2630-Emit_EmitNtmem		# line 4726, column 231
	call	CgAssOut_AssLn
.LN2631:
	.stabn  68,0,4727,.LN2631-Emit_EmitNtmem		# line 4727, column 39
	movl	16(%ebp),%eax
	movl	$8,4(%eax) 
.LN2632:
	.stabn  68,0,4728,.LN2632-Emit_EmitNtmem		# line 4728, column 39
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2633:
	.stabn  68,0,4729,.LN2633-Emit_EmitNtmem		# line 4729, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1547
	cmpl	$4096,%eax
	jbe	.Lab1546
.Lab1547:
   	call	BoundErr_		
.Lab1546:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,9(%ebx) 
.LN2634:
	.stabn  68,0,4730,.LN2634-Emit_EmitNtmem		# line 4730, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1549
	cmpl	$4096,%eax
	jbe	.Lab1548
.Lab1549:
   	call	BoundErr_		
.Lab1548:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,8(%ebx) 
.LN2635:
	.stabn  68,0,4731,.LN2635-Emit_EmitNtmem		# line 4731, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1504:
.LN2636:
	.stabn  68,0,4734,.LN2636-Emit_EmitNtmem		# line 4734, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2637:
	.stabn  68,0,4735,.LN2637-Emit_EmitNtmem		# line 4735, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2638:
	.stabn  68,0,4736,.LN2638-Emit_EmitNtmem		# line 4736, column 10
	decl	Emit_s + 1536
.LN2639:
	.stabn  68,0,4737,.LN2639-Emit_EmitNtmem		# line 4737, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1553
	cmpl	$4096,%eax
	jbe	.Lab1552
.Lab1553:
   	call	BoundErr_		
.Lab1552:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1550
.Lab1551:
.LN2640:
	.stabn  68,0,4738,.LN2640-Emit_EmitNtmem		# line 4738, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1555
	cmpl	$4096,%eax
	jbe	.Lab1554
.Lab1555:
   	call	BoundErr_		
.Lab1554:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1550:
.LN2641:
	.stabn  68,0,4740,.LN2641-Emit_EmitNtmem		# line 4740, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1556
.Lab1557:
.LN2642:
	.stabn  68,0,4741,.LN2642-Emit_EmitNtmem		# line 4741, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2643:
	.stabn  68,0,4742,.LN2643-Emit_EmitNtmem		# line 4742, column 11
	.data
.Lab1558:
 	.ascii	"Rule 245/1259 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1558,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2644:
	.stabn  68,0,4743,.LN2644-Emit_EmitNtmem		# line 4743, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2645:
	.stabn  68,0,4744,.LN2645-Emit_EmitNtmem		# line 4744, column 11
	.data
.Lab1559:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1559,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2646:
	.stabn  68,0,4745,.LN2646-Emit_EmitNtmem		# line 4745, column 11
	call	InOut_WriteLn
.LN2647:
	.stabn  68,0,4746,.LN2647-Emit_EmitNtmem		# line 4746, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2648:
	.stabn  68,0,4747,.LN2648-Emit_EmitNtmem		# line 4747, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2649:
	.stabn  68,0,4747,.LN2649-Emit_EmitNtmem		# line 4747, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2650:
	.stabn  68,0,4748,.LN2650-Emit_EmitNtmem		# line 4748, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1562
.Lab1561:
.LN2651:
	.stabn  68,0,4748,.LN2651-Emit_EmitNtmem		# line 4748, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1560
.Lab1562:
.LN2652:
	.stabn  68,0,4748,.LN2652-Emit_EmitNtmem		# line 4748, column 61
	call	InOut_WriteLn
.Lab1560:
.LN2653:
	.stabn  68,0,4749,.LN2653-Emit_EmitNtmem		# line 4749, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2654:
	.stabn  68,0,4750,.LN2654-Emit_EmitNtmem		# line 4750, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1564
	cmpl	$4096,%eax
	jbe	.Lab1563
.Lab1564:
   	call	BoundErr_		
.Lab1563:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1556:
.LN2655:
	.stabn  68,0,4753,.LN2655-Emit_EmitNtmem		# line 4753, column 2
	.data
.Lab1565:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab1565,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2656:
	.stabn  68,0,4753,.LN2656-Emit_EmitNtmem		# line 4753, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2657:
	.stabn  68,0,4753,.LN2657-Emit_EmitNtmem		# line 4753, column 63
	.data
.Lab1566:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab1566,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2658:
	.stabn  68,0,4753,.LN2658-Emit_EmitNtmem		# line 4753, column 87
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	$9,%ebx
	cdq
	idivl	%ebx
	.data
	.align 4
.Lab1567:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab1567
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab1568
.Lab1569:
   	call	BoundErr_		
.Lab1568:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2659:
	.stabn  68,0,4753,.LN2659-Emit_EmitNtmem		# line 4753, column 140
	.data
.Lab1570:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab1570,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2660:
	.stabn  68,0,4753,.LN2660-Emit_EmitNtmem		# line 4753, column 159
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1572
	cmpl	$4096,%eax
	jbe	.Lab1571
.Lab1572:
   	call	BoundErr_		
.Lab1571:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN2661:
	.stabn  68,0,4753,.LN2661-Emit_EmitNtmem		# line 4753, column 231
	call	CgAssOut_AssLn
.LN2662:
	.stabn  68,0,4754,.LN2662-Emit_EmitNtmem		# line 4754, column 39
	movl	16(%ebp),%eax
	movl	$8,4(%eax) 
.LN2663:
	.stabn  68,0,4755,.LN2663-Emit_EmitNtmem		# line 4755, column 39
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2664:
	.stabn  68,0,4756,.LN2664-Emit_EmitNtmem		# line 4756, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1574
	cmpl	$4096,%eax
	jbe	.Lab1573
.Lab1574:
   	call	BoundErr_		
.Lab1573:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,9(%ebx) 
.LN2665:
	.stabn  68,0,4757,.LN2665-Emit_EmitNtmem		# line 4757, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1576
	cmpl	$4096,%eax
	jbe	.Lab1575
.Lab1576:
   	call	BoundErr_		
.Lab1575:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,8(%ebx) 
.LN2666:
	.stabn  68,0,4758,.LN2666-Emit_EmitNtmem		# line 4758, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1503:
.LN2667:
	.stabn  68,0,4761,.LN2667-Emit_EmitNtmem		# line 4761, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2668:
	.stabn  68,0,4762,.LN2668-Emit_EmitNtmem		# line 4762, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2669:
	.stabn  68,0,4763,.LN2669-Emit_EmitNtmem		# line 4763, column 10
	decl	Emit_s + 1536
.LN2670:
	.stabn  68,0,4764,.LN2670-Emit_EmitNtmem		# line 4764, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1580
	cmpl	$4096,%eax
	jbe	.Lab1579
.Lab1580:
   	call	BoundErr_		
.Lab1579:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1577
.Lab1578:
.LN2671:
	.stabn  68,0,4765,.LN2671-Emit_EmitNtmem		# line 4765, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1582
	cmpl	$4096,%eax
	jbe	.Lab1581
.Lab1582:
   	call	BoundErr_		
.Lab1581:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1577:
.LN2672:
	.stabn  68,0,4767,.LN2672-Emit_EmitNtmem		# line 4767, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1583
.Lab1584:
.LN2673:
	.stabn  68,0,4768,.LN2673-Emit_EmitNtmem		# line 4768, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2674:
	.stabn  68,0,4769,.LN2674-Emit_EmitNtmem		# line 4769, column 11
	.data
.Lab1585:
 	.ascii	"Rule 246/1244 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1585,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2675:
	.stabn  68,0,4770,.LN2675-Emit_EmitNtmem		# line 4770, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2676:
	.stabn  68,0,4771,.LN2676-Emit_EmitNtmem		# line 4771, column 11
	.data
.Lab1586:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1586,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2677:
	.stabn  68,0,4772,.LN2677-Emit_EmitNtmem		# line 4772, column 11
	call	InOut_WriteLn
.LN2678:
	.stabn  68,0,4773,.LN2678-Emit_EmitNtmem		# line 4773, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2679:
	.stabn  68,0,4774,.LN2679-Emit_EmitNtmem		# line 4774, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2680:
	.stabn  68,0,4774,.LN2680-Emit_EmitNtmem		# line 4774, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2681:
	.stabn  68,0,4775,.LN2681-Emit_EmitNtmem		# line 4775, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1589
.Lab1588:
.LN2682:
	.stabn  68,0,4775,.LN2682-Emit_EmitNtmem		# line 4775, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1587
.Lab1589:
.LN2683:
	.stabn  68,0,4775,.LN2683-Emit_EmitNtmem		# line 4775, column 61
	call	InOut_WriteLn
.Lab1587:
.LN2684:
	.stabn  68,0,4776,.LN2684-Emit_EmitNtmem		# line 4776, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2685:
	.stabn  68,0,4777,.LN2685-Emit_EmitNtmem		# line 4777, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1591
	cmpl	$4096,%eax
	jbe	.Lab1590
.Lab1591:
   	call	BoundErr_		
.Lab1590:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1583:
.LN2686:
	.stabn  68,0,4780,.LN2686-Emit_EmitNtmem		# line 4780, column 2
	.data
.Lab1592:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab1592,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2687:
	.stabn  68,0,4780,.LN2687-Emit_EmitNtmem		# line 4780, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2688:
	.stabn  68,0,4780,.LN2688-Emit_EmitNtmem		# line 4780, column 63
	.data
.Lab1593:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab1593,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2689:
	.stabn  68,0,4780,.LN2689-Emit_EmitNtmem		# line 4780, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	$5,%ebx
	cdq
	idivl	%ebx
	.data
	.align 4
.Lab1594:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab1594
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab1595
.Lab1596:
   	call	BoundErr_		
.Lab1595:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2690:
	.stabn  68,0,4780,.LN2690-Emit_EmitNtmem		# line 4780, column 140
	.data
.Lab1597:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab1597,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2691:
	.stabn  68,0,4780,.LN2691-Emit_EmitNtmem		# line 4780, column 159
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1599
	cmpl	$4096,%eax
	jbe	.Lab1598
.Lab1599:
   	call	BoundErr_		
.Lab1598:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN2692:
	.stabn  68,0,4780,.LN2692-Emit_EmitNtmem		# line 4780, column 231
	call	CgAssOut_AssLn
.LN2693:
	.stabn  68,0,4781,.LN2693-Emit_EmitNtmem		# line 4781, column 39
	movl	16(%ebp),%eax
	movl	$4,4(%eax) 
.LN2694:
	.stabn  68,0,4782,.LN2694-Emit_EmitNtmem		# line 4782, column 39
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2695:
	.stabn  68,0,4783,.LN2695-Emit_EmitNtmem		# line 4783, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1601
	cmpl	$4096,%eax
	jbe	.Lab1600
.Lab1601:
   	call	BoundErr_		
.Lab1600:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,9(%ebx) 
.LN2696:
	.stabn  68,0,4784,.LN2696-Emit_EmitNtmem		# line 4784, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1603
	cmpl	$4096,%eax
	jbe	.Lab1602
.Lab1603:
   	call	BoundErr_		
.Lab1602:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,8(%ebx) 
.LN2697:
	.stabn  68,0,4785,.LN2697-Emit_EmitNtmem		# line 4785, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1502:
.LN2698:
	.stabn  68,0,4788,.LN2698-Emit_EmitNtmem		# line 4788, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2699:
	.stabn  68,0,4789,.LN2699-Emit_EmitNtmem		# line 4789, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2700:
	.stabn  68,0,4790,.LN2700-Emit_EmitNtmem		# line 4790, column 10
	decl	Emit_s + 1536
.LN2701:
	.stabn  68,0,4791,.LN2701-Emit_EmitNtmem		# line 4791, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1607
	cmpl	$4096,%eax
	jbe	.Lab1606
.Lab1607:
   	call	BoundErr_		
.Lab1606:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1604
.Lab1605:
.LN2702:
	.stabn  68,0,4792,.LN2702-Emit_EmitNtmem		# line 4792, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1609
	cmpl	$4096,%eax
	jbe	.Lab1608
.Lab1609:
   	call	BoundErr_		
.Lab1608:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1604:
.LN2703:
	.stabn  68,0,4794,.LN2703-Emit_EmitNtmem		# line 4794, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1610
.Lab1611:
.LN2704:
	.stabn  68,0,4795,.LN2704-Emit_EmitNtmem		# line 4795, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2705:
	.stabn  68,0,4796,.LN2705-Emit_EmitNtmem		# line 4796, column 11
	.data
.Lab1612:
 	.ascii	"Rule 247/1244 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1612,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2706:
	.stabn  68,0,4797,.LN2706-Emit_EmitNtmem		# line 4797, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2707:
	.stabn  68,0,4798,.LN2707-Emit_EmitNtmem		# line 4798, column 11
	.data
.Lab1613:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1613,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2708:
	.stabn  68,0,4799,.LN2708-Emit_EmitNtmem		# line 4799, column 11
	call	InOut_WriteLn
.LN2709:
	.stabn  68,0,4800,.LN2709-Emit_EmitNtmem		# line 4800, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2710:
	.stabn  68,0,4801,.LN2710-Emit_EmitNtmem		# line 4801, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2711:
	.stabn  68,0,4801,.LN2711-Emit_EmitNtmem		# line 4801, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2712:
	.stabn  68,0,4802,.LN2712-Emit_EmitNtmem		# line 4802, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1616
.Lab1615:
.LN2713:
	.stabn  68,0,4802,.LN2713-Emit_EmitNtmem		# line 4802, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1614
.Lab1616:
.LN2714:
	.stabn  68,0,4802,.LN2714-Emit_EmitNtmem		# line 4802, column 61
	call	InOut_WriteLn
.Lab1614:
.LN2715:
	.stabn  68,0,4803,.LN2715-Emit_EmitNtmem		# line 4803, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2716:
	.stabn  68,0,4804,.LN2716-Emit_EmitNtmem		# line 4804, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1618
	cmpl	$4096,%eax
	jbe	.Lab1617
.Lab1618:
   	call	BoundErr_		
.Lab1617:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1610:
.LN2717:
	.stabn  68,0,4807,.LN2717-Emit_EmitNtmem		# line 4807, column 2
	.data
.Lab1619:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab1619,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2718:
	.stabn  68,0,4807,.LN2718-Emit_EmitNtmem		# line 4807, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2719:
	.stabn  68,0,4807,.LN2719-Emit_EmitNtmem		# line 4807, column 63
	.data
.Lab1620:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab1620,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2720:
	.stabn  68,0,4807,.LN2720-Emit_EmitNtmem		# line 4807, column 87
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	$5,%ebx
	cdq
	idivl	%ebx
	.data
	.align 4
.Lab1621:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab1621
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab1622
.Lab1623:
   	call	BoundErr_		
.Lab1622:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2721:
	.stabn  68,0,4807,.LN2721-Emit_EmitNtmem		# line 4807, column 140
	.data
.Lab1624:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab1624,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2722:
	.stabn  68,0,4807,.LN2722-Emit_EmitNtmem		# line 4807, column 159
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1626
	cmpl	$4096,%eax
	jbe	.Lab1625
.Lab1626:
   	call	BoundErr_		
.Lab1625:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN2723:
	.stabn  68,0,4807,.LN2723-Emit_EmitNtmem		# line 4807, column 231
	call	CgAssOut_AssLn
.LN2724:
	.stabn  68,0,4808,.LN2724-Emit_EmitNtmem		# line 4808, column 39
	movl	16(%ebp),%eax
	movl	$4,4(%eax) 
.LN2725:
	.stabn  68,0,4809,.LN2725-Emit_EmitNtmem		# line 4809, column 39
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2726:
	.stabn  68,0,4810,.LN2726-Emit_EmitNtmem		# line 4810, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1628
	cmpl	$4096,%eax
	jbe	.Lab1627
.Lab1628:
   	call	BoundErr_		
.Lab1627:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,9(%ebx) 
.LN2727:
	.stabn  68,0,4811,.LN2727-Emit_EmitNtmem		# line 4811, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1630
	cmpl	$4096,%eax
	jbe	.Lab1629
.Lab1630:
   	call	BoundErr_		
.Lab1629:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,8(%ebx) 
.LN2728:
	.stabn  68,0,4812,.LN2728-Emit_EmitNtmem		# line 4812, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1501:
.LN2729:
	.stabn  68,0,4815,.LN2729-Emit_EmitNtmem		# line 4815, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2730:
	.stabn  68,0,4816,.LN2730-Emit_EmitNtmem		# line 4816, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2731:
	.stabn  68,0,4817,.LN2731-Emit_EmitNtmem		# line 4817, column 10
	decl	Emit_s + 1536
.LN2732:
	.stabn  68,0,4818,.LN2732-Emit_EmitNtmem		# line 4818, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1634
	cmpl	$4096,%eax
	jbe	.Lab1633
.Lab1634:
   	call	BoundErr_		
.Lab1633:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1631
.Lab1632:
.LN2733:
	.stabn  68,0,4819,.LN2733-Emit_EmitNtmem		# line 4819, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1636
	cmpl	$4096,%eax
	jbe	.Lab1635
.Lab1636:
   	call	BoundErr_		
.Lab1635:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1631:
.LN2734:
	.stabn  68,0,4821,.LN2734-Emit_EmitNtmem		# line 4821, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1637
.Lab1638:
.LN2735:
	.stabn  68,0,4822,.LN2735-Emit_EmitNtmem		# line 4822, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2736:
	.stabn  68,0,4823,.LN2736-Emit_EmitNtmem		# line 4823, column 11
	.data
.Lab1639:
 	.ascii	"Rule 248/1229 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1639,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2737:
	.stabn  68,0,4824,.LN2737-Emit_EmitNtmem		# line 4824, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2738:
	.stabn  68,0,4825,.LN2738-Emit_EmitNtmem		# line 4825, column 11
	.data
.Lab1640:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1640,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2739:
	.stabn  68,0,4826,.LN2739-Emit_EmitNtmem		# line 4826, column 11
	call	InOut_WriteLn
.LN2740:
	.stabn  68,0,4827,.LN2740-Emit_EmitNtmem		# line 4827, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2741:
	.stabn  68,0,4828,.LN2741-Emit_EmitNtmem		# line 4828, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2742:
	.stabn  68,0,4828,.LN2742-Emit_EmitNtmem		# line 4828, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2743:
	.stabn  68,0,4829,.LN2743-Emit_EmitNtmem		# line 4829, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1643
.Lab1642:
.LN2744:
	.stabn  68,0,4829,.LN2744-Emit_EmitNtmem		# line 4829, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1641
.Lab1643:
.LN2745:
	.stabn  68,0,4829,.LN2745-Emit_EmitNtmem		# line 4829, column 61
	call	InOut_WriteLn
.Lab1641:
.LN2746:
	.stabn  68,0,4830,.LN2746-Emit_EmitNtmem		# line 4830, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2747:
	.stabn  68,0,4831,.LN2747-Emit_EmitNtmem		# line 4831, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1645
	cmpl	$4096,%eax
	jbe	.Lab1644
.Lab1645:
   	call	BoundErr_		
.Lab1644:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1637:
.LN2748:
	.stabn  68,0,4834,.LN2748-Emit_EmitNtmem		# line 4834, column 2
	.data
.Lab1646:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab1646,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2749:
	.stabn  68,0,4834,.LN2749-Emit_EmitNtmem		# line 4834, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2750:
	.stabn  68,0,4834,.LN2750-Emit_EmitNtmem		# line 4834, column 63
	.data
.Lab1647:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab1647,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2751:
	.stabn  68,0,4834,.LN2751-Emit_EmitNtmem		# line 4834, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	$3,%ebx
	cdq
	idivl	%ebx
	.data
	.align 4
.Lab1648:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab1648
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab1649
.Lab1650:
   	call	BoundErr_		
.Lab1649:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2752:
	.stabn  68,0,4834,.LN2752-Emit_EmitNtmem		# line 4834, column 140
	.data
.Lab1651:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab1651,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2753:
	.stabn  68,0,4834,.LN2753-Emit_EmitNtmem		# line 4834, column 159
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1653
	cmpl	$4096,%eax
	jbe	.Lab1652
.Lab1653:
   	call	BoundErr_		
.Lab1652:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN2754:
	.stabn  68,0,4834,.LN2754-Emit_EmitNtmem		# line 4834, column 231
	call	CgAssOut_AssLn
.LN2755:
	.stabn  68,0,4835,.LN2755-Emit_EmitNtmem		# line 4835, column 39
	movl	16(%ebp),%eax
	movl	$2,4(%eax) 
.LN2756:
	.stabn  68,0,4836,.LN2756-Emit_EmitNtmem		# line 4836, column 39
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2757:
	.stabn  68,0,4837,.LN2757-Emit_EmitNtmem		# line 4837, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1655
	cmpl	$4096,%eax
	jbe	.Lab1654
.Lab1655:
   	call	BoundErr_		
.Lab1654:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,9(%ebx) 
.LN2758:
	.stabn  68,0,4838,.LN2758-Emit_EmitNtmem		# line 4838, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1657
	cmpl	$4096,%eax
	jbe	.Lab1656
.Lab1657:
   	call	BoundErr_		
.Lab1656:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,8(%ebx) 
.LN2759:
	.stabn  68,0,4839,.LN2759-Emit_EmitNtmem		# line 4839, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1500:
.LN2760:
	.stabn  68,0,4842,.LN2760-Emit_EmitNtmem		# line 4842, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2761:
	.stabn  68,0,4843,.LN2761-Emit_EmitNtmem		# line 4843, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN2762:
	.stabn  68,0,4844,.LN2762-Emit_EmitNtmem		# line 4844, column 10
	decl	Emit_s + 1536
.LN2763:
	.stabn  68,0,4845,.LN2763-Emit_EmitNtmem		# line 4845, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1661
	cmpl	$4096,%eax
	jbe	.Lab1660
.Lab1661:
   	call	BoundErr_		
.Lab1660:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1658
.Lab1659:
.LN2764:
	.stabn  68,0,4846,.LN2764-Emit_EmitNtmem		# line 4846, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1663
	cmpl	$4096,%eax
	jbe	.Lab1662
.Lab1663:
   	call	BoundErr_		
.Lab1662:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1658:
.LN2765:
	.stabn  68,0,4848,.LN2765-Emit_EmitNtmem		# line 4848, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1664
.Lab1665:
.LN2766:
	.stabn  68,0,4849,.LN2766-Emit_EmitNtmem		# line 4849, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2767:
	.stabn  68,0,4850,.LN2767-Emit_EmitNtmem		# line 4850, column 11
	.data
.Lab1666:
 	.ascii	"Rule 249/1229 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1666,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2768:
	.stabn  68,0,4851,.LN2768-Emit_EmitNtmem		# line 4851, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2769:
	.stabn  68,0,4852,.LN2769-Emit_EmitNtmem		# line 4852, column 11
	.data
.Lab1667:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1667,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2770:
	.stabn  68,0,4853,.LN2770-Emit_EmitNtmem		# line 4853, column 11
	call	InOut_WriteLn
.LN2771:
	.stabn  68,0,4854,.LN2771-Emit_EmitNtmem		# line 4854, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2772:
	.stabn  68,0,4855,.LN2772-Emit_EmitNtmem		# line 4855, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2773:
	.stabn  68,0,4855,.LN2773-Emit_EmitNtmem		# line 4855, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2774:
	.stabn  68,0,4856,.LN2774-Emit_EmitNtmem		# line 4856, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1670
.Lab1669:
.LN2775:
	.stabn  68,0,4856,.LN2775-Emit_EmitNtmem		# line 4856, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1668
.Lab1670:
.LN2776:
	.stabn  68,0,4856,.LN2776-Emit_EmitNtmem		# line 4856, column 61
	call	InOut_WriteLn
.Lab1668:
.LN2777:
	.stabn  68,0,4857,.LN2777-Emit_EmitNtmem		# line 4857, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2778:
	.stabn  68,0,4858,.LN2778-Emit_EmitNtmem		# line 4858, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1672
	cmpl	$4096,%eax
	jbe	.Lab1671
.Lab1672:
   	call	BoundErr_		
.Lab1671:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1664:
.LN2779:
	.stabn  68,0,4861,.LN2779-Emit_EmitNtmem		# line 4861, column 2
	.data
.Lab1673:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab1673,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2780:
	.stabn  68,0,4861,.LN2780-Emit_EmitNtmem		# line 4861, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN2781:
	.stabn  68,0,4861,.LN2781-Emit_EmitNtmem		# line 4861, column 63
	.data
.Lab1674:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab1674,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2782:
	.stabn  68,0,4861,.LN2782-Emit_EmitNtmem		# line 4861, column 87
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	movl	$3,%ebx
	cdq
	idivl	%ebx
	.data
	.align 4
.Lab1675:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab1675
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab1676
.Lab1677:
   	call	BoundErr_		
.Lab1676:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN2783:
	.stabn  68,0,4861,.LN2783-Emit_EmitNtmem		# line 4861, column 140
	.data
.Lab1678:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab1678,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN2784:
	.stabn  68,0,4861,.LN2784-Emit_EmitNtmem		# line 4861, column 159
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1680
	cmpl	$4096,%eax
	jbe	.Lab1679
.Lab1680:
   	call	BoundErr_		
.Lab1679:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN2785:
	.stabn  68,0,4861,.LN2785-Emit_EmitNtmem		# line 4861, column 231
	call	CgAssOut_AssLn
.LN2786:
	.stabn  68,0,4862,.LN2786-Emit_EmitNtmem		# line 4862, column 39
	movl	16(%ebp),%eax
	movl	$2,4(%eax) 
.LN2787:
	.stabn  68,0,4863,.LN2787-Emit_EmitNtmem		# line 4863, column 39
	movl	16(%ebp),%eax
	movl	$0,(%eax) 
.LN2788:
	.stabn  68,0,4864,.LN2788-Emit_EmitNtmem		# line 4864, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1682
	cmpl	$4096,%eax
	jbe	.Lab1681
.Lab1682:
   	call	BoundErr_		
.Lab1681:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,9(%ebx) 
.LN2789:
	.stabn  68,0,4865,.LN2789-Emit_EmitNtmem		# line 4865, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1684
	cmpl	$4096,%eax
	jbe	.Lab1683
.Lab1684:
   	call	BoundErr_		
.Lab1683:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,8(%ebx) 
.LN2790:
	.stabn  68,0,4866,.LN2790-Emit_EmitNtmem		# line 4866, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1499:
.LN2791:
	.stabn  68,0,4869,.LN2791-Emit_EmitNtmem		# line 4869, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN2792:
	.stabn  68,0,4870,.LN2792-Emit_EmitNtmem		# line 4870, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2793:
	.stabn  68,0,4871,.LN2793-Emit_EmitNtmem		# line 4871, column 10
	decl	Emit_s + 1536
.LN2794:
	.stabn  68,0,4872,.LN2794-Emit_EmitNtmem		# line 4872, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1688
	cmpl	$4096,%eax
	jbe	.Lab1687
.Lab1688:
   	call	BoundErr_		
.Lab1687:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1685
.Lab1686:
.LN2795:
	.stabn  68,0,4873,.LN2795-Emit_EmitNtmem		# line 4873, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1690
	cmpl	$4096,%eax
	jbe	.Lab1689
.Lab1690:
   	call	BoundErr_		
.Lab1689:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1685:
.LN2796:
	.stabn  68,0,4875,.LN2796-Emit_EmitNtmem		# line 4875, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1691
.Lab1692:
.LN2797:
	.stabn  68,0,4876,.LN2797-Emit_EmitNtmem		# line 4876, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2798:
	.stabn  68,0,4877,.LN2798-Emit_EmitNtmem		# line 4877, column 11
	.data
.Lab1693:
 	.ascii	"Rule 250/1179 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1693,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2799:
	.stabn  68,0,4878,.LN2799-Emit_EmitNtmem		# line 4878, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2800:
	.stabn  68,0,4879,.LN2800-Emit_EmitNtmem		# line 4879, column 11
	.data
.Lab1694:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1694,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2801:
	.stabn  68,0,4880,.LN2801-Emit_EmitNtmem		# line 4880, column 11
	call	InOut_WriteLn
.LN2802:
	.stabn  68,0,4881,.LN2802-Emit_EmitNtmem		# line 4881, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2803:
	.stabn  68,0,4882,.LN2803-Emit_EmitNtmem		# line 4882, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2804:
	.stabn  68,0,4882,.LN2804-Emit_EmitNtmem		# line 4882, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2805:
	.stabn  68,0,4883,.LN2805-Emit_EmitNtmem		# line 4883, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1697
.Lab1696:
.LN2806:
	.stabn  68,0,4883,.LN2806-Emit_EmitNtmem		# line 4883, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1695
.Lab1697:
.LN2807:
	.stabn  68,0,4883,.LN2807-Emit_EmitNtmem		# line 4883, column 61
	call	InOut_WriteLn
.Lab1695:
.LN2808:
	.stabn  68,0,4884,.LN2808-Emit_EmitNtmem		# line 4884, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2809:
	.stabn  68,0,4885,.LN2809-Emit_EmitNtmem		# line 4885, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1699
	cmpl	$4096,%eax
	jbe	.Lab1698
.Lab1699:
   	call	BoundErr_		
.Lab1698:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1691:
.LN2810:
	.stabn  68,0,4887,.LN2810-Emit_EmitNtmem		# line 4887, column 30
	movl	16(%ebp),%ecx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movswl	72(%eax),%ebx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	imull	8(%eax),%ebx 
 	subl	$1,%ebx 
	movl	%ebx,4(%ecx) 
.LN2811:
	.stabn  68,0,4888,.LN2811-Emit_EmitNtmem		# line 4888, column 39
	movl	16(%ebp),%ecx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%ebx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	imull	68(%ebx),%eax 
	movl	%eax,(%ecx) 
.LN2812:
	.stabn  68,0,4889,.LN2812-Emit_EmitNtmem		# line 4889, column 39
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,9(%ebx) 
.LN2813:
	.stabn  68,0,4890,.LN2813-Emit_EmitNtmem		# line 4890, column 39
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,8(%ebx) 
.LN2814:
	.stabn  68,0,4891,.LN2814-Emit_EmitNtmem		# line 4891, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1498:
.LN2815:
	.stabn  68,0,4893,.LN2815-Emit_EmitNtmem		# line 4893, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2816:
	.stabn  68,0,4894,.LN2816-Emit_EmitNtmem		# line 4894, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN2817:
	.stabn  68,0,4895,.LN2817-Emit_EmitNtmem		# line 4895, column 10
	decl	Emit_s + 1536
.LN2818:
	.stabn  68,0,4896,.LN2818-Emit_EmitNtmem		# line 4896, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1703
	cmpl	$4096,%eax
	jbe	.Lab1702
.Lab1703:
   	call	BoundErr_		
.Lab1702:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1700
.Lab1701:
.LN2819:
	.stabn  68,0,4897,.LN2819-Emit_EmitNtmem		# line 4897, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1705
	cmpl	$4096,%eax
	jbe	.Lab1704
.Lab1705:
   	call	BoundErr_		
.Lab1704:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1700:
.LN2820:
	.stabn  68,0,4899,.LN2820-Emit_EmitNtmem		# line 4899, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1706
.Lab1707:
.LN2821:
	.stabn  68,0,4900,.LN2821-Emit_EmitNtmem		# line 4900, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2822:
	.stabn  68,0,4901,.LN2822-Emit_EmitNtmem		# line 4901, column 11
	.data
.Lab1708:
 	.ascii	"Rule 251/1179 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1708,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2823:
	.stabn  68,0,4902,.LN2823-Emit_EmitNtmem		# line 4902, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2824:
	.stabn  68,0,4903,.LN2824-Emit_EmitNtmem		# line 4903, column 11
	.data
.Lab1709:
 	.ascii	" FixedMult ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1709,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2825:
	.stabn  68,0,4904,.LN2825-Emit_EmitNtmem		# line 4904, column 11
	call	InOut_WriteLn
.LN2826:
	.stabn  68,0,4905,.LN2826-Emit_EmitNtmem		# line 4905, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2827:
	.stabn  68,0,4906,.LN2827-Emit_EmitNtmem		# line 4906, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2828:
	.stabn  68,0,4906,.LN2828-Emit_EmitNtmem		# line 4906, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2829:
	.stabn  68,0,4907,.LN2829-Emit_EmitNtmem		# line 4907, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1712
.Lab1711:
.LN2830:
	.stabn  68,0,4907,.LN2830-Emit_EmitNtmem		# line 4907, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1710
.Lab1712:
.LN2831:
	.stabn  68,0,4907,.LN2831-Emit_EmitNtmem		# line 4907, column 61
	call	InOut_WriteLn
.Lab1710:
.LN2832:
	.stabn  68,0,4908,.LN2832-Emit_EmitNtmem		# line 4908, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2833:
	.stabn  68,0,4909,.LN2833-Emit_EmitNtmem		# line 4909, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1714
	cmpl	$4096,%eax
	jbe	.Lab1713
.Lab1714:
   	call	BoundErr_		
.Lab1713:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1706:
.LN2834:
	.stabn  68,0,4911,.LN2834-Emit_EmitNtmem		# line 4911, column 30
	movl	16(%ebp),%ecx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movswl	72(%eax),%ebx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	imull	8(%eax),%ebx 
 	subl	$1,%ebx 
	movl	%ebx,4(%ecx) 
.LN2835:
	.stabn  68,0,4912,.LN2835-Emit_EmitNtmem		# line 4912, column 39
	movl	16(%ebp),%ecx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%ebx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	imull	68(%ebx),%eax 
	movl	%eax,(%ecx) 
.LN2836:
	.stabn  68,0,4913,.LN2836-Emit_EmitNtmem		# line 4913, column 39
	movl	16(%ebp),%ebx
	movb	-44(%ebp),%al
	movb	%al,9(%ebx) 
.LN2837:
	.stabn  68,0,4914,.LN2837-Emit_EmitNtmem		# line 4914, column 39
	movl	16(%ebp),%ebx
	movb	-44(%ebp),%al
	movb	%al,8(%ebx) 
.LN2838:
	.stabn  68,0,4915,.LN2838-Emit_EmitNtmem		# line 4915, column 39
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1497:
.LN2839:
	.stabn  68,0,4917,.LN2839-Emit_EmitNtmem		# line 4917, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN2840:
	.stabn  68,0,4918,.LN2840-Emit_EmitNtmem		# line 4918, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2841:
	.stabn  68,0,4919,.LN2841-Emit_EmitNtmem		# line 4919, column 10
	decl	Emit_s + 1536
.LN2842:
	.stabn  68,0,4920,.LN2842-Emit_EmitNtmem		# line 4920, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1718
	cmpl	$4096,%eax
	jbe	.Lab1717
.Lab1718:
   	call	BoundErr_		
.Lab1717:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1715
.Lab1716:
.LN2843:
	.stabn  68,0,4921,.LN2843-Emit_EmitNtmem		# line 4921, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1720
	cmpl	$4096,%eax
	jbe	.Lab1719
.Lab1720:
   	call	BoundErr_		
.Lab1719:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1715:
.LN2844:
	.stabn  68,0,4923,.LN2844-Emit_EmitNtmem		# line 4923, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1721
.Lab1722:
.LN2845:
	.stabn  68,0,4924,.LN2845-Emit_EmitNtmem		# line 4924, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2846:
	.stabn  68,0,4925,.LN2846-Emit_EmitNtmem		# line 4925, column 11
	.data
.Lab1723:
 	.ascii	"Rule 252/1076 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1723,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2847:
	.stabn  68,0,4926,.LN2847-Emit_EmitNtmem		# line 4926, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2848:
	.stabn  68,0,4927,.LN2848-Emit_EmitNtmem		# line 4927, column 11
	.data
.Lab1724:
 	.ascii	" FixedMinus ->   mem\000"
	.text
	pushl	$20
	leal	.Lab1724,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2849:
	.stabn  68,0,4928,.LN2849-Emit_EmitNtmem		# line 4928, column 11
	call	InOut_WriteLn
.LN2850:
	.stabn  68,0,4929,.LN2850-Emit_EmitNtmem		# line 4929, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2851:
	.stabn  68,0,4930,.LN2851-Emit_EmitNtmem		# line 4930, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2852:
	.stabn  68,0,4930,.LN2852-Emit_EmitNtmem		# line 4930, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2853:
	.stabn  68,0,4931,.LN2853-Emit_EmitNtmem		# line 4931, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1727
.Lab1726:
.LN2854:
	.stabn  68,0,4931,.LN2854-Emit_EmitNtmem		# line 4931, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1725
.Lab1727:
.LN2855:
	.stabn  68,0,4931,.LN2855-Emit_EmitNtmem		# line 4931, column 61
	call	InOut_WriteLn
.Lab1725:
.LN2856:
	.stabn  68,0,4932,.LN2856-Emit_EmitNtmem		# line 4932, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2857:
	.stabn  68,0,4933,.LN2857-Emit_EmitNtmem		# line 4933, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1729
	cmpl	$4096,%eax
	jbe	.Lab1728
.Lab1729:
   	call	BoundErr_		
.Lab1728:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1721:
.LN2858:
	.stabn  68,0,4935,.LN2858-Emit_EmitNtmem		# line 4935, column 33
	movl	16(%ebp),%ecx
	movl	-24(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
 	subl	8(%eax),%ebx 
	movl	%ebx,(%ecx) 
.LN2859:
	.stabn  68,0,4936,.LN2859-Emit_EmitNtmem		# line 4936, column 41
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,4(%ebx) 
.LN2860:
	.stabn  68,0,4937,.LN2860-Emit_EmitNtmem		# line 4937, column 41
	movl	16(%ebp),%ebx
	movb	-16(%ebp),%al
	movb	%al,8(%ebx) 
.LN2861:
	.stabn  68,0,4938,.LN2861-Emit_EmitNtmem		# line 4938, column 41
	movl	16(%ebp),%ebx
	movb	-15(%ebp),%al
	movb	%al,9(%ebx) 
.LN2862:
	.stabn  68,0,4939,.LN2862-Emit_EmitNtmem		# line 4939, column 41
	movl	16(%ebp),%ebx
	movl	-12(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1496:
.LN2863:
	.stabn  68,0,4941,.LN2863-Emit_EmitNtmem		# line 4941, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN2864:
	.stabn  68,0,4942,.LN2864-Emit_EmitNtmem		# line 4942, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2865:
	.stabn  68,0,4943,.LN2865-Emit_EmitNtmem		# line 4943, column 10
	decl	Emit_s + 1536
.LN2866:
	.stabn  68,0,4944,.LN2866-Emit_EmitNtmem		# line 4944, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1733
	cmpl	$4096,%eax
	jbe	.Lab1732
.Lab1733:
   	call	BoundErr_		
.Lab1732:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1730
.Lab1731:
.LN2867:
	.stabn  68,0,4945,.LN2867-Emit_EmitNtmem		# line 4945, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1735
	cmpl	$4096,%eax
	jbe	.Lab1734
.Lab1735:
   	call	BoundErr_		
.Lab1734:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1730:
.LN2868:
	.stabn  68,0,4947,.LN2868-Emit_EmitNtmem		# line 4947, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1736
.Lab1737:
.LN2869:
	.stabn  68,0,4948,.LN2869-Emit_EmitNtmem		# line 4948, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2870:
	.stabn  68,0,4949,.LN2870-Emit_EmitNtmem		# line 4949, column 11
	.data
.Lab1738:
 	.ascii	"Rule 253/979 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1738,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2871:
	.stabn  68,0,4950,.LN2871-Emit_EmitNtmem		# line 4950, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2872:
	.stabn  68,0,4951,.LN2872-Emit_EmitNtmem		# line 4951, column 11
	.data
.Lab1739:
 	.ascii	" FixedPlus ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1739,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2873:
	.stabn  68,0,4952,.LN2873-Emit_EmitNtmem		# line 4952, column 11
	call	InOut_WriteLn
.LN2874:
	.stabn  68,0,4953,.LN2874-Emit_EmitNtmem		# line 4953, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2875:
	.stabn  68,0,4954,.LN2875-Emit_EmitNtmem		# line 4954, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2876:
	.stabn  68,0,4954,.LN2876-Emit_EmitNtmem		# line 4954, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2877:
	.stabn  68,0,4955,.LN2877-Emit_EmitNtmem		# line 4955, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1742
.Lab1741:
.LN2878:
	.stabn  68,0,4955,.LN2878-Emit_EmitNtmem		# line 4955, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1740
.Lab1742:
.LN2879:
	.stabn  68,0,4955,.LN2879-Emit_EmitNtmem		# line 4955, column 61
	call	InOut_WriteLn
.Lab1740:
.LN2880:
	.stabn  68,0,4956,.LN2880-Emit_EmitNtmem		# line 4956, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2881:
	.stabn  68,0,4957,.LN2881-Emit_EmitNtmem		# line 4957, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1744
	cmpl	$4096,%eax
	jbe	.Lab1743
.Lab1744:
   	call	BoundErr_		
.Lab1743:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1736:
.LN2882:
	.stabn  68,0,4959,.LN2882-Emit_EmitNtmem		# line 4959, column 33
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
 	addl	-24(%ebp),%eax 
	movl	%eax,(%ebx) 
.LN2883:
	.stabn  68,0,4960,.LN2883-Emit_EmitNtmem		# line 4960, column 41
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,4(%ebx) 
.LN2884:
	.stabn  68,0,4961,.LN2884-Emit_EmitNtmem		# line 4961, column 41
	movl	16(%ebp),%ebx
	movb	-16(%ebp),%al
	movb	%al,8(%ebx) 
.LN2885:
	.stabn  68,0,4962,.LN2885-Emit_EmitNtmem		# line 4962, column 41
	movl	16(%ebp),%ebx
	movb	-15(%ebp),%al
	movb	%al,9(%ebx) 
.LN2886:
	.stabn  68,0,4963,.LN2886-Emit_EmitNtmem		# line 4963, column 41
	movl	16(%ebp),%ebx
	movl	-12(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1495:
.LN2887:
	.stabn  68,0,4965,.LN2887-Emit_EmitNtmem		# line 4965, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN2888:
	.stabn  68,0,4966,.LN2888-Emit_EmitNtmem		# line 4966, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN2889:
	.stabn  68,0,4967,.LN2889-Emit_EmitNtmem		# line 4967, column 10
	decl	Emit_s + 1536
.LN2890:
	.stabn  68,0,4968,.LN2890-Emit_EmitNtmem		# line 4968, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1748
	cmpl	$4096,%eax
	jbe	.Lab1747
.Lab1748:
   	call	BoundErr_		
.Lab1747:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1745
.Lab1746:
.LN2891:
	.stabn  68,0,4969,.LN2891-Emit_EmitNtmem		# line 4969, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1750
	cmpl	$4096,%eax
	jbe	.Lab1749
.Lab1750:
   	call	BoundErr_		
.Lab1749:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1745:
.LN2892:
	.stabn  68,0,4971,.LN2892-Emit_EmitNtmem		# line 4971, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1751
.Lab1752:
.LN2893:
	.stabn  68,0,4972,.LN2893-Emit_EmitNtmem		# line 4972, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2894:
	.stabn  68,0,4973,.LN2894-Emit_EmitNtmem		# line 4973, column 11
	.data
.Lab1753:
 	.ascii	"Rule 254/979 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1753,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2895:
	.stabn  68,0,4974,.LN2895-Emit_EmitNtmem		# line 4974, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2896:
	.stabn  68,0,4975,.LN2896-Emit_EmitNtmem		# line 4975, column 11
	.data
.Lab1754:
 	.ascii	" FixedPlus ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1754,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2897:
	.stabn  68,0,4976,.LN2897-Emit_EmitNtmem		# line 4976, column 11
	call	InOut_WriteLn
.LN2898:
	.stabn  68,0,4977,.LN2898-Emit_EmitNtmem		# line 4977, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2899:
	.stabn  68,0,4978,.LN2899-Emit_EmitNtmem		# line 4978, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2900:
	.stabn  68,0,4978,.LN2900-Emit_EmitNtmem		# line 4978, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2901:
	.stabn  68,0,4979,.LN2901-Emit_EmitNtmem		# line 4979, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1757
.Lab1756:
.LN2902:
	.stabn  68,0,4979,.LN2902-Emit_EmitNtmem		# line 4979, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1755
.Lab1757:
.LN2903:
	.stabn  68,0,4979,.LN2903-Emit_EmitNtmem		# line 4979, column 61
	call	InOut_WriteLn
.Lab1755:
.LN2904:
	.stabn  68,0,4980,.LN2904-Emit_EmitNtmem		# line 4980, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2905:
	.stabn  68,0,4981,.LN2905-Emit_EmitNtmem		# line 4981, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1759
	cmpl	$4096,%eax
	jbe	.Lab1758
.Lab1759:
   	call	BoundErr_		
.Lab1758:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1751:
.LN2906:
	.stabn  68,0,4983,.LN2906-Emit_EmitNtmem		# line 4983, column 33
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
 	addl	-44(%ebp),%eax 
	movl	%eax,(%ebx) 
.LN2907:
	.stabn  68,0,4984,.LN2907-Emit_EmitNtmem		# line 4984, column 41
	movl	16(%ebp),%ebx
	movl	-40(%ebp),%eax
	movl	%eax,4(%ebx) 
.LN2908:
	.stabn  68,0,4985,.LN2908-Emit_EmitNtmem		# line 4985, column 41
	movl	16(%ebp),%ebx
	movb	-36(%ebp),%al
	movb	%al,8(%ebx) 
.LN2909:
	.stabn  68,0,4986,.LN2909-Emit_EmitNtmem		# line 4986, column 41
	movl	16(%ebp),%ebx
	movb	-35(%ebp),%al
	movb	%al,9(%ebx) 
.LN2910:
	.stabn  68,0,4987,.LN2910-Emit_EmitNtmem		# line 4987, column 41
	movl	16(%ebp),%ebx
	movl	-32(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1494:
.LN2911:
	.stabn  68,0,4989,.LN2911-Emit_EmitNtmem		# line 4989, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN2912:
	.stabn  68,0,4990,.LN2912-Emit_EmitNtmem		# line 4990, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegPlusSymPlusOffset
	addl	$12, %esp
.LN2913:
	.stabn  68,0,4991,.LN2913-Emit_EmitNtmem		# line 4991, column 10
	decl	Emit_s + 1536
.LN2914:
	.stabn  68,0,4992,.LN2914-Emit_EmitNtmem		# line 4992, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1763
	cmpl	$4096,%eax
	jbe	.Lab1762
.Lab1763:
   	call	BoundErr_		
.Lab1762:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1760
.Lab1761:
.LN2915:
	.stabn  68,0,4993,.LN2915-Emit_EmitNtmem		# line 4993, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1765
	cmpl	$4096,%eax
	jbe	.Lab1764
.Lab1765:
   	call	BoundErr_		
.Lab1764:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1760:
.LN2916:
	.stabn  68,0,4995,.LN2916-Emit_EmitNtmem		# line 4995, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1766
.Lab1767:
.LN2917:
	.stabn  68,0,4996,.LN2917-Emit_EmitNtmem		# line 4996, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2918:
	.stabn  68,0,4997,.LN2918-Emit_EmitNtmem		# line 4997, column 11
	.data
.Lab1768:
 	.ascii	"Rule 255/970 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1768,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2919:
	.stabn  68,0,4998,.LN2919-Emit_EmitNtmem		# line 4998, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2920:
	.stabn  68,0,4999,.LN2920-Emit_EmitNtmem		# line 4999, column 11
	.data
.Lab1769:
 	.ascii	" FixedPlus ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1769,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2921:
	.stabn  68,0,5000,.LN2921-Emit_EmitNtmem		# line 5000, column 11
	call	InOut_WriteLn
.LN2922:
	.stabn  68,0,5001,.LN2922-Emit_EmitNtmem		# line 5001, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2923:
	.stabn  68,0,5002,.LN2923-Emit_EmitNtmem		# line 5002, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2924:
	.stabn  68,0,5002,.LN2924-Emit_EmitNtmem		# line 5002, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2925:
	.stabn  68,0,5003,.LN2925-Emit_EmitNtmem		# line 5003, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1772
.Lab1771:
.LN2926:
	.stabn  68,0,5003,.LN2926-Emit_EmitNtmem		# line 5003, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1770
.Lab1772:
.LN2927:
	.stabn  68,0,5003,.LN2927-Emit_EmitNtmem		# line 5003, column 61
	call	InOut_WriteLn
.Lab1770:
.LN2928:
	.stabn  68,0,5004,.LN2928-Emit_EmitNtmem		# line 5004, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2929:
	.stabn  68,0,5005,.LN2929-Emit_EmitNtmem		# line 5005, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1774
	cmpl	$4096,%eax
	jbe	.Lab1773
.Lab1774:
   	call	BoundErr_		
.Lab1773:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1766:
.LN2930:
	.stabn  68,0,5007,.LN2930-Emit_EmitNtmem		# line 5007, column 33
	movl	16(%ebp),%ecx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%ebx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	64(%eax),%eax
 	addl	68(%ebx),%eax 
	movl	%eax,(%ecx) 
.LN2931:
	.stabn  68,0,5008,.LN2931-Emit_EmitNtmem		# line 5008, column 41
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movswl	72(%eax),%eax
	movl	%eax,4(%ebx) 
.LN2932:
	.stabn  68,0,5009,.LN2932-Emit_EmitNtmem		# line 5009, column 41
	movl	16(%ebp),%ebx
	movb	-44(%ebp),%al
	movb	%al,8(%ebx) 
.LN2933:
	.stabn  68,0,5010,.LN2933-Emit_EmitNtmem		# line 5010, column 41
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,9(%ebx) 
.LN2934:
	.stabn  68,0,5011,.LN2934-Emit_EmitNtmem		# line 5011, column 41
	movl	16(%ebp),%ebx
	movl	-40(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1493:
.LN2935:
	.stabn  68,0,5013,.LN2935-Emit_EmitNtmem		# line 5013, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegPlusSymPlusOffset
	addl	$12, %esp
.LN2936:
	.stabn  68,0,5014,.LN2936-Emit_EmitNtmem		# line 5014, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN2937:
	.stabn  68,0,5015,.LN2937-Emit_EmitNtmem		# line 5015, column 10
	decl	Emit_s + 1536
.LN2938:
	.stabn  68,0,5016,.LN2938-Emit_EmitNtmem		# line 5016, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1778
	cmpl	$4096,%eax
	jbe	.Lab1777
.Lab1778:
   	call	BoundErr_		
.Lab1777:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1775
.Lab1776:
.LN2939:
	.stabn  68,0,5017,.LN2939-Emit_EmitNtmem		# line 5017, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1780
	cmpl	$4096,%eax
	jbe	.Lab1779
.Lab1780:
   	call	BoundErr_		
.Lab1779:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1775:
.LN2940:
	.stabn  68,0,5019,.LN2940-Emit_EmitNtmem		# line 5019, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1781
.Lab1782:
.LN2941:
	.stabn  68,0,5020,.LN2941-Emit_EmitNtmem		# line 5020, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2942:
	.stabn  68,0,5021,.LN2942-Emit_EmitNtmem		# line 5021, column 11
	.data
.Lab1783:
 	.ascii	"Rule 256/970 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1783,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2943:
	.stabn  68,0,5022,.LN2943-Emit_EmitNtmem		# line 5022, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2944:
	.stabn  68,0,5023,.LN2944-Emit_EmitNtmem		# line 5023, column 11
	.data
.Lab1784:
 	.ascii	" FixedPlus ->   mem\000"
	.text
	pushl	$19
	leal	.Lab1784,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2945:
	.stabn  68,0,5024,.LN2945-Emit_EmitNtmem		# line 5024, column 11
	call	InOut_WriteLn
.LN2946:
	.stabn  68,0,5025,.LN2946-Emit_EmitNtmem		# line 5025, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2947:
	.stabn  68,0,5026,.LN2947-Emit_EmitNtmem		# line 5026, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2948:
	.stabn  68,0,5026,.LN2948-Emit_EmitNtmem		# line 5026, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2949:
	.stabn  68,0,5027,.LN2949-Emit_EmitNtmem		# line 5027, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1787
.Lab1786:
.LN2950:
	.stabn  68,0,5027,.LN2950-Emit_EmitNtmem		# line 5027, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1785
.Lab1787:
.LN2951:
	.stabn  68,0,5027,.LN2951-Emit_EmitNtmem		# line 5027, column 61
	call	InOut_WriteLn
.Lab1785:
.LN2952:
	.stabn  68,0,5028,.LN2952-Emit_EmitNtmem		# line 5028, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2953:
	.stabn  68,0,5029,.LN2953-Emit_EmitNtmem		# line 5029, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1789
	cmpl	$4096,%eax
	jbe	.Lab1788
.Lab1789:
   	call	BoundErr_		
.Lab1788:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1781:
.LN2954:
	.stabn  68,0,5031,.LN2954-Emit_EmitNtmem		# line 5031, column 33
	movl	16(%ebp),%ecx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%ebx
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	64(%eax),%eax
 	addl	68(%ebx),%eax 
	movl	%eax,(%ecx) 
.LN2955:
	.stabn  68,0,5032,.LN2955-Emit_EmitNtmem		# line 5032, column 41
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movswl	72(%eax),%eax
	movl	%eax,4(%ebx) 
.LN2956:
	.stabn  68,0,5033,.LN2956-Emit_EmitNtmem		# line 5033, column 41
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,8(%ebx) 
.LN2957:
	.stabn  68,0,5034,.LN2957-Emit_EmitNtmem		# line 5034, column 41
	movl	16(%ebp),%ebx
	movb	-44(%ebp),%al
	movb	%al,9(%ebx) 
.LN2958:
	.stabn  68,0,5035,.LN2958-Emit_EmitNtmem		# line 5035, column 41
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1492:
.LN2959:
	.stabn  68,0,5037,.LN2959-Emit_EmitNtmem		# line 5037, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN2960:
	.stabn  68,0,5038,.LN2960-Emit_EmitNtmem		# line 5038, column 10
	decl	Emit_s + 1536
.LN2961:
	.stabn  68,0,5039,.LN2961-Emit_EmitNtmem		# line 5039, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1793
	cmpl	$4096,%eax
	jbe	.Lab1792
.Lab1793:
   	call	BoundErr_		
.Lab1792:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1790
.Lab1791:
.LN2962:
	.stabn  68,0,5040,.LN2962-Emit_EmitNtmem		# line 5040, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1795
	cmpl	$4096,%eax
	jbe	.Lab1794
.Lab1795:
   	call	BoundErr_		
.Lab1794:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1790:
.LN2963:
	.stabn  68,0,5042,.LN2963-Emit_EmitNtmem		# line 5042, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1796
.Lab1797:
.LN2964:
	.stabn  68,0,5043,.LN2964-Emit_EmitNtmem		# line 5043, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2965:
	.stabn  68,0,5044,.LN2965-Emit_EmitNtmem		# line 5044, column 11
	.data
.Lab1798:
 	.ascii	"Rule 257/382 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1798,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2966:
	.stabn  68,0,5045,.LN2966-Emit_EmitNtmem		# line 5045, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2967:
	.stabn  68,0,5046,.LN2967-Emit_EmitNtmem		# line 5046, column 11
	.data
.Lab1799:
 	.ascii	" OffsetPlusIndexMultFaktor ->   mem\000"
	.text
	pushl	$35
	leal	.Lab1799,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2968:
	.stabn  68,0,5047,.LN2968-Emit_EmitNtmem		# line 5047, column 11
	call	InOut_WriteLn
.LN2969:
	.stabn  68,0,5048,.LN2969-Emit_EmitNtmem		# line 5048, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2970:
	.stabn  68,0,5049,.LN2970-Emit_EmitNtmem		# line 5049, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2971:
	.stabn  68,0,5049,.LN2971-Emit_EmitNtmem		# line 5049, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2972:
	.stabn  68,0,5050,.LN2972-Emit_EmitNtmem		# line 5050, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1802
.Lab1801:
.LN2973:
	.stabn  68,0,5050,.LN2973-Emit_EmitNtmem		# line 5050, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1800
.Lab1802:
.LN2974:
	.stabn  68,0,5050,.LN2974-Emit_EmitNtmem		# line 5050, column 61
	call	InOut_WriteLn
.Lab1800:
.LN2975:
	.stabn  68,0,5051,.LN2975-Emit_EmitNtmem		# line 5051, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2976:
	.stabn  68,0,5052,.LN2976-Emit_EmitNtmem		# line 5052, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1804
	cmpl	$4096,%eax
	jbe	.Lab1803
.Lab1804:
   	call	BoundErr_		
.Lab1803:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1796:
.LN2977:
	.stabn  68,0,5054,.LN2977-Emit_EmitNtmem		# line 5054, column 33
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	68(%eax),%eax
	movl	%eax,(%ebx) 
.LN2978:
	.stabn  68,0,5055,.LN2978-Emit_EmitNtmem		# line 5055, column 41
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movswl	72(%eax),%eax
	movl	%eax,4(%ebx) 
.LN2979:
	.stabn  68,0,5056,.LN2979-Emit_EmitNtmem		# line 5056, column 41
	movl	16(%ebp),%eax
	movb	$0,8(%eax) 
.LN2980:
	.stabn  68,0,5057,.LN2980-Emit_EmitNtmem		# line 5057, column 41
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,9(%ebx) 
.LN2981:
	.stabn  68,0,5058,.LN2981-Emit_EmitNtmem		# line 5058, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1491:
.LN2982:
	.stabn  68,0,5060,.LN2982-Emit_EmitNtmem		# line 5060, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtRegPlusSymPlusOffset
	addl	$12, %esp
.LN2983:
	.stabn  68,0,5061,.LN2983-Emit_EmitNtmem		# line 5061, column 10
	decl	Emit_s + 1536
.LN2984:
	.stabn  68,0,5062,.LN2984-Emit_EmitNtmem		# line 5062, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1808
	cmpl	$4096,%eax
	jbe	.Lab1807
.Lab1808:
   	call	BoundErr_		
.Lab1807:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1805
.Lab1806:
.LN2985:
	.stabn  68,0,5063,.LN2985-Emit_EmitNtmem		# line 5063, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1810
	cmpl	$4096,%eax
	jbe	.Lab1809
.Lab1810:
   	call	BoundErr_		
.Lab1809:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1805:
.LN2986:
	.stabn  68,0,5065,.LN2986-Emit_EmitNtmem		# line 5065, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1811
.Lab1812:
.LN2987:
	.stabn  68,0,5066,.LN2987-Emit_EmitNtmem		# line 5066, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2988:
	.stabn  68,0,5067,.LN2988-Emit_EmitNtmem		# line 5067, column 11
	.data
.Lab1813:
 	.ascii	"Rule 258/373 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1813,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2989:
	.stabn  68,0,5068,.LN2989-Emit_EmitNtmem		# line 5068, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	124(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN2990:
	.stabn  68,0,5069,.LN2990-Emit_EmitNtmem		# line 5069, column 11
	.data
.Lab1814:
 	.ascii	" RegPlusSymPlusOffset ->   mem\000"
	.text
	pushl	$30
	leal	.Lab1814,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN2991:
	.stabn  68,0,5070,.LN2991-Emit_EmitNtmem		# line 5070, column 11
	call	InOut_WriteLn
.LN2992:
	.stabn  68,0,5071,.LN2992-Emit_EmitNtmem		# line 5071, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2993:
	.stabn  68,0,5072,.LN2993-Emit_EmitNtmem		# line 5072, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN2994:
	.stabn  68,0,5072,.LN2994-Emit_EmitNtmem		# line 5072, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN2995:
	.stabn  68,0,5073,.LN2995-Emit_EmitNtmem		# line 5073, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1817
.Lab1816:
.LN2996:
	.stabn  68,0,5073,.LN2996-Emit_EmitNtmem		# line 5073, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1815
.Lab1817:
.LN2997:
	.stabn  68,0,5073,.LN2997-Emit_EmitNtmem		# line 5073, column 61
	call	InOut_WriteLn
.Lab1815:
.LN2998:
	.stabn  68,0,5074,.LN2998-Emit_EmitNtmem		# line 5074, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN2999:
	.stabn  68,0,5075,.LN2999-Emit_EmitNtmem		# line 5075, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1819
	cmpl	$4096,%eax
	jbe	.Lab1818
.Lab1819:
   	call	BoundErr_		
.Lab1818:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1811:
.LN3000:
	.stabn  68,0,5077,.LN3000-Emit_EmitNtmem		# line 5077, column 33
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	64(%eax),%eax
	movl	%eax,(%ebx) 
.LN3001:
	.stabn  68,0,5078,.LN3001-Emit_EmitNtmem		# line 5078, column 41
	movl	16(%ebp),%eax
	movl	$1,4(%eax) 
.LN3002:
	.stabn  68,0,5079,.LN3002-Emit_EmitNtmem		# line 5079, column 41
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,8(%ebx) 
.LN3003:
	.stabn  68,0,5080,.LN3003-Emit_EmitNtmem		# line 5080, column 41
	movl	16(%ebp),%eax
	movb	$0,9(%eax) 
.LN3004:
	.stabn  68,0,5081,.LN3004-Emit_EmitNtmem		# line 5081, column 41
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,12(%ebx) 
	jmp	.Lab1490
.Lab1489:
	call	CaseErr_
.Lab1490:
.LN3005:
	.stabn  68,0,5083,.LN3005-Emit_EmitNtmem		# line 5083, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1820
.Lab1821:
.LN3006:
	.stabn  68,0,5084,.LN3006-Emit_EmitNtmem		# line 5084, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3007:
	.stabn  68,0,5085,.LN3007-Emit_EmitNtmem		# line 5085, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrmem
	addl	$20, %esp
.LN3008:
	.stabn  68,0,5086,.LN3008-Emit_EmitNtmem		# line 5086, column 8
	call	InOut_WriteLn
.Lab1820:
.LN3009:
	.stabn  68,0,5087,.LN3009-Emit_EmitNtmem		# line 5087, column 0
.LBE9:
	leave
	ret
	.Lab1488 = 44
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB9-Emit_EmitNtmem
	.stabn 224,0,0,.LBE9-Emit_EmitNtmem
	.stabs "Emit_EmitNtOffsetPlusIndexMultFaktor:F16",36,0,0,Emit_EmitNtOffsetPlusIndexMultFaktor
	.align 4
Emit_EmitNtOffsetPlusIndexMultFaktor:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1822, %esp
.LN3010:
	.stabn  68,0,4485,.LN3010-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4485, column 1
.LBB10:
.LN3011:
	.stabn  68,0,4486,.LN3011-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4486, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	184(%eax),%eax
	.data
	.align 4
.Lab1834:
	.long	.Lab1833
	.long	.Lab1832
	.long	.Lab1831
	.long	.Lab1830
	.long	.Lab1829
	.long	.Lab1828
	.long	.Lab1827
	.long	.Lab1826
	.long	.Lab1825
	.text
	subl	$234,%eax
	jb	.Lab1823
	cmpl	$8,%eax
	ja	.Lab1823
	jmp	*.Lab1834(,%eax,4)
.Lab1833:
.LN3012:
	.stabn  68,0,4488,.LN3012-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4488, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN3013:
	.stabn  68,0,4489,.LN3013-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4489, column 10
	decl	Emit_s + 1536
.LN3014:
	.stabn  68,0,4490,.LN3014-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4490, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1838
	cmpl	$4096,%eax
	jbe	.Lab1837
.Lab1838:
   	call	BoundErr_		
.Lab1837:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1835
.Lab1836:
.LN3015:
	.stabn  68,0,4491,.LN3015-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4491, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1840
	cmpl	$4096,%eax
	jbe	.Lab1839
.Lab1840:
   	call	BoundErr_		
.Lab1839:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1835:
.LN3016:
	.stabn  68,0,4493,.LN3016-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4493, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1841
.Lab1842:
.LN3017:
	.stabn  68,0,4494,.LN3017-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4494, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3018:
	.stabn  68,0,4495,.LN3018-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4495, column 11
	.data
.Lab1843:
 	.ascii	"Rule 234/1841 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1843,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3019:
	.stabn  68,0,4496,.LN3019-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4496, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3020:
	.stabn  68,0,4497,.LN3020-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4497, column 11
	.data
.Lab1844:
 	.ascii	" Coerce ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$38
	leal	.Lab1844,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3021:
	.stabn  68,0,4498,.LN3021-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4498, column 11
	call	InOut_WriteLn
.LN3022:
	.stabn  68,0,4499,.LN3022-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4499, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3023:
	.stabn  68,0,4500,.LN3023-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4500, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3024:
	.stabn  68,0,4500,.LN3024-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4500, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3025:
	.stabn  68,0,4501,.LN3025-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4501, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1847
.Lab1846:
.LN3026:
	.stabn  68,0,4501,.LN3026-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4501, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1845
.Lab1847:
.LN3027:
	.stabn  68,0,4501,.LN3027-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4501, column 61
	call	InOut_WriteLn
.Lab1845:
.LN3028:
	.stabn  68,0,4502,.LN3028-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4502, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3029:
	.stabn  68,0,4503,.LN3029-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4503, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1849
	cmpl	$4096,%eax
	jbe	.Lab1848
.Lab1849:
   	call	BoundErr_		
.Lab1848:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1841:
.LN3030:
	.stabn  68,0,4505,.LN3030-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4505, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1832:
.LN3031:
	.stabn  68,0,4507,.LN3031-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4507, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN3032:
	.stabn  68,0,4508,.LN3032-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4508, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3033:
	.stabn  68,0,4509,.LN3033-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4509, column 10
	decl	Emit_s + 1536
.LN3034:
	.stabn  68,0,4510,.LN3034-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4510, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1853
	cmpl	$4096,%eax
	jbe	.Lab1852
.Lab1853:
   	call	BoundErr_		
.Lab1852:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1850
.Lab1851:
.LN3035:
	.stabn  68,0,4511,.LN3035-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4511, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1855
	cmpl	$4096,%eax
	jbe	.Lab1854
.Lab1855:
   	call	BoundErr_		
.Lab1854:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1850:
.LN3036:
	.stabn  68,0,4513,.LN3036-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4513, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1856
.Lab1857:
.LN3037:
	.stabn  68,0,4514,.LN3037-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4514, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3038:
	.stabn  68,0,4515,.LN3038-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4515, column 11
	.data
.Lab1858:
 	.ascii	"Rule 235/1354 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1858,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3039:
	.stabn  68,0,4516,.LN3039-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4516, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3040:
	.stabn  68,0,4517,.LN3040-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4517, column 11
	.data
.Lab1859:
 	.ascii	" FixedDiv ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$40
	leal	.Lab1859,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3041:
	.stabn  68,0,4518,.LN3041-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4518, column 11
	call	InOut_WriteLn
.LN3042:
	.stabn  68,0,4519,.LN3042-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4519, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3043:
	.stabn  68,0,4520,.LN3043-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4520, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3044:
	.stabn  68,0,4520,.LN3044-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4520, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3045:
	.stabn  68,0,4521,.LN3045-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4521, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1862
.Lab1861:
.LN3046:
	.stabn  68,0,4521,.LN3046-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4521, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1860
.Lab1862:
.LN3047:
	.stabn  68,0,4521,.LN3047-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4521, column 61
	call	InOut_WriteLn
.Lab1860:
.LN3048:
	.stabn  68,0,4522,.LN3048-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4522, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3049:
	.stabn  68,0,4523,.LN3049-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4523, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1864
	cmpl	$4096,%eax
	jbe	.Lab1863
.Lab1864:
   	call	BoundErr_		
.Lab1863:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1856:
.LN3050:
	.stabn  68,0,4525,.LN3050-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4525, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1831:
.LN3051:
	.stabn  68,0,4527,.LN3051-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4527, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN3052:
	.stabn  68,0,4528,.LN3052-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4528, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3053:
	.stabn  68,0,4529,.LN3053-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4529, column 10
	decl	Emit_s + 1536
.LN3054:
	.stabn  68,0,4530,.LN3054-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4530, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1868
	cmpl	$4096,%eax
	jbe	.Lab1867
.Lab1868:
   	call	BoundErr_		
.Lab1867:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1865
.Lab1866:
.LN3055:
	.stabn  68,0,4531,.LN3055-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4531, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1870
	cmpl	$4096,%eax
	jbe	.Lab1869
.Lab1870:
   	call	BoundErr_		
.Lab1869:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1865:
.LN3056:
	.stabn  68,0,4533,.LN3056-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4533, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1871
.Lab1872:
.LN3057:
	.stabn  68,0,4534,.LN3057-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4534, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3058:
	.stabn  68,0,4535,.LN3058-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4535, column 11
	.data
.Lab1873:
 	.ascii	"Rule 236/1170 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1873,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3059:
	.stabn  68,0,4536,.LN3059-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4536, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3060:
	.stabn  68,0,4537,.LN3060-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4537, column 11
	.data
.Lab1874:
 	.ascii	" FixedMult ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$41
	leal	.Lab1874,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3061:
	.stabn  68,0,4538,.LN3061-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4538, column 11
	call	InOut_WriteLn
.LN3062:
	.stabn  68,0,4539,.LN3062-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4539, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3063:
	.stabn  68,0,4540,.LN3063-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4540, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3064:
	.stabn  68,0,4540,.LN3064-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4540, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3065:
	.stabn  68,0,4541,.LN3065-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4541, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1877
.Lab1876:
.LN3066:
	.stabn  68,0,4541,.LN3066-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4541, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1875
.Lab1877:
.LN3067:
	.stabn  68,0,4541,.LN3067-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4541, column 61
	call	InOut_WriteLn
.Lab1875:
.LN3068:
	.stabn  68,0,4542,.LN3068-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4542, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3069:
	.stabn  68,0,4543,.LN3069-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4543, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1879
	cmpl	$4096,%eax
	jbe	.Lab1878
.Lab1879:
   	call	BoundErr_		
.Lab1878:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1871:
.LN3070:
	.stabn  68,0,4545,.LN3070-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4545, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1830:
.LN3071:
	.stabn  68,0,4547,.LN3071-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4547, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3072:
	.stabn  68,0,4548,.LN3072-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4548, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN3073:
	.stabn  68,0,4549,.LN3073-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4549, column 10
	decl	Emit_s + 1536
.LN3074:
	.stabn  68,0,4550,.LN3074-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4550, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1883
	cmpl	$4096,%eax
	jbe	.Lab1882
.Lab1883:
   	call	BoundErr_		
.Lab1882:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1880
.Lab1881:
.LN3075:
	.stabn  68,0,4551,.LN3075-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4551, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1885
	cmpl	$4096,%eax
	jbe	.Lab1884
.Lab1885:
   	call	BoundErr_		
.Lab1884:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1880:
.LN3076:
	.stabn  68,0,4553,.LN3076-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4553, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1886
.Lab1887:
.LN3077:
	.stabn  68,0,4554,.LN3077-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4554, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3078:
	.stabn  68,0,4555,.LN3078-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4555, column 11
	.data
.Lab1888:
 	.ascii	"Rule 237/1170 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1888,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3079:
	.stabn  68,0,4556,.LN3079-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4556, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3080:
	.stabn  68,0,4557,.LN3080-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4557, column 11
	.data
.Lab1889:
 	.ascii	" FixedMult ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$41
	leal	.Lab1889,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3081:
	.stabn  68,0,4558,.LN3081-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4558, column 11
	call	InOut_WriteLn
.LN3082:
	.stabn  68,0,4559,.LN3082-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4559, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3083:
	.stabn  68,0,4560,.LN3083-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4560, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3084:
	.stabn  68,0,4560,.LN3084-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4560, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3085:
	.stabn  68,0,4561,.LN3085-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4561, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1892
.Lab1891:
.LN3086:
	.stabn  68,0,4561,.LN3086-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4561, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1890
.Lab1892:
.LN3087:
	.stabn  68,0,4561,.LN3087-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4561, column 61
	call	InOut_WriteLn
.Lab1890:
.LN3088:
	.stabn  68,0,4562,.LN3088-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4562, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3089:
	.stabn  68,0,4563,.LN3089-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4563, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1894
	cmpl	$4096,%eax
	jbe	.Lab1893
.Lab1894:
   	call	BoundErr_		
.Lab1893:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1886:
.LN3090:
	.stabn  68,0,4565,.LN3090-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4565, column 49
	movl	16(%ebp),%ebx
	movb	-44(%ebp),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1829:
.LN3091:
	.stabn  68,0,4567,.LN3091-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4567, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN3092:
	.stabn  68,0,4568,.LN3092-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4568, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3093:
	.stabn  68,0,4569,.LN3093-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4569, column 10
	decl	Emit_s + 1536
.LN3094:
	.stabn  68,0,4570,.LN3094-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4570, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1898
	cmpl	$4096,%eax
	jbe	.Lab1897
.Lab1898:
   	call	BoundErr_		
.Lab1897:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1895
.Lab1896:
.LN3095:
	.stabn  68,0,4571,.LN3095-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4571, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1900
	cmpl	$4096,%eax
	jbe	.Lab1899
.Lab1900:
   	call	BoundErr_		
.Lab1899:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1895:
.LN3096:
	.stabn  68,0,4573,.LN3096-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4573, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1901
.Lab1902:
.LN3097:
	.stabn  68,0,4574,.LN3097-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4574, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3098:
	.stabn  68,0,4575,.LN3098-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4575, column 11
	.data
.Lab1903:
 	.ascii	"Rule 238/1070 Cost=\000"
	.text
	pushl	$19
	leal	.Lab1903,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3099:
	.stabn  68,0,4576,.LN3099-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4576, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3100:
	.stabn  68,0,4577,.LN3100-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4577, column 11
	.data
.Lab1904:
 	.ascii	" FixedMinus ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$42
	leal	.Lab1904,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3101:
	.stabn  68,0,4578,.LN3101-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4578, column 11
	call	InOut_WriteLn
.LN3102:
	.stabn  68,0,4579,.LN3102-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4579, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3103:
	.stabn  68,0,4580,.LN3103-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4580, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3104:
	.stabn  68,0,4580,.LN3104-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4580, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3105:
	.stabn  68,0,4581,.LN3105-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4581, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1907
.Lab1906:
.LN3106:
	.stabn  68,0,4581,.LN3106-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4581, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1905
.Lab1907:
.LN3107:
	.stabn  68,0,4581,.LN3107-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4581, column 61
	call	InOut_WriteLn
.Lab1905:
.LN3108:
	.stabn  68,0,4582,.LN3108-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4582, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3109:
	.stabn  68,0,4583,.LN3109-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4583, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1909
	cmpl	$4096,%eax
	jbe	.Lab1908
.Lab1909:
   	call	BoundErr_		
.Lab1908:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1901:
.LN3110:
	.stabn  68,0,4585,.LN3110-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4585, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1828:
.LN3111:
	.stabn  68,0,4587,.LN3111-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4587, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN3112:
	.stabn  68,0,4588,.LN3112-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4588, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3113:
	.stabn  68,0,4589,.LN3113-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4589, column 10
	decl	Emit_s + 1536
.LN3114:
	.stabn  68,0,4590,.LN3114-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4590, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1913
	cmpl	$4096,%eax
	jbe	.Lab1912
.Lab1913:
   	call	BoundErr_		
.Lab1912:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1910
.Lab1911:
.LN3115:
	.stabn  68,0,4591,.LN3115-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4591, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1915
	cmpl	$4096,%eax
	jbe	.Lab1914
.Lab1915:
   	call	BoundErr_		
.Lab1914:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1910:
.LN3116:
	.stabn  68,0,4593,.LN3116-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4593, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1916
.Lab1917:
.LN3117:
	.stabn  68,0,4594,.LN3117-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4594, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3118:
	.stabn  68,0,4595,.LN3118-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4595, column 11
	.data
.Lab1918:
 	.ascii	"Rule 239/964 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1918,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3119:
	.stabn  68,0,4596,.LN3119-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4596, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3120:
	.stabn  68,0,4597,.LN3120-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4597, column 11
	.data
.Lab1919:
 	.ascii	" FixedPlus ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$41
	leal	.Lab1919,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3121:
	.stabn  68,0,4598,.LN3121-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4598, column 11
	call	InOut_WriteLn
.LN3122:
	.stabn  68,0,4599,.LN3122-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4599, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3123:
	.stabn  68,0,4600,.LN3123-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4600, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3124:
	.stabn  68,0,4600,.LN3124-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4600, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3125:
	.stabn  68,0,4601,.LN3125-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4601, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1922
.Lab1921:
.LN3126:
	.stabn  68,0,4601,.LN3126-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4601, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1920
.Lab1922:
.LN3127:
	.stabn  68,0,4601,.LN3127-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4601, column 61
	call	InOut_WriteLn
.Lab1920:
.LN3128:
	.stabn  68,0,4602,.LN3128-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4602, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3129:
	.stabn  68,0,4603,.LN3129-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4603, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1924
	cmpl	$4096,%eax
	jbe	.Lab1923
.Lab1924:
   	call	BoundErr_		
.Lab1923:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1916:
.LN3130:
	.stabn  68,0,4605,.LN3130-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4605, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1827:
.LN3131:
	.stabn  68,0,4607,.LN3131-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4607, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3132:
	.stabn  68,0,4608,.LN3132-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4608, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtOffsetPlusIndexMultFaktor
	addl	$12, %esp
.LN3133:
	.stabn  68,0,4609,.LN3133-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4609, column 10
	decl	Emit_s + 1536
.LN3134:
	.stabn  68,0,4610,.LN3134-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4610, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1928
	cmpl	$4096,%eax
	jbe	.Lab1927
.Lab1928:
   	call	BoundErr_		
.Lab1927:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1925
.Lab1926:
.LN3135:
	.stabn  68,0,4611,.LN3135-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4611, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1930
	cmpl	$4096,%eax
	jbe	.Lab1929
.Lab1930:
   	call	BoundErr_		
.Lab1929:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1925:
.LN3136:
	.stabn  68,0,4613,.LN3136-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4613, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1931
.Lab1932:
.LN3137:
	.stabn  68,0,4614,.LN3137-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4614, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3138:
	.stabn  68,0,4615,.LN3138-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4615, column 11
	.data
.Lab1933:
 	.ascii	"Rule 240/964 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1933,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3139:
	.stabn  68,0,4616,.LN3139-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4616, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3140:
	.stabn  68,0,4617,.LN3140-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4617, column 11
	.data
.Lab1934:
 	.ascii	" FixedPlus ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$41
	leal	.Lab1934,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3141:
	.stabn  68,0,4618,.LN3141-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4618, column 11
	call	InOut_WriteLn
.LN3142:
	.stabn  68,0,4619,.LN3142-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4619, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3143:
	.stabn  68,0,4620,.LN3143-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4620, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3144:
	.stabn  68,0,4620,.LN3144-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4620, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3145:
	.stabn  68,0,4621,.LN3145-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4621, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1937
.Lab1936:
.LN3146:
	.stabn  68,0,4621,.LN3146-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4621, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1935
.Lab1937:
.LN3147:
	.stabn  68,0,4621,.LN3147-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4621, column 61
	call	InOut_WriteLn
.Lab1935:
.LN3148:
	.stabn  68,0,4622,.LN3148-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4622, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3149:
	.stabn  68,0,4623,.LN3149-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4623, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1939
	cmpl	$4096,%eax
	jbe	.Lab1938
.Lab1939:
   	call	BoundErr_		
.Lab1938:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1931:
.LN3150:
	.stabn  68,0,4625,.LN3150-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4625, column 49
	movl	16(%ebp),%ebx
	movb	-44(%ebp),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1826:
.LN3151:
	.stabn  68,0,4627,.LN3151-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4627, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3152:
	.stabn  68,0,4628,.LN3152-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4628, column 10
	decl	Emit_s + 1536
.LN3153:
	.stabn  68,0,4629,.LN3153-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4629, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1943
	cmpl	$4096,%eax
	jbe	.Lab1942
.Lab1943:
   	call	BoundErr_		
.Lab1942:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1940
.Lab1941:
.LN3154:
	.stabn  68,0,4630,.LN3154-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4630, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1945
	cmpl	$4096,%eax
	jbe	.Lab1944
.Lab1945:
   	call	BoundErr_		
.Lab1944:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1940:
.LN3155:
	.stabn  68,0,4632,.LN3155-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4632, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1946
.Lab1947:
.LN3156:
	.stabn  68,0,4633,.LN3156-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4633, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3157:
	.stabn  68,0,4634,.LN3157-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4634, column 11
	.data
.Lab1948:
 	.ascii	"Rule 241/363 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1948,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3158:
	.stabn  68,0,4635,.LN3158-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4635, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3159:
	.stabn  68,0,4636,.LN3159-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4636, column 11
	.data
.Lab1949:
 	.ascii	" reg ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$35
	leal	.Lab1949,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3160:
	.stabn  68,0,4637,.LN3160-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4637, column 11
	call	InOut_WriteLn
.LN3161:
	.stabn  68,0,4638,.LN3161-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4638, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3162:
	.stabn  68,0,4639,.LN3162-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4639, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3163:
	.stabn  68,0,4639,.LN3163-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4639, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3164:
	.stabn  68,0,4640,.LN3164-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4640, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1952
.Lab1951:
.LN3165:
	.stabn  68,0,4640,.LN3165-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4640, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1950
.Lab1952:
.LN3166:
	.stabn  68,0,4640,.LN3166-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4640, column 61
	call	InOut_WriteLn
.Lab1950:
.LN3167:
	.stabn  68,0,4641,.LN3167-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4641, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3168:
	.stabn  68,0,4642,.LN3168-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4642, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1954
	cmpl	$4096,%eax
	jbe	.Lab1953
.Lab1954:
   	call	BoundErr_		
.Lab1953:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1946:
.LN3169:
	.stabn  68,0,4645,.LN3169-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4645, column 65
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1956
	cmpl	$4096,%eax
	jbe	.Lab1955
.Lab1956:
   	call	BoundErr_		
.Lab1955:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
.LN3170:
	.stabn  68,0,4646,.LN3170-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 2
	.data
.Lab1957:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab1957,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3171:
	.stabn  68,0,4646,.LN3171-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 25
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSigned
	addl	$4, %esp
.LN3172:
	.stabn  68,0,4646,.LN3172-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 56
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN3173:
	.stabn  68,0,4646,.LN3173-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 87
	.data
.Lab1958:
 	.ascii	"l\011\000"
	.text
	pushl	$2
	leal	.Lab1958,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3174:
	.stabn  68,0,4646,.LN3174-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 110
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1960
	cmpl	$4096,%eax
	jbe	.Lab1959
.Lab1960:
   	call	BoundErr_		
.Lab1959:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN3175:
	.stabn  68,0,4646,.LN3175-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 175
	.data
.Lab1961:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab1961,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3176:
	.stabn  68,0,4646,.LN3176-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 193
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1963
	cmpl	$4096,%eax
	jbe	.Lab1962
.Lab1963:
   	call	BoundErr_		
.Lab1962:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN3177:
	.stabn  68,0,4646,.LN3177-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4646, column 238
	call	CgAssOut_AssLn
	jmp	.Lab1824
.Lab1825:
.LN3178:
	.stabn  68,0,4649,.LN3178-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4649, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3179:
	.stabn  68,0,4650,.LN3179-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4650, column 10
	decl	Emit_s + 1536
.LN3180:
	.stabn  68,0,4651,.LN3180-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4651, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1967
	cmpl	$4096,%eax
	jbe	.Lab1966
.Lab1967:
   	call	BoundErr_		
.Lab1966:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab1964
.Lab1965:
.LN3181:
	.stabn  68,0,4652,.LN3181-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4652, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1969
	cmpl	$4096,%eax
	jbe	.Lab1968
.Lab1969:
   	call	BoundErr_		
.Lab1968:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab1964:
.LN3182:
	.stabn  68,0,4654,.LN3182-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4654, column 8
	cmpb	$0,IR_s + 133
	je	.Lab1970
.Lab1971:
.LN3183:
	.stabn  68,0,4655,.LN3183-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4655, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3184:
	.stabn  68,0,4656,.LN3184-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4656, column 11
	.data
.Lab1972:
 	.ascii	"Rule 242/357 Cost=\000"
	.text
	pushl	$18
	leal	.Lab1972,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3185:
	.stabn  68,0,4657,.LN3185-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4657, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	120(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3186:
	.stabn  68,0,4658,.LN3186-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4658, column 11
	.data
.Lab1973:
 	.ascii	" reg ->   OffsetPlusIndexMultFaktor\000"
	.text
	pushl	$35
	leal	.Lab1973,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3187:
	.stabn  68,0,4659,.LN3187-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4659, column 11
	call	InOut_WriteLn
.LN3188:
	.stabn  68,0,4660,.LN3188-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4660, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3189:
	.stabn  68,0,4661,.LN3189-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4661, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3190:
	.stabn  68,0,4661,.LN3190-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4661, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3191:
	.stabn  68,0,4662,.LN3191-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4662, column 11
	cmpl	$0,8(%ebp)
	je	.Lab1976
.Lab1975:
.LN3192:
	.stabn  68,0,4662,.LN3192-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4662, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab1974
.Lab1976:
.LN3193:
	.stabn  68,0,4662,.LN3193-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4662, column 61
	call	InOut_WriteLn
.Lab1974:
.LN3194:
	.stabn  68,0,4663,.LN3194-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4663, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3195:
	.stabn  68,0,4664,.LN3195-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4664, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1978
	cmpl	$4096,%eax
	jbe	.Lab1977
.Lab1978:
   	call	BoundErr_		
.Lab1977:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab1970:
.LN3196:
	.stabn  68,0,4666,.LN3196-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4666, column 49
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab1980
	cmpl	$4096,%eax
	jbe	.Lab1979
.Lab1980:
   	call	BoundErr_		
.Lab1979:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
	jmp	.Lab1824
.Lab1823:
	call	CaseErr_
.Lab1824:
.LN3197:
	.stabn  68,0,4668,.LN3197-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4668, column 4
	cmpb	$0,IR_s + 133
	je	.Lab1981
.Lab1982:
.LN3198:
	.stabn  68,0,4669,.LN3198-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4669, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3199:
	.stabn  68,0,4670,.LN3199-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4670, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrOffsetPlusIndexMultFaktor
	addl	$20, %esp
.LN3200:
	.stabn  68,0,4671,.LN3200-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4671, column 8
	call	InOut_WriteLn
.Lab1981:
.LN3201:
	.stabn  68,0,4672,.LN3201-Emit_EmitNtOffsetPlusIndexMultFaktor		# line 4672, column 0
.LBE10:
	leave
	ret
	.Lab1822 = 44
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB10-Emit_EmitNtOffsetPlusIndexMultFaktor
	.stabn 224,0,0,.LBE10-Emit_EmitNtOffsetPlusIndexMultFaktor
	.stabs "Emit_EmitNtRegPlusSymPlusOffset:F16",36,0,0,Emit_EmitNtRegPlusSymPlusOffset
	.align 4
Emit_EmitNtRegPlusSymPlusOffset:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab1983, %esp
.LN3202:
	.stabn  68,0,4169,.LN3202-Emit_EmitNtRegPlusSymPlusOffset		# line 4169, column 1
.LBB11:
.LN3203:
	.stabn  68,0,4170,.LN3203-Emit_EmitNtRegPlusSymPlusOffset		# line 4170, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	180(%eax),%eax
	.data
	.align 4
.Lab2000:
	.long	.Lab1999
	.long	.Lab1998
	.long	.Lab1997
	.long	.Lab1996
	.long	.Lab1995
	.long	.Lab1994
	.long	.Lab1993
	.long	.Lab1992
	.long	.Lab1991
	.long	.Lab1990
	.long	.Lab1989
	.long	.Lab1988
	.long	.Lab1987
	.long	.Lab1986
	.text
	subl	$220,%eax
	jb	.Lab1984
	cmpl	$13,%eax
	ja	.Lab1984
	jmp	*.Lab2000(,%eax,4)
.Lab1999:
.LN3204:
	.stabn  68,0,4172,.LN3204-Emit_EmitNtRegPlusSymPlusOffset		# line 4172, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegPlusSymPlusOffset
	addl	$12, %esp
.LN3205:
	.stabn  68,0,4173,.LN3205-Emit_EmitNtRegPlusSymPlusOffset		# line 4173, column 10
	decl	Emit_s + 1536
.LN3206:
	.stabn  68,0,4174,.LN3206-Emit_EmitNtRegPlusSymPlusOffset		# line 4174, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2004
	cmpl	$4096,%eax
	jbe	.Lab2003
.Lab2004:
   	call	BoundErr_		
.Lab2003:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2001
.Lab2002:
.LN3207:
	.stabn  68,0,4175,.LN3207-Emit_EmitNtRegPlusSymPlusOffset		# line 4175, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2006
	cmpl	$4096,%eax
	jbe	.Lab2005
.Lab2006:
   	call	BoundErr_		
.Lab2005:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2001:
.LN3208:
	.stabn  68,0,4177,.LN3208-Emit_EmitNtRegPlusSymPlusOffset		# line 4177, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2007
.Lab2008:
.LN3209:
	.stabn  68,0,4178,.LN3209-Emit_EmitNtRegPlusSymPlusOffset		# line 4178, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3210:
	.stabn  68,0,4179,.LN3210-Emit_EmitNtRegPlusSymPlusOffset		# line 4179, column 11
	.data
.Lab2009:
 	.ascii	"Rule 220/1834 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2009,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3211:
	.stabn  68,0,4180,.LN3211-Emit_EmitNtRegPlusSymPlusOffset		# line 4180, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3212:
	.stabn  68,0,4181,.LN3212-Emit_EmitNtRegPlusSymPlusOffset		# line 4181, column 11
	.data
.Lab2010:
 	.ascii	" Coerce ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$33
	leal	.Lab2010,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3213:
	.stabn  68,0,4182,.LN3213-Emit_EmitNtRegPlusSymPlusOffset		# line 4182, column 11
	call	InOut_WriteLn
.LN3214:
	.stabn  68,0,4183,.LN3214-Emit_EmitNtRegPlusSymPlusOffset		# line 4183, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3215:
	.stabn  68,0,4184,.LN3215-Emit_EmitNtRegPlusSymPlusOffset		# line 4184, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3216:
	.stabn  68,0,4184,.LN3216-Emit_EmitNtRegPlusSymPlusOffset		# line 4184, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3217:
	.stabn  68,0,4185,.LN3217-Emit_EmitNtRegPlusSymPlusOffset		# line 4185, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2013
.Lab2012:
.LN3218:
	.stabn  68,0,4185,.LN3218-Emit_EmitNtRegPlusSymPlusOffset		# line 4185, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2011
.Lab2013:
.LN3219:
	.stabn  68,0,4185,.LN3219-Emit_EmitNtRegPlusSymPlusOffset		# line 4185, column 61
	call	InOut_WriteLn
.Lab2011:
.LN3220:
	.stabn  68,0,4186,.LN3220-Emit_EmitNtRegPlusSymPlusOffset		# line 4186, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3221:
	.stabn  68,0,4187,.LN3221-Emit_EmitNtRegPlusSymPlusOffset		# line 4187, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2015
	cmpl	$4096,%eax
	jbe	.Lab2014
.Lab2015:
   	call	BoundErr_		
.Lab2014:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2007:
.LN3222:
	.stabn  68,0,4189,.LN3222-Emit_EmitNtRegPlusSymPlusOffset		# line 4189, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
.LN3223:
	.stabn  68,0,4190,.LN3223-Emit_EmitNtRegPlusSymPlusOffset		# line 4190, column 57
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1998:
.LN3224:
	.stabn  68,0,4192,.LN3224-Emit_EmitNtRegPlusSymPlusOffset		# line 4192, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegPlusSymPlusOffset
	addl	$12, %esp
.LN3225:
	.stabn  68,0,4193,.LN3225-Emit_EmitNtRegPlusSymPlusOffset		# line 4193, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3226:
	.stabn  68,0,4194,.LN3226-Emit_EmitNtRegPlusSymPlusOffset		# line 4194, column 10
	decl	Emit_s + 1536
.LN3227:
	.stabn  68,0,4195,.LN3227-Emit_EmitNtRegPlusSymPlusOffset		# line 4195, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2019
	cmpl	$4096,%eax
	jbe	.Lab2018
.Lab2019:
   	call	BoundErr_		
.Lab2018:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2016
.Lab2017:
.LN3228:
	.stabn  68,0,4196,.LN3228-Emit_EmitNtRegPlusSymPlusOffset		# line 4196, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2021
	cmpl	$4096,%eax
	jbe	.Lab2020
.Lab2021:
   	call	BoundErr_		
.Lab2020:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2016:
.LN3229:
	.stabn  68,0,4198,.LN3229-Emit_EmitNtRegPlusSymPlusOffset		# line 4198, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2022
.Lab2023:
.LN3230:
	.stabn  68,0,4199,.LN3230-Emit_EmitNtRegPlusSymPlusOffset		# line 4199, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3231:
	.stabn  68,0,4200,.LN3231-Emit_EmitNtRegPlusSymPlusOffset		# line 4200, column 11
	.data
.Lab2024:
 	.ascii	"Rule 221/1065 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2024,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3232:
	.stabn  68,0,4201,.LN3232-Emit_EmitNtRegPlusSymPlusOffset		# line 4201, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3233:
	.stabn  68,0,4202,.LN3233-Emit_EmitNtRegPlusSymPlusOffset		# line 4202, column 11
	.data
.Lab2025:
 	.ascii	" FixedMinus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$37
	leal	.Lab2025,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3234:
	.stabn  68,0,4203,.LN3234-Emit_EmitNtRegPlusSymPlusOffset		# line 4203, column 11
	call	InOut_WriteLn
.LN3235:
	.stabn  68,0,4204,.LN3235-Emit_EmitNtRegPlusSymPlusOffset		# line 4204, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3236:
	.stabn  68,0,4205,.LN3236-Emit_EmitNtRegPlusSymPlusOffset		# line 4205, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3237:
	.stabn  68,0,4205,.LN3237-Emit_EmitNtRegPlusSymPlusOffset		# line 4205, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3238:
	.stabn  68,0,4206,.LN3238-Emit_EmitNtRegPlusSymPlusOffset		# line 4206, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2028
.Lab2027:
.LN3239:
	.stabn  68,0,4206,.LN3239-Emit_EmitNtRegPlusSymPlusOffset		# line 4206, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2026
.Lab2028:
.LN3240:
	.stabn  68,0,4206,.LN3240-Emit_EmitNtRegPlusSymPlusOffset		# line 4206, column 61
	call	InOut_WriteLn
.Lab2026:
.LN3241:
	.stabn  68,0,4207,.LN3241-Emit_EmitNtRegPlusSymPlusOffset		# line 4207, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3242:
	.stabn  68,0,4208,.LN3242-Emit_EmitNtRegPlusSymPlusOffset		# line 4208, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2030
	cmpl	$4096,%eax
	jbe	.Lab2029
.Lab2030:
   	call	BoundErr_		
.Lab2029:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2022:
.LN3243:
	.stabn  68,0,4210,.LN3243-Emit_EmitNtRegPlusSymPlusOffset		# line 4210, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
.LN3244:
	.stabn  68,0,4211,.LN3244-Emit_EmitNtRegPlusSymPlusOffset		# line 4211, column 57
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1997:
.LN3245:
	.stabn  68,0,4213,.LN3245-Emit_EmitNtRegPlusSymPlusOffset		# line 4213, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3246:
	.stabn  68,0,4214,.LN3246-Emit_EmitNtRegPlusSymPlusOffset		# line 4214, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3247:
	.stabn  68,0,4215,.LN3247-Emit_EmitNtRegPlusSymPlusOffset		# line 4215, column 10
	decl	Emit_s + 1536
.LN3248:
	.stabn  68,0,4216,.LN3248-Emit_EmitNtRegPlusSymPlusOffset		# line 4216, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2034
	cmpl	$4096,%eax
	jbe	.Lab2033
.Lab2034:
   	call	BoundErr_		
.Lab2033:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2031
.Lab2032:
.LN3249:
	.stabn  68,0,4217,.LN3249-Emit_EmitNtRegPlusSymPlusOffset		# line 4217, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2036
	cmpl	$4096,%eax
	jbe	.Lab2035
.Lab2036:
   	call	BoundErr_		
.Lab2035:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2031:
.LN3250:
	.stabn  68,0,4219,.LN3250-Emit_EmitNtRegPlusSymPlusOffset		# line 4219, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2037
.Lab2038:
.LN3251:
	.stabn  68,0,4220,.LN3251-Emit_EmitNtRegPlusSymPlusOffset		# line 4220, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3252:
	.stabn  68,0,4221,.LN3252-Emit_EmitNtRegPlusSymPlusOffset		# line 4221, column 11
	.data
.Lab2039:
 	.ascii	"Rule 222/1055 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2039,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3253:
	.stabn  68,0,4222,.LN3253-Emit_EmitNtRegPlusSymPlusOffset		# line 4222, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3254:
	.stabn  68,0,4223,.LN3254-Emit_EmitNtRegPlusSymPlusOffset		# line 4223, column 11
	.data
.Lab2040:
 	.ascii	" FixedMinus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$37
	leal	.Lab2040,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3255:
	.stabn  68,0,4224,.LN3255-Emit_EmitNtRegPlusSymPlusOffset		# line 4224, column 11
	call	InOut_WriteLn
.LN3256:
	.stabn  68,0,4225,.LN3256-Emit_EmitNtRegPlusSymPlusOffset		# line 4225, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3257:
	.stabn  68,0,4226,.LN3257-Emit_EmitNtRegPlusSymPlusOffset		# line 4226, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3258:
	.stabn  68,0,4226,.LN3258-Emit_EmitNtRegPlusSymPlusOffset		# line 4226, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3259:
	.stabn  68,0,4227,.LN3259-Emit_EmitNtRegPlusSymPlusOffset		# line 4227, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2043
.Lab2042:
.LN3260:
	.stabn  68,0,4227,.LN3260-Emit_EmitNtRegPlusSymPlusOffset		# line 4227, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2041
.Lab2043:
.LN3261:
	.stabn  68,0,4227,.LN3261-Emit_EmitNtRegPlusSymPlusOffset		# line 4227, column 61
	call	InOut_WriteLn
.Lab2041:
.LN3262:
	.stabn  68,0,4228,.LN3262-Emit_EmitNtRegPlusSymPlusOffset		# line 4228, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3263:
	.stabn  68,0,4229,.LN3263-Emit_EmitNtRegPlusSymPlusOffset		# line 4229, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2045
	cmpl	$4096,%eax
	jbe	.Lab2044
.Lab2045:
   	call	BoundErr_		
.Lab2044:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2037:
.LN3264:
	.stabn  68,0,4232,.LN3264-Emit_EmitNtRegPlusSymPlusOffset		# line 4232, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2047
	cmpl	$4096,%eax
	jbe	.Lab2046
.Lab2047:
   	call	BoundErr_		
.Lab2046:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
.LN3265:
	.stabn  68,0,4233,.LN3265-Emit_EmitNtRegPlusSymPlusOffset		# line 4233, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,4(%ebx) 
.LN3266:
	.stabn  68,0,4234,.LN3266-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 2
	.data
.Lab2048:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab2048,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3267:
	.stabn  68,0,4234,.LN3267-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 25
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSigned
	addl	$4, %esp
.LN3268:
	.stabn  68,0,4234,.LN3268-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 64
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN3269:
	.stabn  68,0,4234,.LN3269-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 103
	.data
.Lab2049:
 	.ascii	"l\011\000"
	.text
	pushl	$2
	leal	.Lab2049,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3270:
	.stabn  68,0,4234,.LN3270-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 126
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2051
	cmpl	$4096,%eax
	jbe	.Lab2050
.Lab2051:
   	call	BoundErr_		
.Lab2050:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN3271:
	.stabn  68,0,4234,.LN3271-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 199
	.data
.Lab2052:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab2052,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3272:
	.stabn  68,0,4234,.LN3272-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 217
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2054
	cmpl	$4096,%eax
	jbe	.Lab2053
.Lab2054:
   	call	BoundErr_		
.Lab2053:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN3273:
	.stabn  68,0,4234,.LN3273-Emit_EmitNtRegPlusSymPlusOffset		# line 4234, column 262
	call	CgAssOut_AssLn
	jmp	.Lab1985
.Lab1996:
.LN3274:
	.stabn  68,0,4237,.LN3274-Emit_EmitNtRegPlusSymPlusOffset		# line 4237, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3275:
	.stabn  68,0,4238,.LN3275-Emit_EmitNtRegPlusSymPlusOffset		# line 4238, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3276:
	.stabn  68,0,4239,.LN3276-Emit_EmitNtRegPlusSymPlusOffset		# line 4239, column 10
	decl	Emit_s + 1536
.LN3277:
	.stabn  68,0,4240,.LN3277-Emit_EmitNtRegPlusSymPlusOffset		# line 4240, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2058
	cmpl	$4096,%eax
	jbe	.Lab2057
.Lab2058:
   	call	BoundErr_		
.Lab2057:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2055
.Lab2056:
.LN3278:
	.stabn  68,0,4241,.LN3278-Emit_EmitNtRegPlusSymPlusOffset		# line 4241, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2060
	cmpl	$4096,%eax
	jbe	.Lab2059
.Lab2060:
   	call	BoundErr_		
.Lab2059:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2055:
.LN3279:
	.stabn  68,0,4243,.LN3279-Emit_EmitNtRegPlusSymPlusOffset		# line 4243, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2061
.Lab2062:
.LN3280:
	.stabn  68,0,4244,.LN3280-Emit_EmitNtRegPlusSymPlusOffset		# line 4244, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3281:
	.stabn  68,0,4245,.LN3281-Emit_EmitNtRegPlusSymPlusOffset		# line 4245, column 11
	.data
.Lab2063:
 	.ascii	"Rule 223/1049 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2063,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3282:
	.stabn  68,0,4246,.LN3282-Emit_EmitNtRegPlusSymPlusOffset		# line 4246, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3283:
	.stabn  68,0,4247,.LN3283-Emit_EmitNtRegPlusSymPlusOffset		# line 4247, column 11
	.data
.Lab2064:
 	.ascii	" FixedMinus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$37
	leal	.Lab2064,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3284:
	.stabn  68,0,4248,.LN3284-Emit_EmitNtRegPlusSymPlusOffset		# line 4248, column 11
	call	InOut_WriteLn
.LN3285:
	.stabn  68,0,4249,.LN3285-Emit_EmitNtRegPlusSymPlusOffset		# line 4249, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3286:
	.stabn  68,0,4250,.LN3286-Emit_EmitNtRegPlusSymPlusOffset		# line 4250, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3287:
	.stabn  68,0,4250,.LN3287-Emit_EmitNtRegPlusSymPlusOffset		# line 4250, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3288:
	.stabn  68,0,4251,.LN3288-Emit_EmitNtRegPlusSymPlusOffset		# line 4251, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2067
.Lab2066:
.LN3289:
	.stabn  68,0,4251,.LN3289-Emit_EmitNtRegPlusSymPlusOffset		# line 4251, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2065
.Lab2067:
.LN3290:
	.stabn  68,0,4251,.LN3290-Emit_EmitNtRegPlusSymPlusOffset		# line 4251, column 61
	call	InOut_WriteLn
.Lab2065:
.LN3291:
	.stabn  68,0,4252,.LN3291-Emit_EmitNtRegPlusSymPlusOffset		# line 4252, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3292:
	.stabn  68,0,4253,.LN3292-Emit_EmitNtRegPlusSymPlusOffset		# line 4253, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2069
	cmpl	$4096,%eax
	jbe	.Lab2068
.Lab2069:
   	call	BoundErr_		
.Lab2068:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2061:
.LN3293:
	.stabn  68,0,4255,.LN3293-Emit_EmitNtRegPlusSymPlusOffset		# line 4255, column 49
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2071
	cmpl	$4096,%eax
	jbe	.Lab2070
.Lab2071:
   	call	BoundErr_		
.Lab2070:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
.LN3294:
	.stabn  68,0,4256,.LN3294-Emit_EmitNtRegPlusSymPlusOffset		# line 4256, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1995:
.LN3295:
	.stabn  68,0,4258,.LN3295-Emit_EmitNtRegPlusSymPlusOffset		# line 4258, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegPlusSymPlusOffset
	addl	$12, %esp
.LN3296:
	.stabn  68,0,4259,.LN3296-Emit_EmitNtRegPlusSymPlusOffset		# line 4259, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3297:
	.stabn  68,0,4260,.LN3297-Emit_EmitNtRegPlusSymPlusOffset		# line 4260, column 10
	decl	Emit_s + 1536
.LN3298:
	.stabn  68,0,4261,.LN3298-Emit_EmitNtRegPlusSymPlusOffset		# line 4261, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2075
	cmpl	$4096,%eax
	jbe	.Lab2074
.Lab2075:
   	call	BoundErr_		
.Lab2074:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2072
.Lab2073:
.LN3299:
	.stabn  68,0,4262,.LN3299-Emit_EmitNtRegPlusSymPlusOffset		# line 4262, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2077
	cmpl	$4096,%eax
	jbe	.Lab2076
.Lab2077:
   	call	BoundErr_		
.Lab2076:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2072:
.LN3300:
	.stabn  68,0,4264,.LN3300-Emit_EmitNtRegPlusSymPlusOffset		# line 4264, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2078
.Lab2079:
.LN3301:
	.stabn  68,0,4265,.LN3301-Emit_EmitNtRegPlusSymPlusOffset		# line 4265, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3302:
	.stabn  68,0,4266,.LN3302-Emit_EmitNtRegPlusSymPlusOffset		# line 4266, column 11
	.data
.Lab2080:
 	.ascii	"Rule 224/959 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2080,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3303:
	.stabn  68,0,4267,.LN3303-Emit_EmitNtRegPlusSymPlusOffset		# line 4267, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3304:
	.stabn  68,0,4268,.LN3304-Emit_EmitNtRegPlusSymPlusOffset		# line 4268, column 11
	.data
.Lab2081:
 	.ascii	" FixedPlus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$36
	leal	.Lab2081,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3305:
	.stabn  68,0,4269,.LN3305-Emit_EmitNtRegPlusSymPlusOffset		# line 4269, column 11
	call	InOut_WriteLn
.LN3306:
	.stabn  68,0,4270,.LN3306-Emit_EmitNtRegPlusSymPlusOffset		# line 4270, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3307:
	.stabn  68,0,4271,.LN3307-Emit_EmitNtRegPlusSymPlusOffset		# line 4271, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3308:
	.stabn  68,0,4271,.LN3308-Emit_EmitNtRegPlusSymPlusOffset		# line 4271, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3309:
	.stabn  68,0,4272,.LN3309-Emit_EmitNtRegPlusSymPlusOffset		# line 4272, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2084
.Lab2083:
.LN3310:
	.stabn  68,0,4272,.LN3310-Emit_EmitNtRegPlusSymPlusOffset		# line 4272, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2082
.Lab2084:
.LN3311:
	.stabn  68,0,4272,.LN3311-Emit_EmitNtRegPlusSymPlusOffset		# line 4272, column 61
	call	InOut_WriteLn
.Lab2082:
.LN3312:
	.stabn  68,0,4273,.LN3312-Emit_EmitNtRegPlusSymPlusOffset		# line 4273, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3313:
	.stabn  68,0,4274,.LN3313-Emit_EmitNtRegPlusSymPlusOffset		# line 4274, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2086
	cmpl	$4096,%eax
	jbe	.Lab2085
.Lab2086:
   	call	BoundErr_		
.Lab2085:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2078:
.LN3314:
	.stabn  68,0,4276,.LN3314-Emit_EmitNtRegPlusSymPlusOffset		# line 4276, column 49
	movl	16(%ebp),%ebx
	movb	-24(%ebp),%al
	movb	%al,(%ebx) 
.LN3315:
	.stabn  68,0,4277,.LN3315-Emit_EmitNtRegPlusSymPlusOffset		# line 4277, column 57
	movl	16(%ebp),%ebx
	movl	-20(%ebp),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1994:
.LN3316:
	.stabn  68,0,4279,.LN3316-Emit_EmitNtRegPlusSymPlusOffset		# line 4279, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3317:
	.stabn  68,0,4280,.LN3317-Emit_EmitNtRegPlusSymPlusOffset		# line 4280, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegPlusSymPlusOffset
	addl	$12, %esp
.LN3318:
	.stabn  68,0,4281,.LN3318-Emit_EmitNtRegPlusSymPlusOffset		# line 4281, column 10
	decl	Emit_s + 1536
.LN3319:
	.stabn  68,0,4282,.LN3319-Emit_EmitNtRegPlusSymPlusOffset		# line 4282, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2090
	cmpl	$4096,%eax
	jbe	.Lab2089
.Lab2090:
   	call	BoundErr_		
.Lab2089:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2087
.Lab2088:
.LN3320:
	.stabn  68,0,4283,.LN3320-Emit_EmitNtRegPlusSymPlusOffset		# line 4283, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2092
	cmpl	$4096,%eax
	jbe	.Lab2091
.Lab2092:
   	call	BoundErr_		
.Lab2091:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2087:
.LN3321:
	.stabn  68,0,4285,.LN3321-Emit_EmitNtRegPlusSymPlusOffset		# line 4285, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2093
.Lab2094:
.LN3322:
	.stabn  68,0,4286,.LN3322-Emit_EmitNtRegPlusSymPlusOffset		# line 4286, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3323:
	.stabn  68,0,4287,.LN3323-Emit_EmitNtRegPlusSymPlusOffset		# line 4287, column 11
	.data
.Lab2095:
 	.ascii	"Rule 225/959 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2095,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3324:
	.stabn  68,0,4288,.LN3324-Emit_EmitNtRegPlusSymPlusOffset		# line 4288, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3325:
	.stabn  68,0,4289,.LN3325-Emit_EmitNtRegPlusSymPlusOffset		# line 4289, column 11
	.data
.Lab2096:
 	.ascii	" FixedPlus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$36
	leal	.Lab2096,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3326:
	.stabn  68,0,4290,.LN3326-Emit_EmitNtRegPlusSymPlusOffset		# line 4290, column 11
	call	InOut_WriteLn
.LN3327:
	.stabn  68,0,4291,.LN3327-Emit_EmitNtRegPlusSymPlusOffset		# line 4291, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3328:
	.stabn  68,0,4292,.LN3328-Emit_EmitNtRegPlusSymPlusOffset		# line 4292, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3329:
	.stabn  68,0,4292,.LN3329-Emit_EmitNtRegPlusSymPlusOffset		# line 4292, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3330:
	.stabn  68,0,4293,.LN3330-Emit_EmitNtRegPlusSymPlusOffset		# line 4293, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2099
.Lab2098:
.LN3331:
	.stabn  68,0,4293,.LN3331-Emit_EmitNtRegPlusSymPlusOffset		# line 4293, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2097
.Lab2099:
.LN3332:
	.stabn  68,0,4293,.LN3332-Emit_EmitNtRegPlusSymPlusOffset		# line 4293, column 61
	call	InOut_WriteLn
.Lab2097:
.LN3333:
	.stabn  68,0,4294,.LN3333-Emit_EmitNtRegPlusSymPlusOffset		# line 4294, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3334:
	.stabn  68,0,4295,.LN3334-Emit_EmitNtRegPlusSymPlusOffset		# line 4295, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2101
	cmpl	$4096,%eax
	jbe	.Lab2100
.Lab2101:
   	call	BoundErr_		
.Lab2100:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2093:
.LN3335:
	.stabn  68,0,4297,.LN3335-Emit_EmitNtRegPlusSymPlusOffset		# line 4297, column 49
	movl	16(%ebp),%ebx
	movb	-44(%ebp),%al
	movb	%al,(%ebx) 
.LN3336:
	.stabn  68,0,4298,.LN3336-Emit_EmitNtRegPlusSymPlusOffset		# line 4298, column 57
	movl	16(%ebp),%ebx
	movl	-40(%ebp),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1993:
.LN3337:
	.stabn  68,0,4300,.LN3337-Emit_EmitNtRegPlusSymPlusOffset		# line 4300, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3338:
	.stabn  68,0,4301,.LN3338-Emit_EmitNtRegPlusSymPlusOffset		# line 4301, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3339:
	.stabn  68,0,4302,.LN3339-Emit_EmitNtRegPlusSymPlusOffset		# line 4302, column 10
	decl	Emit_s + 1536
.LN3340:
	.stabn  68,0,4303,.LN3340-Emit_EmitNtRegPlusSymPlusOffset		# line 4303, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2105
	cmpl	$4096,%eax
	jbe	.Lab2104
.Lab2105:
   	call	BoundErr_		
.Lab2104:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2102
.Lab2103:
.LN3341:
	.stabn  68,0,4304,.LN3341-Emit_EmitNtRegPlusSymPlusOffset		# line 4304, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2107
	cmpl	$4096,%eax
	jbe	.Lab2106
.Lab2107:
   	call	BoundErr_		
.Lab2106:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2102:
.LN3342:
	.stabn  68,0,4306,.LN3342-Emit_EmitNtRegPlusSymPlusOffset		# line 4306, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2108
.Lab2109:
.LN3343:
	.stabn  68,0,4307,.LN3343-Emit_EmitNtRegPlusSymPlusOffset		# line 4307, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3344:
	.stabn  68,0,4308,.LN3344-Emit_EmitNtRegPlusSymPlusOffset		# line 4308, column 11
	.data
.Lab2110:
 	.ascii	"Rule 226/949 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2110,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3345:
	.stabn  68,0,4309,.LN3345-Emit_EmitNtRegPlusSymPlusOffset		# line 4309, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3346:
	.stabn  68,0,4310,.LN3346-Emit_EmitNtRegPlusSymPlusOffset		# line 4310, column 11
	.data
.Lab2111:
 	.ascii	" FixedPlus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$36
	leal	.Lab2111,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3347:
	.stabn  68,0,4311,.LN3347-Emit_EmitNtRegPlusSymPlusOffset		# line 4311, column 11
	call	InOut_WriteLn
.LN3348:
	.stabn  68,0,4312,.LN3348-Emit_EmitNtRegPlusSymPlusOffset		# line 4312, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3349:
	.stabn  68,0,4313,.LN3349-Emit_EmitNtRegPlusSymPlusOffset		# line 4313, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3350:
	.stabn  68,0,4313,.LN3350-Emit_EmitNtRegPlusSymPlusOffset		# line 4313, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3351:
	.stabn  68,0,4314,.LN3351-Emit_EmitNtRegPlusSymPlusOffset		# line 4314, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2114
.Lab2113:
.LN3352:
	.stabn  68,0,4314,.LN3352-Emit_EmitNtRegPlusSymPlusOffset		# line 4314, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2112
.Lab2114:
.LN3353:
	.stabn  68,0,4314,.LN3353-Emit_EmitNtRegPlusSymPlusOffset		# line 4314, column 61
	call	InOut_WriteLn
.Lab2112:
.LN3354:
	.stabn  68,0,4315,.LN3354-Emit_EmitNtRegPlusSymPlusOffset		# line 4315, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3355:
	.stabn  68,0,4316,.LN3355-Emit_EmitNtRegPlusSymPlusOffset		# line 4316, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2116
	cmpl	$4096,%eax
	jbe	.Lab2115
.Lab2116:
   	call	BoundErr_		
.Lab2115:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2108:
.LN3356:
	.stabn  68,0,4319,.LN3356-Emit_EmitNtRegPlusSymPlusOffset		# line 4319, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2118
	cmpl	$4096,%eax
	jbe	.Lab2117
.Lab2118:
   	call	BoundErr_		
.Lab2117:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,(%ebx) 
.LN3357:
	.stabn  68,0,4320,.LN3357-Emit_EmitNtRegPlusSymPlusOffset		# line 4320, column 57
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,4(%ebx) 
.LN3358:
	.stabn  68,0,4321,.LN3358-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 2
	.data
.Lab2119:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab2119,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3359:
	.stabn  68,0,4321,.LN3359-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 25
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSigned
	addl	$4, %esp
.LN3360:
	.stabn  68,0,4321,.LN3360-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 64
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN3361:
	.stabn  68,0,4321,.LN3361-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 103
	.data
.Lab2120:
 	.ascii	"l\011\000"
	.text
	pushl	$2
	leal	.Lab2120,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3362:
	.stabn  68,0,4321,.LN3362-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 126
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2122
	cmpl	$4096,%eax
	jbe	.Lab2121
.Lab2122:
   	call	BoundErr_		
.Lab2121:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN3363:
	.stabn  68,0,4321,.LN3363-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 199
	.data
.Lab2123:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab2123,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3364:
	.stabn  68,0,4321,.LN3364-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 217
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2125
	cmpl	$4096,%eax
	jbe	.Lab2124
.Lab2125:
   	call	BoundErr_		
.Lab2124:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN3365:
	.stabn  68,0,4321,.LN3365-Emit_EmitNtRegPlusSymPlusOffset		# line 4321, column 262
	call	CgAssOut_AssLn
	jmp	.Lab1985
.Lab1992:
.LN3366:
	.stabn  68,0,4324,.LN3366-Emit_EmitNtRegPlusSymPlusOffset		# line 4324, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3367:
	.stabn  68,0,4325,.LN3367-Emit_EmitNtRegPlusSymPlusOffset		# line 4325, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3368:
	.stabn  68,0,4326,.LN3368-Emit_EmitNtRegPlusSymPlusOffset		# line 4326, column 10
	decl	Emit_s + 1536
.LN3369:
	.stabn  68,0,4327,.LN3369-Emit_EmitNtRegPlusSymPlusOffset		# line 4327, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2129
	cmpl	$4096,%eax
	jbe	.Lab2128
.Lab2129:
   	call	BoundErr_		
.Lab2128:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2126
.Lab2127:
.LN3370:
	.stabn  68,0,4328,.LN3370-Emit_EmitNtRegPlusSymPlusOffset		# line 4328, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2131
	cmpl	$4096,%eax
	jbe	.Lab2130
.Lab2131:
   	call	BoundErr_		
.Lab2130:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2126:
.LN3371:
	.stabn  68,0,4330,.LN3371-Emit_EmitNtRegPlusSymPlusOffset		# line 4330, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2132
.Lab2133:
.LN3372:
	.stabn  68,0,4331,.LN3372-Emit_EmitNtRegPlusSymPlusOffset		# line 4331, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3373:
	.stabn  68,0,4332,.LN3373-Emit_EmitNtRegPlusSymPlusOffset		# line 4332, column 11
	.data
.Lab2134:
 	.ascii	"Rule 227/949 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2134,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3374:
	.stabn  68,0,4333,.LN3374-Emit_EmitNtRegPlusSymPlusOffset		# line 4333, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3375:
	.stabn  68,0,4334,.LN3375-Emit_EmitNtRegPlusSymPlusOffset		# line 4334, column 11
	.data
.Lab2135:
 	.ascii	" FixedPlus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$36
	leal	.Lab2135,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3376:
	.stabn  68,0,4335,.LN3376-Emit_EmitNtRegPlusSymPlusOffset		# line 4335, column 11
	call	InOut_WriteLn
.LN3377:
	.stabn  68,0,4336,.LN3377-Emit_EmitNtRegPlusSymPlusOffset		# line 4336, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3378:
	.stabn  68,0,4337,.LN3378-Emit_EmitNtRegPlusSymPlusOffset		# line 4337, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3379:
	.stabn  68,0,4337,.LN3379-Emit_EmitNtRegPlusSymPlusOffset		# line 4337, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3380:
	.stabn  68,0,4338,.LN3380-Emit_EmitNtRegPlusSymPlusOffset		# line 4338, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2138
.Lab2137:
.LN3381:
	.stabn  68,0,4338,.LN3381-Emit_EmitNtRegPlusSymPlusOffset		# line 4338, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2136
.Lab2138:
.LN3382:
	.stabn  68,0,4338,.LN3382-Emit_EmitNtRegPlusSymPlusOffset		# line 4338, column 61
	call	InOut_WriteLn
.Lab2136:
.LN3383:
	.stabn  68,0,4339,.LN3383-Emit_EmitNtRegPlusSymPlusOffset		# line 4339, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3384:
	.stabn  68,0,4340,.LN3384-Emit_EmitNtRegPlusSymPlusOffset		# line 4340, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2140
	cmpl	$4096,%eax
	jbe	.Lab2139
.Lab2140:
   	call	BoundErr_		
.Lab2139:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2132:
.LN3385:
	.stabn  68,0,4343,.LN3385-Emit_EmitNtRegPlusSymPlusOffset		# line 4343, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2142
	cmpl	$4096,%eax
	jbe	.Lab2141
.Lab2142:
   	call	BoundErr_		
.Lab2141:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
.LN3386:
	.stabn  68,0,4344,.LN3386-Emit_EmitNtRegPlusSymPlusOffset		# line 4344, column 57
	movl	16(%ebp),%ebx
	movl	-44(%ebp),%eax
	movl	%eax,4(%ebx) 
.LN3387:
	.stabn  68,0,4345,.LN3387-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 2
	.data
.Lab2143:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab2143,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3388:
	.stabn  68,0,4345,.LN3388-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 25
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSigned
	addl	$4, %esp
.LN3389:
	.stabn  68,0,4345,.LN3389-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 64
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN3390:
	.stabn  68,0,4345,.LN3390-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 103
	.data
.Lab2144:
 	.ascii	"l\011\000"
	.text
	pushl	$2
	leal	.Lab2144,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3391:
	.stabn  68,0,4345,.LN3391-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 126
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2146
	cmpl	$4096,%eax
	jbe	.Lab2145
.Lab2146:
   	call	BoundErr_		
.Lab2145:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN3392:
	.stabn  68,0,4345,.LN3392-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 199
	.data
.Lab2147:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab2147,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3393:
	.stabn  68,0,4345,.LN3393-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 217
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2149
	cmpl	$4096,%eax
	jbe	.Lab2148
.Lab2149:
   	call	BoundErr_		
.Lab2148:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN3394:
	.stabn  68,0,4345,.LN3394-Emit_EmitNtRegPlusSymPlusOffset		# line 4345, column 262
	call	CgAssOut_AssLn
	jmp	.Lab1985
.Lab1991:
.LN3395:
	.stabn  68,0,4348,.LN3395-Emit_EmitNtRegPlusSymPlusOffset		# line 4348, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3396:
	.stabn  68,0,4349,.LN3396-Emit_EmitNtRegPlusSymPlusOffset		# line 4349, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3397:
	.stabn  68,0,4350,.LN3397-Emit_EmitNtRegPlusSymPlusOffset		# line 4350, column 10
	decl	Emit_s + 1536
.LN3398:
	.stabn  68,0,4351,.LN3398-Emit_EmitNtRegPlusSymPlusOffset		# line 4351, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2153
	cmpl	$4096,%eax
	jbe	.Lab2152
.Lab2153:
   	call	BoundErr_		
.Lab2152:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2150
.Lab2151:
.LN3399:
	.stabn  68,0,4352,.LN3399-Emit_EmitNtRegPlusSymPlusOffset		# line 4352, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2155
	cmpl	$4096,%eax
	jbe	.Lab2154
.Lab2155:
   	call	BoundErr_		
.Lab2154:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2150:
.LN3400:
	.stabn  68,0,4354,.LN3400-Emit_EmitNtRegPlusSymPlusOffset		# line 4354, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2156
.Lab2157:
.LN3401:
	.stabn  68,0,4355,.LN3401-Emit_EmitNtRegPlusSymPlusOffset		# line 4355, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3402:
	.stabn  68,0,4356,.LN3402-Emit_EmitNtRegPlusSymPlusOffset		# line 4356, column 11
	.data
.Lab2158:
 	.ascii	"Rule 228/943 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2158,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3403:
	.stabn  68,0,4357,.LN3403-Emit_EmitNtRegPlusSymPlusOffset		# line 4357, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3404:
	.stabn  68,0,4358,.LN3404-Emit_EmitNtRegPlusSymPlusOffset		# line 4358, column 11
	.data
.Lab2159:
 	.ascii	" FixedPlus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$36
	leal	.Lab2159,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3405:
	.stabn  68,0,4359,.LN3405-Emit_EmitNtRegPlusSymPlusOffset		# line 4359, column 11
	call	InOut_WriteLn
.LN3406:
	.stabn  68,0,4360,.LN3406-Emit_EmitNtRegPlusSymPlusOffset		# line 4360, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3407:
	.stabn  68,0,4361,.LN3407-Emit_EmitNtRegPlusSymPlusOffset		# line 4361, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3408:
	.stabn  68,0,4361,.LN3408-Emit_EmitNtRegPlusSymPlusOffset		# line 4361, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3409:
	.stabn  68,0,4362,.LN3409-Emit_EmitNtRegPlusSymPlusOffset		# line 4362, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2162
.Lab2161:
.LN3410:
	.stabn  68,0,4362,.LN3410-Emit_EmitNtRegPlusSymPlusOffset		# line 4362, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2160
.Lab2162:
.LN3411:
	.stabn  68,0,4362,.LN3411-Emit_EmitNtRegPlusSymPlusOffset		# line 4362, column 61
	call	InOut_WriteLn
.Lab2160:
.LN3412:
	.stabn  68,0,4363,.LN3412-Emit_EmitNtRegPlusSymPlusOffset		# line 4363, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3413:
	.stabn  68,0,4364,.LN3413-Emit_EmitNtRegPlusSymPlusOffset		# line 4364, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2164
	cmpl	$4096,%eax
	jbe	.Lab2163
.Lab2164:
   	call	BoundErr_		
.Lab2163:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2156:
.LN3414:
	.stabn  68,0,4366,.LN3414-Emit_EmitNtRegPlusSymPlusOffset		# line 4366, column 49
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2166
	cmpl	$4096,%eax
	jbe	.Lab2165
.Lab2166:
   	call	BoundErr_		
.Lab2165:
	imull	$44,%eax 
	movb	RegAlloc_s - 30(%eax),%al
	movb	%al,(%ebx) 
.LN3415:
	.stabn  68,0,4367,.LN3415-Emit_EmitNtRegPlusSymPlusOffset		# line 4367, column 57
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1990:
.LN3416:
	.stabn  68,0,4369,.LN3416-Emit_EmitNtRegPlusSymPlusOffset		# line 4369, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3417:
	.stabn  68,0,4370,.LN3417-Emit_EmitNtRegPlusSymPlusOffset		# line 4370, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3418:
	.stabn  68,0,4371,.LN3418-Emit_EmitNtRegPlusSymPlusOffset		# line 4371, column 10
	decl	Emit_s + 1536
.LN3419:
	.stabn  68,0,4372,.LN3419-Emit_EmitNtRegPlusSymPlusOffset		# line 4372, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2170
	cmpl	$4096,%eax
	jbe	.Lab2169
.Lab2170:
   	call	BoundErr_		
.Lab2169:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2167
.Lab2168:
.LN3420:
	.stabn  68,0,4373,.LN3420-Emit_EmitNtRegPlusSymPlusOffset		# line 4373, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2172
	cmpl	$4096,%eax
	jbe	.Lab2171
.Lab2172:
   	call	BoundErr_		
.Lab2171:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2167:
.LN3421:
	.stabn  68,0,4375,.LN3421-Emit_EmitNtRegPlusSymPlusOffset		# line 4375, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2173
.Lab2174:
.LN3422:
	.stabn  68,0,4376,.LN3422-Emit_EmitNtRegPlusSymPlusOffset		# line 4376, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3423:
	.stabn  68,0,4377,.LN3423-Emit_EmitNtRegPlusSymPlusOffset		# line 4377, column 11
	.data
.Lab2175:
 	.ascii	"Rule 229/943 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2175,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3424:
	.stabn  68,0,4378,.LN3424-Emit_EmitNtRegPlusSymPlusOffset		# line 4378, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3425:
	.stabn  68,0,4379,.LN3425-Emit_EmitNtRegPlusSymPlusOffset		# line 4379, column 11
	.data
.Lab2176:
 	.ascii	" FixedPlus ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$36
	leal	.Lab2176,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3426:
	.stabn  68,0,4380,.LN3426-Emit_EmitNtRegPlusSymPlusOffset		# line 4380, column 11
	call	InOut_WriteLn
.LN3427:
	.stabn  68,0,4381,.LN3427-Emit_EmitNtRegPlusSymPlusOffset		# line 4381, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3428:
	.stabn  68,0,4382,.LN3428-Emit_EmitNtRegPlusSymPlusOffset		# line 4382, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3429:
	.stabn  68,0,4382,.LN3429-Emit_EmitNtRegPlusSymPlusOffset		# line 4382, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3430:
	.stabn  68,0,4383,.LN3430-Emit_EmitNtRegPlusSymPlusOffset		# line 4383, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2179
.Lab2178:
.LN3431:
	.stabn  68,0,4383,.LN3431-Emit_EmitNtRegPlusSymPlusOffset		# line 4383, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2177
.Lab2179:
.LN3432:
	.stabn  68,0,4383,.LN3432-Emit_EmitNtRegPlusSymPlusOffset		# line 4383, column 61
	call	InOut_WriteLn
.Lab2177:
.LN3433:
	.stabn  68,0,4384,.LN3433-Emit_EmitNtRegPlusSymPlusOffset		# line 4384, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3434:
	.stabn  68,0,4385,.LN3434-Emit_EmitNtRegPlusSymPlusOffset		# line 4385, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2181
	cmpl	$4096,%eax
	jbe	.Lab2180
.Lab2181:
   	call	BoundErr_		
.Lab2180:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2173:
.LN3435:
	.stabn  68,0,4387,.LN3435-Emit_EmitNtRegPlusSymPlusOffset		# line 4387, column 49
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2183
	cmpl	$4096,%eax
	jbe	.Lab2182
.Lab2183:
   	call	BoundErr_		
.Lab2182:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
.LN3436:
	.stabn  68,0,4388,.LN3436-Emit_EmitNtRegPlusSymPlusOffset		# line 4388, column 57
	movl	16(%ebp),%ebx
	movl	-44(%ebp),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1989:
.LN3437:
	.stabn  68,0,4390,.LN3437-Emit_EmitNtRegPlusSymPlusOffset		# line 4390, column 10
	decl	Emit_s + 1536
.LN3438:
	.stabn  68,0,4391,.LN3438-Emit_EmitNtRegPlusSymPlusOffset		# line 4391, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2187
	cmpl	$4096,%eax
	jbe	.Lab2186
.Lab2187:
   	call	BoundErr_		
.Lab2186:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2184
.Lab2185:
.LN3439:
	.stabn  68,0,4392,.LN3439-Emit_EmitNtRegPlusSymPlusOffset		# line 4392, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2189
	cmpl	$4096,%eax
	jbe	.Lab2188
.Lab2189:
   	call	BoundErr_		
.Lab2188:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2184:
.LN3440:
	.stabn  68,0,4394,.LN3440-Emit_EmitNtRegPlusSymPlusOffset		# line 4394, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2190
.Lab2191:
.LN3441:
	.stabn  68,0,4395,.LN3441-Emit_EmitNtRegPlusSymPlusOffset		# line 4395, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3442:
	.stabn  68,0,4396,.LN3442-Emit_EmitNtRegPlusSymPlusOffset		# line 4396, column 11
	.data
.Lab2192:
 	.ascii	"Rule 230/571 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2192,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3443:
	.stabn  68,0,4397,.LN3443-Emit_EmitNtRegPlusSymPlusOffset		# line 4397, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3444:
	.stabn  68,0,4398,.LN3444-Emit_EmitNtRegPlusSymPlusOffset		# line 4398, column 11
	.data
.Lab2193:
 	.ascii	" LocalVariable ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$40
	leal	.Lab2193,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3445:
	.stabn  68,0,4399,.LN3445-Emit_EmitNtRegPlusSymPlusOffset		# line 4399, column 11
	call	InOut_WriteLn
.LN3446:
	.stabn  68,0,4400,.LN3446-Emit_EmitNtRegPlusSymPlusOffset		# line 4400, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3447:
	.stabn  68,0,4401,.LN3447-Emit_EmitNtRegPlusSymPlusOffset		# line 4401, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3448:
	.stabn  68,0,4401,.LN3448-Emit_EmitNtRegPlusSymPlusOffset		# line 4401, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3449:
	.stabn  68,0,4402,.LN3449-Emit_EmitNtRegPlusSymPlusOffset		# line 4402, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2196
.Lab2195:
.LN3450:
	.stabn  68,0,4402,.LN3450-Emit_EmitNtRegPlusSymPlusOffset		# line 4402, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2194
.Lab2196:
.LN3451:
	.stabn  68,0,4402,.LN3451-Emit_EmitNtRegPlusSymPlusOffset		# line 4402, column 61
	call	InOut_WriteLn
.Lab2194:
.LN3452:
	.stabn  68,0,4403,.LN3452-Emit_EmitNtRegPlusSymPlusOffset		# line 4403, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3453:
	.stabn  68,0,4404,.LN3453-Emit_EmitNtRegPlusSymPlusOffset		# line 4404, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2198
	cmpl	$4096,%eax
	jbe	.Lab2197
.Lab2198:
   	call	BoundErr_		
.Lab2197:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2190:
.LN3454:
	.stabn  68,0,4406,.LN3454-Emit_EmitNtRegPlusSymPlusOffset		# line 4406, column 49
	movl	16(%ebp),%eax
	movb	$7,(%eax) 
.LN3455:
	.stabn  68,0,4407,.LN3455-Emit_EmitNtRegPlusSymPlusOffset		# line 4407, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1988:
.LN3456:
	.stabn  68,0,4409,.LN3456-Emit_EmitNtRegPlusSymPlusOffset		# line 4409, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3457:
	.stabn  68,0,4410,.LN3457-Emit_EmitNtRegPlusSymPlusOffset		# line 4410, column 10
	decl	Emit_s + 1536
.LN3458:
	.stabn  68,0,4411,.LN3458-Emit_EmitNtRegPlusSymPlusOffset		# line 4411, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2202
	cmpl	$4096,%eax
	jbe	.Lab2201
.Lab2202:
   	call	BoundErr_		
.Lab2201:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2199
.Lab2200:
.LN3459:
	.stabn  68,0,4412,.LN3459-Emit_EmitNtRegPlusSymPlusOffset		# line 4412, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2204
	cmpl	$4096,%eax
	jbe	.Lab2203
.Lab2204:
   	call	BoundErr_		
.Lab2203:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2199:
.LN3460:
	.stabn  68,0,4414,.LN3460-Emit_EmitNtRegPlusSymPlusOffset		# line 4414, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2205
.Lab2206:
.LN3461:
	.stabn  68,0,4415,.LN3461-Emit_EmitNtRegPlusSymPlusOffset		# line 4415, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3462:
	.stabn  68,0,4416,.LN3462-Emit_EmitNtRegPlusSymPlusOffset		# line 4416, column 11
	.data
.Lab2207:
 	.ascii	"Rule 231/347 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2207,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3463:
	.stabn  68,0,4417,.LN3463-Emit_EmitNtRegPlusSymPlusOffset		# line 4417, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3464:
	.stabn  68,0,4418,.LN3464-Emit_EmitNtRegPlusSymPlusOffset		# line 4418, column 11
	.data
.Lab2208:
 	.ascii	" reg ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$30
	leal	.Lab2208,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3465:
	.stabn  68,0,4419,.LN3465-Emit_EmitNtRegPlusSymPlusOffset		# line 4419, column 11
	call	InOut_WriteLn
.LN3466:
	.stabn  68,0,4420,.LN3466-Emit_EmitNtRegPlusSymPlusOffset		# line 4420, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3467:
	.stabn  68,0,4421,.LN3467-Emit_EmitNtRegPlusSymPlusOffset		# line 4421, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3468:
	.stabn  68,0,4421,.LN3468-Emit_EmitNtRegPlusSymPlusOffset		# line 4421, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3469:
	.stabn  68,0,4422,.LN3469-Emit_EmitNtRegPlusSymPlusOffset		# line 4422, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2211
.Lab2210:
.LN3470:
	.stabn  68,0,4422,.LN3470-Emit_EmitNtRegPlusSymPlusOffset		# line 4422, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2209
.Lab2211:
.LN3471:
	.stabn  68,0,4422,.LN3471-Emit_EmitNtRegPlusSymPlusOffset		# line 4422, column 61
	call	InOut_WriteLn
.Lab2209:
.LN3472:
	.stabn  68,0,4423,.LN3472-Emit_EmitNtRegPlusSymPlusOffset		# line 4423, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3473:
	.stabn  68,0,4424,.LN3473-Emit_EmitNtRegPlusSymPlusOffset		# line 4424, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2213
	cmpl	$4096,%eax
	jbe	.Lab2212
.Lab2213:
   	call	BoundErr_		
.Lab2212:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2205:
.LN3474:
	.stabn  68,0,4427,.LN3474-Emit_EmitNtRegPlusSymPlusOffset		# line 4427, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,4(%ebx) 
.LN3475:
	.stabn  68,0,4428,.LN3475-Emit_EmitNtRegPlusSymPlusOffset		# line 4428, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2215
	cmpl	$4096,%eax
	jbe	.Lab2214
.Lab2215:
   	call	BoundErr_		
.Lab2214:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
.LN3476:
	.stabn  68,0,4429,.LN3476-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 2
	.data
.Lab2216:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab2216,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3477:
	.stabn  68,0,4429,.LN3477-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 25
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSigned
	addl	$4, %esp
.LN3478:
	.stabn  68,0,4429,.LN3478-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 56
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN3479:
	.stabn  68,0,4429,.LN3479-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 87
	.data
.Lab2217:
 	.ascii	"l\011\000"
	.text
	pushl	$2
	leal	.Lab2217,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3480:
	.stabn  68,0,4429,.LN3480-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 110
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2219
	cmpl	$4096,%eax
	jbe	.Lab2218
.Lab2219:
   	call	BoundErr_		
.Lab2218:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN3481:
	.stabn  68,0,4429,.LN3481-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 175
	.data
.Lab2220:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab2220,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN3482:
	.stabn  68,0,4429,.LN3482-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 193
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2222
	cmpl	$4096,%eax
	jbe	.Lab2221
.Lab2222:
   	call	BoundErr_		
.Lab2221:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN3483:
	.stabn  68,0,4429,.LN3483-Emit_EmitNtRegPlusSymPlusOffset		# line 4429, column 238
	call	CgAssOut_AssLn
	jmp	.Lab1985
.Lab1987:
.LN3484:
	.stabn  68,0,4432,.LN3484-Emit_EmitNtRegPlusSymPlusOffset		# line 4432, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN3485:
	.stabn  68,0,4433,.LN3485-Emit_EmitNtRegPlusSymPlusOffset		# line 4433, column 10
	decl	Emit_s + 1536
.LN3486:
	.stabn  68,0,4434,.LN3486-Emit_EmitNtRegPlusSymPlusOffset		# line 4434, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2226
	cmpl	$4096,%eax
	jbe	.Lab2225
.Lab2226:
   	call	BoundErr_		
.Lab2225:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2223
.Lab2224:
.LN3487:
	.stabn  68,0,4435,.LN3487-Emit_EmitNtRegPlusSymPlusOffset		# line 4435, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2228
	cmpl	$4096,%eax
	jbe	.Lab2227
.Lab2228:
   	call	BoundErr_		
.Lab2227:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2223:
.LN3488:
	.stabn  68,0,4437,.LN3488-Emit_EmitNtRegPlusSymPlusOffset		# line 4437, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2229
.Lab2230:
.LN3489:
	.stabn  68,0,4438,.LN3489-Emit_EmitNtRegPlusSymPlusOffset		# line 4438, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3490:
	.stabn  68,0,4439,.LN3490-Emit_EmitNtRegPlusSymPlusOffset		# line 4439, column 11
	.data
.Lab2231:
 	.ascii	"Rule 232/341 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2231,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3491:
	.stabn  68,0,4440,.LN3491-Emit_EmitNtRegPlusSymPlusOffset		# line 4440, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3492:
	.stabn  68,0,4441,.LN3492-Emit_EmitNtRegPlusSymPlusOffset		# line 4441, column 11
	.data
.Lab2232:
 	.ascii	" reg ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$30
	leal	.Lab2232,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3493:
	.stabn  68,0,4442,.LN3493-Emit_EmitNtRegPlusSymPlusOffset		# line 4442, column 11
	call	InOut_WriteLn
.LN3494:
	.stabn  68,0,4443,.LN3494-Emit_EmitNtRegPlusSymPlusOffset		# line 4443, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3495:
	.stabn  68,0,4444,.LN3495-Emit_EmitNtRegPlusSymPlusOffset		# line 4444, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3496:
	.stabn  68,0,4444,.LN3496-Emit_EmitNtRegPlusSymPlusOffset		# line 4444, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3497:
	.stabn  68,0,4445,.LN3497-Emit_EmitNtRegPlusSymPlusOffset		# line 4445, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2235
.Lab2234:
.LN3498:
	.stabn  68,0,4445,.LN3498-Emit_EmitNtRegPlusSymPlusOffset		# line 4445, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2233
.Lab2235:
.LN3499:
	.stabn  68,0,4445,.LN3499-Emit_EmitNtRegPlusSymPlusOffset		# line 4445, column 61
	call	InOut_WriteLn
.Lab2233:
.LN3500:
	.stabn  68,0,4446,.LN3500-Emit_EmitNtRegPlusSymPlusOffset		# line 4446, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3501:
	.stabn  68,0,4447,.LN3501-Emit_EmitNtRegPlusSymPlusOffset		# line 4447, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2237
	cmpl	$4096,%eax
	jbe	.Lab2236
.Lab2237:
   	call	BoundErr_		
.Lab2236:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2229:
.LN3502:
	.stabn  68,0,4449,.LN3502-Emit_EmitNtRegPlusSymPlusOffset		# line 4449, column 49
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,4(%ebx) 
.LN3503:
	.stabn  68,0,4450,.LN3503-Emit_EmitNtRegPlusSymPlusOffset		# line 4450, column 57
	movl	16(%ebp),%ebx
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2239
	cmpl	$4096,%eax
	jbe	.Lab2238
.Lab2239:
   	call	BoundErr_		
.Lab2238:
	imull	$44,%eax 
	movb	RegAlloc_s - 31(%eax),%al
	movb	%al,(%ebx) 
	jmp	.Lab1985
.Lab1986:
.LN3504:
	.stabn  68,0,4452,.LN3504-Emit_EmitNtRegPlusSymPlusOffset		# line 4452, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3505:
	.stabn  68,0,4453,.LN3505-Emit_EmitNtRegPlusSymPlusOffset		# line 4453, column 10
	decl	Emit_s + 1536
.LN3506:
	.stabn  68,0,4454,.LN3506-Emit_EmitNtRegPlusSymPlusOffset		# line 4454, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2243
	cmpl	$4096,%eax
	jbe	.Lab2242
.Lab2243:
   	call	BoundErr_		
.Lab2242:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2240
.Lab2241:
.LN3507:
	.stabn  68,0,4455,.LN3507-Emit_EmitNtRegPlusSymPlusOffset		# line 4455, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2245
	cmpl	$4096,%eax
	jbe	.Lab2244
.Lab2245:
   	call	BoundErr_		
.Lab2244:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2240:
.LN3508:
	.stabn  68,0,4457,.LN3508-Emit_EmitNtRegPlusSymPlusOffset		# line 4457, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2246
.Lab2247:
.LN3509:
	.stabn  68,0,4458,.LN3509-Emit_EmitNtRegPlusSymPlusOffset		# line 4458, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3510:
	.stabn  68,0,4459,.LN3510-Emit_EmitNtRegPlusSymPlusOffset		# line 4459, column 11
	.data
.Lab2248:
 	.ascii	"Rule 233/336 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2248,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3511:
	.stabn  68,0,4460,.LN3511-Emit_EmitNtRegPlusSymPlusOffset		# line 4460, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	116(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3512:
	.stabn  68,0,4461,.LN3512-Emit_EmitNtRegPlusSymPlusOffset		# line 4461, column 11
	.data
.Lab2249:
 	.ascii	" SymPlusOffset ->   RegPlusSymPlusOffset\000"
	.text
	pushl	$40
	leal	.Lab2249,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3513:
	.stabn  68,0,4462,.LN3513-Emit_EmitNtRegPlusSymPlusOffset		# line 4462, column 11
	call	InOut_WriteLn
.LN3514:
	.stabn  68,0,4463,.LN3514-Emit_EmitNtRegPlusSymPlusOffset		# line 4463, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3515:
	.stabn  68,0,4464,.LN3515-Emit_EmitNtRegPlusSymPlusOffset		# line 4464, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3516:
	.stabn  68,0,4464,.LN3516-Emit_EmitNtRegPlusSymPlusOffset		# line 4464, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3517:
	.stabn  68,0,4465,.LN3517-Emit_EmitNtRegPlusSymPlusOffset		# line 4465, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2252
.Lab2251:
.LN3518:
	.stabn  68,0,4465,.LN3518-Emit_EmitNtRegPlusSymPlusOffset		# line 4465, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2250
.Lab2252:
.LN3519:
	.stabn  68,0,4465,.LN3519-Emit_EmitNtRegPlusSymPlusOffset		# line 4465, column 61
	call	InOut_WriteLn
.Lab2250:
.LN3520:
	.stabn  68,0,4466,.LN3520-Emit_EmitNtRegPlusSymPlusOffset		# line 4466, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3521:
	.stabn  68,0,4467,.LN3521-Emit_EmitNtRegPlusSymPlusOffset		# line 4467, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2254
	cmpl	$4096,%eax
	jbe	.Lab2253
.Lab2254:
   	call	BoundErr_		
.Lab2253:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2246:
.LN3522:
	.stabn  68,0,4469,.LN3522-Emit_EmitNtRegPlusSymPlusOffset		# line 4469, column 49
	movl	16(%ebp),%eax
	movb	$0,(%eax) 
.LN3523:
	.stabn  68,0,4470,.LN3523-Emit_EmitNtRegPlusSymPlusOffset		# line 4470, column 57
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,4(%ebx) 
	jmp	.Lab1985
.Lab1984:
	call	CaseErr_
.Lab1985:
.LN3524:
	.stabn  68,0,4472,.LN3524-Emit_EmitNtRegPlusSymPlusOffset		# line 4472, column 4
	cmpb	$0,IR_s + 133
	je	.Lab2255
.Lab2256:
.LN3525:
	.stabn  68,0,4473,.LN3525-Emit_EmitNtRegPlusSymPlusOffset		# line 4473, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3526:
	.stabn  68,0,4474,.LN3526-Emit_EmitNtRegPlusSymPlusOffset		# line 4474, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrRegPlusSymPlusOffset
	addl	$20, %esp
.LN3527:
	.stabn  68,0,4475,.LN3527-Emit_EmitNtRegPlusSymPlusOffset		# line 4475, column 8
	call	InOut_WriteLn
.Lab2255:
.LN3528:
	.stabn  68,0,4476,.LN3528-Emit_EmitNtRegPlusSymPlusOffset		# line 4476, column 0
.LBE11:
	leave
	ret
	.Lab1983 = 44
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB11-Emit_EmitNtRegPlusSymPlusOffset
	.stabn 224,0,0,.LBE11-Emit_EmitNtRegPlusSymPlusOffset
	.stabs "Emit_EmitNtSymPlusOffset:F16",36,0,0,Emit_EmitNtSymPlusOffset
	.align 4
Emit_EmitNtSymPlusOffset:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab2257, %esp
.LN3529:
	.stabn  68,0,4001,.LN3529-Emit_EmitNtSymPlusOffset		# line 4001, column 1
.LBB12:
.LN3530:
	.stabn  68,0,4002,.LN3530-Emit_EmitNtSymPlusOffset		# line 4002, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	176(%eax),%eax
	.data
	.align 4
.Lab2268:
	.long	.Lab2267
	.long	.Lab2266
	.long	.Lab2265
	.long	.Lab2264
	.long	.Lab2263
	.long	.Lab2262
	.long	.Lab2261
	.long	.Lab2260
	.text
	subl	$212,%eax
	jb	.Lab2258
	cmpl	$7,%eax
	ja	.Lab2258
	jmp	*.Lab2268(,%eax,4)
.Lab2267:
.LN3531:
	.stabn  68,0,4004,.LN3531-Emit_EmitNtSymPlusOffset		# line 4004, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3532:
	.stabn  68,0,4005,.LN3532-Emit_EmitNtSymPlusOffset		# line 4005, column 10
	decl	Emit_s + 1536
.LN3533:
	.stabn  68,0,4006,.LN3533-Emit_EmitNtSymPlusOffset		# line 4006, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2272
	cmpl	$4096,%eax
	jbe	.Lab2271
.Lab2272:
   	call	BoundErr_		
.Lab2271:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2269
.Lab2270:
.LN3534:
	.stabn  68,0,4007,.LN3534-Emit_EmitNtSymPlusOffset		# line 4007, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2274
	cmpl	$4096,%eax
	jbe	.Lab2273
.Lab2274:
   	call	BoundErr_		
.Lab2273:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2269:
.LN3535:
	.stabn  68,0,4009,.LN3535-Emit_EmitNtSymPlusOffset		# line 4009, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2275
.Lab2276:
.LN3536:
	.stabn  68,0,4010,.LN3536-Emit_EmitNtSymPlusOffset		# line 4010, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3537:
	.stabn  68,0,4011,.LN3537-Emit_EmitNtSymPlusOffset		# line 4011, column 11
	.data
.Lab2277:
 	.ascii	"Rule 212/1828 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2277,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3538:
	.stabn  68,0,4012,.LN3538-Emit_EmitNtSymPlusOffset		# line 4012, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3539:
	.stabn  68,0,4013,.LN3539-Emit_EmitNtSymPlusOffset		# line 4013, column 11
	.data
.Lab2278:
 	.ascii	" Coerce ->   SymPlusOffset\000"
	.text
	pushl	$26
	leal	.Lab2278,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3540:
	.stabn  68,0,4014,.LN3540-Emit_EmitNtSymPlusOffset		# line 4014, column 11
	call	InOut_WriteLn
.LN3541:
	.stabn  68,0,4015,.LN3541-Emit_EmitNtSymPlusOffset		# line 4015, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3542:
	.stabn  68,0,4016,.LN3542-Emit_EmitNtSymPlusOffset		# line 4016, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3543:
	.stabn  68,0,4016,.LN3543-Emit_EmitNtSymPlusOffset		# line 4016, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3544:
	.stabn  68,0,4017,.LN3544-Emit_EmitNtSymPlusOffset		# line 4017, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2281
.Lab2280:
.LN3545:
	.stabn  68,0,4017,.LN3545-Emit_EmitNtSymPlusOffset		# line 4017, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2279
.Lab2281:
.LN3546:
	.stabn  68,0,4017,.LN3546-Emit_EmitNtSymPlusOffset		# line 4017, column 61
	call	InOut_WriteLn
.Lab2279:
.LN3547:
	.stabn  68,0,4018,.LN3547-Emit_EmitNtSymPlusOffset		# line 4018, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3548:
	.stabn  68,0,4019,.LN3548-Emit_EmitNtSymPlusOffset		# line 4019, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2283
	cmpl	$4096,%eax
	jbe	.Lab2282
.Lab2283:
   	call	BoundErr_		
.Lab2282:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2275:
.LN3549:
	.stabn  68,0,4021,.LN3549-Emit_EmitNtSymPlusOffset		# line 4021, column 41
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2266:
.LN3550:
	.stabn  68,0,4023,.LN3550-Emit_EmitNtSymPlusOffset		# line 4023, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3551:
	.stabn  68,0,4024,.LN3551-Emit_EmitNtSymPlusOffset		# line 4024, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3552:
	.stabn  68,0,4025,.LN3552-Emit_EmitNtSymPlusOffset		# line 4025, column 10
	decl	Emit_s + 1536
.LN3553:
	.stabn  68,0,4026,.LN3553-Emit_EmitNtSymPlusOffset		# line 4026, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2287
	cmpl	$4096,%eax
	jbe	.Lab2286
.Lab2287:
   	call	BoundErr_		
.Lab2286:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2284
.Lab2285:
.LN3554:
	.stabn  68,0,4027,.LN3554-Emit_EmitNtSymPlusOffset		# line 4027, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2289
	cmpl	$4096,%eax
	jbe	.Lab2288
.Lab2289:
   	call	BoundErr_		
.Lab2288:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2284:
.LN3555:
	.stabn  68,0,4029,.LN3555-Emit_EmitNtSymPlusOffset		# line 4029, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2290
.Lab2291:
.LN3556:
	.stabn  68,0,4030,.LN3556-Emit_EmitNtSymPlusOffset		# line 4030, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3557:
	.stabn  68,0,4031,.LN3557-Emit_EmitNtSymPlusOffset		# line 4031, column 11
	.data
.Lab2292:
 	.ascii	"Rule 213/1045 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2292,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3558:
	.stabn  68,0,4032,.LN3558-Emit_EmitNtSymPlusOffset		# line 4032, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3559:
	.stabn  68,0,4033,.LN3559-Emit_EmitNtSymPlusOffset		# line 4033, column 11
	.data
.Lab2293:
 	.ascii	" FixedMinus ->   SymPlusOffset\000"
	.text
	pushl	$30
	leal	.Lab2293,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3560:
	.stabn  68,0,4034,.LN3560-Emit_EmitNtSymPlusOffset		# line 4034, column 11
	call	InOut_WriteLn
.LN3561:
	.stabn  68,0,4035,.LN3561-Emit_EmitNtSymPlusOffset		# line 4035, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3562:
	.stabn  68,0,4036,.LN3562-Emit_EmitNtSymPlusOffset		# line 4036, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3563:
	.stabn  68,0,4036,.LN3563-Emit_EmitNtSymPlusOffset		# line 4036, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3564:
	.stabn  68,0,4037,.LN3564-Emit_EmitNtSymPlusOffset		# line 4037, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2296
.Lab2295:
.LN3565:
	.stabn  68,0,4037,.LN3565-Emit_EmitNtSymPlusOffset		# line 4037, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2294
.Lab2296:
.LN3566:
	.stabn  68,0,4037,.LN3566-Emit_EmitNtSymPlusOffset		# line 4037, column 61
	call	InOut_WriteLn
.Lab2294:
.LN3567:
	.stabn  68,0,4038,.LN3567-Emit_EmitNtSymPlusOffset		# line 4038, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3568:
	.stabn  68,0,4039,.LN3568-Emit_EmitNtSymPlusOffset		# line 4039, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2298
	cmpl	$4096,%eax
	jbe	.Lab2297
.Lab2298:
   	call	BoundErr_		
.Lab2297:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2290:
.LN3569:
	.stabn  68,0,4041,.LN3569-Emit_EmitNtSymPlusOffset		# line 4041, column 41
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2265:
.LN3570:
	.stabn  68,0,4043,.LN3570-Emit_EmitNtSymPlusOffset		# line 4043, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3571:
	.stabn  68,0,4044,.LN3571-Emit_EmitNtSymPlusOffset		# line 4044, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3572:
	.stabn  68,0,4045,.LN3572-Emit_EmitNtSymPlusOffset		# line 4045, column 10
	decl	Emit_s + 1536
.LN3573:
	.stabn  68,0,4046,.LN3573-Emit_EmitNtSymPlusOffset		# line 4046, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2302
	cmpl	$4096,%eax
	jbe	.Lab2301
.Lab2302:
   	call	BoundErr_		
.Lab2301:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2299
.Lab2300:
.LN3574:
	.stabn  68,0,4047,.LN3574-Emit_EmitNtSymPlusOffset		# line 4047, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2304
	cmpl	$4096,%eax
	jbe	.Lab2303
.Lab2304:
   	call	BoundErr_		
.Lab2303:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2299:
.LN3575:
	.stabn  68,0,4049,.LN3575-Emit_EmitNtSymPlusOffset		# line 4049, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2305
.Lab2306:
.LN3576:
	.stabn  68,0,4050,.LN3576-Emit_EmitNtSymPlusOffset		# line 4050, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3577:
	.stabn  68,0,4051,.LN3577-Emit_EmitNtSymPlusOffset		# line 4051, column 11
	.data
.Lab2307:
 	.ascii	"Rule 214/939 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2307,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3578:
	.stabn  68,0,4052,.LN3578-Emit_EmitNtSymPlusOffset		# line 4052, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3579:
	.stabn  68,0,4053,.LN3579-Emit_EmitNtSymPlusOffset		# line 4053, column 11
	.data
.Lab2308:
 	.ascii	" FixedPlus ->   SymPlusOffset\000"
	.text
	pushl	$29
	leal	.Lab2308,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3580:
	.stabn  68,0,4054,.LN3580-Emit_EmitNtSymPlusOffset		# line 4054, column 11
	call	InOut_WriteLn
.LN3581:
	.stabn  68,0,4055,.LN3581-Emit_EmitNtSymPlusOffset		# line 4055, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3582:
	.stabn  68,0,4056,.LN3582-Emit_EmitNtSymPlusOffset		# line 4056, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3583:
	.stabn  68,0,4056,.LN3583-Emit_EmitNtSymPlusOffset		# line 4056, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3584:
	.stabn  68,0,4057,.LN3584-Emit_EmitNtSymPlusOffset		# line 4057, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2311
.Lab2310:
.LN3585:
	.stabn  68,0,4057,.LN3585-Emit_EmitNtSymPlusOffset		# line 4057, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2309
.Lab2311:
.LN3586:
	.stabn  68,0,4057,.LN3586-Emit_EmitNtSymPlusOffset		# line 4057, column 61
	call	InOut_WriteLn
.Lab2309:
.LN3587:
	.stabn  68,0,4058,.LN3587-Emit_EmitNtSymPlusOffset		# line 4058, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3588:
	.stabn  68,0,4059,.LN3588-Emit_EmitNtSymPlusOffset		# line 4059, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2313
	cmpl	$4096,%eax
	jbe	.Lab2312
.Lab2313:
   	call	BoundErr_		
.Lab2312:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2305:
.LN3589:
	.stabn  68,0,4061,.LN3589-Emit_EmitNtSymPlusOffset		# line 4061, column 41
	movl	16(%ebp),%ebx
	movl	-24(%ebp),%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2264:
.LN3590:
	.stabn  68,0,4063,.LN3590-Emit_EmitNtSymPlusOffset		# line 4063, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3591:
	.stabn  68,0,4064,.LN3591-Emit_EmitNtSymPlusOffset		# line 4064, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtSymPlusOffset
	addl	$12, %esp
.LN3592:
	.stabn  68,0,4065,.LN3592-Emit_EmitNtSymPlusOffset		# line 4065, column 10
	decl	Emit_s + 1536
.LN3593:
	.stabn  68,0,4066,.LN3593-Emit_EmitNtSymPlusOffset		# line 4066, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2317
	cmpl	$4096,%eax
	jbe	.Lab2316
.Lab2317:
   	call	BoundErr_		
.Lab2316:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2314
.Lab2315:
.LN3594:
	.stabn  68,0,4067,.LN3594-Emit_EmitNtSymPlusOffset		# line 4067, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2319
	cmpl	$4096,%eax
	jbe	.Lab2318
.Lab2319:
   	call	BoundErr_		
.Lab2318:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2314:
.LN3595:
	.stabn  68,0,4069,.LN3595-Emit_EmitNtSymPlusOffset		# line 4069, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2320
.Lab2321:
.LN3596:
	.stabn  68,0,4070,.LN3596-Emit_EmitNtSymPlusOffset		# line 4070, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3597:
	.stabn  68,0,4071,.LN3597-Emit_EmitNtSymPlusOffset		# line 4071, column 11
	.data
.Lab2322:
 	.ascii	"Rule 215/939 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2322,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3598:
	.stabn  68,0,4072,.LN3598-Emit_EmitNtSymPlusOffset		# line 4072, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3599:
	.stabn  68,0,4073,.LN3599-Emit_EmitNtSymPlusOffset		# line 4073, column 11
	.data
.Lab2323:
 	.ascii	" FixedPlus ->   SymPlusOffset\000"
	.text
	pushl	$29
	leal	.Lab2323,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3600:
	.stabn  68,0,4074,.LN3600-Emit_EmitNtSymPlusOffset		# line 4074, column 11
	call	InOut_WriteLn
.LN3601:
	.stabn  68,0,4075,.LN3601-Emit_EmitNtSymPlusOffset		# line 4075, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3602:
	.stabn  68,0,4076,.LN3602-Emit_EmitNtSymPlusOffset		# line 4076, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3603:
	.stabn  68,0,4076,.LN3603-Emit_EmitNtSymPlusOffset		# line 4076, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3604:
	.stabn  68,0,4077,.LN3604-Emit_EmitNtSymPlusOffset		# line 4077, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2326
.Lab2325:
.LN3605:
	.stabn  68,0,4077,.LN3605-Emit_EmitNtSymPlusOffset		# line 4077, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2324
.Lab2326:
.LN3606:
	.stabn  68,0,4077,.LN3606-Emit_EmitNtSymPlusOffset		# line 4077, column 61
	call	InOut_WriteLn
.Lab2324:
.LN3607:
	.stabn  68,0,4078,.LN3607-Emit_EmitNtSymPlusOffset		# line 4078, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3608:
	.stabn  68,0,4079,.LN3608-Emit_EmitNtSymPlusOffset		# line 4079, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2328
	cmpl	$4096,%eax
	jbe	.Lab2327
.Lab2328:
   	call	BoundErr_		
.Lab2327:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2320:
.LN3609:
	.stabn  68,0,4081,.LN3609-Emit_EmitNtSymPlusOffset		# line 4081, column 41
	movl	16(%ebp),%ebx
	movl	-44(%ebp),%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2263:
.LN3610:
	.stabn  68,0,4083,.LN3610-Emit_EmitNtSymPlusOffset		# line 4083, column 10
	decl	Emit_s + 1536
.LN3611:
	.stabn  68,0,4084,.LN3611-Emit_EmitNtSymPlusOffset		# line 4084, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2332
	cmpl	$4096,%eax
	jbe	.Lab2331
.Lab2332:
   	call	BoundErr_		
.Lab2331:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2329
.Lab2330:
.LN3612:
	.stabn  68,0,4085,.LN3612-Emit_EmitNtSymPlusOffset		# line 4085, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2334
	cmpl	$4096,%eax
	jbe	.Lab2333
.Lab2334:
   	call	BoundErr_		
.Lab2333:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2329:
.LN3613:
	.stabn  68,0,4087,.LN3613-Emit_EmitNtSymPlusOffset		# line 4087, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2335
.Lab2336:
.LN3614:
	.stabn  68,0,4088,.LN3614-Emit_EmitNtSymPlusOffset		# line 4088, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3615:
	.stabn  68,0,4089,.LN3615-Emit_EmitNtSymPlusOffset		# line 4089, column 11
	.data
.Lab2337:
 	.ascii	"Rule 216/591 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2337,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3616:
	.stabn  68,0,4090,.LN3616-Emit_EmitNtSymPlusOffset		# line 4090, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3617:
	.stabn  68,0,4091,.LN3617-Emit_EmitNtSymPlusOffset		# line 4091, column 11
	.data
.Lab2338:
 	.ascii	" StaticVariable ->   SymPlusOffset\000"
	.text
	pushl	$34
	leal	.Lab2338,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3618:
	.stabn  68,0,4092,.LN3618-Emit_EmitNtSymPlusOffset		# line 4092, column 11
	call	InOut_WriteLn
.LN3619:
	.stabn  68,0,4093,.LN3619-Emit_EmitNtSymPlusOffset		# line 4093, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3620:
	.stabn  68,0,4094,.LN3620-Emit_EmitNtSymPlusOffset		# line 4094, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3621:
	.stabn  68,0,4094,.LN3621-Emit_EmitNtSymPlusOffset		# line 4094, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3622:
	.stabn  68,0,4095,.LN3622-Emit_EmitNtSymPlusOffset		# line 4095, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2341
.Lab2340:
.LN3623:
	.stabn  68,0,4095,.LN3623-Emit_EmitNtSymPlusOffset		# line 4095, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2339
.Lab2341:
.LN3624:
	.stabn  68,0,4095,.LN3624-Emit_EmitNtSymPlusOffset		# line 4095, column 61
	call	InOut_WriteLn
.Lab2339:
.LN3625:
	.stabn  68,0,4096,.LN3625-Emit_EmitNtSymPlusOffset		# line 4096, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3626:
	.stabn  68,0,4097,.LN3626-Emit_EmitNtSymPlusOffset		# line 4097, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2343
	cmpl	$4096,%eax
	jbe	.Lab2342
.Lab2343:
   	call	BoundErr_		
.Lab2342:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2335:
.LN3627:
	.stabn  68,0,4099,.LN3627-Emit_EmitNtSymPlusOffset		# line 4099, column 41
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	movl	4(%eax),%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2262:
.LN3628:
	.stabn  68,0,4101,.LN3628-Emit_EmitNtSymPlusOffset		# line 4101, column 10
	decl	Emit_s + 1536
.LN3629:
	.stabn  68,0,4102,.LN3629-Emit_EmitNtSymPlusOffset		# line 4102, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2347
	cmpl	$4096,%eax
	jbe	.Lab2346
.Lab2347:
   	call	BoundErr_		
.Lab2346:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2344
.Lab2345:
.LN3630:
	.stabn  68,0,4103,.LN3630-Emit_EmitNtSymPlusOffset		# line 4103, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2349
	cmpl	$4096,%eax
	jbe	.Lab2348
.Lab2349:
   	call	BoundErr_		
.Lab2348:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2344:
.LN3631:
	.stabn  68,0,4105,.LN3631-Emit_EmitNtSymPlusOffset		# line 4105, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2350
.Lab2351:
.LN3632:
	.stabn  68,0,4106,.LN3632-Emit_EmitNtSymPlusOffset		# line 4106, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3633:
	.stabn  68,0,4107,.LN3633-Emit_EmitNtSymPlusOffset		# line 4107, column 11
	.data
.Lab2352:
 	.ascii	"Rule 217/552 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2352,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3634:
	.stabn  68,0,4108,.LN3634-Emit_EmitNtSymPlusOffset		# line 4108, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3635:
	.stabn  68,0,4109,.LN3635-Emit_EmitNtSymPlusOffset		# line 4109, column 11
	.data
.Lab2353:
 	.ascii	" StringAddr ->   SymPlusOffset\000"
	.text
	pushl	$30
	leal	.Lab2353,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3636:
	.stabn  68,0,4110,.LN3636-Emit_EmitNtSymPlusOffset		# line 4110, column 11
	call	InOut_WriteLn
.LN3637:
	.stabn  68,0,4111,.LN3637-Emit_EmitNtSymPlusOffset		# line 4111, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3638:
	.stabn  68,0,4112,.LN3638-Emit_EmitNtSymPlusOffset		# line 4112, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3639:
	.stabn  68,0,4112,.LN3639-Emit_EmitNtSymPlusOffset		# line 4112, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3640:
	.stabn  68,0,4113,.LN3640-Emit_EmitNtSymPlusOffset		# line 4113, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2356
.Lab2355:
.LN3641:
	.stabn  68,0,4113,.LN3641-Emit_EmitNtSymPlusOffset		# line 4113, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2354
.Lab2356:
.LN3642:
	.stabn  68,0,4113,.LN3642-Emit_EmitNtSymPlusOffset		# line 4113, column 61
	call	InOut_WriteLn
.Lab2354:
.LN3643:
	.stabn  68,0,4114,.LN3643-Emit_EmitNtSymPlusOffset		# line 4114, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3644:
	.stabn  68,0,4115,.LN3644-Emit_EmitNtSymPlusOffset		# line 4115, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2358
	cmpl	$4096,%eax
	jbe	.Lab2357
.Lab2358:
   	call	BoundErr_		
.Lab2357:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2350:
.LN3645:
	.stabn  68,0,4117,.LN3645-Emit_EmitNtSymPlusOffset		# line 4117, column 41
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2261:
.LN3646:
	.stabn  68,0,4119,.LN3646-Emit_EmitNtSymPlusOffset		# line 4119, column 10
	decl	Emit_s + 1536
.LN3647:
	.stabn  68,0,4120,.LN3647-Emit_EmitNtSymPlusOffset		# line 4120, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2362
	cmpl	$4096,%eax
	jbe	.Lab2361
.Lab2362:
   	call	BoundErr_		
.Lab2361:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2359
.Lab2360:
.LN3648:
	.stabn  68,0,4121,.LN3648-Emit_EmitNtSymPlusOffset		# line 4121, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2364
	cmpl	$4096,%eax
	jbe	.Lab2363
.Lab2364:
   	call	BoundErr_		
.Lab2363:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2359:
.LN3649:
	.stabn  68,0,4123,.LN3649-Emit_EmitNtSymPlusOffset		# line 4123, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2365
.Lab2366:
.LN3650:
	.stabn  68,0,4124,.LN3650-Emit_EmitNtSymPlusOffset		# line 4124, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3651:
	.stabn  68,0,4125,.LN3651-Emit_EmitNtSymPlusOffset		# line 4125, column 11
	.data
.Lab2367:
 	.ascii	"Rule 218/548 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2367,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3652:
	.stabn  68,0,4126,.LN3652-Emit_EmitNtSymPlusOffset		# line 4126, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3653:
	.stabn  68,0,4127,.LN3653-Emit_EmitNtSymPlusOffset		# line 4127, column 11
	.data
.Lab2368:
 	.ascii	" ProcedureConstant ->   SymPlusOffset\000"
	.text
	pushl	$37
	leal	.Lab2368,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3654:
	.stabn  68,0,4128,.LN3654-Emit_EmitNtSymPlusOffset		# line 4128, column 11
	call	InOut_WriteLn
.LN3655:
	.stabn  68,0,4129,.LN3655-Emit_EmitNtSymPlusOffset		# line 4129, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3656:
	.stabn  68,0,4130,.LN3656-Emit_EmitNtSymPlusOffset		# line 4130, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3657:
	.stabn  68,0,4130,.LN3657-Emit_EmitNtSymPlusOffset		# line 4130, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3658:
	.stabn  68,0,4131,.LN3658-Emit_EmitNtSymPlusOffset		# line 4131, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2371
.Lab2370:
.LN3659:
	.stabn  68,0,4131,.LN3659-Emit_EmitNtSymPlusOffset		# line 4131, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2369
.Lab2371:
.LN3660:
	.stabn  68,0,4131,.LN3660-Emit_EmitNtSymPlusOffset		# line 4131, column 61
	call	InOut_WriteLn
.Lab2369:
.LN3661:
	.stabn  68,0,4132,.LN3661-Emit_EmitNtSymPlusOffset		# line 4132, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3662:
	.stabn  68,0,4133,.LN3662-Emit_EmitNtSymPlusOffset		# line 4133, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2373
	cmpl	$4096,%eax
	jbe	.Lab2372
.Lab2373:
   	call	BoundErr_		
.Lab2372:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2365:
.LN3663:
	.stabn  68,0,4135,.LN3663-Emit_EmitNtSymPlusOffset		# line 4135, column 41
	movl	16(%ebp),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	movl	8(%eax),%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2260:
.LN3664:
	.stabn  68,0,4137,.LN3664-Emit_EmitNtSymPlusOffset		# line 4137, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3665:
	.stabn  68,0,4138,.LN3665-Emit_EmitNtSymPlusOffset		# line 4138, column 10
	decl	Emit_s + 1536
.LN3666:
	.stabn  68,0,4139,.LN3666-Emit_EmitNtSymPlusOffset		# line 4139, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2377
	cmpl	$4096,%eax
	jbe	.Lab2376
.Lab2377:
   	call	BoundErr_		
.Lab2376:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2374
.Lab2375:
.LN3667:
	.stabn  68,0,4140,.LN3667-Emit_EmitNtSymPlusOffset		# line 4140, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2379
	cmpl	$4096,%eax
	jbe	.Lab2378
.Lab2379:
   	call	BoundErr_		
.Lab2378:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2374:
.LN3668:
	.stabn  68,0,4142,.LN3668-Emit_EmitNtSymPlusOffset		# line 4142, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2380
.Lab2381:
.LN3669:
	.stabn  68,0,4143,.LN3669-Emit_EmitNtSymPlusOffset		# line 4143, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3670:
	.stabn  68,0,4144,.LN3670-Emit_EmitNtSymPlusOffset		# line 4144, column 11
	.data
.Lab2382:
 	.ascii	"Rule 219/332 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2382,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3671:
	.stabn  68,0,4145,.LN3671-Emit_EmitNtSymPlusOffset		# line 4145, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	112(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3672:
	.stabn  68,0,4146,.LN3672-Emit_EmitNtSymPlusOffset		# line 4146, column 11
	.data
.Lab2383:
 	.ascii	" Constant ->   SymPlusOffset\000"
	.text
	pushl	$28
	leal	.Lab2383,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3673:
	.stabn  68,0,4147,.LN3673-Emit_EmitNtSymPlusOffset		# line 4147, column 11
	call	InOut_WriteLn
.LN3674:
	.stabn  68,0,4148,.LN3674-Emit_EmitNtSymPlusOffset		# line 4148, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3675:
	.stabn  68,0,4149,.LN3675-Emit_EmitNtSymPlusOffset		# line 4149, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3676:
	.stabn  68,0,4149,.LN3676-Emit_EmitNtSymPlusOffset		# line 4149, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3677:
	.stabn  68,0,4150,.LN3677-Emit_EmitNtSymPlusOffset		# line 4150, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2386
.Lab2385:
.LN3678:
	.stabn  68,0,4150,.LN3678-Emit_EmitNtSymPlusOffset		# line 4150, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2384
.Lab2386:
.LN3679:
	.stabn  68,0,4150,.LN3679-Emit_EmitNtSymPlusOffset		# line 4150, column 61
	call	InOut_WriteLn
.Lab2384:
.LN3680:
	.stabn  68,0,4151,.LN3680-Emit_EmitNtSymPlusOffset		# line 4151, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3681:
	.stabn  68,0,4152,.LN3681-Emit_EmitNtSymPlusOffset		# line 4152, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2388
	cmpl	$4096,%eax
	jbe	.Lab2387
.Lab2388:
   	call	BoundErr_		
.Lab2387:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2380:
.LN3682:
	.stabn  68,0,4154,.LN3682-Emit_EmitNtSymPlusOffset		# line 4154, column 41
	movl	16(%ebp),%ebx
	movl	Emit_s + 36,%eax
	movl	%eax,(%ebx) 
	jmp	.Lab2259
.Lab2258:
	call	CaseErr_
.Lab2259:
.LN3683:
	.stabn  68,0,4156,.LN3683-Emit_EmitNtSymPlusOffset		# line 4156, column 4
	cmpb	$0,IR_s + 133
	je	.Lab2389
.Lab2390:
.LN3684:
	.stabn  68,0,4157,.LN3684-Emit_EmitNtSymPlusOffset		# line 4157, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3685:
	.stabn  68,0,4158,.LN3685-Emit_EmitNtSymPlusOffset		# line 4158, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrSymPlusOffset
	addl	$20, %esp
.LN3686:
	.stabn  68,0,4159,.LN3686-Emit_EmitNtSymPlusOffset		# line 4159, column 8
	call	InOut_WriteLn
.Lab2389:
.LN3687:
	.stabn  68,0,4160,.LN3687-Emit_EmitNtSymPlusOffset		# line 4160, column 0
.LBE12:
	leave
	ret
	.Lab2257 = 44
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB12-Emit_EmitNtSymPlusOffset
	.stabn 224,0,0,.LBE12-Emit_EmitNtSymPlusOffset
	.stabs "Emit_EmitNtSimpleVariable:F16",36,0,0,Emit_EmitNtSimpleVariable
	.align 4
Emit_EmitNtSimpleVariable:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab2391, %esp
.LN3688:
	.stabn  68,0,3767,.LN3688-Emit_EmitNtSimpleVariable		# line 3767, column 1
.LBB13:
.LN3689:
	.stabn  68,0,3768,.LN3689-Emit_EmitNtSimpleVariable		# line 3768, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	172(%eax),%eax
	.data
	.align 4
.Lab2405:
	.long	.Lab2404
	.long	.Lab2403
	.long	.Lab2402
	.long	.Lab2401
	.long	.Lab2400
	.long	.Lab2399
	.long	.Lab2398
	.long	.Lab2397
	.long	.Lab2396
	.long	.Lab2395
	.long	.Lab2394
	.text
	subl	$201,%eax
	jb	.Lab2392
	cmpl	$10,%eax
	ja	.Lab2392
	jmp	*.Lab2405(,%eax,4)
.Lab2404:
.LN3690:
	.stabn  68,0,3770,.LN3690-Emit_EmitNtSimpleVariable		# line 3770, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3691:
	.stabn  68,0,3771,.LN3691-Emit_EmitNtSimpleVariable		# line 3771, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3692:
	.stabn  68,0,3772,.LN3692-Emit_EmitNtSimpleVariable		# line 3772, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3693:
	.stabn  68,0,3773,.LN3693-Emit_EmitNtSimpleVariable		# line 3773, column 10
	decl	Emit_s + 1536
.LN3694:
	.stabn  68,0,3774,.LN3694-Emit_EmitNtSimpleVariable		# line 3774, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2409
	cmpl	$4096,%eax
	jbe	.Lab2408
.Lab2409:
   	call	BoundErr_		
.Lab2408:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2406
.Lab2407:
.LN3695:
	.stabn  68,0,3775,.LN3695-Emit_EmitNtSimpleVariable		# line 3775, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2411
	cmpl	$4096,%eax
	jbe	.Lab2410
.Lab2411:
   	call	BoundErr_		
.Lab2410:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2406:
.LN3696:
	.stabn  68,0,3777,.LN3696-Emit_EmitNtSimpleVariable		# line 3777, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2412
.Lab2413:
.LN3697:
	.stabn  68,0,3778,.LN3697-Emit_EmitNtSimpleVariable		# line 3778, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3698:
	.stabn  68,0,3779,.LN3698-Emit_EmitNtSimpleVariable		# line 3779, column 11
	.data
.Lab2414:
 	.ascii	"Rule 201/1190 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2414,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3699:
	.stabn  68,0,3780,.LN3699-Emit_EmitNtSimpleVariable		# line 3780, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3700:
	.stabn  68,0,3781,.LN3700-Emit_EmitNtSimpleVariable		# line 3781, column 11
	.data
.Lab2415:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2415,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3701:
	.stabn  68,0,3782,.LN3701-Emit_EmitNtSimpleVariable		# line 3782, column 11
	call	InOut_WriteLn
.LN3702:
	.stabn  68,0,3783,.LN3702-Emit_EmitNtSimpleVariable		# line 3783, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3703:
	.stabn  68,0,3784,.LN3703-Emit_EmitNtSimpleVariable		# line 3784, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3704:
	.stabn  68,0,3784,.LN3704-Emit_EmitNtSimpleVariable		# line 3784, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3705:
	.stabn  68,0,3785,.LN3705-Emit_EmitNtSimpleVariable		# line 3785, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2418
.Lab2417:
.LN3706:
	.stabn  68,0,3785,.LN3706-Emit_EmitNtSimpleVariable		# line 3785, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2416
.Lab2418:
.LN3707:
	.stabn  68,0,3785,.LN3707-Emit_EmitNtSimpleVariable		# line 3785, column 61
	call	InOut_WriteLn
.Lab2416:
.LN3708:
	.stabn  68,0,3786,.LN3708-Emit_EmitNtSimpleVariable		# line 3786, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3709:
	.stabn  68,0,3787,.LN3709-Emit_EmitNtSimpleVariable		# line 3787, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2420
	cmpl	$4096,%eax
	jbe	.Lab2419
.Lab2420:
   	call	BoundErr_		
.Lab2419:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2412:
	jmp	.Lab2393
.Lab2403:
.LN3710:
	.stabn  68,0,3791,.LN3710-Emit_EmitNtSimpleVariable		# line 3791, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3711:
	.stabn  68,0,3792,.LN3711-Emit_EmitNtSimpleVariable		# line 3792, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3712:
	.stabn  68,0,3793,.LN3712-Emit_EmitNtSimpleVariable		# line 3793, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3713:
	.stabn  68,0,3794,.LN3713-Emit_EmitNtSimpleVariable		# line 3794, column 10
	decl	Emit_s + 1536
.LN3714:
	.stabn  68,0,3795,.LN3714-Emit_EmitNtSimpleVariable		# line 3795, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2424
	cmpl	$4096,%eax
	jbe	.Lab2423
.Lab2424:
   	call	BoundErr_		
.Lab2423:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2421
.Lab2422:
.LN3715:
	.stabn  68,0,3796,.LN3715-Emit_EmitNtSimpleVariable		# line 3796, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2426
	cmpl	$4096,%eax
	jbe	.Lab2425
.Lab2426:
   	call	BoundErr_		
.Lab2425:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2421:
.LN3716:
	.stabn  68,0,3798,.LN3716-Emit_EmitNtSimpleVariable		# line 3798, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2427
.Lab2428:
.LN3717:
	.stabn  68,0,3799,.LN3717-Emit_EmitNtSimpleVariable		# line 3799, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3718:
	.stabn  68,0,3800,.LN3718-Emit_EmitNtSimpleVariable		# line 3800, column 11
	.data
.Lab2429:
 	.ascii	"Rule 202/1190 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2429,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3719:
	.stabn  68,0,3801,.LN3719-Emit_EmitNtSimpleVariable		# line 3801, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3720:
	.stabn  68,0,3802,.LN3720-Emit_EmitNtSimpleVariable		# line 3802, column 11
	.data
.Lab2430:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2430,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3721:
	.stabn  68,0,3803,.LN3721-Emit_EmitNtSimpleVariable		# line 3803, column 11
	call	InOut_WriteLn
.LN3722:
	.stabn  68,0,3804,.LN3722-Emit_EmitNtSimpleVariable		# line 3804, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3723:
	.stabn  68,0,3805,.LN3723-Emit_EmitNtSimpleVariable		# line 3805, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3724:
	.stabn  68,0,3805,.LN3724-Emit_EmitNtSimpleVariable		# line 3805, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3725:
	.stabn  68,0,3806,.LN3725-Emit_EmitNtSimpleVariable		# line 3806, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2433
.Lab2432:
.LN3726:
	.stabn  68,0,3806,.LN3726-Emit_EmitNtSimpleVariable		# line 3806, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2431
.Lab2433:
.LN3727:
	.stabn  68,0,3806,.LN3727-Emit_EmitNtSimpleVariable		# line 3806, column 61
	call	InOut_WriteLn
.Lab2431:
.LN3728:
	.stabn  68,0,3807,.LN3728-Emit_EmitNtSimpleVariable		# line 3807, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3729:
	.stabn  68,0,3808,.LN3729-Emit_EmitNtSimpleVariable		# line 3808, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2435
	cmpl	$4096,%eax
	jbe	.Lab2434
.Lab2435:
   	call	BoundErr_		
.Lab2434:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2427:
	jmp	.Lab2393
.Lab2402:
.LN3730:
	.stabn  68,0,3812,.LN3730-Emit_EmitNtSimpleVariable		# line 3812, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	4(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3731:
	.stabn  68,0,3813,.LN3731-Emit_EmitNtSimpleVariable		# line 3813, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3732:
	.stabn  68,0,3814,.LN3732-Emit_EmitNtSimpleVariable		# line 3814, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3733:
	.stabn  68,0,3815,.LN3733-Emit_EmitNtSimpleVariable		# line 3815, column 10
	decl	Emit_s + 1536
.LN3734:
	.stabn  68,0,3816,.LN3734-Emit_EmitNtSimpleVariable		# line 3816, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2439
	cmpl	$4096,%eax
	jbe	.Lab2438
.Lab2439:
   	call	BoundErr_		
.Lab2438:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2436
.Lab2437:
.LN3735:
	.stabn  68,0,3817,.LN3735-Emit_EmitNtSimpleVariable		# line 3817, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2441
	cmpl	$4096,%eax
	jbe	.Lab2440
.Lab2441:
   	call	BoundErr_		
.Lab2440:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2436:
.LN3736:
	.stabn  68,0,3819,.LN3736-Emit_EmitNtSimpleVariable		# line 3819, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2442
.Lab2443:
.LN3737:
	.stabn  68,0,3820,.LN3737-Emit_EmitNtSimpleVariable		# line 3820, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3738:
	.stabn  68,0,3821,.LN3738-Emit_EmitNtSimpleVariable		# line 3821, column 11
	.data
.Lab2444:
 	.ascii	"Rule 203/1190 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2444,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3739:
	.stabn  68,0,3822,.LN3739-Emit_EmitNtSimpleVariable		# line 3822, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3740:
	.stabn  68,0,3823,.LN3740-Emit_EmitNtSimpleVariable		# line 3823, column 11
	.data
.Lab2445:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2445,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3741:
	.stabn  68,0,3824,.LN3741-Emit_EmitNtSimpleVariable		# line 3824, column 11
	call	InOut_WriteLn
.LN3742:
	.stabn  68,0,3825,.LN3742-Emit_EmitNtSimpleVariable		# line 3825, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3743:
	.stabn  68,0,3826,.LN3743-Emit_EmitNtSimpleVariable		# line 3826, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3744:
	.stabn  68,0,3826,.LN3744-Emit_EmitNtSimpleVariable		# line 3826, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3745:
	.stabn  68,0,3827,.LN3745-Emit_EmitNtSimpleVariable		# line 3827, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2448
.Lab2447:
.LN3746:
	.stabn  68,0,3827,.LN3746-Emit_EmitNtSimpleVariable		# line 3827, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2446
.Lab2448:
.LN3747:
	.stabn  68,0,3827,.LN3747-Emit_EmitNtSimpleVariable		# line 3827, column 61
	call	InOut_WriteLn
.Lab2446:
.LN3748:
	.stabn  68,0,3828,.LN3748-Emit_EmitNtSimpleVariable		# line 3828, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3749:
	.stabn  68,0,3829,.LN3749-Emit_EmitNtSimpleVariable		# line 3829, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2450
	cmpl	$4096,%eax
	jbe	.Lab2449
.Lab2450:
   	call	BoundErr_		
.Lab2449:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2442:
	jmp	.Lab2393
.Lab2401:
.LN3750:
	.stabn  68,0,3833,.LN3750-Emit_EmitNtSimpleVariable		# line 3833, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3751:
	.stabn  68,0,3834,.LN3751-Emit_EmitNtSimpleVariable		# line 3834, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	8(%eax),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3752:
	.stabn  68,0,3835,.LN3752-Emit_EmitNtSimpleVariable		# line 3835, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3753:
	.stabn  68,0,3836,.LN3753-Emit_EmitNtSimpleVariable		# line 3836, column 10
	decl	Emit_s + 1536
.LN3754:
	.stabn  68,0,3837,.LN3754-Emit_EmitNtSimpleVariable		# line 3837, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2454
	cmpl	$4096,%eax
	jbe	.Lab2453
.Lab2454:
   	call	BoundErr_		
.Lab2453:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2451
.Lab2452:
.LN3755:
	.stabn  68,0,3838,.LN3755-Emit_EmitNtSimpleVariable		# line 3838, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2456
	cmpl	$4096,%eax
	jbe	.Lab2455
.Lab2456:
   	call	BoundErr_		
.Lab2455:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2451:
.LN3756:
	.stabn  68,0,3840,.LN3756-Emit_EmitNtSimpleVariable		# line 3840, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2457
.Lab2458:
.LN3757:
	.stabn  68,0,3841,.LN3757-Emit_EmitNtSimpleVariable		# line 3841, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3758:
	.stabn  68,0,3842,.LN3758-Emit_EmitNtSimpleVariable		# line 3842, column 11
	.data
.Lab2459:
 	.ascii	"Rule 204/1190 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2459,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3759:
	.stabn  68,0,3843,.LN3759-Emit_EmitNtSimpleVariable		# line 3843, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3760:
	.stabn  68,0,3844,.LN3760-Emit_EmitNtSimpleVariable		# line 3844, column 11
	.data
.Lab2460:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2460,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3761:
	.stabn  68,0,3845,.LN3761-Emit_EmitNtSimpleVariable		# line 3845, column 11
	call	InOut_WriteLn
.LN3762:
	.stabn  68,0,3846,.LN3762-Emit_EmitNtSimpleVariable		# line 3846, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3763:
	.stabn  68,0,3847,.LN3763-Emit_EmitNtSimpleVariable		# line 3847, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3764:
	.stabn  68,0,3847,.LN3764-Emit_EmitNtSimpleVariable		# line 3847, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3765:
	.stabn  68,0,3848,.LN3765-Emit_EmitNtSimpleVariable		# line 3848, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2463
.Lab2462:
.LN3766:
	.stabn  68,0,3848,.LN3766-Emit_EmitNtSimpleVariable		# line 3848, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2461
.Lab2463:
.LN3767:
	.stabn  68,0,3848,.LN3767-Emit_EmitNtSimpleVariable		# line 3848, column 61
	call	InOut_WriteLn
.Lab2461:
.LN3768:
	.stabn  68,0,3849,.LN3768-Emit_EmitNtSimpleVariable		# line 3849, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3769:
	.stabn  68,0,3850,.LN3769-Emit_EmitNtSimpleVariable		# line 3850, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2465
	cmpl	$4096,%eax
	jbe	.Lab2464
.Lab2465:
   	call	BoundErr_		
.Lab2464:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2457:
	jmp	.Lab2393
.Lab2400:
.LN3770:
	.stabn  68,0,3854,.LN3770-Emit_EmitNtSimpleVariable		# line 3854, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3771:
	.stabn  68,0,3855,.LN3771-Emit_EmitNtSimpleVariable		# line 3855, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3772:
	.stabn  68,0,3856,.LN3772-Emit_EmitNtSimpleVariable		# line 3856, column 10
	decl	Emit_s + 1536
.LN3773:
	.stabn  68,0,3857,.LN3773-Emit_EmitNtSimpleVariable		# line 3857, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2469
	cmpl	$4096,%eax
	jbe	.Lab2468
.Lab2469:
   	call	BoundErr_		
.Lab2468:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2466
.Lab2467:
.LN3774:
	.stabn  68,0,3858,.LN3774-Emit_EmitNtSimpleVariable		# line 3858, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2471
	cmpl	$4096,%eax
	jbe	.Lab2470
.Lab2471:
   	call	BoundErr_		
.Lab2470:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2466:
.LN3775:
	.stabn  68,0,3860,.LN3775-Emit_EmitNtSimpleVariable		# line 3860, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2472
.Lab2473:
.LN3776:
	.stabn  68,0,3861,.LN3776-Emit_EmitNtSimpleVariable		# line 3861, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3777:
	.stabn  68,0,3862,.LN3777-Emit_EmitNtSimpleVariable		# line 3862, column 11
	.data
.Lab2474:
 	.ascii	"Rule 205/1085 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2474,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3778:
	.stabn  68,0,3863,.LN3778-Emit_EmitNtSimpleVariable		# line 3863, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3779:
	.stabn  68,0,3864,.LN3779-Emit_EmitNtSimpleVariable		# line 3864, column 11
	.data
.Lab2475:
 	.ascii	" FixedMinus ->   SimpleVariable\000"
	.text
	pushl	$31
	leal	.Lab2475,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3780:
	.stabn  68,0,3865,.LN3780-Emit_EmitNtSimpleVariable		# line 3865, column 11
	call	InOut_WriteLn
.LN3781:
	.stabn  68,0,3866,.LN3781-Emit_EmitNtSimpleVariable		# line 3866, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3782:
	.stabn  68,0,3867,.LN3782-Emit_EmitNtSimpleVariable		# line 3867, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3783:
	.stabn  68,0,3867,.LN3783-Emit_EmitNtSimpleVariable		# line 3867, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3784:
	.stabn  68,0,3868,.LN3784-Emit_EmitNtSimpleVariable		# line 3868, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2478
.Lab2477:
.LN3785:
	.stabn  68,0,3868,.LN3785-Emit_EmitNtSimpleVariable		# line 3868, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2476
.Lab2478:
.LN3786:
	.stabn  68,0,3868,.LN3786-Emit_EmitNtSimpleVariable		# line 3868, column 61
	call	InOut_WriteLn
.Lab2476:
.LN3787:
	.stabn  68,0,3869,.LN3787-Emit_EmitNtSimpleVariable		# line 3869, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3788:
	.stabn  68,0,3870,.LN3788-Emit_EmitNtSimpleVariable		# line 3870, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2480
	cmpl	$4096,%eax
	jbe	.Lab2479
.Lab2480:
   	call	BoundErr_		
.Lab2479:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2472:
	jmp	.Lab2393
.Lab2399:
.LN3789:
	.stabn  68,0,3874,.LN3789-Emit_EmitNtSimpleVariable		# line 3874, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3790:
	.stabn  68,0,3875,.LN3790-Emit_EmitNtSimpleVariable		# line 3875, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3791:
	.stabn  68,0,3876,.LN3791-Emit_EmitNtSimpleVariable		# line 3876, column 10
	decl	Emit_s + 1536
.LN3792:
	.stabn  68,0,3877,.LN3792-Emit_EmitNtSimpleVariable		# line 3877, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2484
	cmpl	$4096,%eax
	jbe	.Lab2483
.Lab2484:
   	call	BoundErr_		
.Lab2483:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2481
.Lab2482:
.LN3793:
	.stabn  68,0,3878,.LN3793-Emit_EmitNtSimpleVariable		# line 3878, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2486
	cmpl	$4096,%eax
	jbe	.Lab2485
.Lab2486:
   	call	BoundErr_		
.Lab2485:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2481:
.LN3794:
	.stabn  68,0,3880,.LN3794-Emit_EmitNtSimpleVariable		# line 3880, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2487
.Lab2488:
.LN3795:
	.stabn  68,0,3881,.LN3795-Emit_EmitNtSimpleVariable		# line 3881, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3796:
	.stabn  68,0,3882,.LN3796-Emit_EmitNtSimpleVariable		# line 3882, column 11
	.data
.Lab2489:
 	.ascii	"Rule 206/988 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2489,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3797:
	.stabn  68,0,3883,.LN3797-Emit_EmitNtSimpleVariable		# line 3883, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3798:
	.stabn  68,0,3884,.LN3798-Emit_EmitNtSimpleVariable		# line 3884, column 11
	.data
.Lab2490:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2490,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3799:
	.stabn  68,0,3885,.LN3799-Emit_EmitNtSimpleVariable		# line 3885, column 11
	call	InOut_WriteLn
.LN3800:
	.stabn  68,0,3886,.LN3800-Emit_EmitNtSimpleVariable		# line 3886, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3801:
	.stabn  68,0,3887,.LN3801-Emit_EmitNtSimpleVariable		# line 3887, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3802:
	.stabn  68,0,3887,.LN3802-Emit_EmitNtSimpleVariable		# line 3887, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3803:
	.stabn  68,0,3888,.LN3803-Emit_EmitNtSimpleVariable		# line 3888, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2493
.Lab2492:
.LN3804:
	.stabn  68,0,3888,.LN3804-Emit_EmitNtSimpleVariable		# line 3888, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2491
.Lab2493:
.LN3805:
	.stabn  68,0,3888,.LN3805-Emit_EmitNtSimpleVariable		# line 3888, column 61
	call	InOut_WriteLn
.Lab2491:
.LN3806:
	.stabn  68,0,3889,.LN3806-Emit_EmitNtSimpleVariable		# line 3889, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3807:
	.stabn  68,0,3890,.LN3807-Emit_EmitNtSimpleVariable		# line 3890, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2495
	cmpl	$4096,%eax
	jbe	.Lab2494
.Lab2495:
   	call	BoundErr_		
.Lab2494:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2487:
	jmp	.Lab2393
.Lab2398:
.LN3808:
	.stabn  68,0,3894,.LN3808-Emit_EmitNtSimpleVariable		# line 3894, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3809:
	.stabn  68,0,3895,.LN3809-Emit_EmitNtSimpleVariable		# line 3895, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN3810:
	.stabn  68,0,3896,.LN3810-Emit_EmitNtSimpleVariable		# line 3896, column 10
	decl	Emit_s + 1536
.LN3811:
	.stabn  68,0,3897,.LN3811-Emit_EmitNtSimpleVariable		# line 3897, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2499
	cmpl	$4096,%eax
	jbe	.Lab2498
.Lab2499:
   	call	BoundErr_		
.Lab2498:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2496
.Lab2497:
.LN3812:
	.stabn  68,0,3898,.LN3812-Emit_EmitNtSimpleVariable		# line 3898, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2501
	cmpl	$4096,%eax
	jbe	.Lab2500
.Lab2501:
   	call	BoundErr_		
.Lab2500:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2496:
.LN3813:
	.stabn  68,0,3900,.LN3813-Emit_EmitNtSimpleVariable		# line 3900, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2502
.Lab2503:
.LN3814:
	.stabn  68,0,3901,.LN3814-Emit_EmitNtSimpleVariable		# line 3901, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3815:
	.stabn  68,0,3902,.LN3815-Emit_EmitNtSimpleVariable		# line 3902, column 11
	.data
.Lab2504:
 	.ascii	"Rule 207/988 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2504,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3816:
	.stabn  68,0,3903,.LN3816-Emit_EmitNtSimpleVariable		# line 3903, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3817:
	.stabn  68,0,3904,.LN3817-Emit_EmitNtSimpleVariable		# line 3904, column 11
	.data
.Lab2505:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2505,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3818:
	.stabn  68,0,3905,.LN3818-Emit_EmitNtSimpleVariable		# line 3905, column 11
	call	InOut_WriteLn
.LN3819:
	.stabn  68,0,3906,.LN3819-Emit_EmitNtSimpleVariable		# line 3906, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3820:
	.stabn  68,0,3907,.LN3820-Emit_EmitNtSimpleVariable		# line 3907, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3821:
	.stabn  68,0,3907,.LN3821-Emit_EmitNtSimpleVariable		# line 3907, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3822:
	.stabn  68,0,3908,.LN3822-Emit_EmitNtSimpleVariable		# line 3908, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2508
.Lab2507:
.LN3823:
	.stabn  68,0,3908,.LN3823-Emit_EmitNtSimpleVariable		# line 3908, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2506
.Lab2508:
.LN3824:
	.stabn  68,0,3908,.LN3824-Emit_EmitNtSimpleVariable		# line 3908, column 61
	call	InOut_WriteLn
.Lab2506:
.LN3825:
	.stabn  68,0,3909,.LN3825-Emit_EmitNtSimpleVariable		# line 3909, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3826:
	.stabn  68,0,3910,.LN3826-Emit_EmitNtSimpleVariable		# line 3910, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2510
	cmpl	$4096,%eax
	jbe	.Lab2509
.Lab2510:
   	call	BoundErr_		
.Lab2509:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2502:
	jmp	.Lab2393
.Lab2397:
.LN3827:
	.stabn  68,0,3914,.LN3827-Emit_EmitNtSimpleVariable		# line 3914, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3828:
	.stabn  68,0,3915,.LN3828-Emit_EmitNtSimpleVariable		# line 3915, column 10
	decl	Emit_s + 1536
.LN3829:
	.stabn  68,0,3916,.LN3829-Emit_EmitNtSimpleVariable		# line 3916, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2514
	cmpl	$4096,%eax
	jbe	.Lab2513
.Lab2514:
   	call	BoundErr_		
.Lab2513:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2511
.Lab2512:
.LN3830:
	.stabn  68,0,3917,.LN3830-Emit_EmitNtSimpleVariable		# line 3917, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2516
	cmpl	$4096,%eax
	jbe	.Lab2515
.Lab2516:
   	call	BoundErr_		
.Lab2515:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2511:
.LN3831:
	.stabn  68,0,3919,.LN3831-Emit_EmitNtSimpleVariable		# line 3919, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2517
.Lab2518:
.LN3832:
	.stabn  68,0,3920,.LN3832-Emit_EmitNtSimpleVariable		# line 3920, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3833:
	.stabn  68,0,3921,.LN3833-Emit_EmitNtSimpleVariable		# line 3921, column 11
	.data
.Lab2519:
 	.ascii	"Rule 208/634 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2519,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3834:
	.stabn  68,0,3922,.LN3834-Emit_EmitNtSimpleVariable		# line 3922, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3835:
	.stabn  68,0,3923,.LN3835-Emit_EmitNtSimpleVariable		# line 3923, column 11
	.data
.Lab2520:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2520,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3836:
	.stabn  68,0,3924,.LN3836-Emit_EmitNtSimpleVariable		# line 3924, column 11
	call	InOut_WriteLn
.LN3837:
	.stabn  68,0,3925,.LN3837-Emit_EmitNtSimpleVariable		# line 3925, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3838:
	.stabn  68,0,3926,.LN3838-Emit_EmitNtSimpleVariable		# line 3926, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3839:
	.stabn  68,0,3926,.LN3839-Emit_EmitNtSimpleVariable		# line 3926, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3840:
	.stabn  68,0,3927,.LN3840-Emit_EmitNtSimpleVariable		# line 3927, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2523
.Lab2522:
.LN3841:
	.stabn  68,0,3927,.LN3841-Emit_EmitNtSimpleVariable		# line 3927, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2521
.Lab2523:
.LN3842:
	.stabn  68,0,3927,.LN3842-Emit_EmitNtSimpleVariable		# line 3927, column 61
	call	InOut_WriteLn
.Lab2521:
.LN3843:
	.stabn  68,0,3928,.LN3843-Emit_EmitNtSimpleVariable		# line 3928, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3844:
	.stabn  68,0,3929,.LN3844-Emit_EmitNtSimpleVariable		# line 3929, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2525
	cmpl	$4096,%eax
	jbe	.Lab2524
.Lab2525:
   	call	BoundErr_		
.Lab2524:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2517:
.LN3845:
	.stabn  68,0,3931,.LN3845-Emit_EmitNtSimpleVariable		# line 3931, column 49
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	(%eax),%eax
	movzwl	8(%eax),%eax
	cmpl	$15,%eax
	jbe	.Lab2526
.Lab2527:
   	call	BoundErr_		
.Lab2526:
	movb	$1,Emit_s + 334(%eax) 
	jmp	.Lab2393
.Lab2396:
.LN3846:
	.stabn  68,0,3933,.LN3846-Emit_EmitNtSimpleVariable		# line 3933, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3847:
	.stabn  68,0,3934,.LN3847-Emit_EmitNtSimpleVariable		# line 3934, column 10
	decl	Emit_s + 1536
.LN3848:
	.stabn  68,0,3935,.LN3848-Emit_EmitNtSimpleVariable		# line 3935, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2531
	cmpl	$4096,%eax
	jbe	.Lab2530
.Lab2531:
   	call	BoundErr_		
.Lab2530:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2528
.Lab2529:
.LN3849:
	.stabn  68,0,3936,.LN3849-Emit_EmitNtSimpleVariable		# line 3936, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2533
	cmpl	$4096,%eax
	jbe	.Lab2532
.Lab2533:
   	call	BoundErr_		
.Lab2532:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2528:
.LN3850:
	.stabn  68,0,3938,.LN3850-Emit_EmitNtSimpleVariable		# line 3938, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2534
.Lab2535:
.LN3851:
	.stabn  68,0,3939,.LN3851-Emit_EmitNtSimpleVariable		# line 3939, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3852:
	.stabn  68,0,3940,.LN3852-Emit_EmitNtSimpleVariable		# line 3940, column 11
	.data
.Lab2536:
 	.ascii	"Rule 209/634 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2536,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3853:
	.stabn  68,0,3941,.LN3853-Emit_EmitNtSimpleVariable		# line 3941, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3854:
	.stabn  68,0,3942,.LN3854-Emit_EmitNtSimpleVariable		# line 3942, column 11
	.data
.Lab2537:
 	.ascii	" FixedPlus ->   SimpleVariable\000"
	.text
	pushl	$30
	leal	.Lab2537,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3855:
	.stabn  68,0,3943,.LN3855-Emit_EmitNtSimpleVariable		# line 3943, column 11
	call	InOut_WriteLn
.LN3856:
	.stabn  68,0,3944,.LN3856-Emit_EmitNtSimpleVariable		# line 3944, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3857:
	.stabn  68,0,3945,.LN3857-Emit_EmitNtSimpleVariable		# line 3945, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3858:
	.stabn  68,0,3945,.LN3858-Emit_EmitNtSimpleVariable		# line 3945, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3859:
	.stabn  68,0,3946,.LN3859-Emit_EmitNtSimpleVariable		# line 3946, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2540
.Lab2539:
.LN3860:
	.stabn  68,0,3946,.LN3860-Emit_EmitNtSimpleVariable		# line 3946, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2538
.Lab2540:
.LN3861:
	.stabn  68,0,3946,.LN3861-Emit_EmitNtSimpleVariable		# line 3946, column 61
	call	InOut_WriteLn
.Lab2538:
.LN3862:
	.stabn  68,0,3947,.LN3862-Emit_EmitNtSimpleVariable		# line 3947, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3863:
	.stabn  68,0,3948,.LN3863-Emit_EmitNtSimpleVariable		# line 3948, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2542
	cmpl	$4096,%eax
	jbe	.Lab2541
.Lab2542:
   	call	BoundErr_		
.Lab2541:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2534:
.LN3864:
	.stabn  68,0,3950,.LN3864-Emit_EmitNtSimpleVariable		# line 3950, column 49
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	(%eax),%eax
	movzwl	8(%eax),%eax
	cmpl	$15,%eax
	jbe	.Lab2543
.Lab2544:
   	call	BoundErr_		
.Lab2543:
	movb	$1,Emit_s + 334(%eax) 
	jmp	.Lab2393
.Lab2395:
.LN3865:
	.stabn  68,0,3952,.LN3865-Emit_EmitNtSimpleVariable		# line 3952, column 10
	decl	Emit_s + 1536
.LN3866:
	.stabn  68,0,3953,.LN3866-Emit_EmitNtSimpleVariable		# line 3953, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2548
	cmpl	$4096,%eax
	jbe	.Lab2547
.Lab2548:
   	call	BoundErr_		
.Lab2547:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2545
.Lab2546:
.LN3867:
	.stabn  68,0,3954,.LN3867-Emit_EmitNtSimpleVariable		# line 3954, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2550
	cmpl	$4096,%eax
	jbe	.Lab2549
.Lab2550:
   	call	BoundErr_		
.Lab2549:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2545:
.LN3868:
	.stabn  68,0,3956,.LN3868-Emit_EmitNtSimpleVariable		# line 3956, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2551
.Lab2552:
.LN3869:
	.stabn  68,0,3957,.LN3869-Emit_EmitNtSimpleVariable		# line 3957, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3870:
	.stabn  68,0,3958,.LN3870-Emit_EmitNtSimpleVariable		# line 3958, column 11
	.data
.Lab2553:
 	.ascii	"Rule 210/579 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2553,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3871:
	.stabn  68,0,3959,.LN3871-Emit_EmitNtSimpleVariable		# line 3959, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3872:
	.stabn  68,0,3960,.LN3872-Emit_EmitNtSimpleVariable		# line 3960, column 11
	.data
.Lab2554:
 	.ascii	" StaticVariable ->   SimpleVariable\000"
	.text
	pushl	$35
	leal	.Lab2554,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3873:
	.stabn  68,0,3961,.LN3873-Emit_EmitNtSimpleVariable		# line 3961, column 11
	call	InOut_WriteLn
.LN3874:
	.stabn  68,0,3962,.LN3874-Emit_EmitNtSimpleVariable		# line 3962, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3875:
	.stabn  68,0,3963,.LN3875-Emit_EmitNtSimpleVariable		# line 3963, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3876:
	.stabn  68,0,3963,.LN3876-Emit_EmitNtSimpleVariable		# line 3963, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3877:
	.stabn  68,0,3964,.LN3877-Emit_EmitNtSimpleVariable		# line 3964, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2557
.Lab2556:
.LN3878:
	.stabn  68,0,3964,.LN3878-Emit_EmitNtSimpleVariable		# line 3964, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2555
.Lab2557:
.LN3879:
	.stabn  68,0,3964,.LN3879-Emit_EmitNtSimpleVariable		# line 3964, column 61
	call	InOut_WriteLn
.Lab2555:
.LN3880:
	.stabn  68,0,3965,.LN3880-Emit_EmitNtSimpleVariable		# line 3965, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3881:
	.stabn  68,0,3966,.LN3881-Emit_EmitNtSimpleVariable		# line 3966, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2559
	cmpl	$4096,%eax
	jbe	.Lab2558
.Lab2559:
   	call	BoundErr_		
.Lab2558:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2551:
	jmp	.Lab2393
.Lab2394:
.LN3882:
	.stabn  68,0,3970,.LN3882-Emit_EmitNtSimpleVariable		# line 3970, column 10
	decl	Emit_s + 1536
.LN3883:
	.stabn  68,0,3971,.LN3883-Emit_EmitNtSimpleVariable		# line 3971, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2563
	cmpl	$4096,%eax
	jbe	.Lab2562
.Lab2563:
   	call	BoundErr_		
.Lab2562:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2560
.Lab2561:
.LN3884:
	.stabn  68,0,3972,.LN3884-Emit_EmitNtSimpleVariable		# line 3972, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2565
	cmpl	$4096,%eax
	jbe	.Lab2564
.Lab2565:
   	call	BoundErr_		
.Lab2564:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2560:
.LN3885:
	.stabn  68,0,3974,.LN3885-Emit_EmitNtSimpleVariable		# line 3974, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2566
.Lab2567:
.LN3886:
	.stabn  68,0,3975,.LN3886-Emit_EmitNtSimpleVariable		# line 3975, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3887:
	.stabn  68,0,3976,.LN3887-Emit_EmitNtSimpleVariable		# line 3976, column 11
	.data
.Lab2568:
 	.ascii	"Rule 211/559 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2568,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3888:
	.stabn  68,0,3977,.LN3888-Emit_EmitNtSimpleVariable		# line 3977, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	108(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3889:
	.stabn  68,0,3978,.LN3889-Emit_EmitNtSimpleVariable		# line 3978, column 11
	.data
.Lab2569:
 	.ascii	" LocalVariable ->   SimpleVariable\000"
	.text
	pushl	$34
	leal	.Lab2569,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3890:
	.stabn  68,0,3979,.LN3890-Emit_EmitNtSimpleVariable		# line 3979, column 11
	call	InOut_WriteLn
.LN3891:
	.stabn  68,0,3980,.LN3891-Emit_EmitNtSimpleVariable		# line 3980, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3892:
	.stabn  68,0,3981,.LN3892-Emit_EmitNtSimpleVariable		# line 3981, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3893:
	.stabn  68,0,3981,.LN3893-Emit_EmitNtSimpleVariable		# line 3981, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3894:
	.stabn  68,0,3982,.LN3894-Emit_EmitNtSimpleVariable		# line 3982, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2572
.Lab2571:
.LN3895:
	.stabn  68,0,3982,.LN3895-Emit_EmitNtSimpleVariable		# line 3982, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2570
.Lab2572:
.LN3896:
	.stabn  68,0,3982,.LN3896-Emit_EmitNtSimpleVariable		# line 3982, column 61
	call	InOut_WriteLn
.Lab2570:
.LN3897:
	.stabn  68,0,3983,.LN3897-Emit_EmitNtSimpleVariable		# line 3983, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3898:
	.stabn  68,0,3984,.LN3898-Emit_EmitNtSimpleVariable		# line 3984, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2574
	cmpl	$4096,%eax
	jbe	.Lab2573
.Lab2574:
   	call	BoundErr_		
.Lab2573:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2566:
	jmp	.Lab2393
.Lab2392:
	call	CaseErr_
.Lab2393:
.LN3899:
	.stabn  68,0,3988,.LN3899-Emit_EmitNtSimpleVariable		# line 3988, column 4
	cmpb	$0,IR_s + 133
	je	.Lab2575
.Lab2576:
.LN3900:
	.stabn  68,0,3989,.LN3900-Emit_EmitNtSimpleVariable		# line 3989, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3901:
	.stabn  68,0,3990,.LN3901-Emit_EmitNtSimpleVariable		# line 3990, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrSimpleVariable
	addl	$20, %esp
.LN3902:
	.stabn  68,0,3991,.LN3902-Emit_EmitNtSimpleVariable		# line 3991, column 8
	call	InOut_WriteLn
.Lab2575:
.LN3903:
	.stabn  68,0,3992,.LN3903-Emit_EmitNtSimpleVariable		# line 3992, column 0
.LBE13:
	leave
	ret
	.Lab2391 = 64
	.stabs "AT2:133",128,0,20,-64
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB13-Emit_EmitNtSimpleVariable
	.stabn 224,0,0,.LBE13-Emit_EmitNtSimpleVariable
	.stabs "Emit_EmitNtFloatConstant:F16",36,0,0,Emit_EmitNtFloatConstant
	.align 4
Emit_EmitNtFloatConstant:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab2577, %esp
.LN3904:
	.stabn  68,0,3619,.LN3904-Emit_EmitNtFloatConstant		# line 3619, column 1
.LBB14:
.LN3905:
	.stabn  68,0,3620,.LN3905-Emit_EmitNtFloatConstant		# line 3620, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	168(%eax),%eax
	.data
	.align 4
.Lab2587:
	.long	.Lab2586
	.long	.Lab2585
	.long	.Lab2584
	.long	.Lab2583
	.long	.Lab2582
	.long	.Lab2581
	.long	.Lab2580
	.text
	subl	$194,%eax
	jb	.Lab2578
	cmpl	$6,%eax
	ja	.Lab2578
	jmp	*.Lab2587(,%eax,4)
.Lab2586:
.LN3906:
	.stabn  68,0,3622,.LN3906-Emit_EmitNtFloatConstant		# line 3622, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3907:
	.stabn  68,0,3623,.LN3907-Emit_EmitNtFloatConstant		# line 3623, column 10
	decl	Emit_s + 1536
.LN3908:
	.stabn  68,0,3624,.LN3908-Emit_EmitNtFloatConstant		# line 3624, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2591
	cmpl	$4096,%eax
	jbe	.Lab2590
.Lab2591:
   	call	BoundErr_		
.Lab2590:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2588
.Lab2589:
.LN3909:
	.stabn  68,0,3625,.LN3909-Emit_EmitNtFloatConstant		# line 3625, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2593
	cmpl	$4096,%eax
	jbe	.Lab2592
.Lab2593:
   	call	BoundErr_		
.Lab2592:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2588:
.LN3910:
	.stabn  68,0,3627,.LN3910-Emit_EmitNtFloatConstant		# line 3627, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2594
.Lab2595:
.LN3911:
	.stabn  68,0,3628,.LN3911-Emit_EmitNtFloatConstant		# line 3628, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3912:
	.stabn  68,0,3629,.LN3912-Emit_EmitNtFloatConstant		# line 3629, column 11
	.data
.Lab2596:
 	.ascii	"Rule 194/2755 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2596,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3913:
	.stabn  68,0,3630,.LN3913-Emit_EmitNtFloatConstant		# line 3630, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	104(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3914:
	.stabn  68,0,3631,.LN3914-Emit_EmitNtFloatConstant		# line 3631, column 11
	.data
.Lab2597:
 	.ascii	" FunctionCall ->   FloatConstant\000"
	.text
	pushl	$32
	leal	.Lab2597,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3915:
	.stabn  68,0,3632,.LN3915-Emit_EmitNtFloatConstant		# line 3632, column 11
	call	InOut_WriteLn
.LN3916:
	.stabn  68,0,3633,.LN3916-Emit_EmitNtFloatConstant		# line 3633, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3917:
	.stabn  68,0,3634,.LN3917-Emit_EmitNtFloatConstant		# line 3634, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3918:
	.stabn  68,0,3634,.LN3918-Emit_EmitNtFloatConstant		# line 3634, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3919:
	.stabn  68,0,3635,.LN3919-Emit_EmitNtFloatConstant		# line 3635, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2600
.Lab2599:
.LN3920:
	.stabn  68,0,3635,.LN3920-Emit_EmitNtFloatConstant		# line 3635, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2598
.Lab2600:
.LN3921:
	.stabn  68,0,3635,.LN3921-Emit_EmitNtFloatConstant		# line 3635, column 61
	call	InOut_WriteLn
.Lab2598:
.LN3922:
	.stabn  68,0,3636,.LN3922-Emit_EmitNtFloatConstant		# line 3636, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3923:
	.stabn  68,0,3637,.LN3923-Emit_EmitNtFloatConstant		# line 3637, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2602
	cmpl	$4096,%eax
	jbe	.Lab2601
.Lab2602:
   	call	BoundErr_		
.Lab2601:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2594:
	jmp	.Lab2579
.Lab2585:
.LN3924:
	.stabn  68,0,3641,.LN3924-Emit_EmitNtFloatConstant		# line 3641, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3925:
	.stabn  68,0,3642,.LN3925-Emit_EmitNtFloatConstant		# line 3642, column 10
	decl	Emit_s + 1536
.LN3926:
	.stabn  68,0,3643,.LN3926-Emit_EmitNtFloatConstant		# line 3643, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2606
	cmpl	$4096,%eax
	jbe	.Lab2605
.Lab2606:
   	call	BoundErr_		
.Lab2605:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2603
.Lab2604:
.LN3927:
	.stabn  68,0,3644,.LN3927-Emit_EmitNtFloatConstant		# line 3644, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2608
	cmpl	$4096,%eax
	jbe	.Lab2607
.Lab2608:
   	call	BoundErr_		
.Lab2607:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2603:
.LN3928:
	.stabn  68,0,3646,.LN3928-Emit_EmitNtFloatConstant		# line 3646, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2609
.Lab2610:
.LN3929:
	.stabn  68,0,3647,.LN3929-Emit_EmitNtFloatConstant		# line 3647, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3930:
	.stabn  68,0,3648,.LN3930-Emit_EmitNtFloatConstant		# line 3648, column 11
	.data
.Lab2611:
 	.ascii	"Rule 195/2745 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2611,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3931:
	.stabn  68,0,3649,.LN3931-Emit_EmitNtFloatConstant		# line 3649, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	104(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3932:
	.stabn  68,0,3650,.LN3932-Emit_EmitNtFloatConstant		# line 3650, column 11
	.data
.Lab2612:
 	.ascii	" FunctionCall ->   FloatConstant\000"
	.text
	pushl	$32
	leal	.Lab2612,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3933:
	.stabn  68,0,3651,.LN3933-Emit_EmitNtFloatConstant		# line 3651, column 11
	call	InOut_WriteLn
.LN3934:
	.stabn  68,0,3652,.LN3934-Emit_EmitNtFloatConstant		# line 3652, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3935:
	.stabn  68,0,3653,.LN3935-Emit_EmitNtFloatConstant		# line 3653, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3936:
	.stabn  68,0,3653,.LN3936-Emit_EmitNtFloatConstant		# line 3653, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3937:
	.stabn  68,0,3654,.LN3937-Emit_EmitNtFloatConstant		# line 3654, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2615
.Lab2614:
.LN3938:
	.stabn  68,0,3654,.LN3938-Emit_EmitNtFloatConstant		# line 3654, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2613
.Lab2615:
.LN3939:
	.stabn  68,0,3654,.LN3939-Emit_EmitNtFloatConstant		# line 3654, column 61
	call	InOut_WriteLn
.Lab2613:
.LN3940:
	.stabn  68,0,3655,.LN3940-Emit_EmitNtFloatConstant		# line 3655, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3941:
	.stabn  68,0,3656,.LN3941-Emit_EmitNtFloatConstant		# line 3656, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2617
	cmpl	$4096,%eax
	jbe	.Lab2616
.Lab2617:
   	call	BoundErr_		
.Lab2616:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2609:
	jmp	.Lab2579
.Lab2584:
.LN3942:
	.stabn  68,0,3660,.LN3942-Emit_EmitNtFloatConstant		# line 3660, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN3943:
	.stabn  68,0,3661,.LN3943-Emit_EmitNtFloatConstant		# line 3661, column 10
	decl	Emit_s + 1536
.LN3944:
	.stabn  68,0,3662,.LN3944-Emit_EmitNtFloatConstant		# line 3662, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2621
	cmpl	$4096,%eax
	jbe	.Lab2620
.Lab2621:
   	call	BoundErr_		
.Lab2620:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2618
.Lab2619:
.LN3945:
	.stabn  68,0,3663,.LN3945-Emit_EmitNtFloatConstant		# line 3663, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2623
	cmpl	$4096,%eax
	jbe	.Lab2622
.Lab2623:
   	call	BoundErr_		
.Lab2622:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2618:
.LN3946:
	.stabn  68,0,3665,.LN3946-Emit_EmitNtFloatConstant		# line 3665, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2624
.Lab2625:
.LN3947:
	.stabn  68,0,3666,.LN3947-Emit_EmitNtFloatConstant		# line 3666, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3948:
	.stabn  68,0,3667,.LN3948-Emit_EmitNtFloatConstant		# line 3667, column 11
	.data
.Lab2626:
 	.ascii	"Rule 196/1892 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2626,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3949:
	.stabn  68,0,3668,.LN3949-Emit_EmitNtFloatConstant		# line 3668, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	104(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3950:
	.stabn  68,0,3669,.LN3950-Emit_EmitNtFloatConstant		# line 3669, column 11
	.data
.Lab2627:
 	.ascii	" Coerce ->   FloatConstant\000"
	.text
	pushl	$26
	leal	.Lab2627,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3951:
	.stabn  68,0,3670,.LN3951-Emit_EmitNtFloatConstant		# line 3670, column 11
	call	InOut_WriteLn
.LN3952:
	.stabn  68,0,3671,.LN3952-Emit_EmitNtFloatConstant		# line 3671, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3953:
	.stabn  68,0,3672,.LN3953-Emit_EmitNtFloatConstant		# line 3672, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3954:
	.stabn  68,0,3672,.LN3954-Emit_EmitNtFloatConstant		# line 3672, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3955:
	.stabn  68,0,3673,.LN3955-Emit_EmitNtFloatConstant		# line 3673, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2630
.Lab2629:
.LN3956:
	.stabn  68,0,3673,.LN3956-Emit_EmitNtFloatConstant		# line 3673, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2628
.Lab2630:
.LN3957:
	.stabn  68,0,3673,.LN3957-Emit_EmitNtFloatConstant		# line 3673, column 61
	call	InOut_WriteLn
.Lab2628:
.LN3958:
	.stabn  68,0,3674,.LN3958-Emit_EmitNtFloatConstant		# line 3674, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3959:
	.stabn  68,0,3675,.LN3959-Emit_EmitNtFloatConstant		# line 3675, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2632
	cmpl	$4096,%eax
	jbe	.Lab2631
.Lab2632:
   	call	BoundErr_		
.Lab2631:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2624:
	jmp	.Lab2579
.Lab2583:
.LN3960:
	.stabn  68,0,3679,.LN3960-Emit_EmitNtFloatConstant		# line 3679, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3961:
	.stabn  68,0,3680,.LN3961-Emit_EmitNtFloatConstant		# line 3680, column 10
	decl	Emit_s + 1536
.LN3962:
	.stabn  68,0,3681,.LN3962-Emit_EmitNtFloatConstant		# line 3681, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2636
	cmpl	$4096,%eax
	jbe	.Lab2635
.Lab2636:
   	call	BoundErr_		
.Lab2635:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2633
.Lab2634:
.LN3963:
	.stabn  68,0,3682,.LN3963-Emit_EmitNtFloatConstant		# line 3682, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2638
	cmpl	$4096,%eax
	jbe	.Lab2637
.Lab2638:
   	call	BoundErr_		
.Lab2637:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2633:
.LN3964:
	.stabn  68,0,3684,.LN3964-Emit_EmitNtFloatConstant		# line 3684, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2639
.Lab2640:
.LN3965:
	.stabn  68,0,3685,.LN3965-Emit_EmitNtFloatConstant		# line 3685, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3966:
	.stabn  68,0,3686,.LN3966-Emit_EmitNtFloatConstant		# line 3686, column 11
	.data
.Lab2641:
 	.ascii	"Rule 197/1887 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2641,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3967:
	.stabn  68,0,3687,.LN3967-Emit_EmitNtFloatConstant		# line 3687, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	104(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3968:
	.stabn  68,0,3688,.LN3968-Emit_EmitNtFloatConstant		# line 3688, column 11
	.data
.Lab2642:
 	.ascii	" Coerce ->   FloatConstant\000"
	.text
	pushl	$26
	leal	.Lab2642,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3969:
	.stabn  68,0,3689,.LN3969-Emit_EmitNtFloatConstant		# line 3689, column 11
	call	InOut_WriteLn
.LN3970:
	.stabn  68,0,3690,.LN3970-Emit_EmitNtFloatConstant		# line 3690, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3971:
	.stabn  68,0,3691,.LN3971-Emit_EmitNtFloatConstant		# line 3691, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3972:
	.stabn  68,0,3691,.LN3972-Emit_EmitNtFloatConstant		# line 3691, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3973:
	.stabn  68,0,3692,.LN3973-Emit_EmitNtFloatConstant		# line 3692, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2645
.Lab2644:
.LN3974:
	.stabn  68,0,3692,.LN3974-Emit_EmitNtFloatConstant		# line 3692, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2643
.Lab2645:
.LN3975:
	.stabn  68,0,3692,.LN3975-Emit_EmitNtFloatConstant		# line 3692, column 61
	call	InOut_WriteLn
.Lab2643:
.LN3976:
	.stabn  68,0,3693,.LN3976-Emit_EmitNtFloatConstant		# line 3693, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3977:
	.stabn  68,0,3694,.LN3977-Emit_EmitNtFloatConstant		# line 3694, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2647
	cmpl	$4096,%eax
	jbe	.Lab2646
.Lab2647:
   	call	BoundErr_		
.Lab2646:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2639:
	jmp	.Lab2579
.Lab2582:
.LN3978:
	.stabn  68,0,3698,.LN3978-Emit_EmitNtFloatConstant		# line 3698, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN3979:
	.stabn  68,0,3699,.LN3979-Emit_EmitNtFloatConstant		# line 3699, column 10
	decl	Emit_s + 1536
.LN3980:
	.stabn  68,0,3700,.LN3980-Emit_EmitNtFloatConstant		# line 3700, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2651
	cmpl	$4096,%eax
	jbe	.Lab2650
.Lab2651:
   	call	BoundErr_		
.Lab2650:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2648
.Lab2649:
.LN3981:
	.stabn  68,0,3701,.LN3981-Emit_EmitNtFloatConstant		# line 3701, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2653
	cmpl	$4096,%eax
	jbe	.Lab2652
.Lab2653:
   	call	BoundErr_		
.Lab2652:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2648:
.LN3982:
	.stabn  68,0,3703,.LN3982-Emit_EmitNtFloatConstant		# line 3703, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2654
.Lab2655:
.LN3983:
	.stabn  68,0,3704,.LN3983-Emit_EmitNtFloatConstant		# line 3704, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3984:
	.stabn  68,0,3705,.LN3984-Emit_EmitNtFloatConstant		# line 3705, column 11
	.data
.Lab2656:
 	.ascii	"Rule 198/1774 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2656,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3985:
	.stabn  68,0,3706,.LN3985-Emit_EmitNtFloatConstant		# line 3706, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	104(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN3986:
	.stabn  68,0,3707,.LN3986-Emit_EmitNtFloatConstant		# line 3707, column 11
	.data
.Lab2657:
 	.ascii	" Float ->   FloatConstant\000"
	.text
	pushl	$25
	leal	.Lab2657,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN3987:
	.stabn  68,0,3708,.LN3987-Emit_EmitNtFloatConstant		# line 3708, column 11
	call	InOut_WriteLn
.LN3988:
	.stabn  68,0,3709,.LN3988-Emit_EmitNtFloatConstant		# line 3709, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3989:
	.stabn  68,0,3710,.LN3989-Emit_EmitNtFloatConstant		# line 3710, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN3990:
	.stabn  68,0,3710,.LN3990-Emit_EmitNtFloatConstant		# line 3710, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN3991:
	.stabn  68,0,3711,.LN3991-Emit_EmitNtFloatConstant		# line 3711, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2660
.Lab2659:
.LN3992:
	.stabn  68,0,3711,.LN3992-Emit_EmitNtFloatConstant		# line 3711, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2658
.Lab2660:
.LN3993:
	.stabn  68,0,3711,.LN3993-Emit_EmitNtFloatConstant		# line 3711, column 61
	call	InOut_WriteLn
.Lab2658:
.LN3994:
	.stabn  68,0,3712,.LN3994-Emit_EmitNtFloatConstant		# line 3712, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN3995:
	.stabn  68,0,3713,.LN3995-Emit_EmitNtFloatConstant		# line 3713, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2662
	cmpl	$4096,%eax
	jbe	.Lab2661
.Lab2662:
   	call	BoundErr_		
.Lab2661:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2654:
	jmp	.Lab2579
.Lab2581:
.LN3996:
	.stabn  68,0,3717,.LN3996-Emit_EmitNtFloatConstant		# line 3717, column 10
	decl	Emit_s + 1536
.LN3997:
	.stabn  68,0,3718,.LN3997-Emit_EmitNtFloatConstant		# line 3718, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2666
	cmpl	$4096,%eax
	jbe	.Lab2665
.Lab2666:
   	call	BoundErr_		
.Lab2665:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2663
.Lab2664:
.LN3998:
	.stabn  68,0,3719,.LN3998-Emit_EmitNtFloatConstant		# line 3719, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2668
	cmpl	$4096,%eax
	jbe	.Lab2667
.Lab2668:
   	call	BoundErr_		
.Lab2667:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2663:
.LN3999:
	.stabn  68,0,3721,.LN3999-Emit_EmitNtFloatConstant		# line 3721, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2669
.Lab2670:
.LN4000:
	.stabn  68,0,3722,.LN4000-Emit_EmitNtFloatConstant		# line 3722, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4001:
	.stabn  68,0,3723,.LN4001-Emit_EmitNtFloatConstant		# line 3723, column 11
	.data
.Lab2671:
 	.ascii	"Rule 199/527 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2671,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4002:
	.stabn  68,0,3724,.LN4002-Emit_EmitNtFloatConstant		# line 3724, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	104(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4003:
	.stabn  68,0,3725,.LN4003-Emit_EmitNtFloatConstant		# line 3725, column 11
	.data
.Lab2672:
 	.ascii	" LongRealConstant ->   FloatConstant\000"
	.text
	pushl	$36
	leal	.Lab2672,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4004:
	.stabn  68,0,3726,.LN4004-Emit_EmitNtFloatConstant		# line 3726, column 11
	call	InOut_WriteLn
.LN4005:
	.stabn  68,0,3727,.LN4005-Emit_EmitNtFloatConstant		# line 3727, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4006:
	.stabn  68,0,3728,.LN4006-Emit_EmitNtFloatConstant		# line 3728, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4007:
	.stabn  68,0,3728,.LN4007-Emit_EmitNtFloatConstant		# line 3728, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4008:
	.stabn  68,0,3729,.LN4008-Emit_EmitNtFloatConstant		# line 3729, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2675
.Lab2674:
.LN4009:
	.stabn  68,0,3729,.LN4009-Emit_EmitNtFloatConstant		# line 3729, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2673
.Lab2675:
.LN4010:
	.stabn  68,0,3729,.LN4010-Emit_EmitNtFloatConstant		# line 3729, column 61
	call	InOut_WriteLn
.Lab2673:
.LN4011:
	.stabn  68,0,3730,.LN4011-Emit_EmitNtFloatConstant		# line 3730, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4012:
	.stabn  68,0,3731,.LN4012-Emit_EmitNtFloatConstant		# line 3731, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2677
	cmpl	$4096,%eax
	jbe	.Lab2676
.Lab2677:
   	call	BoundErr_		
.Lab2676:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2669:
	jmp	.Lab2579
.Lab2580:
.LN4013:
	.stabn  68,0,3735,.LN4013-Emit_EmitNtFloatConstant		# line 3735, column 10
	decl	Emit_s + 1536
.LN4014:
	.stabn  68,0,3736,.LN4014-Emit_EmitNtFloatConstant		# line 3736, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2681
	cmpl	$4096,%eax
	jbe	.Lab2680
.Lab2681:
   	call	BoundErr_		
.Lab2680:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2678
.Lab2679:
.LN4015:
	.stabn  68,0,3737,.LN4015-Emit_EmitNtFloatConstant		# line 3737, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2683
	cmpl	$4096,%eax
	jbe	.Lab2682
.Lab2683:
   	call	BoundErr_		
.Lab2682:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2678:
.LN4016:
	.stabn  68,0,3739,.LN4016-Emit_EmitNtFloatConstant		# line 3739, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2684
.Lab2685:
.LN4017:
	.stabn  68,0,3740,.LN4017-Emit_EmitNtFloatConstant		# line 3740, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4018:
	.stabn  68,0,3741,.LN4018-Emit_EmitNtFloatConstant		# line 3741, column 11
	.data
.Lab2686:
 	.ascii	"Rule 200/523 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2686,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4019:
	.stabn  68,0,3742,.LN4019-Emit_EmitNtFloatConstant		# line 3742, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	104(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4020:
	.stabn  68,0,3743,.LN4020-Emit_EmitNtFloatConstant		# line 3743, column 11
	.data
.Lab2687:
 	.ascii	" RealConstant ->   FloatConstant\000"
	.text
	pushl	$32
	leal	.Lab2687,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4021:
	.stabn  68,0,3744,.LN4021-Emit_EmitNtFloatConstant		# line 3744, column 11
	call	InOut_WriteLn
.LN4022:
	.stabn  68,0,3745,.LN4022-Emit_EmitNtFloatConstant		# line 3745, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4023:
	.stabn  68,0,3746,.LN4023-Emit_EmitNtFloatConstant		# line 3746, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4024:
	.stabn  68,0,3746,.LN4024-Emit_EmitNtFloatConstant		# line 3746, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4025:
	.stabn  68,0,3747,.LN4025-Emit_EmitNtFloatConstant		# line 3747, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2690
.Lab2689:
.LN4026:
	.stabn  68,0,3747,.LN4026-Emit_EmitNtFloatConstant		# line 3747, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2688
.Lab2690:
.LN4027:
	.stabn  68,0,3747,.LN4027-Emit_EmitNtFloatConstant		# line 3747, column 61
	call	InOut_WriteLn
.Lab2688:
.LN4028:
	.stabn  68,0,3748,.LN4028-Emit_EmitNtFloatConstant		# line 3748, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4029:
	.stabn  68,0,3749,.LN4029-Emit_EmitNtFloatConstant		# line 3749, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2692
	cmpl	$4096,%eax
	jbe	.Lab2691
.Lab2692:
   	call	BoundErr_		
.Lab2691:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2684:
	jmp	.Lab2579
.Lab2578:
	call	CaseErr_
.Lab2579:
.LN4030:
	.stabn  68,0,3753,.LN4030-Emit_EmitNtFloatConstant		# line 3753, column 4
	cmpb	$0,IR_s + 133
	je	.Lab2693
.Lab2694:
.LN4031:
	.stabn  68,0,3754,.LN4031-Emit_EmitNtFloatConstant		# line 3754, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4032:
	.stabn  68,0,3755,.LN4032-Emit_EmitNtFloatConstant		# line 3755, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrFloatConstant
	addl	$20, %esp
.LN4033:
	.stabn  68,0,3756,.LN4033-Emit_EmitNtFloatConstant		# line 3756, column 8
	call	InOut_WriteLn
.Lab2693:
.LN4034:
	.stabn  68,0,3757,.LN4034-Emit_EmitNtFloatConstant		# line 3757, column 0
.LBE14:
	leave
	ret
	.Lab2577 = 24
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB14-Emit_EmitNtFloatConstant
	.stabn 224,0,0,.LBE14-Emit_EmitNtFloatConstant
	.stabs "Emit_EmitNtConstant:F16",36,0,0,Emit_EmitNtConstant
	.align 4
Emit_EmitNtConstant:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab2695, %esp
.LN4035:
	.stabn  68,0,3166,.LN4035-Emit_EmitNtConstant		# line 3166, column 1
.LBB15:
.LN4036:
	.stabn  68,0,3167,.LN4036-Emit_EmitNtConstant		# line 3167, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	164(%eax),%eax
	.data
	.align 4
.Lab2721:
	.long	.Lab2720
	.long	.Lab2719
	.long	.Lab2718
	.long	.Lab2717
	.long	.Lab2716
	.long	.Lab2715
	.long	.Lab2714
	.long	.Lab2713
	.long	.Lab2712
	.long	.Lab2711
	.long	.Lab2710
	.long	.Lab2709
	.long	.Lab2708
	.long	.Lab2707
	.long	.Lab2706
	.long	.Lab2705
	.long	.Lab2704
	.long	.Lab2703
	.long	.Lab2702
	.long	.Lab2701
	.long	.Lab2700
	.long	.Lab2699
	.long	.Lab2698
	.text
	subl	$171,%eax
	jb	.Lab2696
	cmpl	$22,%eax
	ja	.Lab2696
	jmp	*.Lab2721(,%eax,4)
.Lab2720:
.LN4037:
	.stabn  68,0,3169,.LN4037-Emit_EmitNtConstant		# line 3169, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN4038:
	.stabn  68,0,3170,.LN4038-Emit_EmitNtConstant		# line 3170, column 10
	decl	Emit_s + 1536
.LN4039:
	.stabn  68,0,3171,.LN4039-Emit_EmitNtConstant		# line 3171, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2725
	cmpl	$4096,%eax
	jbe	.Lab2724
.Lab2725:
   	call	BoundErr_		
.Lab2724:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2722
.Lab2723:
.LN4040:
	.stabn  68,0,3172,.LN4040-Emit_EmitNtConstant		# line 3172, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2727
	cmpl	$4096,%eax
	jbe	.Lab2726
.Lab2727:
   	call	BoundErr_		
.Lab2726:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2722:
.LN4041:
	.stabn  68,0,3174,.LN4041-Emit_EmitNtConstant		# line 3174, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2728
.Lab2729:
.LN4042:
	.stabn  68,0,3175,.LN4042-Emit_EmitNtConstant		# line 3175, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4043:
	.stabn  68,0,3176,.LN4043-Emit_EmitNtConstant		# line 3176, column 11
	.data
.Lab2730:
 	.ascii	"Rule 171/2821 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2730,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4044:
	.stabn  68,0,3177,.LN4044-Emit_EmitNtConstant		# line 3177, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4045:
	.stabn  68,0,3178,.LN4045-Emit_EmitNtConstant		# line 3178, column 11
	.data
.Lab2731:
 	.ascii	" FunctionCall ->   Constant\000"
	.text
	pushl	$27
	leal	.Lab2731,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4046:
	.stabn  68,0,3179,.LN4046-Emit_EmitNtConstant		# line 3179, column 11
	call	InOut_WriteLn
.LN4047:
	.stabn  68,0,3180,.LN4047-Emit_EmitNtConstant		# line 3180, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4048:
	.stabn  68,0,3181,.LN4048-Emit_EmitNtConstant		# line 3181, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4049:
	.stabn  68,0,3181,.LN4049-Emit_EmitNtConstant		# line 3181, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4050:
	.stabn  68,0,3182,.LN4050-Emit_EmitNtConstant		# line 3182, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2734
.Lab2733:
.LN4051:
	.stabn  68,0,3182,.LN4051-Emit_EmitNtConstant		# line 3182, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2732
.Lab2734:
.LN4052:
	.stabn  68,0,3182,.LN4052-Emit_EmitNtConstant		# line 3182, column 61
	call	InOut_WriteLn
.Lab2732:
.LN4053:
	.stabn  68,0,3183,.LN4053-Emit_EmitNtConstant		# line 3183, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4054:
	.stabn  68,0,3184,.LN4054-Emit_EmitNtConstant		# line 3184, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2736
	cmpl	$4096,%eax
	jbe	.Lab2735
.Lab2736:
   	call	BoundErr_		
.Lab2735:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2728:
	jmp	.Lab2697
.Lab2719:
.LN4055:
	.stabn  68,0,3188,.LN4055-Emit_EmitNtConstant		# line 3188, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN4056:
	.stabn  68,0,3189,.LN4056-Emit_EmitNtConstant		# line 3189, column 10
	decl	Emit_s + 1536
.LN4057:
	.stabn  68,0,3190,.LN4057-Emit_EmitNtConstant		# line 3190, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2740
	cmpl	$4096,%eax
	jbe	.Lab2739
.Lab2740:
   	call	BoundErr_		
.Lab2739:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2737
.Lab2738:
.LN4058:
	.stabn  68,0,3191,.LN4058-Emit_EmitNtConstant		# line 3191, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2742
	cmpl	$4096,%eax
	jbe	.Lab2741
.Lab2742:
   	call	BoundErr_		
.Lab2741:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2737:
.LN4059:
	.stabn  68,0,3193,.LN4059-Emit_EmitNtConstant		# line 3193, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2743
.Lab2744:
.LN4060:
	.stabn  68,0,3194,.LN4060-Emit_EmitNtConstant		# line 3194, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4061:
	.stabn  68,0,3195,.LN4061-Emit_EmitNtConstant		# line 3195, column 11
	.data
.Lab2745:
 	.ascii	"Rule 172/2779 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2745,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4062:
	.stabn  68,0,3196,.LN4062-Emit_EmitNtConstant		# line 3196, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4063:
	.stabn  68,0,3197,.LN4063-Emit_EmitNtConstant		# line 3197, column 11
	.data
.Lab2746:
 	.ascii	" FunctionCall ->   Constant\000"
	.text
	pushl	$27
	leal	.Lab2746,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4064:
	.stabn  68,0,3198,.LN4064-Emit_EmitNtConstant		# line 3198, column 11
	call	InOut_WriteLn
.LN4065:
	.stabn  68,0,3199,.LN4065-Emit_EmitNtConstant		# line 3199, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4066:
	.stabn  68,0,3200,.LN4066-Emit_EmitNtConstant		# line 3200, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4067:
	.stabn  68,0,3200,.LN4067-Emit_EmitNtConstant		# line 3200, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4068:
	.stabn  68,0,3201,.LN4068-Emit_EmitNtConstant		# line 3201, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2749
.Lab2748:
.LN4069:
	.stabn  68,0,3201,.LN4069-Emit_EmitNtConstant		# line 3201, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2747
.Lab2749:
.LN4070:
	.stabn  68,0,3201,.LN4070-Emit_EmitNtConstant		# line 3201, column 61
	call	InOut_WriteLn
.Lab2747:
.LN4071:
	.stabn  68,0,3202,.LN4071-Emit_EmitNtConstant		# line 3202, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4072:
	.stabn  68,0,3203,.LN4072-Emit_EmitNtConstant		# line 3203, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2751
	cmpl	$4096,%eax
	jbe	.Lab2750
.Lab2751:
   	call	BoundErr_		
.Lab2750:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2743:
	jmp	.Lab2697
.Lab2718:
.LN4073:
	.stabn  68,0,3207,.LN4073-Emit_EmitNtConstant		# line 3207, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4074:
	.stabn  68,0,3208,.LN4074-Emit_EmitNtConstant		# line 3208, column 10
	decl	Emit_s + 1536
.LN4075:
	.stabn  68,0,3209,.LN4075-Emit_EmitNtConstant		# line 3209, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2755
	cmpl	$4096,%eax
	jbe	.Lab2754
.Lab2755:
   	call	BoundErr_		
.Lab2754:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2752
.Lab2753:
.LN4076:
	.stabn  68,0,3210,.LN4076-Emit_EmitNtConstant		# line 3210, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2757
	cmpl	$4096,%eax
	jbe	.Lab2756
.Lab2757:
   	call	BoundErr_		
.Lab2756:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2752:
.LN4077:
	.stabn  68,0,3212,.LN4077-Emit_EmitNtConstant		# line 3212, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2758
.Lab2759:
.LN4078:
	.stabn  68,0,3213,.LN4078-Emit_EmitNtConstant		# line 3213, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4079:
	.stabn  68,0,3214,.LN4079-Emit_EmitNtConstant		# line 3214, column 11
	.data
.Lab2760:
 	.ascii	"Rule 173/1823 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2760,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4080:
	.stabn  68,0,3215,.LN4080-Emit_EmitNtConstant		# line 3215, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4081:
	.stabn  68,0,3216,.LN4081-Emit_EmitNtConstant		# line 3216, column 11
	.data
.Lab2761:
 	.ascii	" Coerce ->   Constant\000"
	.text
	pushl	$21
	leal	.Lab2761,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4082:
	.stabn  68,0,3217,.LN4082-Emit_EmitNtConstant		# line 3217, column 11
	call	InOut_WriteLn
.LN4083:
	.stabn  68,0,3218,.LN4083-Emit_EmitNtConstant		# line 3218, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4084:
	.stabn  68,0,3219,.LN4084-Emit_EmitNtConstant		# line 3219, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4085:
	.stabn  68,0,3219,.LN4085-Emit_EmitNtConstant		# line 3219, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4086:
	.stabn  68,0,3220,.LN4086-Emit_EmitNtConstant		# line 3220, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2764
.Lab2763:
.LN4087:
	.stabn  68,0,3220,.LN4087-Emit_EmitNtConstant		# line 3220, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2762
.Lab2764:
.LN4088:
	.stabn  68,0,3220,.LN4088-Emit_EmitNtConstant		# line 3220, column 61
	call	InOut_WriteLn
.Lab2762:
.LN4089:
	.stabn  68,0,3221,.LN4089-Emit_EmitNtConstant		# line 3221, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4090:
	.stabn  68,0,3222,.LN4090-Emit_EmitNtConstant		# line 3222, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2766
	cmpl	$4096,%eax
	jbe	.Lab2765
.Lab2766:
   	call	BoundErr_		
.Lab2765:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2758:
	jmp	.Lab2697
.Lab2717:
.LN4091:
	.stabn  68,0,3226,.LN4091-Emit_EmitNtConstant		# line 3226, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtFloatConstant
	addl	$12, %esp
.LN4092:
	.stabn  68,0,3227,.LN4092-Emit_EmitNtConstant		# line 3227, column 10
	decl	Emit_s + 1536
.LN4093:
	.stabn  68,0,3228,.LN4093-Emit_EmitNtConstant		# line 3228, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2770
	cmpl	$4096,%eax
	jbe	.Lab2769
.Lab2770:
   	call	BoundErr_		
.Lab2769:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2767
.Lab2768:
.LN4094:
	.stabn  68,0,3229,.LN4094-Emit_EmitNtConstant		# line 3229, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2772
	cmpl	$4096,%eax
	jbe	.Lab2771
.Lab2772:
   	call	BoundErr_		
.Lab2771:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2767:
.LN4095:
	.stabn  68,0,3231,.LN4095-Emit_EmitNtConstant		# line 3231, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2773
.Lab2774:
.LN4096:
	.stabn  68,0,3232,.LN4096-Emit_EmitNtConstant		# line 3232, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4097:
	.stabn  68,0,3233,.LN4097-Emit_EmitNtConstant		# line 3233, column 11
	.data
.Lab2775:
 	.ascii	"Rule 174/1778 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2775,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4098:
	.stabn  68,0,3234,.LN4098-Emit_EmitNtConstant		# line 3234, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4099:
	.stabn  68,0,3235,.LN4099-Emit_EmitNtConstant		# line 3235, column 11
	.data
.Lab2776:
 	.ascii	" Trunc ->   Constant\000"
	.text
	pushl	$20
	leal	.Lab2776,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4100:
	.stabn  68,0,3236,.LN4100-Emit_EmitNtConstant		# line 3236, column 11
	call	InOut_WriteLn
.LN4101:
	.stabn  68,0,3237,.LN4101-Emit_EmitNtConstant		# line 3237, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4102:
	.stabn  68,0,3238,.LN4102-Emit_EmitNtConstant		# line 3238, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4103:
	.stabn  68,0,3238,.LN4103-Emit_EmitNtConstant		# line 3238, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4104:
	.stabn  68,0,3239,.LN4104-Emit_EmitNtConstant		# line 3239, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2779
.Lab2778:
.LN4105:
	.stabn  68,0,3239,.LN4105-Emit_EmitNtConstant		# line 3239, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2777
.Lab2779:
.LN4106:
	.stabn  68,0,3239,.LN4106-Emit_EmitNtConstant		# line 3239, column 61
	call	InOut_WriteLn
.Lab2777:
.LN4107:
	.stabn  68,0,3240,.LN4107-Emit_EmitNtConstant		# line 3240, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4108:
	.stabn  68,0,3241,.LN4108-Emit_EmitNtConstant		# line 3241, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2781
	cmpl	$4096,%eax
	jbe	.Lab2780
.Lab2781:
   	call	BoundErr_		
.Lab2780:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2773:
	jmp	.Lab2697
.Lab2716:
.LN4109:
	.stabn  68,0,3245,.LN4109-Emit_EmitNtConstant		# line 3245, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4110:
	.stabn  68,0,3246,.LN4110-Emit_EmitNtConstant		# line 3246, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4111:
	.stabn  68,0,3247,.LN4111-Emit_EmitNtConstant		# line 3247, column 10
	decl	Emit_s + 1536
.LN4112:
	.stabn  68,0,3248,.LN4112-Emit_EmitNtConstant		# line 3248, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2785
	cmpl	$4096,%eax
	jbe	.Lab2784
.Lab2785:
   	call	BoundErr_		
.Lab2784:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2782
.Lab2783:
.LN4113:
	.stabn  68,0,3249,.LN4113-Emit_EmitNtConstant		# line 3249, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2787
	cmpl	$4096,%eax
	jbe	.Lab2786
.Lab2787:
   	call	BoundErr_		
.Lab2786:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2782:
.LN4114:
	.stabn  68,0,3251,.LN4114-Emit_EmitNtConstant		# line 3251, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2788
.Lab2789:
.LN4115:
	.stabn  68,0,3252,.LN4115-Emit_EmitNtConstant		# line 3252, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4116:
	.stabn  68,0,3253,.LN4116-Emit_EmitNtConstant		# line 3253, column 11
	.data
.Lab2790:
 	.ascii	"Rule 175/1455 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2790,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4117:
	.stabn  68,0,3254,.LN4117-Emit_EmitNtConstant		# line 3254, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4118:
	.stabn  68,0,3255,.LN4118-Emit_EmitNtConstant		# line 3255, column 11
	.data
.Lab2791:
 	.ascii	" FixedMod ->   Constant\000"
	.text
	pushl	$23
	leal	.Lab2791,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4119:
	.stabn  68,0,3256,.LN4119-Emit_EmitNtConstant		# line 3256, column 11
	call	InOut_WriteLn
.LN4120:
	.stabn  68,0,3257,.LN4120-Emit_EmitNtConstant		# line 3257, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4121:
	.stabn  68,0,3258,.LN4121-Emit_EmitNtConstant		# line 3258, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4122:
	.stabn  68,0,3258,.LN4122-Emit_EmitNtConstant		# line 3258, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4123:
	.stabn  68,0,3259,.LN4123-Emit_EmitNtConstant		# line 3259, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2794
.Lab2793:
.LN4124:
	.stabn  68,0,3259,.LN4124-Emit_EmitNtConstant		# line 3259, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2792
.Lab2794:
.LN4125:
	.stabn  68,0,3259,.LN4125-Emit_EmitNtConstant		# line 3259, column 61
	call	InOut_WriteLn
.Lab2792:
.LN4126:
	.stabn  68,0,3260,.LN4126-Emit_EmitNtConstant		# line 3260, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4127:
	.stabn  68,0,3261,.LN4127-Emit_EmitNtConstant		# line 3261, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2796
	cmpl	$4096,%eax
	jbe	.Lab2795
.Lab2796:
   	call	BoundErr_		
.Lab2795:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2788:
	jmp	.Lab2697
.Lab2715:
.LN4128:
	.stabn  68,0,3265,.LN4128-Emit_EmitNtConstant		# line 3265, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN4129:
	.stabn  68,0,3266,.LN4129-Emit_EmitNtConstant		# line 3266, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN4130:
	.stabn  68,0,3267,.LN4130-Emit_EmitNtConstant		# line 3267, column 10
	decl	Emit_s + 1536
.LN4131:
	.stabn  68,0,3268,.LN4131-Emit_EmitNtConstant		# line 3268, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2800
	cmpl	$4096,%eax
	jbe	.Lab2799
.Lab2800:
   	call	BoundErr_		
.Lab2799:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2797
.Lab2798:
.LN4132:
	.stabn  68,0,3269,.LN4132-Emit_EmitNtConstant		# line 3269, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2802
	cmpl	$4096,%eax
	jbe	.Lab2801
.Lab2802:
   	call	BoundErr_		
.Lab2801:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2797:
.LN4133:
	.stabn  68,0,3271,.LN4133-Emit_EmitNtConstant		# line 3271, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2803
.Lab2804:
.LN4134:
	.stabn  68,0,3272,.LN4134-Emit_EmitNtConstant		# line 3272, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4135:
	.stabn  68,0,3273,.LN4135-Emit_EmitNtConstant		# line 3273, column 11
	.data
.Lab2805:
 	.ascii	"Rule 176/1411 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2805,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4136:
	.stabn  68,0,3274,.LN4136-Emit_EmitNtConstant		# line 3274, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4137:
	.stabn  68,0,3275,.LN4137-Emit_EmitNtConstant		# line 3275, column 11
	.data
.Lab2806:
 	.ascii	" FixedDiv ->   Constant\000"
	.text
	pushl	$23
	leal	.Lab2806,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4138:
	.stabn  68,0,3276,.LN4138-Emit_EmitNtConstant		# line 3276, column 11
	call	InOut_WriteLn
.LN4139:
	.stabn  68,0,3277,.LN4139-Emit_EmitNtConstant		# line 3277, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4140:
	.stabn  68,0,3278,.LN4140-Emit_EmitNtConstant		# line 3278, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4141:
	.stabn  68,0,3278,.LN4141-Emit_EmitNtConstant		# line 3278, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4142:
	.stabn  68,0,3279,.LN4142-Emit_EmitNtConstant		# line 3279, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2809
.Lab2808:
.LN4143:
	.stabn  68,0,3279,.LN4143-Emit_EmitNtConstant		# line 3279, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2807
.Lab2809:
.LN4144:
	.stabn  68,0,3279,.LN4144-Emit_EmitNtConstant		# line 3279, column 61
	call	InOut_WriteLn
.Lab2807:
.LN4145:
	.stabn  68,0,3280,.LN4145-Emit_EmitNtConstant		# line 3280, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4146:
	.stabn  68,0,3281,.LN4146-Emit_EmitNtConstant		# line 3281, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2811
	cmpl	$4096,%eax
	jbe	.Lab2810
.Lab2811:
   	call	BoundErr_		
.Lab2810:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2803:
	jmp	.Lab2697
.Lab2714:
.LN4147:
	.stabn  68,0,3285,.LN4147-Emit_EmitNtConstant		# line 3285, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4148:
	.stabn  68,0,3286,.LN4148-Emit_EmitNtConstant		# line 3286, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4149:
	.stabn  68,0,3287,.LN4149-Emit_EmitNtConstant		# line 3287, column 10
	decl	Emit_s + 1536
.LN4150:
	.stabn  68,0,3288,.LN4150-Emit_EmitNtConstant		# line 3288, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2815
	cmpl	$4096,%eax
	jbe	.Lab2814
.Lab2815:
   	call	BoundErr_		
.Lab2814:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2812
.Lab2813:
.LN4151:
	.stabn  68,0,3289,.LN4151-Emit_EmitNtConstant		# line 3289, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2817
	cmpl	$4096,%eax
	jbe	.Lab2816
.Lab2817:
   	call	BoundErr_		
.Lab2816:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2812:
.LN4152:
	.stabn  68,0,3291,.LN4152-Emit_EmitNtConstant		# line 3291, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2818
.Lab2819:
.LN4153:
	.stabn  68,0,3292,.LN4153-Emit_EmitNtConstant		# line 3292, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4154:
	.stabn  68,0,3293,.LN4154-Emit_EmitNtConstant		# line 3293, column 11
	.data
.Lab2820:
 	.ascii	"Rule 177/1338 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2820,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4155:
	.stabn  68,0,3294,.LN4155-Emit_EmitNtConstant		# line 3294, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4156:
	.stabn  68,0,3295,.LN4156-Emit_EmitNtConstant		# line 3295, column 11
	.data
.Lab2821:
 	.ascii	" FixedDiv ->   Constant\000"
	.text
	pushl	$23
	leal	.Lab2821,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4157:
	.stabn  68,0,3296,.LN4157-Emit_EmitNtConstant		# line 3296, column 11
	call	InOut_WriteLn
.LN4158:
	.stabn  68,0,3297,.LN4158-Emit_EmitNtConstant		# line 3297, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4159:
	.stabn  68,0,3298,.LN4159-Emit_EmitNtConstant		# line 3298, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4160:
	.stabn  68,0,3298,.LN4160-Emit_EmitNtConstant		# line 3298, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4161:
	.stabn  68,0,3299,.LN4161-Emit_EmitNtConstant		# line 3299, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2824
.Lab2823:
.LN4162:
	.stabn  68,0,3299,.LN4162-Emit_EmitNtConstant		# line 3299, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2822
.Lab2824:
.LN4163:
	.stabn  68,0,3299,.LN4163-Emit_EmitNtConstant		# line 3299, column 61
	call	InOut_WriteLn
.Lab2822:
.LN4164:
	.stabn  68,0,3300,.LN4164-Emit_EmitNtConstant		# line 3300, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4165:
	.stabn  68,0,3301,.LN4165-Emit_EmitNtConstant		# line 3301, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2826
	cmpl	$4096,%eax
	jbe	.Lab2825
.Lab2826:
   	call	BoundErr_		
.Lab2825:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2818:
	jmp	.Lab2697
.Lab2713:
.LN4166:
	.stabn  68,0,3305,.LN4166-Emit_EmitNtConstant		# line 3305, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN4167:
	.stabn  68,0,3306,.LN4167-Emit_EmitNtConstant		# line 3306, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4168:
	.stabn  68,0,3307,.LN4168-Emit_EmitNtConstant		# line 3307, column 10
	decl	Emit_s + 1536
.LN4169:
	.stabn  68,0,3308,.LN4169-Emit_EmitNtConstant		# line 3308, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2830
	cmpl	$4096,%eax
	jbe	.Lab2829
.Lab2830:
   	call	BoundErr_		
.Lab2829:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2827
.Lab2828:
.LN4170:
	.stabn  68,0,3309,.LN4170-Emit_EmitNtConstant		# line 3309, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2832
	cmpl	$4096,%eax
	jbe	.Lab2831
.Lab2832:
   	call	BoundErr_		
.Lab2831:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2827:
.LN4171:
	.stabn  68,0,3311,.LN4171-Emit_EmitNtConstant		# line 3311, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2833
.Lab2834:
.LN4172:
	.stabn  68,0,3312,.LN4172-Emit_EmitNtConstant		# line 3312, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4173:
	.stabn  68,0,3313,.LN4173-Emit_EmitNtConstant		# line 3313, column 11
	.data
.Lab2835:
 	.ascii	"Rule 178/1135 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2835,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4174:
	.stabn  68,0,3314,.LN4174-Emit_EmitNtConstant		# line 3314, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4175:
	.stabn  68,0,3315,.LN4175-Emit_EmitNtConstant		# line 3315, column 11
	.data
.Lab2836:
 	.ascii	" FixedMult ->   Constant\000"
	.text
	pushl	$24
	leal	.Lab2836,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4176:
	.stabn  68,0,3316,.LN4176-Emit_EmitNtConstant		# line 3316, column 11
	call	InOut_WriteLn
.LN4177:
	.stabn  68,0,3317,.LN4177-Emit_EmitNtConstant		# line 3317, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4178:
	.stabn  68,0,3318,.LN4178-Emit_EmitNtConstant		# line 3318, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4179:
	.stabn  68,0,3318,.LN4179-Emit_EmitNtConstant		# line 3318, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4180:
	.stabn  68,0,3319,.LN4180-Emit_EmitNtConstant		# line 3319, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2839
.Lab2838:
.LN4181:
	.stabn  68,0,3319,.LN4181-Emit_EmitNtConstant		# line 3319, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2837
.Lab2839:
.LN4182:
	.stabn  68,0,3319,.LN4182-Emit_EmitNtConstant		# line 3319, column 61
	call	InOut_WriteLn
.Lab2837:
.LN4183:
	.stabn  68,0,3320,.LN4183-Emit_EmitNtConstant		# line 3320, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4184:
	.stabn  68,0,3321,.LN4184-Emit_EmitNtConstant		# line 3321, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2841
	cmpl	$4096,%eax
	jbe	.Lab2840
.Lab2841:
   	call	BoundErr_		
.Lab2840:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2833:
	jmp	.Lab2697
.Lab2712:
.LN4185:
	.stabn  68,0,3325,.LN4185-Emit_EmitNtConstant		# line 3325, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4186:
	.stabn  68,0,3326,.LN4186-Emit_EmitNtConstant		# line 3326, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN4187:
	.stabn  68,0,3327,.LN4187-Emit_EmitNtConstant		# line 3327, column 10
	decl	Emit_s + 1536
.LN4188:
	.stabn  68,0,3328,.LN4188-Emit_EmitNtConstant		# line 3328, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2845
	cmpl	$4096,%eax
	jbe	.Lab2844
.Lab2845:
   	call	BoundErr_		
.Lab2844:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2842
.Lab2843:
.LN4189:
	.stabn  68,0,3329,.LN4189-Emit_EmitNtConstant		# line 3329, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2847
	cmpl	$4096,%eax
	jbe	.Lab2846
.Lab2847:
   	call	BoundErr_		
.Lab2846:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2842:
.LN4190:
	.stabn  68,0,3331,.LN4190-Emit_EmitNtConstant		# line 3331, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2848
.Lab2849:
.LN4191:
	.stabn  68,0,3332,.LN4191-Emit_EmitNtConstant		# line 3332, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4192:
	.stabn  68,0,3333,.LN4192-Emit_EmitNtConstant		# line 3333, column 11
	.data
.Lab2850:
 	.ascii	"Rule 179/1135 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2850,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4193:
	.stabn  68,0,3334,.LN4193-Emit_EmitNtConstant		# line 3334, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4194:
	.stabn  68,0,3335,.LN4194-Emit_EmitNtConstant		# line 3335, column 11
	.data
.Lab2851:
 	.ascii	" FixedMult ->   Constant\000"
	.text
	pushl	$24
	leal	.Lab2851,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4195:
	.stabn  68,0,3336,.LN4195-Emit_EmitNtConstant		# line 3336, column 11
	call	InOut_WriteLn
.LN4196:
	.stabn  68,0,3337,.LN4196-Emit_EmitNtConstant		# line 3337, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4197:
	.stabn  68,0,3338,.LN4197-Emit_EmitNtConstant		# line 3338, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4198:
	.stabn  68,0,3338,.LN4198-Emit_EmitNtConstant		# line 3338, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4199:
	.stabn  68,0,3339,.LN4199-Emit_EmitNtConstant		# line 3339, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2854
.Lab2853:
.LN4200:
	.stabn  68,0,3339,.LN4200-Emit_EmitNtConstant		# line 3339, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2852
.Lab2854:
.LN4201:
	.stabn  68,0,3339,.LN4201-Emit_EmitNtConstant		# line 3339, column 61
	call	InOut_WriteLn
.Lab2852:
.LN4202:
	.stabn  68,0,3340,.LN4202-Emit_EmitNtConstant		# line 3340, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4203:
	.stabn  68,0,3341,.LN4203-Emit_EmitNtConstant		# line 3341, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2856
	cmpl	$4096,%eax
	jbe	.Lab2855
.Lab2856:
   	call	BoundErr_		
.Lab2855:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2848:
	jmp	.Lab2697
.Lab2711:
.LN4204:
	.stabn  68,0,3345,.LN4204-Emit_EmitNtConstant		# line 3345, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4205:
	.stabn  68,0,3346,.LN4205-Emit_EmitNtConstant		# line 3346, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4206:
	.stabn  68,0,3347,.LN4206-Emit_EmitNtConstant		# line 3347, column 10
	decl	Emit_s + 1536
.LN4207:
	.stabn  68,0,3348,.LN4207-Emit_EmitNtConstant		# line 3348, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2860
	cmpl	$4096,%eax
	jbe	.Lab2859
.Lab2860:
   	call	BoundErr_		
.Lab2859:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2857
.Lab2858:
.LN4208:
	.stabn  68,0,3349,.LN4208-Emit_EmitNtConstant		# line 3349, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2862
	cmpl	$4096,%eax
	jbe	.Lab2861
.Lab2862:
   	call	BoundErr_		
.Lab2861:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2857:
.LN4209:
	.stabn  68,0,3351,.LN4209-Emit_EmitNtConstant		# line 3351, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2863
.Lab2864:
.LN4210:
	.stabn  68,0,3352,.LN4210-Emit_EmitNtConstant		# line 3352, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4211:
	.stabn  68,0,3353,.LN4211-Emit_EmitNtConstant		# line 3353, column 11
	.data
.Lab2865:
 	.ascii	"Rule 180/1131 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2865,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4212:
	.stabn  68,0,3354,.LN4212-Emit_EmitNtConstant		# line 3354, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4213:
	.stabn  68,0,3355,.LN4213-Emit_EmitNtConstant		# line 3355, column 11
	.data
.Lab2866:
 	.ascii	" FixedMult ->   Constant\000"
	.text
	pushl	$24
	leal	.Lab2866,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4214:
	.stabn  68,0,3356,.LN4214-Emit_EmitNtConstant		# line 3356, column 11
	call	InOut_WriteLn
.LN4215:
	.stabn  68,0,3357,.LN4215-Emit_EmitNtConstant		# line 3357, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4216:
	.stabn  68,0,3358,.LN4216-Emit_EmitNtConstant		# line 3358, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4217:
	.stabn  68,0,3358,.LN4217-Emit_EmitNtConstant		# line 3358, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4218:
	.stabn  68,0,3359,.LN4218-Emit_EmitNtConstant		# line 3359, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2869
.Lab2868:
.LN4219:
	.stabn  68,0,3359,.LN4219-Emit_EmitNtConstant		# line 3359, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2867
.Lab2869:
.LN4220:
	.stabn  68,0,3359,.LN4220-Emit_EmitNtConstant		# line 3359, column 61
	call	InOut_WriteLn
.Lab2867:
.LN4221:
	.stabn  68,0,3360,.LN4221-Emit_EmitNtConstant		# line 3360, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4222:
	.stabn  68,0,3361,.LN4222-Emit_EmitNtConstant		# line 3361, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2871
	cmpl	$4096,%eax
	jbe	.Lab2870
.Lab2871:
   	call	BoundErr_		
.Lab2870:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2863:
	jmp	.Lab2697
.Lab2710:
.LN4223:
	.stabn  68,0,3365,.LN4223-Emit_EmitNtConstant		# line 3365, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN4224:
	.stabn  68,0,3366,.LN4224-Emit_EmitNtConstant		# line 3366, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN4225:
	.stabn  68,0,3367,.LN4225-Emit_EmitNtConstant		# line 3367, column 10
	decl	Emit_s + 1536
.LN4226:
	.stabn  68,0,3368,.LN4226-Emit_EmitNtConstant		# line 3368, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2875
	cmpl	$4096,%eax
	jbe	.Lab2874
.Lab2875:
   	call	BoundErr_		
.Lab2874:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2872
.Lab2873:
.LN4227:
	.stabn  68,0,3369,.LN4227-Emit_EmitNtConstant		# line 3369, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2877
	cmpl	$4096,%eax
	jbe	.Lab2876
.Lab2877:
   	call	BoundErr_		
.Lab2876:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2872:
.LN4228:
	.stabn  68,0,3371,.LN4228-Emit_EmitNtConstant		# line 3371, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2878
.Lab2879:
.LN4229:
	.stabn  68,0,3372,.LN4229-Emit_EmitNtConstant		# line 3372, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4230:
	.stabn  68,0,3373,.LN4230-Emit_EmitNtConstant		# line 3373, column 11
	.data
.Lab2880:
 	.ascii	"Rule 181/1123 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2880,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4231:
	.stabn  68,0,3374,.LN4231-Emit_EmitNtConstant		# line 3374, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4232:
	.stabn  68,0,3375,.LN4232-Emit_EmitNtConstant		# line 3375, column 11
	.data
.Lab2881:
 	.ascii	" FixedMinus ->   Constant\000"
	.text
	pushl	$25
	leal	.Lab2881,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4233:
	.stabn  68,0,3376,.LN4233-Emit_EmitNtConstant		# line 3376, column 11
	call	InOut_WriteLn
.LN4234:
	.stabn  68,0,3377,.LN4234-Emit_EmitNtConstant		# line 3377, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4235:
	.stabn  68,0,3378,.LN4235-Emit_EmitNtConstant		# line 3378, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4236:
	.stabn  68,0,3378,.LN4236-Emit_EmitNtConstant		# line 3378, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4237:
	.stabn  68,0,3379,.LN4237-Emit_EmitNtConstant		# line 3379, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2884
.Lab2883:
.LN4238:
	.stabn  68,0,3379,.LN4238-Emit_EmitNtConstant		# line 3379, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2882
.Lab2884:
.LN4239:
	.stabn  68,0,3379,.LN4239-Emit_EmitNtConstant		# line 3379, column 61
	call	InOut_WriteLn
.Lab2882:
.LN4240:
	.stabn  68,0,3380,.LN4240-Emit_EmitNtConstant		# line 3380, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4241:
	.stabn  68,0,3381,.LN4241-Emit_EmitNtConstant		# line 3381, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2886
	cmpl	$4096,%eax
	jbe	.Lab2885
.Lab2886:
   	call	BoundErr_		
.Lab2885:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2878:
	jmp	.Lab2697
.Lab2709:
.LN4242:
	.stabn  68,0,3385,.LN4242-Emit_EmitNtConstant		# line 3385, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4243:
	.stabn  68,0,3386,.LN4243-Emit_EmitNtConstant		# line 3386, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4244:
	.stabn  68,0,3387,.LN4244-Emit_EmitNtConstant		# line 3387, column 10
	decl	Emit_s + 1536
.LN4245:
	.stabn  68,0,3388,.LN4245-Emit_EmitNtConstant		# line 3388, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2890
	cmpl	$4096,%eax
	jbe	.Lab2889
.Lab2890:
   	call	BoundErr_		
.Lab2889:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2887
.Lab2888:
.LN4246:
	.stabn  68,0,3389,.LN4246-Emit_EmitNtConstant		# line 3389, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2892
	cmpl	$4096,%eax
	jbe	.Lab2891
.Lab2892:
   	call	BoundErr_		
.Lab2891:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2887:
.LN4247:
	.stabn  68,0,3391,.LN4247-Emit_EmitNtConstant		# line 3391, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2893
.Lab2894:
.LN4248:
	.stabn  68,0,3392,.LN4248-Emit_EmitNtConstant		# line 3392, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4249:
	.stabn  68,0,3393,.LN4249-Emit_EmitNtConstant		# line 3393, column 11
	.data
.Lab2895:
 	.ascii	"Rule 182/1041 Cost=\000"
	.text
	pushl	$19
	leal	.Lab2895,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4250:
	.stabn  68,0,3394,.LN4250-Emit_EmitNtConstant		# line 3394, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4251:
	.stabn  68,0,3395,.LN4251-Emit_EmitNtConstant		# line 3395, column 11
	.data
.Lab2896:
 	.ascii	" FixedMinus ->   Constant\000"
	.text
	pushl	$25
	leal	.Lab2896,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4252:
	.stabn  68,0,3396,.LN4252-Emit_EmitNtConstant		# line 3396, column 11
	call	InOut_WriteLn
.LN4253:
	.stabn  68,0,3397,.LN4253-Emit_EmitNtConstant		# line 3397, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4254:
	.stabn  68,0,3398,.LN4254-Emit_EmitNtConstant		# line 3398, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4255:
	.stabn  68,0,3398,.LN4255-Emit_EmitNtConstant		# line 3398, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4256:
	.stabn  68,0,3399,.LN4256-Emit_EmitNtConstant		# line 3399, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2899
.Lab2898:
.LN4257:
	.stabn  68,0,3399,.LN4257-Emit_EmitNtConstant		# line 3399, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2897
.Lab2899:
.LN4258:
	.stabn  68,0,3399,.LN4258-Emit_EmitNtConstant		# line 3399, column 61
	call	InOut_WriteLn
.Lab2897:
.LN4259:
	.stabn  68,0,3400,.LN4259-Emit_EmitNtConstant		# line 3400, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4260:
	.stabn  68,0,3401,.LN4260-Emit_EmitNtConstant		# line 3401, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2901
	cmpl	$4096,%eax
	jbe	.Lab2900
.Lab2901:
   	call	BoundErr_		
.Lab2900:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2893:
	jmp	.Lab2697
.Lab2708:
.LN4261:
	.stabn  68,0,3405,.LN4261-Emit_EmitNtConstant		# line 3405, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4262:
	.stabn  68,0,3406,.LN4262-Emit_EmitNtConstant		# line 3406, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4263:
	.stabn  68,0,3407,.LN4263-Emit_EmitNtConstant		# line 3407, column 10
	decl	Emit_s + 1536
.LN4264:
	.stabn  68,0,3408,.LN4264-Emit_EmitNtConstant		# line 3408, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2905
	cmpl	$4096,%eax
	jbe	.Lab2904
.Lab2905:
   	call	BoundErr_		
.Lab2904:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2902
.Lab2903:
.LN4265:
	.stabn  68,0,3409,.LN4265-Emit_EmitNtConstant		# line 3409, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2907
	cmpl	$4096,%eax
	jbe	.Lab2906
.Lab2907:
   	call	BoundErr_		
.Lab2906:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2902:
.LN4266:
	.stabn  68,0,3411,.LN4266-Emit_EmitNtConstant		# line 3411, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2908
.Lab2909:
.LN4267:
	.stabn  68,0,3412,.LN4267-Emit_EmitNtConstant		# line 3412, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4268:
	.stabn  68,0,3413,.LN4268-Emit_EmitNtConstant		# line 3413, column 11
	.data
.Lab2910:
 	.ascii	"Rule 183/935 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2910,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4269:
	.stabn  68,0,3414,.LN4269-Emit_EmitNtConstant		# line 3414, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4270:
	.stabn  68,0,3415,.LN4270-Emit_EmitNtConstant		# line 3415, column 11
	.data
.Lab2911:
 	.ascii	" FixedPlus ->   Constant\000"
	.text
	pushl	$24
	leal	.Lab2911,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4271:
	.stabn  68,0,3416,.LN4271-Emit_EmitNtConstant		# line 3416, column 11
	call	InOut_WriteLn
.LN4272:
	.stabn  68,0,3417,.LN4272-Emit_EmitNtConstant		# line 3417, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4273:
	.stabn  68,0,3418,.LN4273-Emit_EmitNtConstant		# line 3418, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4274:
	.stabn  68,0,3418,.LN4274-Emit_EmitNtConstant		# line 3418, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4275:
	.stabn  68,0,3419,.LN4275-Emit_EmitNtConstant		# line 3419, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2914
.Lab2913:
.LN4276:
	.stabn  68,0,3419,.LN4276-Emit_EmitNtConstant		# line 3419, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2912
.Lab2914:
.LN4277:
	.stabn  68,0,3419,.LN4277-Emit_EmitNtConstant		# line 3419, column 61
	call	InOut_WriteLn
.Lab2912:
.LN4278:
	.stabn  68,0,3420,.LN4278-Emit_EmitNtConstant		# line 3420, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4279:
	.stabn  68,0,3421,.LN4279-Emit_EmitNtConstant		# line 3421, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2916
	cmpl	$4096,%eax
	jbe	.Lab2915
.Lab2916:
   	call	BoundErr_		
.Lab2915:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2908:
	jmp	.Lab2697
.Lab2707:
.LN4280:
	.stabn  68,0,3425,.LN4280-Emit_EmitNtConstant		# line 3425, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4281:
	.stabn  68,0,3426,.LN4281-Emit_EmitNtConstant		# line 3426, column 10
	decl	Emit_s + 1536
.LN4282:
	.stabn  68,0,3427,.LN4282-Emit_EmitNtConstant		# line 3427, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2920
	cmpl	$4096,%eax
	jbe	.Lab2919
.Lab2920:
   	call	BoundErr_		
.Lab2919:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2917
.Lab2918:
.LN4283:
	.stabn  68,0,3428,.LN4283-Emit_EmitNtConstant		# line 3428, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2922
	cmpl	$4096,%eax
	jbe	.Lab2921
.Lab2922:
   	call	BoundErr_		
.Lab2921:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2917:
.LN4284:
	.stabn  68,0,3430,.LN4284-Emit_EmitNtConstant		# line 3430, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2923
.Lab2924:
.LN4285:
	.stabn  68,0,3431,.LN4285-Emit_EmitNtConstant		# line 3431, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4286:
	.stabn  68,0,3432,.LN4286-Emit_EmitNtConstant		# line 3432, column 11
	.data
.Lab2925:
 	.ascii	"Rule 184/910 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2925,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4287:
	.stabn  68,0,3433,.LN4287-Emit_EmitNtConstant		# line 3433, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4288:
	.stabn  68,0,3434,.LN4288-Emit_EmitNtConstant		# line 3434, column 11
	.data
.Lab2926:
 	.ascii	" FixedAbs ->   Constant\000"
	.text
	pushl	$23
	leal	.Lab2926,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4289:
	.stabn  68,0,3435,.LN4289-Emit_EmitNtConstant		# line 3435, column 11
	call	InOut_WriteLn
.LN4290:
	.stabn  68,0,3436,.LN4290-Emit_EmitNtConstant		# line 3436, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4291:
	.stabn  68,0,3437,.LN4291-Emit_EmitNtConstant		# line 3437, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4292:
	.stabn  68,0,3437,.LN4292-Emit_EmitNtConstant		# line 3437, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4293:
	.stabn  68,0,3438,.LN4293-Emit_EmitNtConstant		# line 3438, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2929
.Lab2928:
.LN4294:
	.stabn  68,0,3438,.LN4294-Emit_EmitNtConstant		# line 3438, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2927
.Lab2929:
.LN4295:
	.stabn  68,0,3438,.LN4295-Emit_EmitNtConstant		# line 3438, column 61
	call	InOut_WriteLn
.Lab2927:
.LN4296:
	.stabn  68,0,3439,.LN4296-Emit_EmitNtConstant		# line 3439, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4297:
	.stabn  68,0,3440,.LN4297-Emit_EmitNtConstant		# line 3440, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2931
	cmpl	$4096,%eax
	jbe	.Lab2930
.Lab2931:
   	call	BoundErr_		
.Lab2930:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2923:
	jmp	.Lab2697
.Lab2706:
.LN4298:
	.stabn  68,0,3444,.LN4298-Emit_EmitNtConstant		# line 3444, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN4299:
	.stabn  68,0,3445,.LN4299-Emit_EmitNtConstant		# line 3445, column 10
	decl	Emit_s + 1536
.LN4300:
	.stabn  68,0,3446,.LN4300-Emit_EmitNtConstant		# line 3446, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2935
	cmpl	$4096,%eax
	jbe	.Lab2934
.Lab2935:
   	call	BoundErr_		
.Lab2934:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2932
.Lab2933:
.LN4301:
	.stabn  68,0,3447,.LN4301-Emit_EmitNtConstant		# line 3447, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2937
	cmpl	$4096,%eax
	jbe	.Lab2936
.Lab2937:
   	call	BoundErr_		
.Lab2936:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2932:
.LN4302:
	.stabn  68,0,3449,.LN4302-Emit_EmitNtConstant		# line 3449, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2938
.Lab2939:
.LN4303:
	.stabn  68,0,3450,.LN4303-Emit_EmitNtConstant		# line 3450, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4304:
	.stabn  68,0,3451,.LN4304-Emit_EmitNtConstant		# line 3451, column 11
	.data
.Lab2940:
 	.ascii	"Rule 185/898 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2940,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4305:
	.stabn  68,0,3452,.LN4305-Emit_EmitNtConstant		# line 3452, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4306:
	.stabn  68,0,3453,.LN4306-Emit_EmitNtConstant		# line 3453, column 11
	.data
.Lab2941:
 	.ascii	" FixedNegate ->   Constant\000"
	.text
	pushl	$26
	leal	.Lab2941,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4307:
	.stabn  68,0,3454,.LN4307-Emit_EmitNtConstant		# line 3454, column 11
	call	InOut_WriteLn
.LN4308:
	.stabn  68,0,3455,.LN4308-Emit_EmitNtConstant		# line 3455, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4309:
	.stabn  68,0,3456,.LN4309-Emit_EmitNtConstant		# line 3456, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4310:
	.stabn  68,0,3456,.LN4310-Emit_EmitNtConstant		# line 3456, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4311:
	.stabn  68,0,3457,.LN4311-Emit_EmitNtConstant		# line 3457, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2944
.Lab2943:
.LN4312:
	.stabn  68,0,3457,.LN4312-Emit_EmitNtConstant		# line 3457, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2942
.Lab2944:
.LN4313:
	.stabn  68,0,3457,.LN4313-Emit_EmitNtConstant		# line 3457, column 61
	call	InOut_WriteLn
.Lab2942:
.LN4314:
	.stabn  68,0,3458,.LN4314-Emit_EmitNtConstant		# line 3458, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4315:
	.stabn  68,0,3459,.LN4315-Emit_EmitNtConstant		# line 3459, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2946
	cmpl	$4096,%eax
	jbe	.Lab2945
.Lab2946:
   	call	BoundErr_		
.Lab2945:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2938:
	jmp	.Lab2697
.Lab2705:
.LN4316:
	.stabn  68,0,3463,.LN4316-Emit_EmitNtConstant		# line 3463, column 10
	decl	Emit_s + 1536
.LN4317:
	.stabn  68,0,3464,.LN4317-Emit_EmitNtConstant		# line 3464, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2950
	cmpl	$4096,%eax
	jbe	.Lab2949
.Lab2950:
   	call	BoundErr_		
.Lab2949:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2947
.Lab2948:
.LN4318:
	.stabn  68,0,3465,.LN4318-Emit_EmitNtConstant		# line 3465, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2952
	cmpl	$4096,%eax
	jbe	.Lab2951
.Lab2952:
   	call	BoundErr_		
.Lab2951:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2947:
.LN4319:
	.stabn  68,0,3467,.LN4319-Emit_EmitNtConstant		# line 3467, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2953
.Lab2954:
.LN4320:
	.stabn  68,0,3468,.LN4320-Emit_EmitNtConstant		# line 3468, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4321:
	.stabn  68,0,3469,.LN4321-Emit_EmitNtConstant		# line 3469, column 11
	.data
.Lab2955:
 	.ascii	"Rule 186/544 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2955,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4322:
	.stabn  68,0,3470,.LN4322-Emit_EmitNtConstant		# line 3470, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4323:
	.stabn  68,0,3471,.LN4323-Emit_EmitNtConstant		# line 3471, column 11
	.data
.Lab2956:
 	.ascii	" NilConstant ->   Constant\000"
	.text
	pushl	$26
	leal	.Lab2956,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4324:
	.stabn  68,0,3472,.LN4324-Emit_EmitNtConstant		# line 3472, column 11
	call	InOut_WriteLn
.LN4325:
	.stabn  68,0,3473,.LN4325-Emit_EmitNtConstant		# line 3473, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4326:
	.stabn  68,0,3474,.LN4326-Emit_EmitNtConstant		# line 3474, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4327:
	.stabn  68,0,3474,.LN4327-Emit_EmitNtConstant		# line 3474, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4328:
	.stabn  68,0,3475,.LN4328-Emit_EmitNtConstant		# line 3475, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2959
.Lab2958:
.LN4329:
	.stabn  68,0,3475,.LN4329-Emit_EmitNtConstant		# line 3475, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2957
.Lab2959:
.LN4330:
	.stabn  68,0,3475,.LN4330-Emit_EmitNtConstant		# line 3475, column 61
	call	InOut_WriteLn
.Lab2957:
.LN4331:
	.stabn  68,0,3476,.LN4331-Emit_EmitNtConstant		# line 3476, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4332:
	.stabn  68,0,3477,.LN4332-Emit_EmitNtConstant		# line 3477, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2961
	cmpl	$4096,%eax
	jbe	.Lab2960
.Lab2961:
   	call	BoundErr_		
.Lab2960:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2953:
	jmp	.Lab2697
.Lab2704:
.LN4333:
	.stabn  68,0,3481,.LN4333-Emit_EmitNtConstant		# line 3481, column 10
	decl	Emit_s + 1536
.LN4334:
	.stabn  68,0,3482,.LN4334-Emit_EmitNtConstant		# line 3482, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2965
	cmpl	$4096,%eax
	jbe	.Lab2964
.Lab2965:
   	call	BoundErr_		
.Lab2964:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2962
.Lab2963:
.LN4335:
	.stabn  68,0,3483,.LN4335-Emit_EmitNtConstant		# line 3483, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2967
	cmpl	$4096,%eax
	jbe	.Lab2966
.Lab2967:
   	call	BoundErr_		
.Lab2966:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2962:
.LN4336:
	.stabn  68,0,3485,.LN4336-Emit_EmitNtConstant		# line 3485, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2968
.Lab2969:
.LN4337:
	.stabn  68,0,3486,.LN4337-Emit_EmitNtConstant		# line 3486, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4338:
	.stabn  68,0,3487,.LN4338-Emit_EmitNtConstant		# line 3487, column 11
	.data
.Lab2970:
 	.ascii	"Rule 187/540 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2970,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4339:
	.stabn  68,0,3488,.LN4339-Emit_EmitNtConstant		# line 3488, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4340:
	.stabn  68,0,3489,.LN4340-Emit_EmitNtConstant		# line 3489, column 11
	.data
.Lab2971:
 	.ascii	" SetConstant ->   Constant\000"
	.text
	pushl	$26
	leal	.Lab2971,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4341:
	.stabn  68,0,3490,.LN4341-Emit_EmitNtConstant		# line 3490, column 11
	call	InOut_WriteLn
.LN4342:
	.stabn  68,0,3491,.LN4342-Emit_EmitNtConstant		# line 3491, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4343:
	.stabn  68,0,3492,.LN4343-Emit_EmitNtConstant		# line 3492, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4344:
	.stabn  68,0,3492,.LN4344-Emit_EmitNtConstant		# line 3492, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4345:
	.stabn  68,0,3493,.LN4345-Emit_EmitNtConstant		# line 3493, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2974
.Lab2973:
.LN4346:
	.stabn  68,0,3493,.LN4346-Emit_EmitNtConstant		# line 3493, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2972
.Lab2974:
.LN4347:
	.stabn  68,0,3493,.LN4347-Emit_EmitNtConstant		# line 3493, column 61
	call	InOut_WriteLn
.Lab2972:
.LN4348:
	.stabn  68,0,3494,.LN4348-Emit_EmitNtConstant		# line 3494, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4349:
	.stabn  68,0,3495,.LN4349-Emit_EmitNtConstant		# line 3495, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2976
	cmpl	$4096,%eax
	jbe	.Lab2975
.Lab2976:
   	call	BoundErr_		
.Lab2975:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2968:
	jmp	.Lab2697
.Lab2703:
.LN4350:
	.stabn  68,0,3499,.LN4350-Emit_EmitNtConstant		# line 3499, column 10
	decl	Emit_s + 1536
.LN4351:
	.stabn  68,0,3500,.LN4351-Emit_EmitNtConstant		# line 3500, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2980
	cmpl	$4096,%eax
	jbe	.Lab2979
.Lab2980:
   	call	BoundErr_		
.Lab2979:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2977
.Lab2978:
.LN4352:
	.stabn  68,0,3501,.LN4352-Emit_EmitNtConstant		# line 3501, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2982
	cmpl	$4096,%eax
	jbe	.Lab2981
.Lab2982:
   	call	BoundErr_		
.Lab2981:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2977:
.LN4353:
	.stabn  68,0,3503,.LN4353-Emit_EmitNtConstant		# line 3503, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2983
.Lab2984:
.LN4354:
	.stabn  68,0,3504,.LN4354-Emit_EmitNtConstant		# line 3504, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4355:
	.stabn  68,0,3505,.LN4355-Emit_EmitNtConstant		# line 3505, column 11
	.data
.Lab2985:
 	.ascii	"Rule 188/535 Cost=\000"
	.text
	pushl	$18
	leal	.Lab2985,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4356:
	.stabn  68,0,3506,.LN4356-Emit_EmitNtConstant		# line 3506, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4357:
	.stabn  68,0,3507,.LN4357-Emit_EmitNtConstant		# line 3507, column 11
	.data
.Lab2986:
 	.ascii	" BoolConstant ->   Constant\000"
	.text
	pushl	$27
	leal	.Lab2986,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4358:
	.stabn  68,0,3508,.LN4358-Emit_EmitNtConstant		# line 3508, column 11
	call	InOut_WriteLn
.LN4359:
	.stabn  68,0,3509,.LN4359-Emit_EmitNtConstant		# line 3509, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4360:
	.stabn  68,0,3510,.LN4360-Emit_EmitNtConstant		# line 3510, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4361:
	.stabn  68,0,3510,.LN4361-Emit_EmitNtConstant		# line 3510, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4362:
	.stabn  68,0,3511,.LN4362-Emit_EmitNtConstant		# line 3511, column 11
	cmpl	$0,8(%ebp)
	je	.Lab2989
.Lab2988:
.LN4363:
	.stabn  68,0,3511,.LN4363-Emit_EmitNtConstant		# line 3511, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab2987
.Lab2989:
.LN4364:
	.stabn  68,0,3511,.LN4364-Emit_EmitNtConstant		# line 3511, column 61
	call	InOut_WriteLn
.Lab2987:
.LN4365:
	.stabn  68,0,3512,.LN4365-Emit_EmitNtConstant		# line 3512, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4366:
	.stabn  68,0,3513,.LN4366-Emit_EmitNtConstant		# line 3513, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2991
	cmpl	$4096,%eax
	jbe	.Lab2990
.Lab2991:
   	call	BoundErr_		
.Lab2990:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2983:
	jmp	.Lab2697
.Lab2702:
.LN4367:
	.stabn  68,0,3517,.LN4367-Emit_EmitNtConstant		# line 3517, column 10
	decl	Emit_s + 1536
.LN4368:
	.stabn  68,0,3518,.LN4368-Emit_EmitNtConstant		# line 3518, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2995
	cmpl	$4096,%eax
	jbe	.Lab2994
.Lab2995:
   	call	BoundErr_		
.Lab2994:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab2992
.Lab2993:
.LN4369:
	.stabn  68,0,3519,.LN4369-Emit_EmitNtConstant		# line 3519, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab2997
	cmpl	$4096,%eax
	jbe	.Lab2996
.Lab2997:
   	call	BoundErr_		
.Lab2996:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab2992:
.LN4370:
	.stabn  68,0,3521,.LN4370-Emit_EmitNtConstant		# line 3521, column 8
	cmpb	$0,IR_s + 133
	je	.Lab2998
.Lab2999:
.LN4371:
	.stabn  68,0,3522,.LN4371-Emit_EmitNtConstant		# line 3522, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4372:
	.stabn  68,0,3523,.LN4372-Emit_EmitNtConstant		# line 3523, column 11
	.data
.Lab3000:
 	.ascii	"Rule 189/531 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3000,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4373:
	.stabn  68,0,3524,.LN4373-Emit_EmitNtConstant		# line 3524, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4374:
	.stabn  68,0,3525,.LN4374-Emit_EmitNtConstant		# line 3525, column 11
	.data
.Lab3001:
 	.ascii	" CharConstant ->   Constant\000"
	.text
	pushl	$27
	leal	.Lab3001,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4375:
	.stabn  68,0,3526,.LN4375-Emit_EmitNtConstant		# line 3526, column 11
	call	InOut_WriteLn
.LN4376:
	.stabn  68,0,3527,.LN4376-Emit_EmitNtConstant		# line 3527, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4377:
	.stabn  68,0,3528,.LN4377-Emit_EmitNtConstant		# line 3528, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4378:
	.stabn  68,0,3528,.LN4378-Emit_EmitNtConstant		# line 3528, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4379:
	.stabn  68,0,3529,.LN4379-Emit_EmitNtConstant		# line 3529, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3004
.Lab3003:
.LN4380:
	.stabn  68,0,3529,.LN4380-Emit_EmitNtConstant		# line 3529, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3002
.Lab3004:
.LN4381:
	.stabn  68,0,3529,.LN4381-Emit_EmitNtConstant		# line 3529, column 61
	call	InOut_WriteLn
.Lab3002:
.LN4382:
	.stabn  68,0,3530,.LN4382-Emit_EmitNtConstant		# line 3530, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4383:
	.stabn  68,0,3531,.LN4383-Emit_EmitNtConstant		# line 3531, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3006
	cmpl	$4096,%eax
	jbe	.Lab3005
.Lab3006:
   	call	BoundErr_		
.Lab3005:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab2998:
	jmp	.Lab2697
.Lab2701:
.LN4384:
	.stabn  68,0,3535,.LN4384-Emit_EmitNtConstant		# line 3535, column 10
	decl	Emit_s + 1536
.LN4385:
	.stabn  68,0,3536,.LN4385-Emit_EmitNtConstant		# line 3536, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3010
	cmpl	$4096,%eax
	jbe	.Lab3009
.Lab3010:
   	call	BoundErr_		
.Lab3009:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3007
.Lab3008:
.LN4386:
	.stabn  68,0,3537,.LN4386-Emit_EmitNtConstant		# line 3537, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3012
	cmpl	$4096,%eax
	jbe	.Lab3011
.Lab3012:
   	call	BoundErr_		
.Lab3011:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3007:
.LN4387:
	.stabn  68,0,3539,.LN4387-Emit_EmitNtConstant		# line 3539, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3013
.Lab3014:
.LN4388:
	.stabn  68,0,3540,.LN4388-Emit_EmitNtConstant		# line 3540, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4389:
	.stabn  68,0,3541,.LN4389-Emit_EmitNtConstant		# line 3541, column 11
	.data
.Lab3015:
 	.ascii	"Rule 190/519 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3015,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4390:
	.stabn  68,0,3542,.LN4390-Emit_EmitNtConstant		# line 3542, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4391:
	.stabn  68,0,3543,.LN4391-Emit_EmitNtConstant		# line 3543, column 11
	.data
.Lab3016:
 	.ascii	" LongIntConstant ->   Constant\000"
	.text
	pushl	$30
	leal	.Lab3016,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4392:
	.stabn  68,0,3544,.LN4392-Emit_EmitNtConstant		# line 3544, column 11
	call	InOut_WriteLn
.LN4393:
	.stabn  68,0,3545,.LN4393-Emit_EmitNtConstant		# line 3545, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4394:
	.stabn  68,0,3546,.LN4394-Emit_EmitNtConstant		# line 3546, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4395:
	.stabn  68,0,3546,.LN4395-Emit_EmitNtConstant		# line 3546, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4396:
	.stabn  68,0,3547,.LN4396-Emit_EmitNtConstant		# line 3547, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3019
.Lab3018:
.LN4397:
	.stabn  68,0,3547,.LN4397-Emit_EmitNtConstant		# line 3547, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3017
.Lab3019:
.LN4398:
	.stabn  68,0,3547,.LN4398-Emit_EmitNtConstant		# line 3547, column 61
	call	InOut_WriteLn
.Lab3017:
.LN4399:
	.stabn  68,0,3548,.LN4399-Emit_EmitNtConstant		# line 3548, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4400:
	.stabn  68,0,3549,.LN4400-Emit_EmitNtConstant		# line 3549, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3021
	cmpl	$4096,%eax
	jbe	.Lab3020
.Lab3021:
   	call	BoundErr_		
.Lab3020:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3013:
	jmp	.Lab2697
.Lab2700:
.LN4401:
	.stabn  68,0,3553,.LN4401-Emit_EmitNtConstant		# line 3553, column 10
	decl	Emit_s + 1536
.LN4402:
	.stabn  68,0,3554,.LN4402-Emit_EmitNtConstant		# line 3554, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3025
	cmpl	$4096,%eax
	jbe	.Lab3024
.Lab3025:
   	call	BoundErr_		
.Lab3024:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3022
.Lab3023:
.LN4403:
	.stabn  68,0,3555,.LN4403-Emit_EmitNtConstant		# line 3555, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3027
	cmpl	$4096,%eax
	jbe	.Lab3026
.Lab3027:
   	call	BoundErr_		
.Lab3026:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3022:
.LN4404:
	.stabn  68,0,3557,.LN4404-Emit_EmitNtConstant		# line 3557, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3028
.Lab3029:
.LN4405:
	.stabn  68,0,3558,.LN4405-Emit_EmitNtConstant		# line 3558, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4406:
	.stabn  68,0,3559,.LN4406-Emit_EmitNtConstant		# line 3559, column 11
	.data
.Lab3030:
 	.ascii	"Rule 191/515 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3030,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4407:
	.stabn  68,0,3560,.LN4407-Emit_EmitNtConstant		# line 3560, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4408:
	.stabn  68,0,3561,.LN4408-Emit_EmitNtConstant		# line 3561, column 11
	.data
.Lab3031:
 	.ascii	" ShortIntConstant ->   Constant\000"
	.text
	pushl	$31
	leal	.Lab3031,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4409:
	.stabn  68,0,3562,.LN4409-Emit_EmitNtConstant		# line 3562, column 11
	call	InOut_WriteLn
.LN4410:
	.stabn  68,0,3563,.LN4410-Emit_EmitNtConstant		# line 3563, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4411:
	.stabn  68,0,3564,.LN4411-Emit_EmitNtConstant		# line 3564, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4412:
	.stabn  68,0,3564,.LN4412-Emit_EmitNtConstant		# line 3564, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4413:
	.stabn  68,0,3565,.LN4413-Emit_EmitNtConstant		# line 3565, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3034
.Lab3033:
.LN4414:
	.stabn  68,0,3565,.LN4414-Emit_EmitNtConstant		# line 3565, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3032
.Lab3034:
.LN4415:
	.stabn  68,0,3565,.LN4415-Emit_EmitNtConstant		# line 3565, column 61
	call	InOut_WriteLn
.Lab3032:
.LN4416:
	.stabn  68,0,3566,.LN4416-Emit_EmitNtConstant		# line 3566, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4417:
	.stabn  68,0,3567,.LN4417-Emit_EmitNtConstant		# line 3567, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3036
	cmpl	$4096,%eax
	jbe	.Lab3035
.Lab3036:
   	call	BoundErr_		
.Lab3035:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3028:
	jmp	.Lab2697
.Lab2699:
.LN4418:
	.stabn  68,0,3571,.LN4418-Emit_EmitNtConstant		# line 3571, column 10
	decl	Emit_s + 1536
.LN4419:
	.stabn  68,0,3572,.LN4419-Emit_EmitNtConstant		# line 3572, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3040
	cmpl	$4096,%eax
	jbe	.Lab3039
.Lab3040:
   	call	BoundErr_		
.Lab3039:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3037
.Lab3038:
.LN4420:
	.stabn  68,0,3573,.LN4420-Emit_EmitNtConstant		# line 3573, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3042
	cmpl	$4096,%eax
	jbe	.Lab3041
.Lab3042:
   	call	BoundErr_		
.Lab3041:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3037:
.LN4421:
	.stabn  68,0,3575,.LN4421-Emit_EmitNtConstant		# line 3575, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3043
.Lab3044:
.LN4422:
	.stabn  68,0,3576,.LN4422-Emit_EmitNtConstant		# line 3576, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4423:
	.stabn  68,0,3577,.LN4423-Emit_EmitNtConstant		# line 3577, column 11
	.data
.Lab3045:
 	.ascii	"Rule 192/511 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3045,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4424:
	.stabn  68,0,3578,.LN4424-Emit_EmitNtConstant		# line 3578, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4425:
	.stabn  68,0,3579,.LN4425-Emit_EmitNtConstant		# line 3579, column 11
	.data
.Lab3046:
 	.ascii	" LongCardConstant ->   Constant\000"
	.text
	pushl	$31
	leal	.Lab3046,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4426:
	.stabn  68,0,3580,.LN4426-Emit_EmitNtConstant		# line 3580, column 11
	call	InOut_WriteLn
.LN4427:
	.stabn  68,0,3581,.LN4427-Emit_EmitNtConstant		# line 3581, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4428:
	.stabn  68,0,3582,.LN4428-Emit_EmitNtConstant		# line 3582, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4429:
	.stabn  68,0,3582,.LN4429-Emit_EmitNtConstant		# line 3582, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4430:
	.stabn  68,0,3583,.LN4430-Emit_EmitNtConstant		# line 3583, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3049
.Lab3048:
.LN4431:
	.stabn  68,0,3583,.LN4431-Emit_EmitNtConstant		# line 3583, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3047
.Lab3049:
.LN4432:
	.stabn  68,0,3583,.LN4432-Emit_EmitNtConstant		# line 3583, column 61
	call	InOut_WriteLn
.Lab3047:
.LN4433:
	.stabn  68,0,3584,.LN4433-Emit_EmitNtConstant		# line 3584, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4434:
	.stabn  68,0,3585,.LN4434-Emit_EmitNtConstant		# line 3585, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3051
	cmpl	$4096,%eax
	jbe	.Lab3050
.Lab3051:
   	call	BoundErr_		
.Lab3050:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3043:
	jmp	.Lab2697
.Lab2698:
.LN4435:
	.stabn  68,0,3589,.LN4435-Emit_EmitNtConstant		# line 3589, column 10
	decl	Emit_s + 1536
.LN4436:
	.stabn  68,0,3590,.LN4436-Emit_EmitNtConstant		# line 3590, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3055
	cmpl	$4096,%eax
	jbe	.Lab3054
.Lab3055:
   	call	BoundErr_		
.Lab3054:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3052
.Lab3053:
.LN4437:
	.stabn  68,0,3591,.LN4437-Emit_EmitNtConstant		# line 3591, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3057
	cmpl	$4096,%eax
	jbe	.Lab3056
.Lab3057:
   	call	BoundErr_		
.Lab3056:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3052:
.LN4438:
	.stabn  68,0,3593,.LN4438-Emit_EmitNtConstant		# line 3593, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3058
.Lab3059:
.LN4439:
	.stabn  68,0,3594,.LN4439-Emit_EmitNtConstant		# line 3594, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4440:
	.stabn  68,0,3595,.LN4440-Emit_EmitNtConstant		# line 3595, column 11
	.data
.Lab3060:
 	.ascii	"Rule 193/507 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3060,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4441:
	.stabn  68,0,3596,.LN4441-Emit_EmitNtConstant		# line 3596, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	100(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4442:
	.stabn  68,0,3597,.LN4442-Emit_EmitNtConstant		# line 3597, column 11
	.data
.Lab3061:
 	.ascii	" ShortCardConstant ->   Constant\000"
	.text
	pushl	$32
	leal	.Lab3061,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4443:
	.stabn  68,0,3598,.LN4443-Emit_EmitNtConstant		# line 3598, column 11
	call	InOut_WriteLn
.LN4444:
	.stabn  68,0,3599,.LN4444-Emit_EmitNtConstant		# line 3599, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4445:
	.stabn  68,0,3600,.LN4445-Emit_EmitNtConstant		# line 3600, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4446:
	.stabn  68,0,3600,.LN4446-Emit_EmitNtConstant		# line 3600, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4447:
	.stabn  68,0,3601,.LN4447-Emit_EmitNtConstant		# line 3601, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3064
.Lab3063:
.LN4448:
	.stabn  68,0,3601,.LN4448-Emit_EmitNtConstant		# line 3601, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3062
.Lab3064:
.LN4449:
	.stabn  68,0,3601,.LN4449-Emit_EmitNtConstant		# line 3601, column 61
	call	InOut_WriteLn
.Lab3062:
.LN4450:
	.stabn  68,0,3602,.LN4450-Emit_EmitNtConstant		# line 3602, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4451:
	.stabn  68,0,3603,.LN4451-Emit_EmitNtConstant		# line 3603, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3066
	cmpl	$4096,%eax
	jbe	.Lab3065
.Lab3066:
   	call	BoundErr_		
.Lab3065:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3058:
	jmp	.Lab2697
.Lab2696:
	call	CaseErr_
.Lab2697:
.LN4452:
	.stabn  68,0,3607,.LN4452-Emit_EmitNtConstant		# line 3607, column 4
	cmpb	$0,IR_s + 133
	je	.Lab3067
.Lab3068:
.LN4453:
	.stabn  68,0,3608,.LN4453-Emit_EmitNtConstant		# line 3608, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4454:
	.stabn  68,0,3609,.LN4454-Emit_EmitNtConstant		# line 3609, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrConstant
	addl	$20, %esp
.LN4455:
	.stabn  68,0,3610,.LN4455-Emit_EmitNtConstant		# line 3610, column 8
	call	InOut_WriteLn
.Lab3067:
.LN4456:
	.stabn  68,0,3611,.LN4456-Emit_EmitNtConstant		# line 3611, column 0
.LBE15:
	leave
	ret
	.Lab2695 = 44
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB15-Emit_EmitNtConstant
	.stabn 224,0,0,.LBE15-Emit_EmitNtConstant
	.stabs "Emit_EmitNtfstack:F16",36,0,0,Emit_EmitNtfstack
	.align 4
Emit_EmitNtfstack:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab3069, %esp
.LN4457:
	.stabn  68,0,3103,.LN4457-Emit_EmitNtfstack		# line 3103, column 1
.LBB16:
.LN4458:
	.stabn  68,0,3104,.LN4458-Emit_EmitNtfstack		# line 3104, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	160(%eax),%eax
	.data
	.align 4
.Lab3073:
	.long	.Lab3072
	.text
	subl	$170,%eax
	jb	.Lab3070
	cmpl	$0,%eax
	ja	.Lab3070
	jmp	*.Lab3073(,%eax,4)
.Lab3072:
.LN4459:
	.stabn  68,0,3106,.LN4459-Emit_EmitNtfstack		# line 3106, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4460:
	.stabn  68,0,3107,.LN4460-Emit_EmitNtfstack		# line 3107, column 10
	decl	Emit_s + 1536
.LN4461:
	.stabn  68,0,3108,.LN4461-Emit_EmitNtfstack		# line 3108, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3077
	cmpl	$4096,%eax
	jbe	.Lab3076
.Lab3077:
   	call	BoundErr_		
.Lab3076:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3074
.Lab3075:
.LN4462:
	.stabn  68,0,3109,.LN4462-Emit_EmitNtfstack		# line 3109, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3079
	cmpl	$4096,%eax
	jbe	.Lab3078
.Lab3079:
   	call	BoundErr_		
.Lab3078:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3074:
.LN4463:
	.stabn  68,0,3111,.LN4463-Emit_EmitNtfstack		# line 3111, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3080
.Lab3081:
.LN4464:
	.stabn  68,0,3112,.LN4464-Emit_EmitNtfstack		# line 3112, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4465:
	.stabn  68,0,3113,.LN4465-Emit_EmitNtfstack		# line 3113, column 11
	.data
.Lab3082:
 	.ascii	"Rule 170/497 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3082,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4466:
	.stabn  68,0,3114,.LN4466-Emit_EmitNtfstack		# line 3114, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	96(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4467:
	.stabn  68,0,3115,.LN4467-Emit_EmitNtfstack		# line 3115, column 11
	.data
.Lab3083:
 	.ascii	" freg ->   fstack\000"
	.text
	pushl	$17
	leal	.Lab3083,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4468:
	.stabn  68,0,3116,.LN4468-Emit_EmitNtfstack		# line 3116, column 11
	call	InOut_WriteLn
.LN4469:
	.stabn  68,0,3117,.LN4469-Emit_EmitNtfstack		# line 3117, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4470:
	.stabn  68,0,3118,.LN4470-Emit_EmitNtfstack		# line 3118, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4471:
	.stabn  68,0,3118,.LN4471-Emit_EmitNtfstack		# line 3118, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4472:
	.stabn  68,0,3119,.LN4472-Emit_EmitNtfstack		# line 3119, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3086
.Lab3085:
.LN4473:
	.stabn  68,0,3119,.LN4473-Emit_EmitNtfstack		# line 3119, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3084
.Lab3086:
.LN4474:
	.stabn  68,0,3119,.LN4474-Emit_EmitNtfstack		# line 3119, column 61
	call	InOut_WriteLn
.Lab3084:
.LN4475:
	.stabn  68,0,3120,.LN4475-Emit_EmitNtfstack		# line 3120, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4476:
	.stabn  68,0,3121,.LN4476-Emit_EmitNtfstack		# line 3121, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3088
	cmpl	$4096,%eax
	jbe	.Lab3087
.Lab3088:
   	call	BoundErr_		
.Lab3087:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3080:
.LN4477:
	.stabn  68,0,3124,.LN4477-Emit_EmitNtfstack		# line 3124, column 9
	jmp	.Lab3089
.Lab3090:
.LN4478:
	.stabn  68,0,3125,.LN4478-Emit_EmitNtfstack		# line 3125, column 2
	.data
.Lab3091:
 	.ascii	"\011\011\011\011\011/* Kettenregel \000"
	.text
	pushl	$20
	leal	.Lab3091,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4479:
	.stabn  68,0,3125,.LN4479-Emit_EmitNtfstack		# line 3125, column 69
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3093
	cmpl	$4096,%eax
	jbe	.Lab3092
.Lab3093:
   	call	BoundErr_		
.Lab3092:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN4480:
	.stabn  68,0,3125,.LN4480-Emit_EmitNtfstack		# line 3125, column 114
	.data
.Lab3094:
 	.ascii	" -> \000"
	.text
	pushl	$4
	leal	.Lab3094,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4481:
	.stabn  68,0,3125,.LN4481-Emit_EmitNtfstack		# line 3125, column 135
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3096
	cmpl	$4096,%eax
	jbe	.Lab3095
.Lab3096:
   	call	BoundErr_		
.Lab3095:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN4482:
	.stabn  68,0,3125,.LN4482-Emit_EmitNtfstack		# line 3125, column 178
	.data
.Lab3097:
 	.ascii	" */\000"
	.text
	pushl	$3
	leal	.Lab3097,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4483:
	.stabn  68,0,3125,.LN4483-Emit_EmitNtfstack		# line 3125, column 198
	call	CgAssOut_AssLn
.Lab3089:
	jmp	.Lab3071
.Lab3070:
	call	CaseErr_
.Lab3071:
.LN4484:
	.stabn  68,0,3129,.LN4484-Emit_EmitNtfstack		# line 3129, column 4
	cmpb	$0,IR_s + 133
	je	.Lab3098
.Lab3099:
.LN4485:
	.stabn  68,0,3130,.LN4485-Emit_EmitNtfstack		# line 3130, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4486:
	.stabn  68,0,3131,.LN4486-Emit_EmitNtfstack		# line 3131, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrfstack
	addl	$20, %esp
.LN4487:
	.stabn  68,0,3132,.LN4487-Emit_EmitNtfstack		# line 3132, column 8
	call	InOut_WriteLn
.Lab3098:
.LN4488:
	.stabn  68,0,3134,.LN4488-Emit_EmitNtfstack		# line 3134, column 4
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3103
	cmpl	$4096,%eax
	jbe	.Lab3102
.Lab3103:
   	call	BoundErr_		
.Lab3102:
	imull	$44,%eax 
	cmpb	$0,RegAlloc_s - 39(%eax)
	je	.Lab3100
.Lab3101:
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3105
	cmpl	$4096,%eax
	jbe	.Lab3104
.Lab3105:
   	call	BoundErr_		
.Lab3104:
	imull	$44,%eax 
	leal	RegAlloc_s - 40(%eax),%eax
	movl	%eax,-28(%ebp) 
.LN4489:
	.stabn  68,0,3137,.LN4489-Emit_EmitNtfstack		# line 3137, column 10
	movl	-28(%ebp),%eax
	cmpl	$0,4(%eax)
	je	.Lab3108
.Lab3107:
.LN4490:
	.stabn  68,0,3138,.LN4490-Emit_EmitNtfstack		# line 3138, column 13
	movl	-28(%ebp),%eax
	pushl	4(%eax)
	movl	-28(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	Emit_Spill
	addl	$8, %esp
.LN4491:
	.stabn  68,0,3139,.LN4491-Emit_EmitNtfstack		# line 3139, column 13
	cmpb	$0,IR_s + 133
	je	.Lab3109
.Lab3110:
.LN4492:
	.stabn  68,0,3140,.LN4492-Emit_EmitNtfstack		# line 3140, column 17
	.data
.Lab3111:
 	.ascii	" Spill Register \000"
	.text
	pushl	$16
	leal	.Lab3111,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4493:
	.stabn  68,0,3141,.LN4493-Emit_EmitNtfstack		# line 3141, column 17
	movl	-28(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN4494:
	.stabn  68,0,3142,.LN4494-Emit_EmitNtfstack		# line 3142, column 17
	.data
.Lab3112:
 	.ascii	" into \000"
	.text
	pushl	$6
	leal	.Lab3112,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4495:
	.stabn  68,0,3143,.LN4495-Emit_EmitNtfstack		# line 3143, column 17
	pushl	$1
	movl	-28(%ebp),%eax
	movl	4(%eax),%eax
	cmpl	$2147483647,%eax
	jbe	.Lab3113
.Lab3114:
   	call	BoundErr_		
.Lab3113:
	pushl	%eax
	call	InOut_WriteInt
	addl	$8, %esp
.LN4496:
	.stabn  68,0,3144,.LN4496-Emit_EmitNtfstack		# line 3144, column 17
	call	InOut_WriteLn
.Lab3109:
	jmp	.Lab3106
.Lab3108:
.LN4497:
	.stabn  68,0,3147,.LN4497-Emit_EmitNtfstack		# line 3147, column 13
	movl	-28(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	movl	-28(%ebp),%eax
	movzbl	8(%eax),%eax
	pushl	%eax
	call	Emit_LR
	addl	$8, %esp
.LN4498:
	.stabn  68,0,3148,.LN4498-Emit_EmitNtfstack		# line 3148, column 13
	cmpb	$0,IR_s + 133
	je	.Lab3115
.Lab3116:
.LN4499:
	.stabn  68,0,3149,.LN4499-Emit_EmitNtfstack		# line 3149, column 17
	.data
.Lab3117:
 	.ascii	" Copy Register \000"
	.text
	pushl	$15
	leal	.Lab3117,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4500:
	.stabn  68,0,3150,.LN4500-Emit_EmitNtfstack		# line 3150, column 17
	movl	-28(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN4501:
	.stabn  68,0,3151,.LN4501-Emit_EmitNtfstack		# line 3151, column 17
	.data
.Lab3118:
 	.ascii	" into \000"
	.text
	pushl	$6
	leal	.Lab3118,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4502:
	.stabn  68,0,3152,.LN4502-Emit_EmitNtfstack		# line 3152, column 17
	movl	-28(%ebp),%eax
	movzbl	8(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN4503:
	.stabn  68,0,3153,.LN4503-Emit_EmitNtfstack		# line 3153, column 17
	call	InOut_WriteLn
.Lab3115:
.Lab3106:
.Lab3100:
.LN4504:
	.stabn  68,0,3154,.LN4504-Emit_EmitNtfstack		# line 3154, column 0
.LBE16:
	leave
	ret
	.Lab3069 = 28
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB16-Emit_EmitNtfstack
	.stabn 224,0,0,.LBE16-Emit_EmitNtfstack
	.stabs "Emit_EmitNtfreg:F16",36,0,0,Emit_EmitNtfreg
	.align 4
Emit_EmitNtfreg:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab3119, %esp
.LN4505:
	.stabn  68,0,2302,.LN4505-Emit_EmitNtfreg		# line 2302, column 1
.LBB17:
.LN4506:
	.stabn  68,0,2303,.LN4506-Emit_EmitNtfreg		# line 2303, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	156(%eax),%eax
	.data
	.align 4
.Lab3155:
	.long	.Lab3154
	.long	.Lab3153
	.long	.Lab3152
	.long	.Lab3151
	.long	.Lab3150
	.long	.Lab3149
	.long	.Lab3148
	.long	.Lab3147
	.long	.Lab3146
	.long	.Lab3145
	.long	.Lab3144
	.long	.Lab3143
	.long	.Lab3142
	.long	.Lab3141
	.long	.Lab3140
	.long	.Lab3139
	.long	.Lab3138
	.long	.Lab3137
	.long	.Lab3136
	.long	.Lab3135
	.long	.Lab3134
	.long	.Lab3133
	.long	.Lab3132
	.long	.Lab3131
	.long	.Lab3130
	.long	.Lab3129
	.long	.Lab3128
	.long	.Lab3127
	.long	.Lab3126
	.long	.Lab3125
	.long	.Lab3124
	.long	.Lab3123
	.long	.Lab3122
	.text
	subl	$137,%eax
	jb	.Lab3120
	cmpl	$32,%eax
	ja	.Lab3120
	jmp	*.Lab3155(,%eax,4)
.Lab3154:
.LN4507:
	.stabn  68,0,2305,.LN4507-Emit_EmitNtfreg		# line 2305, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN4508:
	.stabn  68,0,2306,.LN4508-Emit_EmitNtfreg		# line 2306, column 10
	decl	Emit_s + 1536
.LN4509:
	.stabn  68,0,2307,.LN4509-Emit_EmitNtfreg		# line 2307, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3159
	cmpl	$4096,%eax
	jbe	.Lab3158
.Lab3159:
   	call	BoundErr_		
.Lab3158:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3156
.Lab3157:
.LN4510:
	.stabn  68,0,2308,.LN4510-Emit_EmitNtfreg		# line 2308, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3161
	cmpl	$4096,%eax
	jbe	.Lab3160
.Lab3161:
   	call	BoundErr_		
.Lab3160:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3156:
.LN4511:
	.stabn  68,0,2310,.LN4511-Emit_EmitNtfreg		# line 2310, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3162
.Lab3163:
.LN4512:
	.stabn  68,0,2311,.LN4512-Emit_EmitNtfreg		# line 2311, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4513:
	.stabn  68,0,2312,.LN4513-Emit_EmitNtfreg		# line 2312, column 11
	.data
.Lab3164:
 	.ascii	"Rule 137/2728 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3164,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4514:
	.stabn  68,0,2313,.LN4514-Emit_EmitNtfreg		# line 2313, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4515:
	.stabn  68,0,2314,.LN4515-Emit_EmitNtfreg		# line 2314, column 11
	.data
.Lab3165:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3165,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4516:
	.stabn  68,0,2315,.LN4516-Emit_EmitNtfreg		# line 2315, column 11
	call	InOut_WriteLn
.LN4517:
	.stabn  68,0,2316,.LN4517-Emit_EmitNtfreg		# line 2316, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4518:
	.stabn  68,0,2317,.LN4518-Emit_EmitNtfreg		# line 2317, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4519:
	.stabn  68,0,2317,.LN4519-Emit_EmitNtfreg		# line 2317, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4520:
	.stabn  68,0,2318,.LN4520-Emit_EmitNtfreg		# line 2318, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3168
.Lab3167:
.LN4521:
	.stabn  68,0,2318,.LN4521-Emit_EmitNtfreg		# line 2318, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3166
.Lab3168:
.LN4522:
	.stabn  68,0,2318,.LN4522-Emit_EmitNtfreg		# line 2318, column 61
	call	InOut_WriteLn
.Lab3166:
.LN4523:
	.stabn  68,0,2319,.LN4523-Emit_EmitNtfreg		# line 2319, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4524:
	.stabn  68,0,2320,.LN4524-Emit_EmitNtfreg		# line 2320, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3170
	cmpl	$4096,%eax
	jbe	.Lab3169
.Lab3170:
   	call	BoundErr_		
.Lab3169:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3162:
.LN4525:
	.stabn  68,0,2323,.LN4525-Emit_EmitNtfreg		# line 2323, column 9
	call	Emit_PushFStack
.LN4526:
	.stabn  68,0,2324,.LN4526-Emit_EmitNtfreg		# line 2324, column 2
	.data
.Lab3171:
 	.ascii	"\011pushl\011\000"
	.text
	pushl	$7
	leal	.Lab3171,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4527:
	.stabn  68,0,2324,.LN4527-Emit_EmitNtfreg		# line 2324, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3173
	cmpl	$4096,%eax
	jbe	.Lab3172
.Lab3173:
   	call	BoundErr_		
.Lab3172:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN4528:
	.stabn  68,0,2324,.LN4528-Emit_EmitNtfreg		# line 2324, column 75
	call	CgAssOut_AssLn
.LN4529:
	.stabn  68,0,2325,.LN4529-Emit_EmitNtfreg		# line 2325, column 2
	.data
.Lab3174:
 	.ascii	"\011fildl\011(%esp)\000"
	.text
	pushl	$13
	leal	.Lab3174,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4530:
	.stabn  68,0,2325,.LN4530-Emit_EmitNtfreg		# line 2325, column 36
	call	CgAssOut_AssLn
.LN4531:
	.stabn  68,0,2326,.LN4531-Emit_EmitNtfreg		# line 2326, column 2
	.data
.Lab3175:
 	.ascii	"\011addl\011$4,%esp\000"
	.text
	pushl	$13
	leal	.Lab3175,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4532:
	.stabn  68,0,2326,.LN4532-Emit_EmitNtfreg		# line 2326, column 37
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3153:
.LN4533:
	.stabn  68,0,2329,.LN4533-Emit_EmitNtfreg		# line 2329, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN4534:
	.stabn  68,0,2330,.LN4534-Emit_EmitNtfreg		# line 2330, column 10
	decl	Emit_s + 1536
.LN4535:
	.stabn  68,0,2331,.LN4535-Emit_EmitNtfreg		# line 2331, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3179
	cmpl	$4096,%eax
	jbe	.Lab3178
.Lab3179:
   	call	BoundErr_		
.Lab3178:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3176
.Lab3177:
.LN4536:
	.stabn  68,0,2332,.LN4536-Emit_EmitNtfreg		# line 2332, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3181
	cmpl	$4096,%eax
	jbe	.Lab3180
.Lab3181:
   	call	BoundErr_		
.Lab3180:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3176:
.LN4537:
	.stabn  68,0,2334,.LN4537-Emit_EmitNtfreg		# line 2334, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3182
.Lab3183:
.LN4538:
	.stabn  68,0,2335,.LN4538-Emit_EmitNtfreg		# line 2335, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4539:
	.stabn  68,0,2336,.LN4539-Emit_EmitNtfreg		# line 2336, column 11
	.data
.Lab3184:
 	.ascii	"Rule 138/2713 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3184,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4540:
	.stabn  68,0,2337,.LN4540-Emit_EmitNtfreg		# line 2337, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4541:
	.stabn  68,0,2338,.LN4541-Emit_EmitNtfreg		# line 2338, column 11
	.data
.Lab3185:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3185,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4542:
	.stabn  68,0,2339,.LN4542-Emit_EmitNtfreg		# line 2339, column 11
	call	InOut_WriteLn
.LN4543:
	.stabn  68,0,2340,.LN4543-Emit_EmitNtfreg		# line 2340, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4544:
	.stabn  68,0,2341,.LN4544-Emit_EmitNtfreg		# line 2341, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4545:
	.stabn  68,0,2341,.LN4545-Emit_EmitNtfreg		# line 2341, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4546:
	.stabn  68,0,2342,.LN4546-Emit_EmitNtfreg		# line 2342, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3188
.Lab3187:
.LN4547:
	.stabn  68,0,2342,.LN4547-Emit_EmitNtfreg		# line 2342, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3186
.Lab3188:
.LN4548:
	.stabn  68,0,2342,.LN4548-Emit_EmitNtfreg		# line 2342, column 61
	call	InOut_WriteLn
.Lab3186:
.LN4549:
	.stabn  68,0,2343,.LN4549-Emit_EmitNtfreg		# line 2343, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4550:
	.stabn  68,0,2344,.LN4550-Emit_EmitNtfreg		# line 2344, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3190
	cmpl	$4096,%eax
	jbe	.Lab3189
.Lab3190:
   	call	BoundErr_		
.Lab3189:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3182:
.LN4551:
	.stabn  68,0,2347,.LN4551-Emit_EmitNtfreg		# line 2347, column 9
	call	Emit_PushFStack
.LN4552:
	.stabn  68,0,2348,.LN4552-Emit_EmitNtfreg		# line 2348, column 2
	.data
.Lab3191:
 	.ascii	"\011fildl\011\000"
	.text
	pushl	$7
	leal	.Lab3191,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4553:
	.stabn  68,0,2348,.LN4553-Emit_EmitNtfreg		# line 2348, column 30
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN4554:
	.stabn  68,0,2348,.LN4554-Emit_EmitNtfreg		# line 2348, column 56
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3152:
.LN4555:
	.stabn  68,0,2351,.LN4555-Emit_EmitNtfreg		# line 2351, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4556:
	.stabn  68,0,2352,.LN4556-Emit_EmitNtfreg		# line 2352, column 10
	decl	Emit_s + 1536
.LN4557:
	.stabn  68,0,2353,.LN4557-Emit_EmitNtfreg		# line 2353, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3195
	cmpl	$4096,%eax
	jbe	.Lab3194
.Lab3195:
   	call	BoundErr_		
.Lab3194:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3192
.Lab3193:
.LN4558:
	.stabn  68,0,2354,.LN4558-Emit_EmitNtfreg		# line 2354, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3197
	cmpl	$4096,%eax
	jbe	.Lab3196
.Lab3197:
   	call	BoundErr_		
.Lab3196:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3192:
.LN4559:
	.stabn  68,0,2356,.LN4559-Emit_EmitNtfreg		# line 2356, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3198
.Lab3199:
.LN4560:
	.stabn  68,0,2357,.LN4560-Emit_EmitNtfreg		# line 2357, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4561:
	.stabn  68,0,2358,.LN4561-Emit_EmitNtfreg		# line 2358, column 11
	.data
.Lab3200:
 	.ascii	"Rule 139/2697 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3200,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4562:
	.stabn  68,0,2359,.LN4562-Emit_EmitNtfreg		# line 2359, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4563:
	.stabn  68,0,2360,.LN4563-Emit_EmitNtfreg		# line 2360, column 11
	.data
.Lab3201:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3201,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4564:
	.stabn  68,0,2361,.LN4564-Emit_EmitNtfreg		# line 2361, column 11
	call	InOut_WriteLn
.LN4565:
	.stabn  68,0,2362,.LN4565-Emit_EmitNtfreg		# line 2362, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4566:
	.stabn  68,0,2363,.LN4566-Emit_EmitNtfreg		# line 2363, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4567:
	.stabn  68,0,2363,.LN4567-Emit_EmitNtfreg		# line 2363, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4568:
	.stabn  68,0,2364,.LN4568-Emit_EmitNtfreg		# line 2364, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3204
.Lab3203:
.LN4569:
	.stabn  68,0,2364,.LN4569-Emit_EmitNtfreg		# line 2364, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3202
.Lab3204:
.LN4570:
	.stabn  68,0,2364,.LN4570-Emit_EmitNtfreg		# line 2364, column 61
	call	InOut_WriteLn
.Lab3202:
.LN4571:
	.stabn  68,0,2365,.LN4571-Emit_EmitNtfreg		# line 2365, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4572:
	.stabn  68,0,2366,.LN4572-Emit_EmitNtfreg		# line 2366, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3206
	cmpl	$4096,%eax
	jbe	.Lab3205
.Lab3206:
   	call	BoundErr_		
.Lab3205:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3198:
.LN4573:
	.stabn  68,0,2369,.LN4573-Emit_EmitNtfreg		# line 2369, column 9
	call	Emit_PushFStack
.LN4574:
	.stabn  68,0,2370,.LN4574-Emit_EmitNtfreg		# line 2370, column 2
	.data
.Lab3207:
 	.ascii	"\011flds\011RealOne_\000"
	.text
	pushl	$14
	leal	.Lab3207,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4575:
	.stabn  68,0,2370,.LN4575-Emit_EmitNtfreg		# line 2370, column 38
	call	CgAssOut_AssLn
.LN4576:
	.stabn  68,0,2371,.LN4576-Emit_EmitNtfreg		# line 2371, column 2
	.data
.Lab3208:
 	.ascii	"\011fpatan\000"
	.text
	pushl	$7
	leal	.Lab3208,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4577:
	.stabn  68,0,2371,.LN4577-Emit_EmitNtfreg		# line 2371, column 28
	call	CgAssOut_AssLn
.LN4578:
	.stabn  68,0,2372,.LN4578-Emit_EmitNtfreg		# line 2372, column 9
	call	Emit_PopFStack
	jmp	.Lab3121
.Lab3151:
.LN4579:
	.stabn  68,0,2375,.LN4579-Emit_EmitNtfreg		# line 2375, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4580:
	.stabn  68,0,2376,.LN4580-Emit_EmitNtfreg		# line 2376, column 10
	decl	Emit_s + 1536
.LN4581:
	.stabn  68,0,2377,.LN4581-Emit_EmitNtfreg		# line 2377, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3212
	cmpl	$4096,%eax
	jbe	.Lab3211
.Lab3212:
   	call	BoundErr_		
.Lab3211:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3209
.Lab3210:
.LN4582:
	.stabn  68,0,2378,.LN4582-Emit_EmitNtfreg		# line 2378, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3214
	cmpl	$4096,%eax
	jbe	.Lab3213
.Lab3214:
   	call	BoundErr_		
.Lab3213:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3209:
.LN4583:
	.stabn  68,0,2380,.LN4583-Emit_EmitNtfreg		# line 2380, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3215
.Lab3216:
.LN4584:
	.stabn  68,0,2381,.LN4584-Emit_EmitNtfreg		# line 2381, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4585:
	.stabn  68,0,2382,.LN4585-Emit_EmitNtfreg		# line 2382, column 11
	.data
.Lab3217:
 	.ascii	"Rule 140/2686 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3217,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4586:
	.stabn  68,0,2383,.LN4586-Emit_EmitNtfreg		# line 2383, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4587:
	.stabn  68,0,2384,.LN4587-Emit_EmitNtfreg		# line 2384, column 11
	.data
.Lab3218:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3218,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4588:
	.stabn  68,0,2385,.LN4588-Emit_EmitNtfreg		# line 2385, column 11
	call	InOut_WriteLn
.LN4589:
	.stabn  68,0,2386,.LN4589-Emit_EmitNtfreg		# line 2386, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4590:
	.stabn  68,0,2387,.LN4590-Emit_EmitNtfreg		# line 2387, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4591:
	.stabn  68,0,2387,.LN4591-Emit_EmitNtfreg		# line 2387, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4592:
	.stabn  68,0,2388,.LN4592-Emit_EmitNtfreg		# line 2388, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3221
.Lab3220:
.LN4593:
	.stabn  68,0,2388,.LN4593-Emit_EmitNtfreg		# line 2388, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3219
.Lab3221:
.LN4594:
	.stabn  68,0,2388,.LN4594-Emit_EmitNtfreg		# line 2388, column 61
	call	InOut_WriteLn
.Lab3219:
.LN4595:
	.stabn  68,0,2389,.LN4595-Emit_EmitNtfreg		# line 2389, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4596:
	.stabn  68,0,2390,.LN4596-Emit_EmitNtfreg		# line 2390, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3223
	cmpl	$4096,%eax
	jbe	.Lab3222
.Lab3223:
   	call	BoundErr_		
.Lab3222:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3215:
.LN4597:
	.stabn  68,0,2392,.LN4597-Emit_EmitNtfreg		# line 2392, column 2
	.data
.Lab3224:
 	.ascii	"\011fcos\000"
	.text
	pushl	$5
	leal	.Lab3224,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4598:
	.stabn  68,0,2392,.LN4598-Emit_EmitNtfreg		# line 2392, column 26
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3150:
.LN4599:
	.stabn  68,0,2394,.LN4599-Emit_EmitNtfreg		# line 2394, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4600:
	.stabn  68,0,2395,.LN4600-Emit_EmitNtfreg		# line 2395, column 10
	decl	Emit_s + 1536
.LN4601:
	.stabn  68,0,2396,.LN4601-Emit_EmitNtfreg		# line 2396, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3228
	cmpl	$4096,%eax
	jbe	.Lab3227
.Lab3228:
   	call	BoundErr_		
.Lab3227:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3225
.Lab3226:
.LN4602:
	.stabn  68,0,2397,.LN4602-Emit_EmitNtfreg		# line 2397, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3230
	cmpl	$4096,%eax
	jbe	.Lab3229
.Lab3230:
   	call	BoundErr_		
.Lab3229:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3225:
.LN4603:
	.stabn  68,0,2399,.LN4603-Emit_EmitNtfreg		# line 2399, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3231
.Lab3232:
.LN4604:
	.stabn  68,0,2400,.LN4604-Emit_EmitNtfreg		# line 2400, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4605:
	.stabn  68,0,2401,.LN4605-Emit_EmitNtfreg		# line 2401, column 11
	.data
.Lab3233:
 	.ascii	"Rule 141/2675 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3233,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4606:
	.stabn  68,0,2402,.LN4606-Emit_EmitNtfreg		# line 2402, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4607:
	.stabn  68,0,2403,.LN4607-Emit_EmitNtfreg		# line 2403, column 11
	.data
.Lab3234:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3234,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4608:
	.stabn  68,0,2404,.LN4608-Emit_EmitNtfreg		# line 2404, column 11
	call	InOut_WriteLn
.LN4609:
	.stabn  68,0,2405,.LN4609-Emit_EmitNtfreg		# line 2405, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4610:
	.stabn  68,0,2406,.LN4610-Emit_EmitNtfreg		# line 2406, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4611:
	.stabn  68,0,2406,.LN4611-Emit_EmitNtfreg		# line 2406, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4612:
	.stabn  68,0,2407,.LN4612-Emit_EmitNtfreg		# line 2407, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3237
.Lab3236:
.LN4613:
	.stabn  68,0,2407,.LN4613-Emit_EmitNtfreg		# line 2407, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3235
.Lab3237:
.LN4614:
	.stabn  68,0,2407,.LN4614-Emit_EmitNtfreg		# line 2407, column 61
	call	InOut_WriteLn
.Lab3235:
.LN4615:
	.stabn  68,0,2408,.LN4615-Emit_EmitNtfreg		# line 2408, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4616:
	.stabn  68,0,2409,.LN4616-Emit_EmitNtfreg		# line 2409, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3239
	cmpl	$4096,%eax
	jbe	.Lab3238
.Lab3239:
   	call	BoundErr_		
.Lab3238:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3231:
.LN4617:
	.stabn  68,0,2411,.LN4617-Emit_EmitNtfreg		# line 2411, column 2
	.data
.Lab3240:
 	.ascii	"\011fsin\000"
	.text
	pushl	$5
	leal	.Lab3240,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4618:
	.stabn  68,0,2411,.LN4618-Emit_EmitNtfreg		# line 2411, column 26
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3149:
.LN4619:
	.stabn  68,0,2413,.LN4619-Emit_EmitNtfreg		# line 2413, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtloadln2
	addl	$12, %esp
.LN4620:
	.stabn  68,0,2414,.LN4620-Emit_EmitNtfreg		# line 2414, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4621:
	.stabn  68,0,2415,.LN4621-Emit_EmitNtfreg		# line 2415, column 10
	decl	Emit_s + 1536
.LN4622:
	.stabn  68,0,2416,.LN4622-Emit_EmitNtfreg		# line 2416, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3244
	cmpl	$4096,%eax
	jbe	.Lab3243
.Lab3244:
   	call	BoundErr_		
.Lab3243:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3241
.Lab3242:
.LN4623:
	.stabn  68,0,2417,.LN4623-Emit_EmitNtfreg		# line 2417, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3246
	cmpl	$4096,%eax
	jbe	.Lab3245
.Lab3246:
   	call	BoundErr_		
.Lab3245:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3241:
.LN4624:
	.stabn  68,0,2419,.LN4624-Emit_EmitNtfreg		# line 2419, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3247
.Lab3248:
.LN4625:
	.stabn  68,0,2420,.LN4625-Emit_EmitNtfreg		# line 2420, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4626:
	.stabn  68,0,2421,.LN4626-Emit_EmitNtfreg		# line 2421, column 11
	.data
.Lab3249:
 	.ascii	"Rule 142/2641 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3249,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4627:
	.stabn  68,0,2422,.LN4627-Emit_EmitNtfreg		# line 2422, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4628:
	.stabn  68,0,2423,.LN4628-Emit_EmitNtfreg		# line 2423, column 11
	.data
.Lab3250:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3250,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4629:
	.stabn  68,0,2424,.LN4629-Emit_EmitNtfreg		# line 2424, column 11
	call	InOut_WriteLn
.LN4630:
	.stabn  68,0,2425,.LN4630-Emit_EmitNtfreg		# line 2425, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4631:
	.stabn  68,0,2426,.LN4631-Emit_EmitNtfreg		# line 2426, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4632:
	.stabn  68,0,2426,.LN4632-Emit_EmitNtfreg		# line 2426, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4633:
	.stabn  68,0,2427,.LN4633-Emit_EmitNtfreg		# line 2427, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3253
.Lab3252:
.LN4634:
	.stabn  68,0,2427,.LN4634-Emit_EmitNtfreg		# line 2427, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3251
.Lab3253:
.LN4635:
	.stabn  68,0,2427,.LN4635-Emit_EmitNtfreg		# line 2427, column 61
	call	InOut_WriteLn
.Lab3251:
.LN4636:
	.stabn  68,0,2428,.LN4636-Emit_EmitNtfreg		# line 2428, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4637:
	.stabn  68,0,2429,.LN4637-Emit_EmitNtfreg		# line 2429, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3255
	cmpl	$4096,%eax
	jbe	.Lab3254
.Lab3255:
   	call	BoundErr_		
.Lab3254:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3247:
.LN4638:
	.stabn  68,0,2432,.LN4638-Emit_EmitNtfreg		# line 2432, column 9
	cmpl	$2,Emit_s + 980
	jge	.Lab3256
.Lab3257:
.LN4639:
	.stabn  68,0,2440,.LN4639-Emit_EmitNtfreg		# line 2440, column 2
	.data
.Lab3258:
 	.ascii	"\011fldl\011RealLn2_\000"
	.text
	pushl	$14
	leal	.Lab3258,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4640:
	.stabn  68,0,2440,.LN4640-Emit_EmitNtfreg		# line 2440, column 38
	call	CgAssOut_AssLn
.LN4641:
	.stabn  68,0,2441,.LN4641-Emit_EmitNtfreg		# line 2441, column 2
	.data
.Lab3259:
 	.ascii	"\011fxch\011%st(1)\000"
	.text
	pushl	$12
	leal	.Lab3259,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4642:
	.stabn  68,0,2441,.LN4642-Emit_EmitNtfreg		# line 2441, column 36
	call	CgAssOut_AssLn
.LN4643:
	.stabn  68,0,2442,.LN4643-Emit_EmitNtfreg		# line 2442, column 36
	movl	$1,%eax
 	addl	Emit_s + 984,%eax 
	.data
	.align 4
.Lab3260:
	.long	0,63
	.text
	boundl	%eax,.Lab3260
	movl	$1111111111,Emit_s + 352(,%eax,4) 
.LN4644:
	.stabn  68,0,2443,.LN4644-Emit_EmitNtfreg		# line 2443, column 9
	incl	Emit_s + 980 
.Lab3256:
.LN4645:
	.stabn  68,0,2445,.LN4645-Emit_EmitNtfreg		# line 2445, column 2
	.data
.Lab3261:
 	.ascii	"\011fyl2x\000"
	.text
	pushl	$6
	leal	.Lab3261,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4646:
	.stabn  68,0,2445,.LN4646-Emit_EmitNtfreg		# line 2445, column 27
	call	CgAssOut_AssLn
.LN4647:
	.stabn  68,0,2446,.LN4647-Emit_EmitNtfreg		# line 2446, column 9
	call	Emit_PopFStack
	jmp	.Lab3121
.Lab3148:
.LN4648:
	.stabn  68,0,2449,.LN4648-Emit_EmitNtfreg		# line 2449, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4649:
	.stabn  68,0,2450,.LN4649-Emit_EmitNtfreg		# line 2450, column 10
	decl	Emit_s + 1536
.LN4650:
	.stabn  68,0,2451,.LN4650-Emit_EmitNtfreg		# line 2451, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3265
	cmpl	$4096,%eax
	jbe	.Lab3264
.Lab3265:
   	call	BoundErr_		
.Lab3264:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3262
.Lab3263:
.LN4651:
	.stabn  68,0,2452,.LN4651-Emit_EmitNtfreg		# line 2452, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3267
	cmpl	$4096,%eax
	jbe	.Lab3266
.Lab3267:
   	call	BoundErr_		
.Lab3266:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3262:
.LN4652:
	.stabn  68,0,2454,.LN4652-Emit_EmitNtfreg		# line 2454, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3268
.Lab3269:
.LN4653:
	.stabn  68,0,2455,.LN4653-Emit_EmitNtfreg		# line 2455, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4654:
	.stabn  68,0,2456,.LN4654-Emit_EmitNtfreg		# line 2456, column 11
	.data
.Lab3270:
 	.ascii	"Rule 143/2603 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3270,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4655:
	.stabn  68,0,2457,.LN4655-Emit_EmitNtfreg		# line 2457, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4656:
	.stabn  68,0,2458,.LN4656-Emit_EmitNtfreg		# line 2458, column 11
	.data
.Lab3271:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3271,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4657:
	.stabn  68,0,2459,.LN4657-Emit_EmitNtfreg		# line 2459, column 11
	call	InOut_WriteLn
.LN4658:
	.stabn  68,0,2460,.LN4658-Emit_EmitNtfreg		# line 2460, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4659:
	.stabn  68,0,2461,.LN4659-Emit_EmitNtfreg		# line 2461, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4660:
	.stabn  68,0,2461,.LN4660-Emit_EmitNtfreg		# line 2461, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4661:
	.stabn  68,0,2462,.LN4661-Emit_EmitNtfreg		# line 2462, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3274
.Lab3273:
.LN4662:
	.stabn  68,0,2462,.LN4662-Emit_EmitNtfreg		# line 2462, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3272
.Lab3274:
.LN4663:
	.stabn  68,0,2462,.LN4663-Emit_EmitNtfreg		# line 2462, column 61
	call	InOut_WriteLn
.Lab3272:
.LN4664:
	.stabn  68,0,2463,.LN4664-Emit_EmitNtfreg		# line 2463, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4665:
	.stabn  68,0,2464,.LN4665-Emit_EmitNtfreg		# line 2464, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3276
	cmpl	$4096,%eax
	jbe	.Lab3275
.Lab3276:
   	call	BoundErr_		
.Lab3275:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3268:
.LN4666:
	.stabn  68,0,2468,.LN4666-Emit_EmitNtfreg		# line 2468, column 2
	.data
.Lab3277:
 	.ascii	"\011fmull\011RealLog2e_\000"
	.text
	pushl	$17
	leal	.Lab3277,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4667:
	.stabn  68,0,2468,.LN4667-Emit_EmitNtfreg		# line 2468, column 40
	call	CgAssOut_AssLn
.LN4668:
	.stabn  68,0,2472,.LN4668-Emit_EmitNtfreg		# line 2472, column 9
	call	Emit_PushFStack
.LN4669:
	.stabn  68,0,2473,.LN4669-Emit_EmitNtfreg		# line 2473, column 2
	.data
.Lab3278:
 	.ascii	"\011fld\011%st\000"
	.text
	pushl	$8
	leal	.Lab3278,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4670:
	.stabn  68,0,2473,.LN4670-Emit_EmitNtfreg		# line 2473, column 33
	call	CgAssOut_AssLn
.LN4671:
	.stabn  68,0,2476,.LN4671-Emit_EmitNtfreg		# line 2476, column 9
	pushl	$0
	call	Emit_CheckRoundMode
	addl	$4, %esp
.LN4672:
	.stabn  68,0,2477,.LN4672-Emit_EmitNtfreg		# line 2477, column 2
	.data
.Lab3279:
 	.ascii	"\011frndint\000"
	.text
	pushl	$8
	leal	.Lab3279,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4673:
	.stabn  68,0,2477,.LN4673-Emit_EmitNtfreg		# line 2477, column 29
	call	CgAssOut_AssLn
.LN4674:
	.stabn  68,0,2479,.LN4674-Emit_EmitNtfreg		# line 2479, column 9
	call	Emit_PushFStack
.LN4675:
	.stabn  68,0,2480,.LN4675-Emit_EmitNtfreg		# line 2480, column 2
	.data
.Lab3280:
 	.ascii	"\011fld\011%st\000"
	.text
	pushl	$8
	leal	.Lab3280,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4676:
	.stabn  68,0,2480,.LN4676-Emit_EmitNtfreg		# line 2480, column 33
	call	CgAssOut_AssLn
.LN4677:
	.stabn  68,0,2482,.LN4677-Emit_EmitNtfreg		# line 2482, column 2
	.data
.Lab3281:
 	.ascii	"\011fsubr\011%st(2),%st\000"
	.text
	pushl	$17
	leal	.Lab3281,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4678:
	.stabn  68,0,2482,.LN4678-Emit_EmitNtfreg		# line 2482, column 40
	call	CgAssOut_AssLn
.LN4679:
	.stabn  68,0,2484,.LN4679-Emit_EmitNtfreg		# line 2484, column 2
	.data
.Lab3282:
 	.ascii	"\011f2xm1\000"
	.text
	pushl	$6
	leal	.Lab3282,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4680:
	.stabn  68,0,2484,.LN4680-Emit_EmitNtfreg		# line 2484, column 27
	call	CgAssOut_AssLn
.LN4681:
	.stabn  68,0,2485,.LN4681-Emit_EmitNtfreg		# line 2485, column 2
	.data
.Lab3283:
 	.ascii	"\011fadds\011RealOne_\000"
	.text
	pushl	$15
	leal	.Lab3283,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4682:
	.stabn  68,0,2485,.LN4682-Emit_EmitNtfreg		# line 2485, column 38
	call	CgAssOut_AssLn
.LN4683:
	.stabn  68,0,2487,.LN4683-Emit_EmitNtfreg		# line 2487, column 2
	.data
.Lab3284:
 	.ascii	"\011fscale\000"
	.text
	pushl	$7
	leal	.Lab3284,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4684:
	.stabn  68,0,2487,.LN4684-Emit_EmitNtfreg		# line 2487, column 28
	call	CgAssOut_AssLn
.LN4685:
	.stabn  68,0,2489,.LN4685-Emit_EmitNtfreg		# line 2489, column 2
	.data
.Lab3285:
 	.ascii	"\011fstp\011%st(1)\000"
	.text
	pushl	$12
	leal	.Lab3285,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4686:
	.stabn  68,0,2489,.LN4686-Emit_EmitNtfreg		# line 2489, column 36
	call	CgAssOut_AssLn
.LN4687:
	.stabn  68,0,2490,.LN4687-Emit_EmitNtfreg		# line 2490, column 9
	call	Emit_PopFStack
.LN4688:
	.stabn  68,0,2491,.LN4688-Emit_EmitNtfreg		# line 2491, column 2
	.data
.Lab3286:
 	.ascii	"\011fstp\011%st(1)\000"
	.text
	pushl	$12
	leal	.Lab3286,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4689:
	.stabn  68,0,2491,.LN4689-Emit_EmitNtfreg		# line 2491, column 36
	call	CgAssOut_AssLn
.LN4690:
	.stabn  68,0,2492,.LN4690-Emit_EmitNtfreg		# line 2492, column 9
	call	Emit_PopFStack
	jmp	.Lab3121
.Lab3147:
.LN4691:
	.stabn  68,0,2495,.LN4691-Emit_EmitNtfreg		# line 2495, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4692:
	.stabn  68,0,2496,.LN4692-Emit_EmitNtfreg		# line 2496, column 10
	decl	Emit_s + 1536
.LN4693:
	.stabn  68,0,2497,.LN4693-Emit_EmitNtfreg		# line 2497, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3290
	cmpl	$4096,%eax
	jbe	.Lab3289
.Lab3290:
   	call	BoundErr_		
.Lab3289:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3287
.Lab3288:
.LN4694:
	.stabn  68,0,2498,.LN4694-Emit_EmitNtfreg		# line 2498, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3292
	cmpl	$4096,%eax
	jbe	.Lab3291
.Lab3292:
   	call	BoundErr_		
.Lab3291:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3287:
.LN4695:
	.stabn  68,0,2500,.LN4695-Emit_EmitNtfreg		# line 2500, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3293
.Lab3294:
.LN4696:
	.stabn  68,0,2501,.LN4696-Emit_EmitNtfreg		# line 2501, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4697:
	.stabn  68,0,2502,.LN4697-Emit_EmitNtfreg		# line 2502, column 11
	.data
.Lab3295:
 	.ascii	"Rule 144/2592 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3295,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4698:
	.stabn  68,0,2503,.LN4698-Emit_EmitNtfreg		# line 2503, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4699:
	.stabn  68,0,2504,.LN4699-Emit_EmitNtfreg		# line 2504, column 11
	.data
.Lab3296:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3296,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4700:
	.stabn  68,0,2505,.LN4700-Emit_EmitNtfreg		# line 2505, column 11
	call	InOut_WriteLn
.LN4701:
	.stabn  68,0,2506,.LN4701-Emit_EmitNtfreg		# line 2506, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4702:
	.stabn  68,0,2507,.LN4702-Emit_EmitNtfreg		# line 2507, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4703:
	.stabn  68,0,2507,.LN4703-Emit_EmitNtfreg		# line 2507, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4704:
	.stabn  68,0,2508,.LN4704-Emit_EmitNtfreg		# line 2508, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3299
.Lab3298:
.LN4705:
	.stabn  68,0,2508,.LN4705-Emit_EmitNtfreg		# line 2508, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3297
.Lab3299:
.LN4706:
	.stabn  68,0,2508,.LN4706-Emit_EmitNtfreg		# line 2508, column 61
	call	InOut_WriteLn
.Lab3297:
.LN4707:
	.stabn  68,0,2509,.LN4707-Emit_EmitNtfreg		# line 2509, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4708:
	.stabn  68,0,2510,.LN4708-Emit_EmitNtfreg		# line 2510, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3301
	cmpl	$4096,%eax
	jbe	.Lab3300
.Lab3301:
   	call	BoundErr_		
.Lab3300:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3293:
.LN4709:
	.stabn  68,0,2512,.LN4709-Emit_EmitNtfreg		# line 2512, column 2
	.data
.Lab3302:
 	.ascii	"\011fsqrt\000"
	.text
	pushl	$6
	leal	.Lab3302,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4710:
	.stabn  68,0,2512,.LN4710-Emit_EmitNtfreg		# line 2512, column 27
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3146:
.LN4711:
	.stabn  68,0,2514,.LN4711-Emit_EmitNtfreg		# line 2514, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN4712:
	.stabn  68,0,2515,.LN4712-Emit_EmitNtfreg		# line 2515, column 10
	decl	Emit_s + 1536
.LN4713:
	.stabn  68,0,2516,.LN4713-Emit_EmitNtfreg		# line 2516, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3306
	cmpl	$4096,%eax
	jbe	.Lab3305
.Lab3306:
   	call	BoundErr_		
.Lab3305:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3303
.Lab3304:
.LN4714:
	.stabn  68,0,2517,.LN4714-Emit_EmitNtfreg		# line 2517, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3308
	cmpl	$4096,%eax
	jbe	.Lab3307
.Lab3308:
   	call	BoundErr_		
.Lab3307:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3303:
.LN4715:
	.stabn  68,0,2519,.LN4715-Emit_EmitNtfreg		# line 2519, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3309
.Lab3310:
.LN4716:
	.stabn  68,0,2520,.LN4716-Emit_EmitNtfreg		# line 2520, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4717:
	.stabn  68,0,2521,.LN4717-Emit_EmitNtfreg		# line 2521, column 11
	.data
.Lab3311:
 	.ascii	"Rule 145/2552 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3311,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4718:
	.stabn  68,0,2522,.LN4718-Emit_EmitNtfreg		# line 2522, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4719:
	.stabn  68,0,2523,.LN4719-Emit_EmitNtfreg		# line 2523, column 11
	.data
.Lab3312:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3312,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4720:
	.stabn  68,0,2524,.LN4720-Emit_EmitNtfreg		# line 2524, column 11
	call	InOut_WriteLn
.LN4721:
	.stabn  68,0,2525,.LN4721-Emit_EmitNtfreg		# line 2525, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4722:
	.stabn  68,0,2526,.LN4722-Emit_EmitNtfreg		# line 2526, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4723:
	.stabn  68,0,2526,.LN4723-Emit_EmitNtfreg		# line 2526, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4724:
	.stabn  68,0,2527,.LN4724-Emit_EmitNtfreg		# line 2527, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3315
.Lab3314:
.LN4725:
	.stabn  68,0,2527,.LN4725-Emit_EmitNtfreg		# line 2527, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3313
.Lab3315:
.LN4726:
	.stabn  68,0,2527,.LN4726-Emit_EmitNtfreg		# line 2527, column 61
	call	InOut_WriteLn
.Lab3313:
.LN4727:
	.stabn  68,0,2528,.LN4727-Emit_EmitNtfreg		# line 2528, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4728:
	.stabn  68,0,2529,.LN4728-Emit_EmitNtfreg		# line 2529, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3317
	cmpl	$4096,%eax
	jbe	.Lab3316
.Lab3317:
   	call	BoundErr_		
.Lab3316:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3309:
.LN4729:
	.stabn  68,0,2532,.LN4729-Emit_EmitNtfreg		# line 2532, column 9
	call	Emit_SpillFStack
.LN4730:
	.stabn  68,0,2533,.LN4730-Emit_EmitNtfreg		# line 2533, column 22
	movb	$4,Emit_s + 976 
.LN4731:
	.stabn  68,0,2534,.LN4731-Emit_EmitNtfreg		# line 2534, column 2
	.data
.Lab3318:
 	.ascii	"\011call\011\000"
	.text
	pushl	$6
	leal	.Lab3318,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4732:
	.stabn  68,0,2534,.LN4732-Emit_EmitNtfreg		# line 2534, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4733:
	.stabn  68,0,2534,.LN4733-Emit_EmitNtfreg		# line 2534, column 93
	call	CgAssOut_AssLn
.LN4734:
	.stabn  68,0,2535,.LN4734-Emit_EmitNtfreg		# line 2535, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,4(%eax)
	je	.Lab3319
.Lab3320:
.LN4735:
	.stabn  68,0,2537,.LN4735-Emit_EmitNtfreg		# line 2537, column 2
	.data
.Lab3321:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab3321,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4736:
	.stabn  68,0,2537,.LN4736-Emit_EmitNtfreg		# line 2537, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN4737:
	.stabn  68,0,2537,.LN4737-Emit_EmitNtfreg		# line 2537, column 75
	.data
.Lab3322:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab3322,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4738:
	.stabn  68,0,2537,.LN4738-Emit_EmitNtfreg		# line 2537, column 98
	call	CgAssOut_AssLn
.Lab3319:
.LN4739:
	.stabn  68,0,2539,.LN4739-Emit_EmitNtfreg		# line 2539, column 9
	call	Emit_PushFStack
	jmp	.Lab3121
.Lab3145:
.LN4740:
	.stabn  68,0,2542,.LN4740-Emit_EmitNtfreg		# line 2542, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN4741:
	.stabn  68,0,2543,.LN4741-Emit_EmitNtfreg		# line 2543, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN4742:
	.stabn  68,0,2544,.LN4742-Emit_EmitNtfreg		# line 2544, column 10
	decl	Emit_s + 1536
.LN4743:
	.stabn  68,0,2545,.LN4743-Emit_EmitNtfreg		# line 2545, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3326
	cmpl	$4096,%eax
	jbe	.Lab3325
.Lab3326:
   	call	BoundErr_		
.Lab3325:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3323
.Lab3324:
.LN4744:
	.stabn  68,0,2546,.LN4744-Emit_EmitNtfreg		# line 2546, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3328
	cmpl	$4096,%eax
	jbe	.Lab3327
.Lab3328:
   	call	BoundErr_		
.Lab3327:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3323:
.LN4745:
	.stabn  68,0,2548,.LN4745-Emit_EmitNtfreg		# line 2548, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3329
.Lab3330:
.LN4746:
	.stabn  68,0,2549,.LN4746-Emit_EmitNtfreg		# line 2549, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4747:
	.stabn  68,0,2550,.LN4747-Emit_EmitNtfreg		# line 2550, column 11
	.data
.Lab3331:
 	.ascii	"Rule 146/2537 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3331,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4748:
	.stabn  68,0,2551,.LN4748-Emit_EmitNtfreg		# line 2551, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4749:
	.stabn  68,0,2552,.LN4749-Emit_EmitNtfreg		# line 2552, column 11
	.data
.Lab3332:
 	.ascii	" FunctionCall ->   freg\000"
	.text
	pushl	$23
	leal	.Lab3332,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4750:
	.stabn  68,0,2553,.LN4750-Emit_EmitNtfreg		# line 2553, column 11
	call	InOut_WriteLn
.LN4751:
	.stabn  68,0,2554,.LN4751-Emit_EmitNtfreg		# line 2554, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4752:
	.stabn  68,0,2555,.LN4752-Emit_EmitNtfreg		# line 2555, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4753:
	.stabn  68,0,2555,.LN4753-Emit_EmitNtfreg		# line 2555, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4754:
	.stabn  68,0,2556,.LN4754-Emit_EmitNtfreg		# line 2556, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3335
.Lab3334:
.LN4755:
	.stabn  68,0,2556,.LN4755-Emit_EmitNtfreg		# line 2556, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3333
.Lab3335:
.LN4756:
	.stabn  68,0,2556,.LN4756-Emit_EmitNtfreg		# line 2556, column 61
	call	InOut_WriteLn
.Lab3333:
.LN4757:
	.stabn  68,0,2557,.LN4757-Emit_EmitNtfreg		# line 2557, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4758:
	.stabn  68,0,2558,.LN4758-Emit_EmitNtfreg		# line 2558, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3337
	cmpl	$4096,%eax
	jbe	.Lab3336
.Lab3337:
   	call	BoundErr_		
.Lab3336:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3329:
.LN4759:
	.stabn  68,0,2561,.LN4759-Emit_EmitNtfreg		# line 2561, column 9
	call	Emit_SpillFStack
.LN4760:
	.stabn  68,0,2562,.LN4760-Emit_EmitNtfreg		# line 2562, column 22
	movb	$4,Emit_s + 976 
.LN4761:
	.stabn  68,0,2563,.LN4761-Emit_EmitNtfreg		# line 2563, column 2
	.data
.Lab3338:
 	.ascii	"\011call\011\000"
	.text
	pushl	$6
	leal	.Lab3338,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4762:
	.stabn  68,0,2563,.LN4762-Emit_EmitNtfreg		# line 2563, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3340
	cmpl	$4096,%eax
	jbe	.Lab3339
.Lab3340:
   	call	BoundErr_		
.Lab3339:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN4763:
	.stabn  68,0,2563,.LN4763-Emit_EmitNtfreg		# line 2563, column 75
	call	CgAssOut_AssLn
.LN4764:
	.stabn  68,0,2564,.LN4764-Emit_EmitNtfreg		# line 2564, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,4(%eax)
	je	.Lab3341
.Lab3342:
.LN4765:
	.stabn  68,0,2566,.LN4765-Emit_EmitNtfreg		# line 2566, column 2
	.data
.Lab3343:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab3343,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4766:
	.stabn  68,0,2566,.LN4766-Emit_EmitNtfreg		# line 2566, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN4767:
	.stabn  68,0,2566,.LN4767-Emit_EmitNtfreg		# line 2566, column 75
	.data
.Lab3344:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab3344,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4768:
	.stabn  68,0,2566,.LN4768-Emit_EmitNtfreg		# line 2566, column 98
	call	CgAssOut_AssLn
.Lab3341:
.LN4769:
	.stabn  68,0,2568,.LN4769-Emit_EmitNtfreg		# line 2568, column 9
	call	Emit_PushFStack
	jmp	.Lab3121
.Lab3144:
.LN4770:
	.stabn  68,0,2571,.LN4770-Emit_EmitNtfreg		# line 2571, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4771:
	.stabn  68,0,2572,.LN4771-Emit_EmitNtfreg		# line 2572, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN4772:
	.stabn  68,0,2573,.LN4772-Emit_EmitNtfreg		# line 2573, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	12(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN4773:
	.stabn  68,0,2574,.LN4773-Emit_EmitNtfreg		# line 2574, column 10
	decl	Emit_s + 1536
.LN4774:
	.stabn  68,0,2575,.LN4774-Emit_EmitNtfreg		# line 2575, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3348
	cmpl	$4096,%eax
	jbe	.Lab3347
.Lab3348:
   	call	BoundErr_		
.Lab3347:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3345
.Lab3346:
.LN4775:
	.stabn  68,0,2576,.LN4775-Emit_EmitNtfreg		# line 2576, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3350
	cmpl	$4096,%eax
	jbe	.Lab3349
.Lab3350:
   	call	BoundErr_		
.Lab3349:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3345:
.LN4776:
	.stabn  68,0,2578,.LN4776-Emit_EmitNtfreg		# line 2578, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3351
.Lab3352:
.LN4777:
	.stabn  68,0,2579,.LN4777-Emit_EmitNtfreg		# line 2579, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4778:
	.stabn  68,0,2580,.LN4778-Emit_EmitNtfreg		# line 2580, column 11
	.data
.Lab3353:
 	.ascii	"Rule 147/2010 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3353,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4779:
	.stabn  68,0,2581,.LN4779-Emit_EmitNtfreg		# line 2581, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4780:
	.stabn  68,0,2582,.LN4780-Emit_EmitNtfreg		# line 2582, column 11
	.data
.Lab3354:
 	.ascii	" CheckL ->   freg\000"
	.text
	pushl	$17
	leal	.Lab3354,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4781:
	.stabn  68,0,2583,.LN4781-Emit_EmitNtfreg		# line 2583, column 11
	call	InOut_WriteLn
.LN4782:
	.stabn  68,0,2584,.LN4782-Emit_EmitNtfreg		# line 2584, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4783:
	.stabn  68,0,2585,.LN4783-Emit_EmitNtfreg		# line 2585, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4784:
	.stabn  68,0,2585,.LN4784-Emit_EmitNtfreg		# line 2585, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4785:
	.stabn  68,0,2586,.LN4785-Emit_EmitNtfreg		# line 2586, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3357
.Lab3356:
.LN4786:
	.stabn  68,0,2586,.LN4786-Emit_EmitNtfreg		# line 2586, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3355
.Lab3357:
.LN4787:
	.stabn  68,0,2586,.LN4787-Emit_EmitNtfreg		# line 2586, column 61
	call	InOut_WriteLn
.Lab3355:
.LN4788:
	.stabn  68,0,2587,.LN4788-Emit_EmitNtfreg		# line 2587, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4789:
	.stabn  68,0,2588,.LN4789-Emit_EmitNtfreg		# line 2588, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3359
	cmpl	$4096,%eax
	jbe	.Lab3358
.Lab3359:
   	call	BoundErr_		
.Lab3358:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3351:
.LN4790:
	.stabn  68,0,2591,.LN4790-Emit_EmitNtfreg		# line 2591, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN4791:
	.stabn  68,0,2592,.LN4791-Emit_EmitNtfreg		# line 2592, column 9
	leal	Emit_s + 996,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN4792:
	.stabn  68,0,2593,.LN4792-Emit_EmitNtfreg		# line 2593, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,4(%eax)
	je	.Lab3360
.Lab3361:
.LN4793:
	.stabn  68,0,2594,.LN4793-Emit_EmitNtfreg		# line 2594, column 2
	.data
.Lab3362:
 	.ascii	"\011fcom\000"
	.text
	pushl	$5
	leal	.Lab3362,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4794:
	.stabn  68,0,2594,.LN4794-Emit_EmitNtfreg		# line 2594, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN4795:
	.stabn  68,0,2594,.LN4795-Emit_EmitNtfreg		# line 2594, column 64
	.data
.Lab3363:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3363,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4796:
	.stabn  68,0,2594,.LN4796-Emit_EmitNtfreg		# line 2594, column 86
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN4797:
	.stabn  68,0,2594,.LN4797-Emit_EmitNtfreg		# line 2594, column 112
	call	CgAssOut_AssLn
.LN4798:
	.stabn  68,0,2595,.LN4798-Emit_EmitNtfreg		# line 2595, column 2
	.data
.Lab3364:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab3364,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4799:
	.stabn  68,0,2595,.LN4799-Emit_EmitNtfreg		# line 2595, column 33
	call	CgAssOut_AssLn
.LN4800:
	.stabn  68,0,2596,.LN4800-Emit_EmitNtfreg		# line 2596, column 2
	.data
.Lab3365:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab3365,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4801:
	.stabn  68,0,2596,.LN4801-Emit_EmitNtfreg		# line 2596, column 26
	call	CgAssOut_AssLn
.LN4802:
	.stabn  68,0,2597,.LN4802-Emit_EmitNtfreg		# line 2597, column 2
	.data
.Lab3366:
 	.ascii	"\011jb\011\000"
	.text
	pushl	$4
	leal	.Lab3366,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4803:
	.stabn  68,0,2597,.LN4803-Emit_EmitNtfreg		# line 2597, column 30
	pushl	$255
	pushl	Emit_s + 996
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4804:
	.stabn  68,0,2597,.LN4804-Emit_EmitNtfreg		# line 2597, column 50
	call	CgAssOut_AssLn
.Lab3360:
.LN4805:
	.stabn  68,0,2599,.LN4805-Emit_EmitNtfreg		# line 2599, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,5(%eax)
	je	.Lab3369
.Lab3368:
.LN4806:
	.stabn  68,0,2600,.LN4806-Emit_EmitNtfreg		# line 2600, column 2
	.data
.Lab3370:
 	.ascii	"\011fcom\000"
	.text
	pushl	$5
	leal	.Lab3370,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4807:
	.stabn  68,0,2600,.LN4807-Emit_EmitNtfreg		# line 2600, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	3(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN4808:
	.stabn  68,0,2600,.LN4808-Emit_EmitNtfreg		# line 2600, column 64
	.data
.Lab3371:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3371,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4809:
	.stabn  68,0,2600,.LN4809-Emit_EmitNtfreg		# line 2600, column 86
	leal	-64(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN4810:
	.stabn  68,0,2600,.LN4810-Emit_EmitNtfreg		# line 2600, column 112
	call	CgAssOut_AssLn
.LN4811:
	.stabn  68,0,2601,.LN4811-Emit_EmitNtfreg		# line 2601, column 2
	.data
.Lab3372:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab3372,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4812:
	.stabn  68,0,2601,.LN4812-Emit_EmitNtfreg		# line 2601, column 33
	call	CgAssOut_AssLn
.LN4813:
	.stabn  68,0,2602,.LN4813-Emit_EmitNtfreg		# line 2602, column 2
	.data
.Lab3373:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab3373,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4814:
	.stabn  68,0,2602,.LN4814-Emit_EmitNtfreg		# line 2602, column 26
	call	CgAssOut_AssLn
.LN4815:
	.stabn  68,0,2603,.LN4815-Emit_EmitNtfreg		# line 2603, column 2
	.data
.Lab3374:
 	.ascii	"\011jbe\011\000"
	.text
	pushl	$5
	leal	.Lab3374,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4816:
	.stabn  68,0,2603,.LN4816-Emit_EmitNtfreg		# line 2603, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4817:
	.stabn  68,0,2603,.LN4817-Emit_EmitNtfreg		# line 2603, column 49
	call	CgAssOut_AssLn
	jmp	.Lab3367
.Lab3369:
.LN4818:
	.stabn  68,0,2605,.LN4818-Emit_EmitNtfreg		# line 2605, column 2
	.data
.Lab3375:
 	.ascii	"\011jmp\011\000"
	.text
	pushl	$5
	leal	.Lab3375,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4819:
	.stabn  68,0,2605,.LN4819-Emit_EmitNtfreg		# line 2605, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4820:
	.stabn  68,0,2605,.LN4820-Emit_EmitNtfreg		# line 2605, column 49
	call	CgAssOut_AssLn
.Lab3367:
.LN4821:
	.stabn  68,0,2607,.LN4821-Emit_EmitNtfreg		# line 2607, column 2
	pushl	$255
	pushl	Emit_s + 996
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4822:
	.stabn  68,0,2607,.LN4822-Emit_EmitNtfreg		# line 2607, column 22
	.data
.Lab3376:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab3376,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4823:
	.stabn  68,0,2607,.LN4823-Emit_EmitNtfreg		# line 2607, column 40
	call	CgAssOut_AssLn
.LN4824:
	.stabn  68,0,2608,.LN4824-Emit_EmitNtfreg		# line 2608, column 2
	.data
.Lab3377:
 	.ascii	"   \011call\011BoundErr_\011\011\000"
	.text
	pushl	$20
	leal	.Lab3377,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4825:
	.stabn  68,0,2608,.LN4825-Emit_EmitNtfreg		# line 2608, column 62
	call	CgAssOut_AssLn
.LN4826:
	.stabn  68,0,2609,.LN4826-Emit_EmitNtfreg		# line 2609, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4827:
	.stabn  68,0,2609,.LN4827-Emit_EmitNtfreg		# line 2609, column 21
	.data
.Lab3378:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab3378,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4828:
	.stabn  68,0,2609,.LN4828-Emit_EmitNtfreg		# line 2609, column 39
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3143:
.LN4829:
	.stabn  68,0,2612,.LN4829-Emit_EmitNtfreg		# line 2612, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4830:
	.stabn  68,0,2613,.LN4830-Emit_EmitNtfreg		# line 2613, column 10
	decl	Emit_s + 1536
.LN4831:
	.stabn  68,0,2614,.LN4831-Emit_EmitNtfreg		# line 2614, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3382
	cmpl	$4096,%eax
	jbe	.Lab3381
.Lab3382:
   	call	BoundErr_		
.Lab3381:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3379
.Lab3380:
.LN4832:
	.stabn  68,0,2615,.LN4832-Emit_EmitNtfreg		# line 2615, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3384
	cmpl	$4096,%eax
	jbe	.Lab3383
.Lab3384:
   	call	BoundErr_		
.Lab3383:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3379:
.LN4833:
	.stabn  68,0,2617,.LN4833-Emit_EmitNtfreg		# line 2617, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3385
.Lab3386:
.LN4834:
	.stabn  68,0,2618,.LN4834-Emit_EmitNtfreg		# line 2618, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4835:
	.stabn  68,0,2619,.LN4835-Emit_EmitNtfreg		# line 2619, column 11
	.data
.Lab3387:
 	.ascii	"Rule 148/1897 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3387,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4836:
	.stabn  68,0,2620,.LN4836-Emit_EmitNtfreg		# line 2620, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4837:
	.stabn  68,0,2621,.LN4837-Emit_EmitNtfreg		# line 2621, column 11
	.data
.Lab3388:
 	.ascii	" Coerce ->   freg\000"
	.text
	pushl	$17
	leal	.Lab3388,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4838:
	.stabn  68,0,2622,.LN4838-Emit_EmitNtfreg		# line 2622, column 11
	call	InOut_WriteLn
.LN4839:
	.stabn  68,0,2623,.LN4839-Emit_EmitNtfreg		# line 2623, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4840:
	.stabn  68,0,2624,.LN4840-Emit_EmitNtfreg		# line 2624, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4841:
	.stabn  68,0,2624,.LN4841-Emit_EmitNtfreg		# line 2624, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4842:
	.stabn  68,0,2625,.LN4842-Emit_EmitNtfreg		# line 2625, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3391
.Lab3390:
.LN4843:
	.stabn  68,0,2625,.LN4843-Emit_EmitNtfreg		# line 2625, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3389
.Lab3391:
.LN4844:
	.stabn  68,0,2625,.LN4844-Emit_EmitNtfreg		# line 2625, column 61
	call	InOut_WriteLn
.Lab3389:
.LN4845:
	.stabn  68,0,2626,.LN4845-Emit_EmitNtfreg		# line 2626, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4846:
	.stabn  68,0,2627,.LN4846-Emit_EmitNtfreg		# line 2627, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3393
	cmpl	$4096,%eax
	jbe	.Lab3392
.Lab3393:
   	call	BoundErr_		
.Lab3392:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3385:
	jmp	.Lab3121
.Lab3142:
.LN4847:
	.stabn  68,0,2631,.LN4847-Emit_EmitNtfreg		# line 2631, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN4848:
	.stabn  68,0,2632,.LN4848-Emit_EmitNtfreg		# line 2632, column 10
	decl	Emit_s + 1536
.LN4849:
	.stabn  68,0,2633,.LN4849-Emit_EmitNtfreg		# line 2633, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3397
	cmpl	$4096,%eax
	jbe	.Lab3396
.Lab3397:
   	call	BoundErr_		
.Lab3396:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3394
.Lab3395:
.LN4850:
	.stabn  68,0,2634,.LN4850-Emit_EmitNtfreg		# line 2634, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3399
	cmpl	$4096,%eax
	jbe	.Lab3398
.Lab3399:
   	call	BoundErr_		
.Lab3398:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3394:
.LN4851:
	.stabn  68,0,2636,.LN4851-Emit_EmitNtfreg		# line 2636, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3400
.Lab3401:
.LN4852:
	.stabn  68,0,2637,.LN4852-Emit_EmitNtfreg		# line 2637, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4853:
	.stabn  68,0,2638,.LN4853-Emit_EmitNtfreg		# line 2638, column 11
	.data
.Lab3402:
 	.ascii	"Rule 149/1760 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3402,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4854:
	.stabn  68,0,2639,.LN4854-Emit_EmitNtfreg		# line 2639, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4855:
	.stabn  68,0,2640,.LN4855-Emit_EmitNtfreg		# line 2640, column 11
	.data
.Lab3403:
 	.ascii	" Float ->   freg\000"
	.text
	pushl	$16
	leal	.Lab3403,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4856:
	.stabn  68,0,2641,.LN4856-Emit_EmitNtfreg		# line 2641, column 11
	call	InOut_WriteLn
.LN4857:
	.stabn  68,0,2642,.LN4857-Emit_EmitNtfreg		# line 2642, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4858:
	.stabn  68,0,2643,.LN4858-Emit_EmitNtfreg		# line 2643, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4859:
	.stabn  68,0,2643,.LN4859-Emit_EmitNtfreg		# line 2643, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4860:
	.stabn  68,0,2644,.LN4860-Emit_EmitNtfreg		# line 2644, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3406
.Lab3405:
.LN4861:
	.stabn  68,0,2644,.LN4861-Emit_EmitNtfreg		# line 2644, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3404
.Lab3406:
.LN4862:
	.stabn  68,0,2644,.LN4862-Emit_EmitNtfreg		# line 2644, column 61
	call	InOut_WriteLn
.Lab3404:
.LN4863:
	.stabn  68,0,2645,.LN4863-Emit_EmitNtfreg		# line 2645, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4864:
	.stabn  68,0,2646,.LN4864-Emit_EmitNtfreg		# line 2646, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3408
	cmpl	$4096,%eax
	jbe	.Lab3407
.Lab3408:
   	call	BoundErr_		
.Lab3407:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3400:
.LN4865:
	.stabn  68,0,2649,.LN4865-Emit_EmitNtfreg		# line 2649, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN4866:
	.stabn  68,0,2650,.LN4866-Emit_EmitNtfreg		# line 2650, column 9
	call	Emit_PushFStack
.LN4867:
	.stabn  68,0,2651,.LN4867-Emit_EmitNtfreg		# line 2651, column 2
	.data
.Lab3409:
 	.ascii	"\011pushl\011\000"
	.text
	pushl	$7
	leal	.Lab3409,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4868:
	.stabn  68,0,2651,.LN4868-Emit_EmitNtfreg		# line 2651, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3411
	cmpl	$4096,%eax
	jbe	.Lab3410
.Lab3411:
   	call	BoundErr_		
.Lab3410:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN4869:
	.stabn  68,0,2651,.LN4869-Emit_EmitNtfreg		# line 2651, column 75
	call	CgAssOut_AssLn
.LN4870:
	.stabn  68,0,2652,.LN4870-Emit_EmitNtfreg		# line 2652, column 2
	.data
.Lab3412:
 	.ascii	"\011fildl\011(%esp)\000"
	.text
	pushl	$13
	leal	.Lab3412,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4871:
	.stabn  68,0,2652,.LN4871-Emit_EmitNtfreg		# line 2652, column 36
	call	CgAssOut_AssLn
.LN4872:
	.stabn  68,0,2653,.LN4872-Emit_EmitNtfreg		# line 2653, column 2
	.data
.Lab3413:
 	.ascii	"\011addl\011$4,%esp\000"
	.text
	pushl	$13
	leal	.Lab3413,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4873:
	.stabn  68,0,2653,.LN4873-Emit_EmitNtfreg		# line 2653, column 37
	call	CgAssOut_AssLn
.LN4874:
	.stabn  68,0,2654,.LN4874-Emit_EmitNtfreg		# line 2654, column 2
	.data
.Lab3414:
 	.ascii	"\011cmpl\011$0x7fffffff,\000"
	.text
	pushl	$18
	leal	.Lab3414,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4875:
	.stabn  68,0,2654,.LN4875-Emit_EmitNtfreg		# line 2654, column 42
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3416
	cmpl	$4096,%eax
	jbe	.Lab3415
.Lab3416:
   	call	BoundErr_		
.Lab3415:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN4876:
	.stabn  68,0,2654,.LN4876-Emit_EmitNtfreg		# line 2654, column 87
	call	CgAssOut_AssLn
.LN4877:
	.stabn  68,0,2655,.LN4877-Emit_EmitNtfreg		# line 2655, column 2
	.data
.Lab3417:
 	.ascii	"\011jbe\011\000"
	.text
	pushl	$5
	leal	.Lab3417,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4878:
	.stabn  68,0,2655,.LN4878-Emit_EmitNtfreg		# line 2655, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4879:
	.stabn  68,0,2655,.LN4879-Emit_EmitNtfreg		# line 2655, column 49
	call	CgAssOut_AssLn
.LN4880:
	.stabn  68,0,2656,.LN4880-Emit_EmitNtfreg		# line 2656, column 2
	.data
.Lab3418:
 	.ascii	"\011faddl\011TwoExp32_\000"
	.text
	pushl	$16
	leal	.Lab3418,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4881:
	.stabn  68,0,2656,.LN4881-Emit_EmitNtfreg		# line 2656, column 39
	call	CgAssOut_AssLn
.LN4882:
	.stabn  68,0,2657,.LN4882-Emit_EmitNtfreg		# line 2657, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4883:
	.stabn  68,0,2657,.LN4883-Emit_EmitNtfreg		# line 2657, column 21
	.data
.Lab3419:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab3419,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4884:
	.stabn  68,0,2657,.LN4884-Emit_EmitNtfreg		# line 2657, column 39
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3141:
.LN4885:
	.stabn  68,0,2660,.LN4885-Emit_EmitNtfreg		# line 2660, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN4886:
	.stabn  68,0,2661,.LN4886-Emit_EmitNtfreg		# line 2661, column 10
	decl	Emit_s + 1536
.LN4887:
	.stabn  68,0,2662,.LN4887-Emit_EmitNtfreg		# line 2662, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3423
	cmpl	$4096,%eax
	jbe	.Lab3422
.Lab3423:
   	call	BoundErr_		
.Lab3422:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3420
.Lab3421:
.LN4888:
	.stabn  68,0,2663,.LN4888-Emit_EmitNtfreg		# line 2663, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3425
	cmpl	$4096,%eax
	jbe	.Lab3424
.Lab3425:
   	call	BoundErr_		
.Lab3424:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3420:
.LN4889:
	.stabn  68,0,2665,.LN4889-Emit_EmitNtfreg		# line 2665, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3426
.Lab3427:
.LN4890:
	.stabn  68,0,2666,.LN4890-Emit_EmitNtfreg		# line 2666, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4891:
	.stabn  68,0,2667,.LN4891-Emit_EmitNtfreg		# line 2667, column 11
	.data
.Lab3428:
 	.ascii	"Rule 150/1748 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3428,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4892:
	.stabn  68,0,2668,.LN4892-Emit_EmitNtfreg		# line 2668, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4893:
	.stabn  68,0,2669,.LN4893-Emit_EmitNtfreg		# line 2669, column 11
	.data
.Lab3429:
 	.ascii	" Float ->   freg\000"
	.text
	pushl	$16
	leal	.Lab3429,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4894:
	.stabn  68,0,2670,.LN4894-Emit_EmitNtfreg		# line 2670, column 11
	call	InOut_WriteLn
.LN4895:
	.stabn  68,0,2671,.LN4895-Emit_EmitNtfreg		# line 2671, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4896:
	.stabn  68,0,2672,.LN4896-Emit_EmitNtfreg		# line 2672, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4897:
	.stabn  68,0,2672,.LN4897-Emit_EmitNtfreg		# line 2672, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4898:
	.stabn  68,0,2673,.LN4898-Emit_EmitNtfreg		# line 2673, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3432
.Lab3431:
.LN4899:
	.stabn  68,0,2673,.LN4899-Emit_EmitNtfreg		# line 2673, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3430
.Lab3432:
.LN4900:
	.stabn  68,0,2673,.LN4900-Emit_EmitNtfreg		# line 2673, column 61
	call	InOut_WriteLn
.Lab3430:
.LN4901:
	.stabn  68,0,2674,.LN4901-Emit_EmitNtfreg		# line 2674, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4902:
	.stabn  68,0,2675,.LN4902-Emit_EmitNtfreg		# line 2675, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3434
	cmpl	$4096,%eax
	jbe	.Lab3433
.Lab3434:
   	call	BoundErr_		
.Lab3433:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3426:
.LN4903:
	.stabn  68,0,2678,.LN4903-Emit_EmitNtfreg		# line 2678, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN4904:
	.stabn  68,0,2679,.LN4904-Emit_EmitNtfreg		# line 2679, column 9
	call	Emit_PushFStack
.LN4905:
	.stabn  68,0,2680,.LN4905-Emit_EmitNtfreg		# line 2680, column 2
	.data
.Lab3435:
 	.ascii	"\011fildl\011\000"
	.text
	pushl	$7
	leal	.Lab3435,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4906:
	.stabn  68,0,2680,.LN4906-Emit_EmitNtfreg		# line 2680, column 30
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN4907:
	.stabn  68,0,2680,.LN4907-Emit_EmitNtfreg		# line 2680, column 56
	call	CgAssOut_AssLn
.LN4908:
	.stabn  68,0,2681,.LN4908-Emit_EmitNtfreg		# line 2681, column 2
	.data
.Lab3436:
 	.ascii	"\011cmpl\011$0x7fffffff,\000"
	.text
	pushl	$18
	leal	.Lab3436,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4909:
	.stabn  68,0,2681,.LN4909-Emit_EmitNtfreg		# line 2681, column 42
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN4910:
	.stabn  68,0,2681,.LN4910-Emit_EmitNtfreg		# line 2681, column 68
	call	CgAssOut_AssLn
.LN4911:
	.stabn  68,0,2682,.LN4911-Emit_EmitNtfreg		# line 2682, column 2
	.data
.Lab3437:
 	.ascii	"\011jbe\011\000"
	.text
	pushl	$5
	leal	.Lab3437,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4912:
	.stabn  68,0,2682,.LN4912-Emit_EmitNtfreg		# line 2682, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4913:
	.stabn  68,0,2682,.LN4913-Emit_EmitNtfreg		# line 2682, column 49
	call	CgAssOut_AssLn
.LN4914:
	.stabn  68,0,2683,.LN4914-Emit_EmitNtfreg		# line 2683, column 2
	.data
.Lab3438:
 	.ascii	"\011faddl\011TwoExp32_\000"
	.text
	pushl	$16
	leal	.Lab3438,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4915:
	.stabn  68,0,2683,.LN4915-Emit_EmitNtfreg		# line 2683, column 39
	call	CgAssOut_AssLn
.LN4916:
	.stabn  68,0,2684,.LN4916-Emit_EmitNtfreg		# line 2684, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN4917:
	.stabn  68,0,2684,.LN4917-Emit_EmitNtfreg		# line 2684, column 21
	.data
.Lab3439:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab3439,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4918:
	.stabn  68,0,2684,.LN4918-Emit_EmitNtfreg		# line 2684, column 39
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3140:
.LN4919:
	.stabn  68,0,2687,.LN4919-Emit_EmitNtfreg		# line 2687, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4920:
	.stabn  68,0,2688,.LN4920-Emit_EmitNtfreg		# line 2688, column 10
	decl	Emit_s + 1536
.LN4921:
	.stabn  68,0,2689,.LN4921-Emit_EmitNtfreg		# line 2689, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3443
	cmpl	$4096,%eax
	jbe	.Lab3442
.Lab3443:
   	call	BoundErr_		
.Lab3442:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3440
.Lab3441:
.LN4922:
	.stabn  68,0,2690,.LN4922-Emit_EmitNtfreg		# line 2690, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3445
	cmpl	$4096,%eax
	jbe	.Lab3444
.Lab3445:
   	call	BoundErr_		
.Lab3444:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3440:
.LN4923:
	.stabn  68,0,2692,.LN4923-Emit_EmitNtfreg		# line 2692, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3446
.Lab3447:
.LN4924:
	.stabn  68,0,2693,.LN4924-Emit_EmitNtfreg		# line 2693, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4925:
	.stabn  68,0,2694,.LN4925-Emit_EmitNtfreg		# line 2694, column 11
	.data
.Lab3448:
 	.ascii	"Rule 151/1582 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3448,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4926:
	.stabn  68,0,2695,.LN4926-Emit_EmitNtfreg		# line 2695, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4927:
	.stabn  68,0,2696,.LN4927-Emit_EmitNtfreg		# line 2696, column 11
	.data
.Lab3449:
 	.ascii	" FloatAbs ->   freg\000"
	.text
	pushl	$19
	leal	.Lab3449,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4928:
	.stabn  68,0,2697,.LN4928-Emit_EmitNtfreg		# line 2697, column 11
	call	InOut_WriteLn
.LN4929:
	.stabn  68,0,2698,.LN4929-Emit_EmitNtfreg		# line 2698, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4930:
	.stabn  68,0,2699,.LN4930-Emit_EmitNtfreg		# line 2699, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4931:
	.stabn  68,0,2699,.LN4931-Emit_EmitNtfreg		# line 2699, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4932:
	.stabn  68,0,2700,.LN4932-Emit_EmitNtfreg		# line 2700, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3452
.Lab3451:
.LN4933:
	.stabn  68,0,2700,.LN4933-Emit_EmitNtfreg		# line 2700, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3450
.Lab3452:
.LN4934:
	.stabn  68,0,2700,.LN4934-Emit_EmitNtfreg		# line 2700, column 61
	call	InOut_WriteLn
.Lab3450:
.LN4935:
	.stabn  68,0,2701,.LN4935-Emit_EmitNtfreg		# line 2701, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4936:
	.stabn  68,0,2702,.LN4936-Emit_EmitNtfreg		# line 2702, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3454
	cmpl	$4096,%eax
	jbe	.Lab3453
.Lab3454:
   	call	BoundErr_		
.Lab3453:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3446:
.LN4937:
	.stabn  68,0,2704,.LN4937-Emit_EmitNtfreg		# line 2704, column 2
	.data
.Lab3455:
 	.ascii	"\011fabs \000"
	.text
	pushl	$6
	leal	.Lab3455,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4938:
	.stabn  68,0,2704,.LN4938-Emit_EmitNtfreg		# line 2704, column 27
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3139:
.LN4939:
	.stabn  68,0,2706,.LN4939-Emit_EmitNtfreg		# line 2706, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4940:
	.stabn  68,0,2707,.LN4940-Emit_EmitNtfreg		# line 2707, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN4941:
	.stabn  68,0,2708,.LN4941-Emit_EmitNtfreg		# line 2708, column 10
	decl	Emit_s + 1536
.LN4942:
	.stabn  68,0,2709,.LN4942-Emit_EmitNtfreg		# line 2709, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3459
	cmpl	$4096,%eax
	jbe	.Lab3458
.Lab3459:
   	call	BoundErr_		
.Lab3458:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3456
.Lab3457:
.LN4943:
	.stabn  68,0,2710,.LN4943-Emit_EmitNtfreg		# line 2710, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3461
	cmpl	$4096,%eax
	jbe	.Lab3460
.Lab3461:
   	call	BoundErr_		
.Lab3460:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3456:
.LN4944:
	.stabn  68,0,2712,.LN4944-Emit_EmitNtfreg		# line 2712, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3462
.Lab3463:
.LN4945:
	.stabn  68,0,2713,.LN4945-Emit_EmitNtfreg		# line 2713, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4946:
	.stabn  68,0,2714,.LN4946-Emit_EmitNtfreg		# line 2714, column 11
	.data
.Lab3464:
 	.ascii	"Rule 152/1577 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3464,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4947:
	.stabn  68,0,2715,.LN4947-Emit_EmitNtfreg		# line 2715, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4948:
	.stabn  68,0,2716,.LN4948-Emit_EmitNtfreg		# line 2716, column 11
	.data
.Lab3465:
 	.ascii	" FloatDiv ->   freg\000"
	.text
	pushl	$19
	leal	.Lab3465,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4949:
	.stabn  68,0,2717,.LN4949-Emit_EmitNtfreg		# line 2717, column 11
	call	InOut_WriteLn
.LN4950:
	.stabn  68,0,2718,.LN4950-Emit_EmitNtfreg		# line 2718, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4951:
	.stabn  68,0,2719,.LN4951-Emit_EmitNtfreg		# line 2719, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4952:
	.stabn  68,0,2719,.LN4952-Emit_EmitNtfreg		# line 2719, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4953:
	.stabn  68,0,2720,.LN4953-Emit_EmitNtfreg		# line 2720, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3468
.Lab3467:
.LN4954:
	.stabn  68,0,2720,.LN4954-Emit_EmitNtfreg		# line 2720, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3466
.Lab3468:
.LN4955:
	.stabn  68,0,2720,.LN4955-Emit_EmitNtfreg		# line 2720, column 61
	call	InOut_WriteLn
.Lab3466:
.LN4956:
	.stabn  68,0,2721,.LN4956-Emit_EmitNtfreg		# line 2721, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4957:
	.stabn  68,0,2722,.LN4957-Emit_EmitNtfreg		# line 2722, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3470
	cmpl	$4096,%eax
	jbe	.Lab3469
.Lab3470:
   	call	BoundErr_		
.Lab3469:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3462:
.LN4958:
	.stabn  68,0,2724,.LN4958-Emit_EmitNtfreg		# line 2724, column 2
	.data
.Lab3471:
 	.ascii	"fdivr\000"
	.text
	pushl	$5
	leal	.Lab3471,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3138:
.LN4959:
	.stabn  68,0,2726,.LN4959-Emit_EmitNtfreg		# line 2726, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN4960:
	.stabn  68,0,2727,.LN4960-Emit_EmitNtfreg		# line 2727, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN4961:
	.stabn  68,0,2728,.LN4961-Emit_EmitNtfreg		# line 2728, column 10
	decl	Emit_s + 1536
.LN4962:
	.stabn  68,0,2729,.LN4962-Emit_EmitNtfreg		# line 2729, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3475
	cmpl	$4096,%eax
	jbe	.Lab3474
.Lab3475:
   	call	BoundErr_		
.Lab3474:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3472
.Lab3473:
.LN4963:
	.stabn  68,0,2730,.LN4963-Emit_EmitNtfreg		# line 2730, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3477
	cmpl	$4096,%eax
	jbe	.Lab3476
.Lab3477:
   	call	BoundErr_		
.Lab3476:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3472:
.LN4964:
	.stabn  68,0,2732,.LN4964-Emit_EmitNtfreg		# line 2732, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3478
.Lab3479:
.LN4965:
	.stabn  68,0,2733,.LN4965-Emit_EmitNtfreg		# line 2733, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4966:
	.stabn  68,0,2734,.LN4966-Emit_EmitNtfreg		# line 2734, column 11
	.data
.Lab3480:
 	.ascii	"Rule 153/1572 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3480,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4967:
	.stabn  68,0,2735,.LN4967-Emit_EmitNtfreg		# line 2735, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4968:
	.stabn  68,0,2736,.LN4968-Emit_EmitNtfreg		# line 2736, column 11
	.data
.Lab3481:
 	.ascii	" FloatDiv ->   freg\000"
	.text
	pushl	$19
	leal	.Lab3481,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4969:
	.stabn  68,0,2737,.LN4969-Emit_EmitNtfreg		# line 2737, column 11
	call	InOut_WriteLn
.LN4970:
	.stabn  68,0,2738,.LN4970-Emit_EmitNtfreg		# line 2738, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4971:
	.stabn  68,0,2739,.LN4971-Emit_EmitNtfreg		# line 2739, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4972:
	.stabn  68,0,2739,.LN4972-Emit_EmitNtfreg		# line 2739, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4973:
	.stabn  68,0,2740,.LN4973-Emit_EmitNtfreg		# line 2740, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3484
.Lab3483:
.LN4974:
	.stabn  68,0,2740,.LN4974-Emit_EmitNtfreg		# line 2740, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3482
.Lab3484:
.LN4975:
	.stabn  68,0,2740,.LN4975-Emit_EmitNtfreg		# line 2740, column 61
	call	InOut_WriteLn
.Lab3482:
.LN4976:
	.stabn  68,0,2741,.LN4976-Emit_EmitNtfreg		# line 2741, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4977:
	.stabn  68,0,2742,.LN4977-Emit_EmitNtfreg		# line 2742, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3486
	cmpl	$4096,%eax
	jbe	.Lab3485
.Lab3486:
   	call	BoundErr_		
.Lab3485:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3478:
.LN4978:
	.stabn  68,0,2744,.LN4978-Emit_EmitNtfreg		# line 2744, column 2
	.data
.Lab3487:
 	.ascii	"fdiv\000"
	.text
	pushl	$4
	leal	.Lab3487,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3137:
.LN4979:
	.stabn  68,0,2746,.LN4979-Emit_EmitNtfreg		# line 2746, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN4980:
	.stabn  68,0,2747,.LN4980-Emit_EmitNtfreg		# line 2747, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN4981:
	.stabn  68,0,2748,.LN4981-Emit_EmitNtfreg		# line 2748, column 10
	decl	Emit_s + 1536
.LN4982:
	.stabn  68,0,2749,.LN4982-Emit_EmitNtfreg		# line 2749, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3491
	cmpl	$4096,%eax
	jbe	.Lab3490
.Lab3491:
   	call	BoundErr_		
.Lab3490:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3488
.Lab3489:
.LN4983:
	.stabn  68,0,2750,.LN4983-Emit_EmitNtfreg		# line 2750, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3493
	cmpl	$4096,%eax
	jbe	.Lab3492
.Lab3493:
   	call	BoundErr_		
.Lab3492:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3488:
.LN4984:
	.stabn  68,0,2752,.LN4984-Emit_EmitNtfreg		# line 2752, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3494
.Lab3495:
.LN4985:
	.stabn  68,0,2753,.LN4985-Emit_EmitNtfreg		# line 2753, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4986:
	.stabn  68,0,2754,.LN4986-Emit_EmitNtfreg		# line 2754, column 11
	.data
.Lab3496:
 	.ascii	"Rule 154/1567 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3496,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4987:
	.stabn  68,0,2755,.LN4987-Emit_EmitNtfreg		# line 2755, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN4988:
	.stabn  68,0,2756,.LN4988-Emit_EmitNtfreg		# line 2756, column 11
	.data
.Lab3497:
 	.ascii	" FloatDiv ->   freg\000"
	.text
	pushl	$19
	leal	.Lab3497,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN4989:
	.stabn  68,0,2757,.LN4989-Emit_EmitNtfreg		# line 2757, column 11
	call	InOut_WriteLn
.LN4990:
	.stabn  68,0,2758,.LN4990-Emit_EmitNtfreg		# line 2758, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4991:
	.stabn  68,0,2759,.LN4991-Emit_EmitNtfreg		# line 2759, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN4992:
	.stabn  68,0,2759,.LN4992-Emit_EmitNtfreg		# line 2759, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN4993:
	.stabn  68,0,2760,.LN4993-Emit_EmitNtfreg		# line 2760, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3500
.Lab3499:
.LN4994:
	.stabn  68,0,2760,.LN4994-Emit_EmitNtfreg		# line 2760, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3498
.Lab3500:
.LN4995:
	.stabn  68,0,2760,.LN4995-Emit_EmitNtfreg		# line 2760, column 61
	call	InOut_WriteLn
.Lab3498:
.LN4996:
	.stabn  68,0,2761,.LN4996-Emit_EmitNtfreg		# line 2761, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN4997:
	.stabn  68,0,2762,.LN4997-Emit_EmitNtfreg		# line 2762, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3502
	cmpl	$4096,%eax
	jbe	.Lab3501
.Lab3502:
   	call	BoundErr_		
.Lab3501:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3494:
.LN4998:
	.stabn  68,0,2764,.LN4998-Emit_EmitNtfreg		# line 2764, column 2
	.data
.Lab3503:
 	.ascii	"\011fdivr\000"
	.text
	pushl	$6
	leal	.Lab3503,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN4999:
	.stabn  68,0,2764,.LN4999-Emit_EmitNtfreg		# line 2764, column 27
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5000:
	.stabn  68,0,2764,.LN5000-Emit_EmitNtfreg		# line 2764, column 64
	.data
.Lab3504:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3504,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5001:
	.stabn  68,0,2764,.LN5001-Emit_EmitNtfreg		# line 2764, column 86
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5002:
	.stabn  68,0,2764,.LN5002-Emit_EmitNtfreg		# line 2764, column 112
	.data
.Lab3505:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3505,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5003:
	.stabn  68,0,2764,.LN5003-Emit_EmitNtfreg		# line 2764, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3136:
.LN5004:
	.stabn  68,0,2766,.LN5004-Emit_EmitNtfreg		# line 2766, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5005:
	.stabn  68,0,2767,.LN5005-Emit_EmitNtfreg		# line 2767, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5006:
	.stabn  68,0,2768,.LN5006-Emit_EmitNtfreg		# line 2768, column 10
	decl	Emit_s + 1536
.LN5007:
	.stabn  68,0,2769,.LN5007-Emit_EmitNtfreg		# line 2769, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3509
	cmpl	$4096,%eax
	jbe	.Lab3508
.Lab3509:
   	call	BoundErr_		
.Lab3508:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3506
.Lab3507:
.LN5008:
	.stabn  68,0,2770,.LN5008-Emit_EmitNtfreg		# line 2770, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3511
	cmpl	$4096,%eax
	jbe	.Lab3510
.Lab3511:
   	call	BoundErr_		
.Lab3510:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3506:
.LN5009:
	.stabn  68,0,2772,.LN5009-Emit_EmitNtfreg		# line 2772, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3512
.Lab3513:
.LN5010:
	.stabn  68,0,2773,.LN5010-Emit_EmitNtfreg		# line 2773, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5011:
	.stabn  68,0,2774,.LN5011-Emit_EmitNtfreg		# line 2774, column 11
	.data
.Lab3514:
 	.ascii	"Rule 155/1562 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3514,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5012:
	.stabn  68,0,2775,.LN5012-Emit_EmitNtfreg		# line 2775, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5013:
	.stabn  68,0,2776,.LN5013-Emit_EmitNtfreg		# line 2776, column 11
	.data
.Lab3515:
 	.ascii	" FloatDiv ->   freg\000"
	.text
	pushl	$19
	leal	.Lab3515,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5014:
	.stabn  68,0,2777,.LN5014-Emit_EmitNtfreg		# line 2777, column 11
	call	InOut_WriteLn
.LN5015:
	.stabn  68,0,2778,.LN5015-Emit_EmitNtfreg		# line 2778, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5016:
	.stabn  68,0,2779,.LN5016-Emit_EmitNtfreg		# line 2779, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5017:
	.stabn  68,0,2779,.LN5017-Emit_EmitNtfreg		# line 2779, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5018:
	.stabn  68,0,2780,.LN5018-Emit_EmitNtfreg		# line 2780, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3518
.Lab3517:
.LN5019:
	.stabn  68,0,2780,.LN5019-Emit_EmitNtfreg		# line 2780, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3516
.Lab3518:
.LN5020:
	.stabn  68,0,2780,.LN5020-Emit_EmitNtfreg		# line 2780, column 61
	call	InOut_WriteLn
.Lab3516:
.LN5021:
	.stabn  68,0,2781,.LN5021-Emit_EmitNtfreg		# line 2781, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5022:
	.stabn  68,0,2782,.LN5022-Emit_EmitNtfreg		# line 2782, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3520
	cmpl	$4096,%eax
	jbe	.Lab3519
.Lab3520:
   	call	BoundErr_		
.Lab3519:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3512:
.LN5023:
	.stabn  68,0,2784,.LN5023-Emit_EmitNtfreg		# line 2784, column 2
	.data
.Lab3521:
 	.ascii	"\011fdiv\000"
	.text
	pushl	$5
	leal	.Lab3521,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5024:
	.stabn  68,0,2784,.LN5024-Emit_EmitNtfreg		# line 2784, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5025:
	.stabn  68,0,2784,.LN5025-Emit_EmitNtfreg		# line 2784, column 63
	.data
.Lab3522:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3522,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5026:
	.stabn  68,0,2784,.LN5026-Emit_EmitNtfreg		# line 2784, column 86
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5027:
	.stabn  68,0,2784,.LN5027-Emit_EmitNtfreg		# line 2784, column 112
	.data
.Lab3523:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3523,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5028:
	.stabn  68,0,2784,.LN5028-Emit_EmitNtfreg		# line 2784, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3135:
.LN5029:
	.stabn  68,0,2786,.LN5029-Emit_EmitNtfreg		# line 2786, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5030:
	.stabn  68,0,2787,.LN5030-Emit_EmitNtfreg		# line 2787, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN5031:
	.stabn  68,0,2788,.LN5031-Emit_EmitNtfreg		# line 2788, column 10
	decl	Emit_s + 1536
.LN5032:
	.stabn  68,0,2789,.LN5032-Emit_EmitNtfreg		# line 2789, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3527
	cmpl	$4096,%eax
	jbe	.Lab3526
.Lab3527:
   	call	BoundErr_		
.Lab3526:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3524
.Lab3525:
.LN5033:
	.stabn  68,0,2790,.LN5033-Emit_EmitNtfreg		# line 2790, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3529
	cmpl	$4096,%eax
	jbe	.Lab3528
.Lab3529:
   	call	BoundErr_		
.Lab3528:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3524:
.LN5034:
	.stabn  68,0,2792,.LN5034-Emit_EmitNtfreg		# line 2792, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3530
.Lab3531:
.LN5035:
	.stabn  68,0,2793,.LN5035-Emit_EmitNtfreg		# line 2793, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5036:
	.stabn  68,0,2794,.LN5036-Emit_EmitNtfreg		# line 2794, column 11
	.data
.Lab3532:
 	.ascii	"Rule 156/1557 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3532,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5037:
	.stabn  68,0,2795,.LN5037-Emit_EmitNtfreg		# line 2795, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5038:
	.stabn  68,0,2796,.LN5038-Emit_EmitNtfreg		# line 2796, column 11
	.data
.Lab3533:
 	.ascii	" FloatMult ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3533,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5039:
	.stabn  68,0,2797,.LN5039-Emit_EmitNtfreg		# line 2797, column 11
	call	InOut_WriteLn
.LN5040:
	.stabn  68,0,2798,.LN5040-Emit_EmitNtfreg		# line 2798, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5041:
	.stabn  68,0,2799,.LN5041-Emit_EmitNtfreg		# line 2799, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5042:
	.stabn  68,0,2799,.LN5042-Emit_EmitNtfreg		# line 2799, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5043:
	.stabn  68,0,2800,.LN5043-Emit_EmitNtfreg		# line 2800, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3536
.Lab3535:
.LN5044:
	.stabn  68,0,2800,.LN5044-Emit_EmitNtfreg		# line 2800, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3534
.Lab3536:
.LN5045:
	.stabn  68,0,2800,.LN5045-Emit_EmitNtfreg		# line 2800, column 61
	call	InOut_WriteLn
.Lab3534:
.LN5046:
	.stabn  68,0,2801,.LN5046-Emit_EmitNtfreg		# line 2801, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5047:
	.stabn  68,0,2802,.LN5047-Emit_EmitNtfreg		# line 2802, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3538
	cmpl	$4096,%eax
	jbe	.Lab3537
.Lab3538:
   	call	BoundErr_		
.Lab3537:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3530:
.LN5048:
	.stabn  68,0,2804,.LN5048-Emit_EmitNtfreg		# line 2804, column 2
	.data
.Lab3539:
 	.ascii	"fmul\000"
	.text
	pushl	$4
	leal	.Lab3539,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3134:
.LN5049:
	.stabn  68,0,2806,.LN5049-Emit_EmitNtfreg		# line 2806, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN5050:
	.stabn  68,0,2807,.LN5050-Emit_EmitNtfreg		# line 2807, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5051:
	.stabn  68,0,2808,.LN5051-Emit_EmitNtfreg		# line 2808, column 10
	decl	Emit_s + 1536
.LN5052:
	.stabn  68,0,2809,.LN5052-Emit_EmitNtfreg		# line 2809, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3543
	cmpl	$4096,%eax
	jbe	.Lab3542
.Lab3543:
   	call	BoundErr_		
.Lab3542:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3540
.Lab3541:
.LN5053:
	.stabn  68,0,2810,.LN5053-Emit_EmitNtfreg		# line 2810, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3545
	cmpl	$4096,%eax
	jbe	.Lab3544
.Lab3545:
   	call	BoundErr_		
.Lab3544:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3540:
.LN5054:
	.stabn  68,0,2812,.LN5054-Emit_EmitNtfreg		# line 2812, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3546
.Lab3547:
.LN5055:
	.stabn  68,0,2813,.LN5055-Emit_EmitNtfreg		# line 2813, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5056:
	.stabn  68,0,2814,.LN5056-Emit_EmitNtfreg		# line 2814, column 11
	.data
.Lab3548:
 	.ascii	"Rule 157/1557 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3548,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5057:
	.stabn  68,0,2815,.LN5057-Emit_EmitNtfreg		# line 2815, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5058:
	.stabn  68,0,2816,.LN5058-Emit_EmitNtfreg		# line 2816, column 11
	.data
.Lab3549:
 	.ascii	" FloatMult ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3549,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5059:
	.stabn  68,0,2817,.LN5059-Emit_EmitNtfreg		# line 2817, column 11
	call	InOut_WriteLn
.LN5060:
	.stabn  68,0,2818,.LN5060-Emit_EmitNtfreg		# line 2818, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5061:
	.stabn  68,0,2819,.LN5061-Emit_EmitNtfreg		# line 2819, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5062:
	.stabn  68,0,2819,.LN5062-Emit_EmitNtfreg		# line 2819, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5063:
	.stabn  68,0,2820,.LN5063-Emit_EmitNtfreg		# line 2820, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3552
.Lab3551:
.LN5064:
	.stabn  68,0,2820,.LN5064-Emit_EmitNtfreg		# line 2820, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3550
.Lab3552:
.LN5065:
	.stabn  68,0,2820,.LN5065-Emit_EmitNtfreg		# line 2820, column 61
	call	InOut_WriteLn
.Lab3550:
.LN5066:
	.stabn  68,0,2821,.LN5066-Emit_EmitNtfreg		# line 2821, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5067:
	.stabn  68,0,2822,.LN5067-Emit_EmitNtfreg		# line 2822, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3554
	cmpl	$4096,%eax
	jbe	.Lab3553
.Lab3554:
   	call	BoundErr_		
.Lab3553:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3546:
.LN5068:
	.stabn  68,0,2824,.LN5068-Emit_EmitNtfreg		# line 2824, column 2
	.data
.Lab3555:
 	.ascii	"fmul\000"
	.text
	pushl	$4
	leal	.Lab3555,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3133:
.LN5069:
	.stabn  68,0,2826,.LN5069-Emit_EmitNtfreg		# line 2826, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5070:
	.stabn  68,0,2827,.LN5070-Emit_EmitNtfreg		# line 2827, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5071:
	.stabn  68,0,2828,.LN5071-Emit_EmitNtfreg		# line 2828, column 10
	decl	Emit_s + 1536
.LN5072:
	.stabn  68,0,2829,.LN5072-Emit_EmitNtfreg		# line 2829, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3559
	cmpl	$4096,%eax
	jbe	.Lab3558
.Lab3559:
   	call	BoundErr_		
.Lab3558:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3556
.Lab3557:
.LN5073:
	.stabn  68,0,2830,.LN5073-Emit_EmitNtfreg		# line 2830, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3561
	cmpl	$4096,%eax
	jbe	.Lab3560
.Lab3561:
   	call	BoundErr_		
.Lab3560:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3556:
.LN5074:
	.stabn  68,0,2832,.LN5074-Emit_EmitNtfreg		# line 2832, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3562
.Lab3563:
.LN5075:
	.stabn  68,0,2833,.LN5075-Emit_EmitNtfreg		# line 2833, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5076:
	.stabn  68,0,2834,.LN5076-Emit_EmitNtfreg		# line 2834, column 11
	.data
.Lab3564:
 	.ascii	"Rule 158/1552 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3564,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5077:
	.stabn  68,0,2835,.LN5077-Emit_EmitNtfreg		# line 2835, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5078:
	.stabn  68,0,2836,.LN5078-Emit_EmitNtfreg		# line 2836, column 11
	.data
.Lab3565:
 	.ascii	" FloatMult ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3565,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5079:
	.stabn  68,0,2837,.LN5079-Emit_EmitNtfreg		# line 2837, column 11
	call	InOut_WriteLn
.LN5080:
	.stabn  68,0,2838,.LN5080-Emit_EmitNtfreg		# line 2838, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5081:
	.stabn  68,0,2839,.LN5081-Emit_EmitNtfreg		# line 2839, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5082:
	.stabn  68,0,2839,.LN5082-Emit_EmitNtfreg		# line 2839, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5083:
	.stabn  68,0,2840,.LN5083-Emit_EmitNtfreg		# line 2840, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3568
.Lab3567:
.LN5084:
	.stabn  68,0,2840,.LN5084-Emit_EmitNtfreg		# line 2840, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3566
.Lab3568:
.LN5085:
	.stabn  68,0,2840,.LN5085-Emit_EmitNtfreg		# line 2840, column 61
	call	InOut_WriteLn
.Lab3566:
.LN5086:
	.stabn  68,0,2841,.LN5086-Emit_EmitNtfreg		# line 2841, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5087:
	.stabn  68,0,2842,.LN5087-Emit_EmitNtfreg		# line 2842, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3570
	cmpl	$4096,%eax
	jbe	.Lab3569
.Lab3570:
   	call	BoundErr_		
.Lab3569:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3562:
.LN5088:
	.stabn  68,0,2844,.LN5088-Emit_EmitNtfreg		# line 2844, column 2
	.data
.Lab3571:
 	.ascii	"\011fmul\000"
	.text
	pushl	$5
	leal	.Lab3571,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5089:
	.stabn  68,0,2844,.LN5089-Emit_EmitNtfreg		# line 2844, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5090:
	.stabn  68,0,2844,.LN5090-Emit_EmitNtfreg		# line 2844, column 64
	.data
.Lab3572:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3572,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5091:
	.stabn  68,0,2844,.LN5091-Emit_EmitNtfreg		# line 2844, column 86
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5092:
	.stabn  68,0,2844,.LN5092-Emit_EmitNtfreg		# line 2844, column 112
	.data
.Lab3573:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3573,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5093:
	.stabn  68,0,2844,.LN5093-Emit_EmitNtfreg		# line 2844, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3132:
.LN5094:
	.stabn  68,0,2846,.LN5094-Emit_EmitNtfreg		# line 2846, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5095:
	.stabn  68,0,2847,.LN5095-Emit_EmitNtfreg		# line 2847, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5096:
	.stabn  68,0,2848,.LN5096-Emit_EmitNtfreg		# line 2848, column 10
	decl	Emit_s + 1536
.LN5097:
	.stabn  68,0,2849,.LN5097-Emit_EmitNtfreg		# line 2849, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3577
	cmpl	$4096,%eax
	jbe	.Lab3576
.Lab3577:
   	call	BoundErr_		
.Lab3576:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3574
.Lab3575:
.LN5098:
	.stabn  68,0,2850,.LN5098-Emit_EmitNtfreg		# line 2850, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3579
	cmpl	$4096,%eax
	jbe	.Lab3578
.Lab3579:
   	call	BoundErr_		
.Lab3578:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3574:
.LN5099:
	.stabn  68,0,2852,.LN5099-Emit_EmitNtfreg		# line 2852, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3580
.Lab3581:
.LN5100:
	.stabn  68,0,2853,.LN5100-Emit_EmitNtfreg		# line 2853, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5101:
	.stabn  68,0,2854,.LN5101-Emit_EmitNtfreg		# line 2854, column 11
	.data
.Lab3582:
 	.ascii	"Rule 159/1552 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3582,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5102:
	.stabn  68,0,2855,.LN5102-Emit_EmitNtfreg		# line 2855, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5103:
	.stabn  68,0,2856,.LN5103-Emit_EmitNtfreg		# line 2856, column 11
	.data
.Lab3583:
 	.ascii	" FloatMult ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3583,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5104:
	.stabn  68,0,2857,.LN5104-Emit_EmitNtfreg		# line 2857, column 11
	call	InOut_WriteLn
.LN5105:
	.stabn  68,0,2858,.LN5105-Emit_EmitNtfreg		# line 2858, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5106:
	.stabn  68,0,2859,.LN5106-Emit_EmitNtfreg		# line 2859, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5107:
	.stabn  68,0,2859,.LN5107-Emit_EmitNtfreg		# line 2859, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5108:
	.stabn  68,0,2860,.LN5108-Emit_EmitNtfreg		# line 2860, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3586
.Lab3585:
.LN5109:
	.stabn  68,0,2860,.LN5109-Emit_EmitNtfreg		# line 2860, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3584
.Lab3586:
.LN5110:
	.stabn  68,0,2860,.LN5110-Emit_EmitNtfreg		# line 2860, column 61
	call	InOut_WriteLn
.Lab3584:
.LN5111:
	.stabn  68,0,2861,.LN5111-Emit_EmitNtfreg		# line 2861, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5112:
	.stabn  68,0,2862,.LN5112-Emit_EmitNtfreg		# line 2862, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3588
	cmpl	$4096,%eax
	jbe	.Lab3587
.Lab3588:
   	call	BoundErr_		
.Lab3587:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3580:
.LN5113:
	.stabn  68,0,2864,.LN5113-Emit_EmitNtfreg		# line 2864, column 2
	.data
.Lab3589:
 	.ascii	"\011fmul\000"
	.text
	pushl	$5
	leal	.Lab3589,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5114:
	.stabn  68,0,2864,.LN5114-Emit_EmitNtfreg		# line 2864, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5115:
	.stabn  68,0,2864,.LN5115-Emit_EmitNtfreg		# line 2864, column 64
	.data
.Lab3590:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3590,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5116:
	.stabn  68,0,2864,.LN5116-Emit_EmitNtfreg		# line 2864, column 86
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5117:
	.stabn  68,0,2864,.LN5117-Emit_EmitNtfreg		# line 2864, column 112
	.data
.Lab3591:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3591,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5118:
	.stabn  68,0,2864,.LN5118-Emit_EmitNtfreg		# line 2864, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3131:
.LN5119:
	.stabn  68,0,2866,.LN5119-Emit_EmitNtfreg		# line 2866, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5120:
	.stabn  68,0,2867,.LN5120-Emit_EmitNtfreg		# line 2867, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN5121:
	.stabn  68,0,2868,.LN5121-Emit_EmitNtfreg		# line 2868, column 10
	decl	Emit_s + 1536
.LN5122:
	.stabn  68,0,2869,.LN5122-Emit_EmitNtfreg		# line 2869, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3595
	cmpl	$4096,%eax
	jbe	.Lab3594
.Lab3595:
   	call	BoundErr_		
.Lab3594:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3592
.Lab3593:
.LN5123:
	.stabn  68,0,2870,.LN5123-Emit_EmitNtfreg		# line 2870, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3597
	cmpl	$4096,%eax
	jbe	.Lab3596
.Lab3597:
   	call	BoundErr_		
.Lab3596:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3592:
.LN5124:
	.stabn  68,0,2872,.LN5124-Emit_EmitNtfreg		# line 2872, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3598
.Lab3599:
.LN5125:
	.stabn  68,0,2873,.LN5125-Emit_EmitNtfreg		# line 2873, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5126:
	.stabn  68,0,2874,.LN5126-Emit_EmitNtfreg		# line 2874, column 11
	.data
.Lab3600:
 	.ascii	"Rule 160/1547 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3600,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5127:
	.stabn  68,0,2875,.LN5127-Emit_EmitNtfreg		# line 2875, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5128:
	.stabn  68,0,2876,.LN5128-Emit_EmitNtfreg		# line 2876, column 11
	.data
.Lab3601:
 	.ascii	" FloatMinus ->   freg\000"
	.text
	pushl	$21
	leal	.Lab3601,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5129:
	.stabn  68,0,2877,.LN5129-Emit_EmitNtfreg		# line 2877, column 11
	call	InOut_WriteLn
.LN5130:
	.stabn  68,0,2878,.LN5130-Emit_EmitNtfreg		# line 2878, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5131:
	.stabn  68,0,2879,.LN5131-Emit_EmitNtfreg		# line 2879, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5132:
	.stabn  68,0,2879,.LN5132-Emit_EmitNtfreg		# line 2879, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5133:
	.stabn  68,0,2880,.LN5133-Emit_EmitNtfreg		# line 2880, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3604
.Lab3603:
.LN5134:
	.stabn  68,0,2880,.LN5134-Emit_EmitNtfreg		# line 2880, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3602
.Lab3604:
.LN5135:
	.stabn  68,0,2880,.LN5135-Emit_EmitNtfreg		# line 2880, column 61
	call	InOut_WriteLn
.Lab3602:
.LN5136:
	.stabn  68,0,2881,.LN5136-Emit_EmitNtfreg		# line 2881, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5137:
	.stabn  68,0,2882,.LN5137-Emit_EmitNtfreg		# line 2882, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3606
	cmpl	$4096,%eax
	jbe	.Lab3605
.Lab3606:
   	call	BoundErr_		
.Lab3605:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3598:
.LN5138:
	.stabn  68,0,2884,.LN5138-Emit_EmitNtfreg		# line 2884, column 2
	.data
.Lab3607:
 	.ascii	"fsub\000"
	.text
	pushl	$4
	leal	.Lab3607,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3130:
.LN5139:
	.stabn  68,0,2886,.LN5139-Emit_EmitNtfreg		# line 2886, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN5140:
	.stabn  68,0,2887,.LN5140-Emit_EmitNtfreg		# line 2887, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5141:
	.stabn  68,0,2888,.LN5141-Emit_EmitNtfreg		# line 2888, column 10
	decl	Emit_s + 1536
.LN5142:
	.stabn  68,0,2889,.LN5142-Emit_EmitNtfreg		# line 2889, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3611
	cmpl	$4096,%eax
	jbe	.Lab3610
.Lab3611:
   	call	BoundErr_		
.Lab3610:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3608
.Lab3609:
.LN5143:
	.stabn  68,0,2890,.LN5143-Emit_EmitNtfreg		# line 2890, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3613
	cmpl	$4096,%eax
	jbe	.Lab3612
.Lab3613:
   	call	BoundErr_		
.Lab3612:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3608:
.LN5144:
	.stabn  68,0,2892,.LN5144-Emit_EmitNtfreg		# line 2892, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3614
.Lab3615:
.LN5145:
	.stabn  68,0,2893,.LN5145-Emit_EmitNtfreg		# line 2893, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5146:
	.stabn  68,0,2894,.LN5146-Emit_EmitNtfreg		# line 2894, column 11
	.data
.Lab3616:
 	.ascii	"Rule 161/1542 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3616,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5147:
	.stabn  68,0,2895,.LN5147-Emit_EmitNtfreg		# line 2895, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5148:
	.stabn  68,0,2896,.LN5148-Emit_EmitNtfreg		# line 2896, column 11
	.data
.Lab3617:
 	.ascii	" FloatMinus ->   freg\000"
	.text
	pushl	$21
	leal	.Lab3617,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5149:
	.stabn  68,0,2897,.LN5149-Emit_EmitNtfreg		# line 2897, column 11
	call	InOut_WriteLn
.LN5150:
	.stabn  68,0,2898,.LN5150-Emit_EmitNtfreg		# line 2898, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5151:
	.stabn  68,0,2899,.LN5151-Emit_EmitNtfreg		# line 2899, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5152:
	.stabn  68,0,2899,.LN5152-Emit_EmitNtfreg		# line 2899, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5153:
	.stabn  68,0,2900,.LN5153-Emit_EmitNtfreg		# line 2900, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3620
.Lab3619:
.LN5154:
	.stabn  68,0,2900,.LN5154-Emit_EmitNtfreg		# line 2900, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3618
.Lab3620:
.LN5155:
	.stabn  68,0,2900,.LN5155-Emit_EmitNtfreg		# line 2900, column 61
	call	InOut_WriteLn
.Lab3618:
.LN5156:
	.stabn  68,0,2901,.LN5156-Emit_EmitNtfreg		# line 2901, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5157:
	.stabn  68,0,2902,.LN5157-Emit_EmitNtfreg		# line 2902, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3622
	cmpl	$4096,%eax
	jbe	.Lab3621
.Lab3622:
   	call	BoundErr_		
.Lab3621:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3614:
.LN5158:
	.stabn  68,0,2904,.LN5158-Emit_EmitNtfreg		# line 2904, column 2
	.data
.Lab3623:
 	.ascii	"fsubr\000"
	.text
	pushl	$5
	leal	.Lab3623,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3129:
.LN5159:
	.stabn  68,0,2906,.LN5159-Emit_EmitNtfreg		# line 2906, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5160:
	.stabn  68,0,2907,.LN5160-Emit_EmitNtfreg		# line 2907, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5161:
	.stabn  68,0,2908,.LN5161-Emit_EmitNtfreg		# line 2908, column 10
	decl	Emit_s + 1536
.LN5162:
	.stabn  68,0,2909,.LN5162-Emit_EmitNtfreg		# line 2909, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3627
	cmpl	$4096,%eax
	jbe	.Lab3626
.Lab3627:
   	call	BoundErr_		
.Lab3626:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3624
.Lab3625:
.LN5163:
	.stabn  68,0,2910,.LN5163-Emit_EmitNtfreg		# line 2910, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3629
	cmpl	$4096,%eax
	jbe	.Lab3628
.Lab3629:
   	call	BoundErr_		
.Lab3628:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3624:
.LN5164:
	.stabn  68,0,2912,.LN5164-Emit_EmitNtfreg		# line 2912, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3630
.Lab3631:
.LN5165:
	.stabn  68,0,2913,.LN5165-Emit_EmitNtfreg		# line 2913, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5166:
	.stabn  68,0,2914,.LN5166-Emit_EmitNtfreg		# line 2914, column 11
	.data
.Lab3632:
 	.ascii	"Rule 162/1537 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3632,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5167:
	.stabn  68,0,2915,.LN5167-Emit_EmitNtfreg		# line 2915, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5168:
	.stabn  68,0,2916,.LN5168-Emit_EmitNtfreg		# line 2916, column 11
	.data
.Lab3633:
 	.ascii	" FloatMinus ->   freg\000"
	.text
	pushl	$21
	leal	.Lab3633,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5169:
	.stabn  68,0,2917,.LN5169-Emit_EmitNtfreg		# line 2917, column 11
	call	InOut_WriteLn
.LN5170:
	.stabn  68,0,2918,.LN5170-Emit_EmitNtfreg		# line 2918, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5171:
	.stabn  68,0,2919,.LN5171-Emit_EmitNtfreg		# line 2919, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5172:
	.stabn  68,0,2919,.LN5172-Emit_EmitNtfreg		# line 2919, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5173:
	.stabn  68,0,2920,.LN5173-Emit_EmitNtfreg		# line 2920, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3636
.Lab3635:
.LN5174:
	.stabn  68,0,2920,.LN5174-Emit_EmitNtfreg		# line 2920, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3634
.Lab3636:
.LN5175:
	.stabn  68,0,2920,.LN5175-Emit_EmitNtfreg		# line 2920, column 61
	call	InOut_WriteLn
.Lab3634:
.LN5176:
	.stabn  68,0,2921,.LN5176-Emit_EmitNtfreg		# line 2921, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5177:
	.stabn  68,0,2922,.LN5177-Emit_EmitNtfreg		# line 2922, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3638
	cmpl	$4096,%eax
	jbe	.Lab3637
.Lab3638:
   	call	BoundErr_		
.Lab3637:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3630:
.LN5178:
	.stabn  68,0,2924,.LN5178-Emit_EmitNtfreg		# line 2924, column 2
	.data
.Lab3639:
 	.ascii	"\011fsubr\000"
	.text
	pushl	$6
	leal	.Lab3639,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5179:
	.stabn  68,0,2924,.LN5179-Emit_EmitNtfreg		# line 2924, column 27
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5180:
	.stabn  68,0,2924,.LN5180-Emit_EmitNtfreg		# line 2924, column 66
	.data
.Lab3640:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3640,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5181:
	.stabn  68,0,2924,.LN5181-Emit_EmitNtfreg		# line 2924, column 86
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5182:
	.stabn  68,0,2924,.LN5182-Emit_EmitNtfreg		# line 2924, column 112
	.data
.Lab3641:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3641,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5183:
	.stabn  68,0,2924,.LN5183-Emit_EmitNtfreg		# line 2924, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3128:
.LN5184:
	.stabn  68,0,2926,.LN5184-Emit_EmitNtfreg		# line 2926, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5185:
	.stabn  68,0,2927,.LN5185-Emit_EmitNtfreg		# line 2927, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5186:
	.stabn  68,0,2928,.LN5186-Emit_EmitNtfreg		# line 2928, column 10
	decl	Emit_s + 1536
.LN5187:
	.stabn  68,0,2929,.LN5187-Emit_EmitNtfreg		# line 2929, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3645
	cmpl	$4096,%eax
	jbe	.Lab3644
.Lab3645:
   	call	BoundErr_		
.Lab3644:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3642
.Lab3643:
.LN5188:
	.stabn  68,0,2930,.LN5188-Emit_EmitNtfreg		# line 2930, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3647
	cmpl	$4096,%eax
	jbe	.Lab3646
.Lab3647:
   	call	BoundErr_		
.Lab3646:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3642:
.LN5189:
	.stabn  68,0,2932,.LN5189-Emit_EmitNtfreg		# line 2932, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3648
.Lab3649:
.LN5190:
	.stabn  68,0,2933,.LN5190-Emit_EmitNtfreg		# line 2933, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5191:
	.stabn  68,0,2934,.LN5191-Emit_EmitNtfreg		# line 2934, column 11
	.data
.Lab3650:
 	.ascii	"Rule 163/1532 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3650,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5192:
	.stabn  68,0,2935,.LN5192-Emit_EmitNtfreg		# line 2935, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5193:
	.stabn  68,0,2936,.LN5193-Emit_EmitNtfreg		# line 2936, column 11
	.data
.Lab3651:
 	.ascii	" FloatMinus ->   freg\000"
	.text
	pushl	$21
	leal	.Lab3651,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5194:
	.stabn  68,0,2937,.LN5194-Emit_EmitNtfreg		# line 2937, column 11
	call	InOut_WriteLn
.LN5195:
	.stabn  68,0,2938,.LN5195-Emit_EmitNtfreg		# line 2938, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5196:
	.stabn  68,0,2939,.LN5196-Emit_EmitNtfreg		# line 2939, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5197:
	.stabn  68,0,2939,.LN5197-Emit_EmitNtfreg		# line 2939, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5198:
	.stabn  68,0,2940,.LN5198-Emit_EmitNtfreg		# line 2940, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3654
.Lab3653:
.LN5199:
	.stabn  68,0,2940,.LN5199-Emit_EmitNtfreg		# line 2940, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3652
.Lab3654:
.LN5200:
	.stabn  68,0,2940,.LN5200-Emit_EmitNtfreg		# line 2940, column 61
	call	InOut_WriteLn
.Lab3652:
.LN5201:
	.stabn  68,0,2941,.LN5201-Emit_EmitNtfreg		# line 2941, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5202:
	.stabn  68,0,2942,.LN5202-Emit_EmitNtfreg		# line 2942, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3656
	cmpl	$4096,%eax
	jbe	.Lab3655
.Lab3656:
   	call	BoundErr_		
.Lab3655:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3648:
.LN5203:
	.stabn  68,0,2944,.LN5203-Emit_EmitNtfreg		# line 2944, column 2
	.data
.Lab3657:
 	.ascii	"\011fsub\000"
	.text
	pushl	$5
	leal	.Lab3657,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5204:
	.stabn  68,0,2944,.LN5204-Emit_EmitNtfreg		# line 2944, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5205:
	.stabn  68,0,2944,.LN5205-Emit_EmitNtfreg		# line 2944, column 65
	.data
.Lab3658:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3658,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5206:
	.stabn  68,0,2944,.LN5206-Emit_EmitNtfreg		# line 2944, column 86
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5207:
	.stabn  68,0,2944,.LN5207-Emit_EmitNtfreg		# line 2944, column 112
	.data
.Lab3659:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3659,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5208:
	.stabn  68,0,2944,.LN5208-Emit_EmitNtfreg		# line 2944, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3127:
.LN5209:
	.stabn  68,0,2946,.LN5209-Emit_EmitNtfreg		# line 2946, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5210:
	.stabn  68,0,2947,.LN5210-Emit_EmitNtfreg		# line 2947, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN5211:
	.stabn  68,0,2948,.LN5211-Emit_EmitNtfreg		# line 2948, column 10
	decl	Emit_s + 1536
.LN5212:
	.stabn  68,0,2949,.LN5212-Emit_EmitNtfreg		# line 2949, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3663
	cmpl	$4096,%eax
	jbe	.Lab3662
.Lab3663:
   	call	BoundErr_		
.Lab3662:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3660
.Lab3661:
.LN5213:
	.stabn  68,0,2950,.LN5213-Emit_EmitNtfreg		# line 2950, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3665
	cmpl	$4096,%eax
	jbe	.Lab3664
.Lab3665:
   	call	BoundErr_		
.Lab3664:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3660:
.LN5214:
	.stabn  68,0,2952,.LN5214-Emit_EmitNtfreg		# line 2952, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3666
.Lab3667:
.LN5215:
	.stabn  68,0,2953,.LN5215-Emit_EmitNtfreg		# line 2953, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5216:
	.stabn  68,0,2954,.LN5216-Emit_EmitNtfreg		# line 2954, column 11
	.data
.Lab3668:
 	.ascii	"Rule 164/1527 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3668,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5217:
	.stabn  68,0,2955,.LN5217-Emit_EmitNtfreg		# line 2955, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5218:
	.stabn  68,0,2956,.LN5218-Emit_EmitNtfreg		# line 2956, column 11
	.data
.Lab3669:
 	.ascii	" FloatPlus ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3669,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5219:
	.stabn  68,0,2957,.LN5219-Emit_EmitNtfreg		# line 2957, column 11
	call	InOut_WriteLn
.LN5220:
	.stabn  68,0,2958,.LN5220-Emit_EmitNtfreg		# line 2958, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5221:
	.stabn  68,0,2959,.LN5221-Emit_EmitNtfreg		# line 2959, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5222:
	.stabn  68,0,2959,.LN5222-Emit_EmitNtfreg		# line 2959, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5223:
	.stabn  68,0,2960,.LN5223-Emit_EmitNtfreg		# line 2960, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3672
.Lab3671:
.LN5224:
	.stabn  68,0,2960,.LN5224-Emit_EmitNtfreg		# line 2960, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3670
.Lab3672:
.LN5225:
	.stabn  68,0,2960,.LN5225-Emit_EmitNtfreg		# line 2960, column 61
	call	InOut_WriteLn
.Lab3670:
.LN5226:
	.stabn  68,0,2961,.LN5226-Emit_EmitNtfreg		# line 2961, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5227:
	.stabn  68,0,2962,.LN5227-Emit_EmitNtfreg		# line 2962, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3674
	cmpl	$4096,%eax
	jbe	.Lab3673
.Lab3674:
   	call	BoundErr_		
.Lab3673:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3666:
.LN5228:
	.stabn  68,0,2964,.LN5228-Emit_EmitNtfreg		# line 2964, column 2
	.data
.Lab3675:
 	.ascii	"fadd\000"
	.text
	pushl	$4
	leal	.Lab3675,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3126:
.LN5229:
	.stabn  68,0,2966,.LN5229-Emit_EmitNtfreg		# line 2966, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN5230:
	.stabn  68,0,2967,.LN5230-Emit_EmitNtfreg		# line 2967, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5231:
	.stabn  68,0,2968,.LN5231-Emit_EmitNtfreg		# line 2968, column 10
	decl	Emit_s + 1536
.LN5232:
	.stabn  68,0,2969,.LN5232-Emit_EmitNtfreg		# line 2969, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3679
	cmpl	$4096,%eax
	jbe	.Lab3678
.Lab3679:
   	call	BoundErr_		
.Lab3678:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3676
.Lab3677:
.LN5233:
	.stabn  68,0,2970,.LN5233-Emit_EmitNtfreg		# line 2970, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3681
	cmpl	$4096,%eax
	jbe	.Lab3680
.Lab3681:
   	call	BoundErr_		
.Lab3680:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3676:
.LN5234:
	.stabn  68,0,2972,.LN5234-Emit_EmitNtfreg		# line 2972, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3682
.Lab3683:
.LN5235:
	.stabn  68,0,2973,.LN5235-Emit_EmitNtfreg		# line 2973, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5236:
	.stabn  68,0,2974,.LN5236-Emit_EmitNtfreg		# line 2974, column 11
	.data
.Lab3684:
 	.ascii	"Rule 165/1527 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3684,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5237:
	.stabn  68,0,2975,.LN5237-Emit_EmitNtfreg		# line 2975, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5238:
	.stabn  68,0,2976,.LN5238-Emit_EmitNtfreg		# line 2976, column 11
	.data
.Lab3685:
 	.ascii	" FloatPlus ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3685,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5239:
	.stabn  68,0,2977,.LN5239-Emit_EmitNtfreg		# line 2977, column 11
	call	InOut_WriteLn
.LN5240:
	.stabn  68,0,2978,.LN5240-Emit_EmitNtfreg		# line 2978, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5241:
	.stabn  68,0,2979,.LN5241-Emit_EmitNtfreg		# line 2979, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5242:
	.stabn  68,0,2979,.LN5242-Emit_EmitNtfreg		# line 2979, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5243:
	.stabn  68,0,2980,.LN5243-Emit_EmitNtfreg		# line 2980, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3688
.Lab3687:
.LN5244:
	.stabn  68,0,2980,.LN5244-Emit_EmitNtfreg		# line 2980, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3686
.Lab3688:
.LN5245:
	.stabn  68,0,2980,.LN5245-Emit_EmitNtfreg		# line 2980, column 61
	call	InOut_WriteLn
.Lab3686:
.LN5246:
	.stabn  68,0,2981,.LN5246-Emit_EmitNtfreg		# line 2981, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5247:
	.stabn  68,0,2982,.LN5247-Emit_EmitNtfreg		# line 2982, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3690
	cmpl	$4096,%eax
	jbe	.Lab3689
.Lab3690:
   	call	BoundErr_		
.Lab3689:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3682:
.LN5248:
	.stabn  68,0,2984,.LN5248-Emit_EmitNtfreg		# line 2984, column 2
	.data
.Lab3691:
 	.ascii	"fadd\000"
	.text
	pushl	$4
	leal	.Lab3691,%eax
	pushl	%eax
	call	Emit_FloatOperation
	addl	$8, %esp
	jmp	.Lab3121
.Lab3125:
.LN5249:
	.stabn  68,0,2986,.LN5249-Emit_EmitNtfreg		# line 2986, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5250:
	.stabn  68,0,2987,.LN5250-Emit_EmitNtfreg		# line 2987, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5251:
	.stabn  68,0,2988,.LN5251-Emit_EmitNtfreg		# line 2988, column 10
	decl	Emit_s + 1536
.LN5252:
	.stabn  68,0,2989,.LN5252-Emit_EmitNtfreg		# line 2989, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3695
	cmpl	$4096,%eax
	jbe	.Lab3694
.Lab3695:
   	call	BoundErr_		
.Lab3694:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3692
.Lab3693:
.LN5253:
	.stabn  68,0,2990,.LN5253-Emit_EmitNtfreg		# line 2990, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3697
	cmpl	$4096,%eax
	jbe	.Lab3696
.Lab3697:
   	call	BoundErr_		
.Lab3696:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3692:
.LN5254:
	.stabn  68,0,2992,.LN5254-Emit_EmitNtfreg		# line 2992, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3698
.Lab3699:
.LN5255:
	.stabn  68,0,2993,.LN5255-Emit_EmitNtfreg		# line 2993, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5256:
	.stabn  68,0,2994,.LN5256-Emit_EmitNtfreg		# line 2994, column 11
	.data
.Lab3700:
 	.ascii	"Rule 166/1522 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3700,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5257:
	.stabn  68,0,2995,.LN5257-Emit_EmitNtfreg		# line 2995, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5258:
	.stabn  68,0,2996,.LN5258-Emit_EmitNtfreg		# line 2996, column 11
	.data
.Lab3701:
 	.ascii	" FloatPlus ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3701,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5259:
	.stabn  68,0,2997,.LN5259-Emit_EmitNtfreg		# line 2997, column 11
	call	InOut_WriteLn
.LN5260:
	.stabn  68,0,2998,.LN5260-Emit_EmitNtfreg		# line 2998, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5261:
	.stabn  68,0,2999,.LN5261-Emit_EmitNtfreg		# line 2999, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5262:
	.stabn  68,0,2999,.LN5262-Emit_EmitNtfreg		# line 2999, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5263:
	.stabn  68,0,3000,.LN5263-Emit_EmitNtfreg		# line 3000, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3704
.Lab3703:
.LN5264:
	.stabn  68,0,3000,.LN5264-Emit_EmitNtfreg		# line 3000, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3702
.Lab3704:
.LN5265:
	.stabn  68,0,3000,.LN5265-Emit_EmitNtfreg		# line 3000, column 61
	call	InOut_WriteLn
.Lab3702:
.LN5266:
	.stabn  68,0,3001,.LN5266-Emit_EmitNtfreg		# line 3001, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5267:
	.stabn  68,0,3002,.LN5267-Emit_EmitNtfreg		# line 3002, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3706
	cmpl	$4096,%eax
	jbe	.Lab3705
.Lab3706:
   	call	BoundErr_		
.Lab3705:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3698:
.LN5268:
	.stabn  68,0,3004,.LN5268-Emit_EmitNtfreg		# line 3004, column 2
	.data
.Lab3707:
 	.ascii	"\011fadd\000"
	.text
	pushl	$5
	leal	.Lab3707,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5269:
	.stabn  68,0,3004,.LN5269-Emit_EmitNtfreg		# line 3004, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5270:
	.stabn  68,0,3004,.LN5270-Emit_EmitNtfreg		# line 3004, column 64
	.data
.Lab3708:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3708,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5271:
	.stabn  68,0,3004,.LN5271-Emit_EmitNtfreg		# line 3004, column 86
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5272:
	.stabn  68,0,3004,.LN5272-Emit_EmitNtfreg		# line 3004, column 112
	.data
.Lab3709:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3709,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5273:
	.stabn  68,0,3004,.LN5273-Emit_EmitNtfreg		# line 3004, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3124:
.LN5274:
	.stabn  68,0,3006,.LN5274-Emit_EmitNtfreg		# line 3006, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5275:
	.stabn  68,0,3007,.LN5275-Emit_EmitNtfreg		# line 3007, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5276:
	.stabn  68,0,3008,.LN5276-Emit_EmitNtfreg		# line 3008, column 10
	decl	Emit_s + 1536
.LN5277:
	.stabn  68,0,3009,.LN5277-Emit_EmitNtfreg		# line 3009, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3713
	cmpl	$4096,%eax
	jbe	.Lab3712
.Lab3713:
   	call	BoundErr_		
.Lab3712:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3710
.Lab3711:
.LN5278:
	.stabn  68,0,3010,.LN5278-Emit_EmitNtfreg		# line 3010, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3715
	cmpl	$4096,%eax
	jbe	.Lab3714
.Lab3715:
   	call	BoundErr_		
.Lab3714:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3710:
.LN5279:
	.stabn  68,0,3012,.LN5279-Emit_EmitNtfreg		# line 3012, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3716
.Lab3717:
.LN5280:
	.stabn  68,0,3013,.LN5280-Emit_EmitNtfreg		# line 3013, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5281:
	.stabn  68,0,3014,.LN5281-Emit_EmitNtfreg		# line 3014, column 11
	.data
.Lab3718:
 	.ascii	"Rule 167/1522 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3718,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5282:
	.stabn  68,0,3015,.LN5282-Emit_EmitNtfreg		# line 3015, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5283:
	.stabn  68,0,3016,.LN5283-Emit_EmitNtfreg		# line 3016, column 11
	.data
.Lab3719:
 	.ascii	" FloatPlus ->   freg\000"
	.text
	pushl	$20
	leal	.Lab3719,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5284:
	.stabn  68,0,3017,.LN5284-Emit_EmitNtfreg		# line 3017, column 11
	call	InOut_WriteLn
.LN5285:
	.stabn  68,0,3018,.LN5285-Emit_EmitNtfreg		# line 3018, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5286:
	.stabn  68,0,3019,.LN5286-Emit_EmitNtfreg		# line 3019, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5287:
	.stabn  68,0,3019,.LN5287-Emit_EmitNtfreg		# line 3019, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5288:
	.stabn  68,0,3020,.LN5288-Emit_EmitNtfreg		# line 3020, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3722
.Lab3721:
.LN5289:
	.stabn  68,0,3020,.LN5289-Emit_EmitNtfreg		# line 3020, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3720
.Lab3722:
.LN5290:
	.stabn  68,0,3020,.LN5290-Emit_EmitNtfreg		# line 3020, column 61
	call	InOut_WriteLn
.Lab3720:
.LN5291:
	.stabn  68,0,3021,.LN5291-Emit_EmitNtfreg		# line 3021, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5292:
	.stabn  68,0,3022,.LN5292-Emit_EmitNtfreg		# line 3022, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3724
	cmpl	$4096,%eax
	jbe	.Lab3723
.Lab3724:
   	call	BoundErr_		
.Lab3723:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3716:
.LN5293:
	.stabn  68,0,3024,.LN5293-Emit_EmitNtfreg		# line 3024, column 2
	.data
.Lab3725:
 	.ascii	"\011fadd\000"
	.text
	pushl	$5
	leal	.Lab3725,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5294:
	.stabn  68,0,3024,.LN5294-Emit_EmitNtfreg		# line 3024, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5295:
	.stabn  68,0,3024,.LN5295-Emit_EmitNtfreg		# line 3024, column 64
	.data
.Lab3726:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3726,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5296:
	.stabn  68,0,3024,.LN5296-Emit_EmitNtfreg		# line 3024, column 86
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5297:
	.stabn  68,0,3024,.LN5297-Emit_EmitNtfreg		# line 3024, column 112
	.data
.Lab3727:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab3727,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5298:
	.stabn  68,0,3024,.LN5298-Emit_EmitNtfreg		# line 3024, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3123:
.LN5299:
	.stabn  68,0,3026,.LN5299-Emit_EmitNtfreg		# line 3026, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5300:
	.stabn  68,0,3027,.LN5300-Emit_EmitNtfreg		# line 3027, column 10
	decl	Emit_s + 1536
.LN5301:
	.stabn  68,0,3028,.LN5301-Emit_EmitNtfreg		# line 3028, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3731
	cmpl	$4096,%eax
	jbe	.Lab3730
.Lab3731:
   	call	BoundErr_		
.Lab3730:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3728
.Lab3729:
.LN5302:
	.stabn  68,0,3029,.LN5302-Emit_EmitNtfreg		# line 3029, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3733
	cmpl	$4096,%eax
	jbe	.Lab3732
.Lab3733:
   	call	BoundErr_		
.Lab3732:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3728:
.LN5303:
	.stabn  68,0,3031,.LN5303-Emit_EmitNtfreg		# line 3031, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3734
.Lab3735:
.LN5304:
	.stabn  68,0,3032,.LN5304-Emit_EmitNtfreg		# line 3032, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5305:
	.stabn  68,0,3033,.LN5305-Emit_EmitNtfreg		# line 3033, column 11
	.data
.Lab3736:
 	.ascii	"Rule 168/1517 Cost=\000"
	.text
	pushl	$19
	leal	.Lab3736,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5306:
	.stabn  68,0,3034,.LN5306-Emit_EmitNtfreg		# line 3034, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5307:
	.stabn  68,0,3035,.LN5307-Emit_EmitNtfreg		# line 3035, column 11
	.data
.Lab3737:
 	.ascii	" FloatNegate ->   freg\000"
	.text
	pushl	$22
	leal	.Lab3737,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5308:
	.stabn  68,0,3036,.LN5308-Emit_EmitNtfreg		# line 3036, column 11
	call	InOut_WriteLn
.LN5309:
	.stabn  68,0,3037,.LN5309-Emit_EmitNtfreg		# line 3037, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5310:
	.stabn  68,0,3038,.LN5310-Emit_EmitNtfreg		# line 3038, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5311:
	.stabn  68,0,3038,.LN5311-Emit_EmitNtfreg		# line 3038, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5312:
	.stabn  68,0,3039,.LN5312-Emit_EmitNtfreg		# line 3039, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3740
.Lab3739:
.LN5313:
	.stabn  68,0,3039,.LN5313-Emit_EmitNtfreg		# line 3039, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3738
.Lab3740:
.LN5314:
	.stabn  68,0,3039,.LN5314-Emit_EmitNtfreg		# line 3039, column 61
	call	InOut_WriteLn
.Lab3738:
.LN5315:
	.stabn  68,0,3040,.LN5315-Emit_EmitNtfreg		# line 3040, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5316:
	.stabn  68,0,3041,.LN5316-Emit_EmitNtfreg		# line 3041, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3742
	cmpl	$4096,%eax
	jbe	.Lab3741
.Lab3742:
   	call	BoundErr_		
.Lab3741:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3734:
.LN5317:
	.stabn  68,0,3043,.LN5317-Emit_EmitNtfreg		# line 3043, column 2
	.data
.Lab3743:
 	.ascii	"\011fchs \000"
	.text
	pushl	$6
	leal	.Lab3743,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5318:
	.stabn  68,0,3043,.LN5318-Emit_EmitNtfreg		# line 3043, column 27
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3122:
.LN5319:
	.stabn  68,0,3045,.LN5319-Emit_EmitNtfreg		# line 3045, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5320:
	.stabn  68,0,3046,.LN5320-Emit_EmitNtfreg		# line 3046, column 10
	decl	Emit_s + 1536
.LN5321:
	.stabn  68,0,3047,.LN5321-Emit_EmitNtfreg		# line 3047, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3747
	cmpl	$4096,%eax
	jbe	.Lab3746
.Lab3747:
   	call	BoundErr_		
.Lab3746:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3744
.Lab3745:
.LN5322:
	.stabn  68,0,3048,.LN5322-Emit_EmitNtfreg		# line 3048, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3749
	cmpl	$4096,%eax
	jbe	.Lab3748
.Lab3749:
   	call	BoundErr_		
.Lab3748:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3744:
.LN5323:
	.stabn  68,0,3050,.LN5323-Emit_EmitNtfreg		# line 3050, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3750
.Lab3751:
.LN5324:
	.stabn  68,0,3051,.LN5324-Emit_EmitNtfreg		# line 3051, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5325:
	.stabn  68,0,3052,.LN5325-Emit_EmitNtfreg		# line 3052, column 11
	.data
.Lab3752:
 	.ascii	"Rule 169/490 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3752,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5326:
	.stabn  68,0,3053,.LN5326-Emit_EmitNtfreg		# line 3053, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	92(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5327:
	.stabn  68,0,3054,.LN5327-Emit_EmitNtfreg		# line 3054, column 11
	.data
.Lab3753:
 	.ascii	" CMem ->   freg\000"
	.text
	pushl	$15
	leal	.Lab3753,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5328:
	.stabn  68,0,3055,.LN5328-Emit_EmitNtfreg		# line 3055, column 11
	call	InOut_WriteLn
.LN5329:
	.stabn  68,0,3056,.LN5329-Emit_EmitNtfreg		# line 3056, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5330:
	.stabn  68,0,3057,.LN5330-Emit_EmitNtfreg		# line 3057, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5331:
	.stabn  68,0,3057,.LN5331-Emit_EmitNtfreg		# line 3057, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5332:
	.stabn  68,0,3058,.LN5332-Emit_EmitNtfreg		# line 3058, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3756
.Lab3755:
.LN5333:
	.stabn  68,0,3058,.LN5333-Emit_EmitNtfreg		# line 3058, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3754
.Lab3756:
.LN5334:
	.stabn  68,0,3058,.LN5334-Emit_EmitNtfreg		# line 3058, column 61
	call	InOut_WriteLn
.Lab3754:
.LN5335:
	.stabn  68,0,3059,.LN5335-Emit_EmitNtfreg		# line 3059, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5336:
	.stabn  68,0,3060,.LN5336-Emit_EmitNtfreg		# line 3060, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3758
	cmpl	$4096,%eax
	jbe	.Lab3757
.Lab3758:
   	call	BoundErr_		
.Lab3757:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3750:
.LN5337:
	.stabn  68,0,3063,.LN5337-Emit_EmitNtfreg		# line 3063, column 9
	call	Emit_PushFStack
.LN5338:
	.stabn  68,0,3064,.LN5338-Emit_EmitNtfreg		# line 3064, column 2
	.data
.Lab3759:
 	.ascii	"\011fld\000"
	.text
	pushl	$4
	leal	.Lab3759,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5339:
	.stabn  68,0,3064,.LN5339-Emit_EmitNtfreg		# line 3064, column 25
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	82(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5340:
	.stabn  68,0,3064,.LN5340-Emit_EmitNtfreg		# line 3064, column 57
	.data
.Lab3760:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab3760,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5341:
	.stabn  68,0,3064,.LN5341-Emit_EmitNtfreg		# line 3064, column 78
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5342:
	.stabn  68,0,3064,.LN5342-Emit_EmitNtfreg		# line 3064, column 104
	call	CgAssOut_AssLn
	jmp	.Lab3121
.Lab3120:
	call	CaseErr_
.Lab3121:
.LN5343:
	.stabn  68,0,3067,.LN5343-Emit_EmitNtfreg		# line 3067, column 4
	cmpb	$0,IR_s + 133
	je	.Lab3761
.Lab3762:
.LN5344:
	.stabn  68,0,3068,.LN5344-Emit_EmitNtfreg		# line 3068, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5345:
	.stabn  68,0,3069,.LN5345-Emit_EmitNtfreg		# line 3069, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrfreg
	addl	$20, %esp
.LN5346:
	.stabn  68,0,3070,.LN5346-Emit_EmitNtfreg		# line 3070, column 8
	call	InOut_WriteLn
.Lab3761:
.LN5347:
	.stabn  68,0,3072,.LN5347-Emit_EmitNtfreg		# line 3072, column 4
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3766
	cmpl	$4096,%eax
	jbe	.Lab3765
.Lab3766:
   	call	BoundErr_		
.Lab3765:
	imull	$44,%eax 
	cmpb	$0,RegAlloc_s - 39(%eax)
	je	.Lab3763
.Lab3764:
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3768
	cmpl	$4096,%eax
	jbe	.Lab3767
.Lab3768:
   	call	BoundErr_		
.Lab3767:
	imull	$44,%eax 
	leal	RegAlloc_s - 40(%eax),%eax
	movl	%eax,-68(%ebp) 
.LN5348:
	.stabn  68,0,3075,.LN5348-Emit_EmitNtfreg		# line 3075, column 10
	movl	-68(%ebp),%eax
	cmpl	$0,4(%eax)
	je	.Lab3771
.Lab3770:
.LN5349:
	.stabn  68,0,3076,.LN5349-Emit_EmitNtfreg		# line 3076, column 13
	movl	-68(%ebp),%eax
	pushl	4(%eax)
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	Emit_Spill
	addl	$8, %esp
.LN5350:
	.stabn  68,0,3077,.LN5350-Emit_EmitNtfreg		# line 3077, column 13
	cmpb	$0,IR_s + 133
	je	.Lab3772
.Lab3773:
.LN5351:
	.stabn  68,0,3078,.LN5351-Emit_EmitNtfreg		# line 3078, column 17
	.data
.Lab3774:
 	.ascii	" Spill Register \000"
	.text
	pushl	$16
	leal	.Lab3774,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5352:
	.stabn  68,0,3079,.LN5352-Emit_EmitNtfreg		# line 3079, column 17
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN5353:
	.stabn  68,0,3080,.LN5353-Emit_EmitNtfreg		# line 3080, column 17
	.data
.Lab3775:
 	.ascii	" into \000"
	.text
	pushl	$6
	leal	.Lab3775,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5354:
	.stabn  68,0,3081,.LN5354-Emit_EmitNtfreg		# line 3081, column 17
	pushl	$1
	movl	-68(%ebp),%eax
	movl	4(%eax),%eax
	cmpl	$2147483647,%eax
	jbe	.Lab3776
.Lab3777:
   	call	BoundErr_		
.Lab3776:
	pushl	%eax
	call	InOut_WriteInt
	addl	$8, %esp
.LN5355:
	.stabn  68,0,3082,.LN5355-Emit_EmitNtfreg		# line 3082, column 17
	call	InOut_WriteLn
.Lab3772:
	jmp	.Lab3769
.Lab3771:
.LN5356:
	.stabn  68,0,3085,.LN5356-Emit_EmitNtfreg		# line 3085, column 13
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	movl	-68(%ebp),%eax
	movzbl	8(%eax),%eax
	pushl	%eax
	call	Emit_LR
	addl	$8, %esp
.LN5357:
	.stabn  68,0,3086,.LN5357-Emit_EmitNtfreg		# line 3086, column 13
	cmpb	$0,IR_s + 133
	je	.Lab3778
.Lab3779:
.LN5358:
	.stabn  68,0,3087,.LN5358-Emit_EmitNtfreg		# line 3087, column 17
	.data
.Lab3780:
 	.ascii	" Copy Register \000"
	.text
	pushl	$15
	leal	.Lab3780,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5359:
	.stabn  68,0,3088,.LN5359-Emit_EmitNtfreg		# line 3088, column 17
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN5360:
	.stabn  68,0,3089,.LN5360-Emit_EmitNtfreg		# line 3089, column 17
	.data
.Lab3781:
 	.ascii	" into \000"
	.text
	pushl	$6
	leal	.Lab3781,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5361:
	.stabn  68,0,3090,.LN5361-Emit_EmitNtfreg		# line 3090, column 17
	movl	-68(%ebp),%eax
	movzbl	8(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN5362:
	.stabn  68,0,3091,.LN5362-Emit_EmitNtfreg		# line 3091, column 17
	call	InOut_WriteLn
.Lab3778:
.Lab3769:
.Lab3763:
.LN5363:
	.stabn  68,0,3092,.LN5363-Emit_EmitNtfreg		# line 3092, column 0
.LBE17:
	leave
	ret
	.Lab3119 = 68
	.stabs "AT2:133",128,0,20,-64
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB17-Emit_EmitNtfreg
	.stabn 224,0,0,.LBE17-Emit_EmitNtfreg
	.stabs "Emit_EmitNtreg:F16",36,0,0,Emit_EmitNtreg
	.align 4
Emit_EmitNtreg:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab3782, %esp
.LN5364:
	.stabn  68,0,709,.LN5364-Emit_EmitNtreg		# line 709, column 1
.LBB18:
.LN5365:
	.stabn  68,0,710,.LN5365-Emit_EmitNtreg		# line 710, column 4
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movl	152(%eax),%eax
	.data
	.align 4
.Lab3852:
	.long	.Lab3851
	.long	.Lab3850
	.long	.Lab3849
	.long	.Lab3848
	.long	.Lab3847
	.long	.Lab3846
	.long	.Lab3845
	.long	.Lab3844
	.long	.Lab3843
	.long	.Lab3842
	.long	.Lab3841
	.long	.Lab3840
	.long	.Lab3839
	.long	.Lab3838
	.long	.Lab3837
	.long	.Lab3836
	.long	.Lab3835
	.long	.Lab3834
	.long	.Lab3833
	.long	.Lab3832
	.long	.Lab3831
	.long	.Lab3830
	.long	.Lab3829
	.long	.Lab3828
	.long	.Lab3827
	.long	.Lab3826
	.long	.Lab3825
	.long	.Lab3824
	.long	.Lab3823
	.long	.Lab3822
	.long	.Lab3821
	.long	.Lab3820
	.long	.Lab3819
	.long	.Lab3818
	.long	.Lab3817
	.long	.Lab3816
	.long	.Lab3815
	.long	.Lab3814
	.long	.Lab3813
	.long	.Lab3812
	.long	.Lab3811
	.long	.Lab3810
	.long	.Lab3809
	.long	.Lab3808
	.long	.Lab3807
	.long	.Lab3806
	.long	.Lab3805
	.long	.Lab3804
	.long	.Lab3803
	.long	.Lab3802
	.long	.Lab3801
	.long	.Lab3800
	.long	.Lab3799
	.long	.Lab3798
	.long	.Lab3797
	.long	.Lab3796
	.long	.Lab3795
	.long	.Lab3794
	.long	.Lab3793
	.long	.Lab3792
	.long	.Lab3791
	.long	.Lab3790
	.long	.Lab3789
	.long	.Lab3788
	.long	.Lab3787
	.long	.Lab3786
	.long	.Lab3785
	.text
	subl	$70,%eax
	jb	.Lab3783
	cmpl	$66,%eax
	ja	.Lab3783
	jmp	*.Lab3852(,%eax,4)
.Lab3851:
.LN5366:
	.stabn  68,0,712,.LN5366-Emit_EmitNtreg		# line 712, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5367:
	.stabn  68,0,713,.LN5367-Emit_EmitNtreg		# line 713, column 10
	decl	Emit_s + 1536
.LN5368:
	.stabn  68,0,714,.LN5368-Emit_EmitNtreg		# line 714, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3856
	cmpl	$4096,%eax
	jbe	.Lab3855
.Lab3856:
   	call	BoundErr_		
.Lab3855:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3853
.Lab3854:
.LN5369:
	.stabn  68,0,715,.LN5369-Emit_EmitNtreg		# line 715, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3858
	cmpl	$4096,%eax
	jbe	.Lab3857
.Lab3858:
   	call	BoundErr_		
.Lab3857:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3853:
.LN5370:
	.stabn  68,0,717,.LN5370-Emit_EmitNtreg		# line 717, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3859
.Lab3860:
.LN5371:
	.stabn  68,0,718,.LN5371-Emit_EmitNtreg		# line 718, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5372:
	.stabn  68,0,719,.LN5372-Emit_EmitNtreg		# line 719, column 11
	.data
.Lab3861:
 	.ascii	"Rule 70/2807 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3861,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5373:
	.stabn  68,0,720,.LN5373-Emit_EmitNtreg		# line 720, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5374:
	.stabn  68,0,721,.LN5374-Emit_EmitNtreg		# line 721, column 11
	.data
.Lab3862:
 	.ascii	" FunctionCall ->   reg\000"
	.text
	pushl	$22
	leal	.Lab3862,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5375:
	.stabn  68,0,722,.LN5375-Emit_EmitNtreg		# line 722, column 11
	call	InOut_WriteLn
.LN5376:
	.stabn  68,0,723,.LN5376-Emit_EmitNtreg		# line 723, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5377:
	.stabn  68,0,724,.LN5377-Emit_EmitNtreg		# line 724, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5378:
	.stabn  68,0,724,.LN5378-Emit_EmitNtreg		# line 724, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5379:
	.stabn  68,0,725,.LN5379-Emit_EmitNtreg		# line 725, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3865
.Lab3864:
.LN5380:
	.stabn  68,0,725,.LN5380-Emit_EmitNtreg		# line 725, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3863
.Lab3865:
.LN5381:
	.stabn  68,0,725,.LN5381-Emit_EmitNtreg		# line 725, column 61
	call	InOut_WriteLn
.Lab3863:
.LN5382:
	.stabn  68,0,726,.LN5382-Emit_EmitNtreg		# line 726, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5383:
	.stabn  68,0,727,.LN5383-Emit_EmitNtreg		# line 727, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3867
	cmpl	$4096,%eax
	jbe	.Lab3866
.Lab3867:
   	call	BoundErr_		
.Lab3866:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3859:
.LN5384:
	.stabn  68,0,730,.LN5384-Emit_EmitNtreg		# line 730, column 2
	.data
.Lab3868:
 	.ascii	"\011subl\011$4,%esp\000"
	.text
	pushl	$13
	leal	.Lab3868,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5385:
	.stabn  68,0,730,.LN5385-Emit_EmitNtreg		# line 730, column 37
	call	CgAssOut_AssLn
.LN5386:
	.stabn  68,0,731,.LN5386-Emit_EmitNtreg		# line 731, column 9
	pushl	$1
	call	Emit_CheckRoundMode
	addl	$4, %esp
.LN5387:
	.stabn  68,0,732,.LN5387-Emit_EmitNtreg		# line 732, column 2
	.data
.Lab3869:
 	.ascii	"\011fistpl\011(%esp)\000"
	.text
	pushl	$14
	leal	.Lab3869,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5388:
	.stabn  68,0,732,.LN5388-Emit_EmitNtreg		# line 732, column 36
	call	CgAssOut_AssLn
.LN5389:
	.stabn  68,0,733,.LN5389-Emit_EmitNtreg		# line 733, column 2
	.data
.Lab3870:
 	.ascii	"\011popl\011\000"
	.text
	pushl	$6
	leal	.Lab3870,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5390:
	.stabn  68,0,733,.LN5390-Emit_EmitNtreg		# line 733, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3872
	cmpl	$4096,%eax
	jbe	.Lab3871
.Lab3872:
   	call	BoundErr_		
.Lab3871:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5391:
	.stabn  68,0,733,.LN5391-Emit_EmitNtreg		# line 733, column 73
	call	CgAssOut_AssLn
.LN5392:
	.stabn  68,0,734,.LN5392-Emit_EmitNtreg		# line 734, column 9
	call	Emit_PopFStack
	jmp	.Lab3784
.Lab3850:
.LN5393:
	.stabn  68,0,737,.LN5393-Emit_EmitNtreg		# line 737, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5394:
	.stabn  68,0,738,.LN5394-Emit_EmitNtreg		# line 738, column 10
	decl	Emit_s + 1536
.LN5395:
	.stabn  68,0,739,.LN5395-Emit_EmitNtreg		# line 739, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3876
	cmpl	$4096,%eax
	jbe	.Lab3875
.Lab3876:
   	call	BoundErr_		
.Lab3875:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3873
.Lab3874:
.LN5396:
	.stabn  68,0,740,.LN5396-Emit_EmitNtreg		# line 740, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3878
	cmpl	$4096,%eax
	jbe	.Lab3877
.Lab3878:
   	call	BoundErr_		
.Lab3877:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3873:
.LN5397:
	.stabn  68,0,742,.LN5397-Emit_EmitNtreg		# line 742, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3879
.Lab3880:
.LN5398:
	.stabn  68,0,743,.LN5398-Emit_EmitNtreg		# line 743, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5399:
	.stabn  68,0,744,.LN5399-Emit_EmitNtreg		# line 744, column 11
	.data
.Lab3881:
 	.ascii	"Rule 71/2763 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3881,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5400:
	.stabn  68,0,745,.LN5400-Emit_EmitNtreg		# line 745, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5401:
	.stabn  68,0,746,.LN5401-Emit_EmitNtreg		# line 746, column 11
	.data
.Lab3882:
 	.ascii	" FunctionCall ->   reg\000"
	.text
	pushl	$22
	leal	.Lab3882,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5402:
	.stabn  68,0,747,.LN5402-Emit_EmitNtreg		# line 747, column 11
	call	InOut_WriteLn
.LN5403:
	.stabn  68,0,748,.LN5403-Emit_EmitNtreg		# line 748, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5404:
	.stabn  68,0,749,.LN5404-Emit_EmitNtreg		# line 749, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5405:
	.stabn  68,0,749,.LN5405-Emit_EmitNtreg		# line 749, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5406:
	.stabn  68,0,750,.LN5406-Emit_EmitNtreg		# line 750, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3885
.Lab3884:
.LN5407:
	.stabn  68,0,750,.LN5407-Emit_EmitNtreg		# line 750, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3883
.Lab3885:
.LN5408:
	.stabn  68,0,750,.LN5408-Emit_EmitNtreg		# line 750, column 61
	call	InOut_WriteLn
.Lab3883:
.LN5409:
	.stabn  68,0,751,.LN5409-Emit_EmitNtreg		# line 751, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5410:
	.stabn  68,0,752,.LN5410-Emit_EmitNtreg		# line 752, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3887
	cmpl	$4096,%eax
	jbe	.Lab3886
.Lab3887:
   	call	BoundErr_		
.Lab3886:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3879:
.LN5411:
	.stabn  68,0,755,.LN5411-Emit_EmitNtreg		# line 755, column 2
	.data
.Lab3888:
 	.ascii	"\011subl\011$4,%esp\000"
	.text
	pushl	$13
	leal	.Lab3888,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5412:
	.stabn  68,0,755,.LN5412-Emit_EmitNtreg		# line 755, column 37
	call	CgAssOut_AssLn
.LN5413:
	.stabn  68,0,756,.LN5413-Emit_EmitNtreg		# line 756, column 9
	pushl	$3
	call	Emit_CheckRoundMode
	addl	$4, %esp
.LN5414:
	.stabn  68,0,757,.LN5414-Emit_EmitNtreg		# line 757, column 2
	.data
.Lab3889:
 	.ascii	"\011fistpl\011(%esp)\000"
	.text
	pushl	$14
	leal	.Lab3889,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5415:
	.stabn  68,0,757,.LN5415-Emit_EmitNtreg		# line 757, column 36
	call	CgAssOut_AssLn
.LN5416:
	.stabn  68,0,758,.LN5416-Emit_EmitNtreg		# line 758, column 2
	.data
.Lab3890:
 	.ascii	"\011popl\011\000"
	.text
	pushl	$6
	leal	.Lab3890,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5417:
	.stabn  68,0,758,.LN5417-Emit_EmitNtreg		# line 758, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3892
	cmpl	$4096,%eax
	jbe	.Lab3891
.Lab3892:
   	call	BoundErr_		
.Lab3891:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5418:
	.stabn  68,0,758,.LN5418-Emit_EmitNtreg		# line 758, column 73
	call	CgAssOut_AssLn
.LN5419:
	.stabn  68,0,759,.LN5419-Emit_EmitNtreg		# line 759, column 9
	call	Emit_PopFStack
	jmp	.Lab3784
.Lab3849:
.LN5420:
	.stabn  68,0,762,.LN5420-Emit_EmitNtreg		# line 762, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN5421:
	.stabn  68,0,763,.LN5421-Emit_EmitNtreg		# line 763, column 10
	decl	Emit_s + 1536
.LN5422:
	.stabn  68,0,764,.LN5422-Emit_EmitNtreg		# line 764, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3896
	cmpl	$4096,%eax
	jbe	.Lab3895
.Lab3896:
   	call	BoundErr_		
.Lab3895:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3893
.Lab3894:
.LN5423:
	.stabn  68,0,765,.LN5423-Emit_EmitNtreg		# line 765, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3898
	cmpl	$4096,%eax
	jbe	.Lab3897
.Lab3898:
   	call	BoundErr_		
.Lab3897:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3893:
.LN5424:
	.stabn  68,0,767,.LN5424-Emit_EmitNtreg		# line 767, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3899
.Lab3900:
.LN5425:
	.stabn  68,0,768,.LN5425-Emit_EmitNtreg		# line 768, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5426:
	.stabn  68,0,769,.LN5426-Emit_EmitNtreg		# line 769, column 11
	.data
.Lab3901:
 	.ascii	"Rule 72/2522 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3901,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5427:
	.stabn  68,0,770,.LN5427-Emit_EmitNtreg		# line 770, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5428:
	.stabn  68,0,771,.LN5428-Emit_EmitNtreg		# line 771, column 11
	.data
.Lab3902:
 	.ascii	" FunctionCall ->   reg\000"
	.text
	pushl	$22
	leal	.Lab3902,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5429:
	.stabn  68,0,772,.LN5429-Emit_EmitNtreg		# line 772, column 11
	call	InOut_WriteLn
.LN5430:
	.stabn  68,0,773,.LN5430-Emit_EmitNtreg		# line 773, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5431:
	.stabn  68,0,774,.LN5431-Emit_EmitNtreg		# line 774, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5432:
	.stabn  68,0,774,.LN5432-Emit_EmitNtreg		# line 774, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5433:
	.stabn  68,0,775,.LN5433-Emit_EmitNtreg		# line 775, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3905
.Lab3904:
.LN5434:
	.stabn  68,0,775,.LN5434-Emit_EmitNtreg		# line 775, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3903
.Lab3905:
.LN5435:
	.stabn  68,0,775,.LN5435-Emit_EmitNtreg		# line 775, column 61
	call	InOut_WriteLn
.Lab3903:
.LN5436:
	.stabn  68,0,776,.LN5436-Emit_EmitNtreg		# line 776, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5437:
	.stabn  68,0,777,.LN5437-Emit_EmitNtreg		# line 777, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3907
	cmpl	$4096,%eax
	jbe	.Lab3906
.Lab3907:
   	call	BoundErr_		
.Lab3906:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3899:
.LN5438:
	.stabn  68,0,780,.LN5438-Emit_EmitNtreg		# line 780, column 9
	call	Emit_SpillFStack
.LN5439:
	.stabn  68,0,781,.LN5439-Emit_EmitNtreg		# line 781, column 22
	movb	$4,Emit_s + 976 
.LN5440:
	.stabn  68,0,782,.LN5440-Emit_EmitNtreg		# line 782, column 2
	.data
.Lab3908:
 	.ascii	"\011call\011\000"
	.text
	pushl	$6
	leal	.Lab3908,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5441:
	.stabn  68,0,782,.LN5441-Emit_EmitNtreg		# line 782, column 30
	pushl	$255
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	(%eax),%eax
	movl	4(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5442:
	.stabn  68,0,782,.LN5442-Emit_EmitNtreg		# line 782, column 93
	call	CgAssOut_AssLn
.LN5443:
	.stabn  68,0,783,.LN5443-Emit_EmitNtreg		# line 783, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,4(%eax)
	je	.Lab3909
.Lab3910:
.LN5444:
	.stabn  68,0,785,.LN5444-Emit_EmitNtreg		# line 785, column 2
	.data
.Lab3911:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab3911,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5445:
	.stabn  68,0,785,.LN5445-Emit_EmitNtreg		# line 785, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5446:
	.stabn  68,0,785,.LN5446-Emit_EmitNtreg		# line 785, column 75
	.data
.Lab3912:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab3912,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5447:
	.stabn  68,0,785,.LN5447-Emit_EmitNtreg		# line 785, column 98
	call	CgAssOut_AssLn
.Lab3909:
	jmp	.Lab3784
.Lab3848:
.LN5448:
	.stabn  68,0,789,.LN5448-Emit_EmitNtreg		# line 789, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtarglist
	addl	$12, %esp
.LN5449:
	.stabn  68,0,790,.LN5449-Emit_EmitNtreg		# line 790, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5450:
	.stabn  68,0,791,.LN5450-Emit_EmitNtreg		# line 791, column 10
	decl	Emit_s + 1536
.LN5451:
	.stabn  68,0,792,.LN5451-Emit_EmitNtreg		# line 792, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3916
	cmpl	$4096,%eax
	jbe	.Lab3915
.Lab3916:
   	call	BoundErr_		
.Lab3915:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3913
.Lab3914:
.LN5452:
	.stabn  68,0,793,.LN5452-Emit_EmitNtreg		# line 793, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3918
	cmpl	$4096,%eax
	jbe	.Lab3917
.Lab3918:
   	call	BoundErr_		
.Lab3917:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3913:
.LN5453:
	.stabn  68,0,795,.LN5453-Emit_EmitNtreg		# line 795, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3919
.Lab3920:
.LN5454:
	.stabn  68,0,796,.LN5454-Emit_EmitNtreg		# line 796, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5455:
	.stabn  68,0,797,.LN5455-Emit_EmitNtreg		# line 797, column 11
	.data
.Lab3921:
 	.ascii	"Rule 73/2507 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3921,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5456:
	.stabn  68,0,798,.LN5456-Emit_EmitNtreg		# line 798, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5457:
	.stabn  68,0,799,.LN5457-Emit_EmitNtreg		# line 799, column 11
	.data
.Lab3922:
 	.ascii	" FunctionCall ->   reg\000"
	.text
	pushl	$22
	leal	.Lab3922,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5458:
	.stabn  68,0,800,.LN5458-Emit_EmitNtreg		# line 800, column 11
	call	InOut_WriteLn
.LN5459:
	.stabn  68,0,801,.LN5459-Emit_EmitNtreg		# line 801, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5460:
	.stabn  68,0,802,.LN5460-Emit_EmitNtreg		# line 802, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5461:
	.stabn  68,0,802,.LN5461-Emit_EmitNtreg		# line 802, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5462:
	.stabn  68,0,803,.LN5462-Emit_EmitNtreg		# line 803, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3925
.Lab3924:
.LN5463:
	.stabn  68,0,803,.LN5463-Emit_EmitNtreg		# line 803, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3923
.Lab3925:
.LN5464:
	.stabn  68,0,803,.LN5464-Emit_EmitNtreg		# line 803, column 61
	call	InOut_WriteLn
.Lab3923:
.LN5465:
	.stabn  68,0,804,.LN5465-Emit_EmitNtreg		# line 804, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5466:
	.stabn  68,0,805,.LN5466-Emit_EmitNtreg		# line 805, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3927
	cmpl	$4096,%eax
	jbe	.Lab3926
.Lab3927:
   	call	BoundErr_		
.Lab3926:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3919:
.LN5467:
	.stabn  68,0,808,.LN5467-Emit_EmitNtreg		# line 808, column 9
	call	Emit_SpillFStack
.LN5468:
	.stabn  68,0,809,.LN5468-Emit_EmitNtreg		# line 809, column 22
	movb	$4,Emit_s + 976 
.LN5469:
	.stabn  68,0,810,.LN5469-Emit_EmitNtreg		# line 810, column 2
	.data
.Lab3928:
 	.ascii	"\011call\011\000"
	.text
	pushl	$6
	leal	.Lab3928,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5470:
	.stabn  68,0,810,.LN5470-Emit_EmitNtreg		# line 810, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3930
	cmpl	$4096,%eax
	jbe	.Lab3929
.Lab3930:
   	call	BoundErr_		
.Lab3929:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5471:
	.stabn  68,0,810,.LN5471-Emit_EmitNtreg		# line 810, column 75
	call	CgAssOut_AssLn
.LN5472:
	.stabn  68,0,811,.LN5472-Emit_EmitNtreg		# line 811, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpl	$0,4(%eax)
	je	.Lab3931
.Lab3932:
.LN5473:
	.stabn  68,0,813,.LN5473-Emit_EmitNtreg		# line 813, column 2
	.data
.Lab3933:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab3933,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5474:
	.stabn  68,0,813,.LN5474-Emit_EmitNtreg		# line 813, column 31
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5475:
	.stabn  68,0,813,.LN5475-Emit_EmitNtreg		# line 813, column 75
	.data
.Lab3934:
 	.ascii	", %esp\000"
	.text
	pushl	$6
	leal	.Lab3934,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5476:
	.stabn  68,0,813,.LN5476-Emit_EmitNtreg		# line 813, column 98
	call	CgAssOut_AssLn
.Lab3931:
	jmp	.Lab3784
.Lab3847:
.LN5477:
	.stabn  68,0,817,.LN5477-Emit_EmitNtreg		# line 817, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5478:
	.stabn  68,0,818,.LN5478-Emit_EmitNtreg		# line 818, column 10
	decl	Emit_s + 1536
.LN5479:
	.stabn  68,0,819,.LN5479-Emit_EmitNtreg		# line 819, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3938
	cmpl	$4096,%eax
	jbe	.Lab3937
.Lab3938:
   	call	BoundErr_		
.Lab3937:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3935
.Lab3936:
.LN5480:
	.stabn  68,0,820,.LN5480-Emit_EmitNtreg		# line 820, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3940
	cmpl	$4096,%eax
	jbe	.Lab3939
.Lab3940:
   	call	BoundErr_		
.Lab3939:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3935:
.LN5481:
	.stabn  68,0,822,.LN5481-Emit_EmitNtreg		# line 822, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3941
.Lab3942:
.LN5482:
	.stabn  68,0,823,.LN5482-Emit_EmitNtreg		# line 823, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5483:
	.stabn  68,0,824,.LN5483-Emit_EmitNtreg		# line 824, column 11
	.data
.Lab3943:
 	.ascii	"Rule 74/2158 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3943,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5484:
	.stabn  68,0,825,.LN5484-Emit_EmitNtreg		# line 825, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5485:
	.stabn  68,0,826,.LN5485-Emit_EmitNtreg		# line 826, column 11
	.data
.Lab3944:
 	.ascii	" TestOdd ->   reg\000"
	.text
	pushl	$17
	leal	.Lab3944,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5486:
	.stabn  68,0,827,.LN5486-Emit_EmitNtreg		# line 827, column 11
	call	InOut_WriteLn
.LN5487:
	.stabn  68,0,828,.LN5487-Emit_EmitNtreg		# line 828, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5488:
	.stabn  68,0,829,.LN5488-Emit_EmitNtreg		# line 829, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5489:
	.stabn  68,0,829,.LN5489-Emit_EmitNtreg		# line 829, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5490:
	.stabn  68,0,830,.LN5490-Emit_EmitNtreg		# line 830, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3947
.Lab3946:
.LN5491:
	.stabn  68,0,830,.LN5491-Emit_EmitNtreg		# line 830, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3945
.Lab3947:
.LN5492:
	.stabn  68,0,830,.LN5492-Emit_EmitNtreg		# line 830, column 61
	call	InOut_WriteLn
.Lab3945:
.LN5493:
	.stabn  68,0,831,.LN5493-Emit_EmitNtreg		# line 831, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5494:
	.stabn  68,0,832,.LN5494-Emit_EmitNtreg		# line 832, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3949
	cmpl	$4096,%eax
	jbe	.Lab3948
.Lab3949:
   	call	BoundErr_		
.Lab3948:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3941:
.LN5495:
	.stabn  68,0,835,.LN5495-Emit_EmitNtreg		# line 835, column 2
	.data
.Lab3950:
 	.ascii	"\011and\000"
	.text
	pushl	$4
	leal	.Lab3950,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5496:
	.stabn  68,0,835,.LN5496-Emit_EmitNtreg		# line 835, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5497:
	.stabn  68,0,835,.LN5497-Emit_EmitNtreg		# line 835, column 61
	.data
.Lab3951:
 	.ascii	"\011$1,\000"
	.text
	pushl	$4
	leal	.Lab3951,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5498:
	.stabn  68,0,835,.LN5498-Emit_EmitNtreg		# line 835, column 89
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3953
	cmpl	$4096,%eax
	jbe	.Lab3952
.Lab3953:
   	call	BoundErr_		
.Lab3952:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN5499:
	.stabn  68,0,835,.LN5499-Emit_EmitNtreg		# line 835, column 159
	call	CgAssOut_AssLn
.LN5500:
	.stabn  68,0,836,.LN5500-Emit_EmitNtreg		# line 836, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$1,2(%eax)
	je	.Lab3954
.Lab3955:
.LN5501:
	.stabn  68,0,837,.LN5501-Emit_EmitNtreg		# line 837, column 2
	.data
.Lab3956:
 	.ascii	"\011xor\000"
	.text
	pushl	$4
	leal	.Lab3956,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5502:
	.stabn  68,0,837,.LN5502-Emit_EmitNtreg		# line 837, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5503:
	.stabn  68,0,837,.LN5503-Emit_EmitNtreg		# line 837, column 61
	.data
.Lab3957:
 	.ascii	"\011$1,\000"
	.text
	pushl	$4
	leal	.Lab3957,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5504:
	.stabn  68,0,837,.LN5504-Emit_EmitNtreg		# line 837, column 89
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3959
	cmpl	$4096,%eax
	jbe	.Lab3958
.Lab3959:
   	call	BoundErr_		
.Lab3958:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN5505:
	.stabn  68,0,837,.LN5505-Emit_EmitNtreg		# line 837, column 159
	call	CgAssOut_AssLn
.Lab3954:
	jmp	.Lab3784
.Lab3846:
.LN5506:
	.stabn  68,0,841,.LN5506-Emit_EmitNtreg		# line 841, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN5507:
	.stabn  68,0,842,.LN5507-Emit_EmitNtreg		# line 842, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN5508:
	.stabn  68,0,843,.LN5508-Emit_EmitNtreg		# line 843, column 10
	decl	Emit_s + 1536
.LN5509:
	.stabn  68,0,844,.LN5509-Emit_EmitNtreg		# line 844, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3963
	cmpl	$4096,%eax
	jbe	.Lab3962
.Lab3963:
   	call	BoundErr_		
.Lab3962:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3960
.Lab3961:
.LN5510:
	.stabn  68,0,845,.LN5510-Emit_EmitNtreg		# line 845, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3965
	cmpl	$4096,%eax
	jbe	.Lab3964
.Lab3965:
   	call	BoundErr_		
.Lab3964:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3960:
.LN5511:
	.stabn  68,0,847,.LN5511-Emit_EmitNtreg		# line 847, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3966
.Lab3967:
.LN5512:
	.stabn  68,0,848,.LN5512-Emit_EmitNtreg		# line 848, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5513:
	.stabn  68,0,849,.LN5513-Emit_EmitNtreg		# line 849, column 11
	.data
.Lab3968:
 	.ascii	"Rule 75/2146 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3968,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5514:
	.stabn  68,0,850,.LN5514-Emit_EmitNtreg		# line 850, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5515:
	.stabn  68,0,851,.LN5515-Emit_EmitNtreg		# line 851, column 11
	.data
.Lab3969:
 	.ascii	" TestMembershipL ->   reg\000"
	.text
	pushl	$25
	leal	.Lab3969,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5516:
	.stabn  68,0,852,.LN5516-Emit_EmitNtreg		# line 852, column 11
	call	InOut_WriteLn
.LN5517:
	.stabn  68,0,853,.LN5517-Emit_EmitNtreg		# line 853, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5518:
	.stabn  68,0,854,.LN5518-Emit_EmitNtreg		# line 854, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5519:
	.stabn  68,0,854,.LN5519-Emit_EmitNtreg		# line 854, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5520:
	.stabn  68,0,855,.LN5520-Emit_EmitNtreg		# line 855, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3972
.Lab3971:
.LN5521:
	.stabn  68,0,855,.LN5521-Emit_EmitNtreg		# line 855, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3970
.Lab3972:
.LN5522:
	.stabn  68,0,855,.LN5522-Emit_EmitNtreg		# line 855, column 61
	call	InOut_WriteLn
.Lab3970:
.LN5523:
	.stabn  68,0,856,.LN5523-Emit_EmitNtreg		# line 856, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5524:
	.stabn  68,0,857,.LN5524-Emit_EmitNtreg		# line 857, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3974
	cmpl	$4096,%eax
	jbe	.Lab3973
.Lab3974:
   	call	BoundErr_		
.Lab3973:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3966:
.LN5525:
	.stabn  68,0,860,.LN5525-Emit_EmitNtreg		# line 860, column 2
	.data
.Lab3975:
 	.ascii	"\011btl\011\000"
	.text
	pushl	$5
	leal	.Lab3975,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5526:
	.stabn  68,0,860,.LN5526-Emit_EmitNtreg		# line 860, column 30
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5527:
	.stabn  68,0,860,.LN5527-Emit_EmitNtreg		# line 860, column 60
	.data
.Lab3976:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab3976,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5528:
	.stabn  68,0,860,.LN5528-Emit_EmitNtreg		# line 860, column 78
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5529:
	.stabn  68,0,860,.LN5529-Emit_EmitNtreg		# line 860, column 110
	call	CgAssOut_AssLn
.LN5530:
	.stabn  68,0,861,.LN5530-Emit_EmitNtreg		# line 861, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,2(%eax)
	je	.Lab3979
.Lab3978:
.LN5531:
	.stabn  68,0,862,.LN5531-Emit_EmitNtreg		# line 862, column 2
	.data
.Lab3980:
 	.ascii	"\011setb\011\000"
	.text
	pushl	$6
	leal	.Lab3980,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5532:
	.stabn  68,0,862,.LN5532-Emit_EmitNtreg		# line 862, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3982
	cmpl	$4096,%eax
	jbe	.Lab3981
.Lab3982:
   	call	BoundErr_		
.Lab3981:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5533:
	.stabn  68,0,862,.LN5533-Emit_EmitNtreg		# line 862, column 79
	call	CgAssOut_AssLn
	jmp	.Lab3977
.Lab3979:
.LN5534:
	.stabn  68,0,864,.LN5534-Emit_EmitNtreg		# line 864, column 2
	.data
.Lab3983:
 	.ascii	"\011setnb\011\000"
	.text
	pushl	$7
	leal	.Lab3983,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5535:
	.stabn  68,0,864,.LN5535-Emit_EmitNtreg		# line 864, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3985
	cmpl	$4096,%eax
	jbe	.Lab3984
.Lab3985:
   	call	BoundErr_		
.Lab3984:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5536:
	.stabn  68,0,864,.LN5536-Emit_EmitNtreg		# line 864, column 79
	call	CgAssOut_AssLn
.Lab3977:
	jmp	.Lab3784
.Lab3845:
.LN5537:
	.stabn  68,0,868,.LN5537-Emit_EmitNtreg		# line 868, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5538:
	.stabn  68,0,869,.LN5538-Emit_EmitNtreg		# line 869, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN5539:
	.stabn  68,0,870,.LN5539-Emit_EmitNtreg		# line 870, column 10
	decl	Emit_s + 1536
.LN5540:
	.stabn  68,0,871,.LN5540-Emit_EmitNtreg		# line 871, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3989
	cmpl	$4096,%eax
	jbe	.Lab3988
.Lab3989:
   	call	BoundErr_		
.Lab3988:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab3986
.Lab3987:
.LN5541:
	.stabn  68,0,872,.LN5541-Emit_EmitNtreg		# line 872, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab3991
	cmpl	$4096,%eax
	jbe	.Lab3990
.Lab3991:
   	call	BoundErr_		
.Lab3990:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab3986:
.LN5542:
	.stabn  68,0,874,.LN5542-Emit_EmitNtreg		# line 874, column 8
	cmpb	$0,IR_s + 133
	je	.Lab3992
.Lab3993:
.LN5543:
	.stabn  68,0,875,.LN5543-Emit_EmitNtreg		# line 875, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5544:
	.stabn  68,0,876,.LN5544-Emit_EmitNtreg		# line 876, column 11
	.data
.Lab3994:
 	.ascii	"Rule 76/2114 Cost=\000"
	.text
	pushl	$18
	leal	.Lab3994,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5545:
	.stabn  68,0,877,.LN5545-Emit_EmitNtreg		# line 877, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5546:
	.stabn  68,0,878,.LN5546-Emit_EmitNtreg		# line 878, column 11
	.data
.Lab3995:
 	.ascii	" SetCompare ->   reg\000"
	.text
	pushl	$20
	leal	.Lab3995,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5547:
	.stabn  68,0,879,.LN5547-Emit_EmitNtreg		# line 879, column 11
	call	InOut_WriteLn
.LN5548:
	.stabn  68,0,880,.LN5548-Emit_EmitNtreg		# line 880, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5549:
	.stabn  68,0,881,.LN5549-Emit_EmitNtreg		# line 881, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5550:
	.stabn  68,0,881,.LN5550-Emit_EmitNtreg		# line 881, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5551:
	.stabn  68,0,882,.LN5551-Emit_EmitNtreg		# line 882, column 11
	cmpl	$0,8(%ebp)
	je	.Lab3998
.Lab3997:
.LN5552:
	.stabn  68,0,882,.LN5552-Emit_EmitNtreg		# line 882, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab3996
.Lab3998:
.LN5553:
	.stabn  68,0,882,.LN5553-Emit_EmitNtreg		# line 882, column 61
	call	InOut_WriteLn
.Lab3996:
.LN5554:
	.stabn  68,0,883,.LN5554-Emit_EmitNtreg		# line 883, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5555:
	.stabn  68,0,884,.LN5555-Emit_EmitNtreg		# line 884, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4000
	cmpl	$4096,%eax
	jbe	.Lab3999
.Lab4000:
   	call	BoundErr_		
.Lab3999:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab3992:
.LN5556:
	.stabn  68,0,887,.LN5556-Emit_EmitNtreg		# line 887, column 2
	.data
.Lab4001:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab4001,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5557:
	.stabn  68,0,887,.LN5557-Emit_EmitNtreg		# line 887, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4003
	cmpl	$4096,%eax
	jbe	.Lab4002
.Lab4003:
   	call	BoundErr_		
.Lab4002:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5558:
	.stabn  68,0,887,.LN5558-Emit_EmitNtreg		# line 887, column 75
	.data
.Lab4004:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4004,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5559:
	.stabn  68,0,887,.LN5559-Emit_EmitNtreg		# line 887, column 93
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4006
	cmpl	$4096,%eax
	jbe	.Lab4005
.Lab4006:
   	call	BoundErr_		
.Lab4005:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5560:
	.stabn  68,0,887,.LN5560-Emit_EmitNtreg		# line 887, column 139
	call	CgAssOut_AssLn
.LN5561:
	.stabn  68,0,888,.LN5561-Emit_EmitNtreg		# line 888, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	.data
	.align 4
.Lab4013:
	.long	.Lab4012
	.long	.Lab4011
	.long	.Lab4010
	.long	.Lab4009
	.text
	subl	$2,%eax
	jb	.Lab4007
	cmpl	$3,%eax
	ja	.Lab4007
	jmp	*.Lab4013(,%eax,4)
.Lab4012:
.LN5562:
	.stabn  68,0,890,.LN5562-Emit_EmitNtreg		# line 890, column 2
	.data
.Lab4014:
 	.ascii	"\011or\011\000"
	.text
	pushl	$4
	leal	.Lab4014,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5563:
	.stabn  68,0,890,.LN5563-Emit_EmitNtreg		# line 890, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5564:
	.stabn  68,0,890,.LN5564-Emit_EmitNtreg		# line 890, column 66
	.data
.Lab4015:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4015,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5565:
	.stabn  68,0,890,.LN5565-Emit_EmitNtreg		# line 890, column 84
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4017
	cmpl	$4096,%eax
	jbe	.Lab4016
.Lab4017:
   	call	BoundErr_		
.Lab4016:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5566:
	.stabn  68,0,890,.LN5566-Emit_EmitNtreg		# line 890, column 130
	call	CgAssOut_AssLn
.LN5567:
	.stabn  68,0,891,.LN5567-Emit_EmitNtreg		# line 891, column 33
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$1,1(%eax) 
	jmp	.Lab4008
.Lab4011:
.LN5568:
	.stabn  68,0,893,.LN5568-Emit_EmitNtreg		# line 893, column 2
	.data
.Lab4018:
 	.ascii	"\011and\011\000"
	.text
	pushl	$5
	leal	.Lab4018,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5569:
	.stabn  68,0,893,.LN5569-Emit_EmitNtreg		# line 893, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5570:
	.stabn  68,0,893,.LN5570-Emit_EmitNtreg		# line 893, column 66
	.data
.Lab4019:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4019,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5571:
	.stabn  68,0,893,.LN5571-Emit_EmitNtreg		# line 893, column 84
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4021
	cmpl	$4096,%eax
	jbe	.Lab4020
.Lab4021:
   	call	BoundErr_		
.Lab4020:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5572:
	.stabn  68,0,893,.LN5572-Emit_EmitNtreg		# line 893, column 130
	call	CgAssOut_AssLn
.LN5573:
	.stabn  68,0,894,.LN5573-Emit_EmitNtreg		# line 894, column 33
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$0,1(%eax) 
	jmp	.Lab4008
.Lab4010:
.LN5574:
	.stabn  68,0,896,.LN5574-Emit_EmitNtreg		# line 896, column 2
	.data
.Lab4022:
 	.ascii	"\011and\011\000"
	.text
	pushl	$5
	leal	.Lab4022,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5575:
	.stabn  68,0,896,.LN5575-Emit_EmitNtreg		# line 896, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5576:
	.stabn  68,0,896,.LN5576-Emit_EmitNtreg		# line 896, column 66
	.data
.Lab4023:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4023,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5577:
	.stabn  68,0,896,.LN5577-Emit_EmitNtreg		# line 896, column 84
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4025
	cmpl	$4096,%eax
	jbe	.Lab4024
.Lab4025:
   	call	BoundErr_		
.Lab4024:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5578:
	.stabn  68,0,896,.LN5578-Emit_EmitNtreg		# line 896, column 130
	call	CgAssOut_AssLn
.LN5579:
	.stabn  68,0,897,.LN5579-Emit_EmitNtreg		# line 897, column 33
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$1,1(%eax) 
	jmp	.Lab4008
.Lab4009:
.LN5580:
	.stabn  68,0,899,.LN5580-Emit_EmitNtreg		# line 899, column 2
	.data
.Lab4026:
 	.ascii	"\011or\011\000"
	.text
	pushl	$4
	leal	.Lab4026,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5581:
	.stabn  68,0,899,.LN5581-Emit_EmitNtreg		# line 899, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5582:
	.stabn  68,0,899,.LN5582-Emit_EmitNtreg		# line 899, column 66
	.data
.Lab4027:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4027,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5583:
	.stabn  68,0,899,.LN5583-Emit_EmitNtreg		# line 899, column 84
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4029
	cmpl	$4096,%eax
	jbe	.Lab4028
.Lab4029:
   	call	BoundErr_		
.Lab4028:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5584:
	.stabn  68,0,899,.LN5584-Emit_EmitNtreg		# line 899, column 130
	call	CgAssOut_AssLn
.LN5585:
	.stabn  68,0,900,.LN5585-Emit_EmitNtreg		# line 900, column 33
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movb	$0,1(%eax) 
	jmp	.Lab4008
.Lab4007:
	call	CaseErr_
.Lab4008:
.LN5586:
	.stabn  68,0,902,.LN5586-Emit_EmitNtreg		# line 902, column 2
	.data
.Lab4030:
 	.ascii	"\011cmpl\011\000"
	.text
	pushl	$6
	leal	.Lab4030,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5587:
	.stabn  68,0,902,.LN5587-Emit_EmitNtreg		# line 902, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4032
	cmpl	$4096,%eax
	jbe	.Lab4031
.Lab4032:
   	call	BoundErr_		
.Lab4031:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5588:
	.stabn  68,0,902,.LN5588-Emit_EmitNtreg		# line 902, column 76
	.data
.Lab4033:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4033,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5589:
	.stabn  68,0,902,.LN5589-Emit_EmitNtreg		# line 902, column 94
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4035
	cmpl	$4096,%eax
	jbe	.Lab4034
.Lab4035:
   	call	BoundErr_		
.Lab4034:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5590:
	.stabn  68,0,902,.LN5590-Emit_EmitNtreg		# line 902, column 139
	call	CgAssOut_AssLn
.LN5591:
	.stabn  68,0,903,.LN5591-Emit_EmitNtreg		# line 903, column 2
	.data
.Lab4036:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4036,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5592:
	.stabn  68,0,903,.LN5592-Emit_EmitNtreg		# line 903, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5593:
	.stabn  68,0,903,.LN5593-Emit_EmitNtreg		# line 903, column 85
	.data
.Lab4037:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4037,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5594:
	.stabn  68,0,903,.LN5594-Emit_EmitNtreg		# line 903, column 110
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4039
	cmpl	$4096,%eax
	jbe	.Lab4038
.Lab4039:
   	call	BoundErr_		
.Lab4038:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5595:
	.stabn  68,0,903,.LN5595-Emit_EmitNtreg		# line 903, column 159
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3844:
.LN5596:
	.stabn  68,0,906,.LN5596-Emit_EmitNtreg		# line 906, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5597:
	.stabn  68,0,907,.LN5597-Emit_EmitNtreg		# line 907, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN5598:
	.stabn  68,0,908,.LN5598-Emit_EmitNtreg		# line 908, column 10
	decl	Emit_s + 1536
.LN5599:
	.stabn  68,0,909,.LN5599-Emit_EmitNtreg		# line 909, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4043
	cmpl	$4096,%eax
	jbe	.Lab4042
.Lab4043:
   	call	BoundErr_		
.Lab4042:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4040
.Lab4041:
.LN5600:
	.stabn  68,0,910,.LN5600-Emit_EmitNtreg		# line 910, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4045
	cmpl	$4096,%eax
	jbe	.Lab4044
.Lab4045:
   	call	BoundErr_		
.Lab4044:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4040:
.LN5601:
	.stabn  68,0,912,.LN5601-Emit_EmitNtreg		# line 912, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4046
.Lab4047:
.LN5602:
	.stabn  68,0,913,.LN5602-Emit_EmitNtreg		# line 913, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5603:
	.stabn  68,0,914,.LN5603-Emit_EmitNtreg		# line 914, column 11
	.data
.Lab4048:
 	.ascii	"Rule 77/2105 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4048,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5604:
	.stabn  68,0,915,.LN5604-Emit_EmitNtreg		# line 915, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5605:
	.stabn  68,0,916,.LN5605-Emit_EmitNtreg		# line 916, column 11
	.data
.Lab4049:
 	.ascii	" SetCompare ->   reg\000"
	.text
	pushl	$20
	leal	.Lab4049,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5606:
	.stabn  68,0,917,.LN5606-Emit_EmitNtreg		# line 917, column 11
	call	InOut_WriteLn
.LN5607:
	.stabn  68,0,918,.LN5607-Emit_EmitNtreg		# line 918, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5608:
	.stabn  68,0,919,.LN5608-Emit_EmitNtreg		# line 919, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5609:
	.stabn  68,0,919,.LN5609-Emit_EmitNtreg		# line 919, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5610:
	.stabn  68,0,920,.LN5610-Emit_EmitNtreg		# line 920, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4052
.Lab4051:
.LN5611:
	.stabn  68,0,920,.LN5611-Emit_EmitNtreg		# line 920, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4050
.Lab4052:
.LN5612:
	.stabn  68,0,920,.LN5612-Emit_EmitNtreg		# line 920, column 61
	call	InOut_WriteLn
.Lab4050:
.LN5613:
	.stabn  68,0,921,.LN5613-Emit_EmitNtreg		# line 921, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5614:
	.stabn  68,0,922,.LN5614-Emit_EmitNtreg		# line 922, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4054
	cmpl	$4096,%eax
	jbe	.Lab4053
.Lab4054:
   	call	BoundErr_		
.Lab4053:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4046:
.LN5615:
	.stabn  68,0,925,.LN5615-Emit_EmitNtreg		# line 925, column 2
	.data
.Lab4055:
 	.ascii	"\011cmpl\011\000"
	.text
	pushl	$6
	leal	.Lab4055,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5616:
	.stabn  68,0,925,.LN5616-Emit_EmitNtreg		# line 925, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5617:
	.stabn  68,0,925,.LN5617-Emit_EmitNtreg		# line 925, column 66
	.data
.Lab4056:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4056,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5618:
	.stabn  68,0,925,.LN5618-Emit_EmitNtreg		# line 925, column 84
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4058
	cmpl	$4096,%eax
	jbe	.Lab4057
.Lab4058:
   	call	BoundErr_		
.Lab4057:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN5619:
	.stabn  68,0,925,.LN5619-Emit_EmitNtreg		# line 925, column 129
	call	CgAssOut_AssLn
.LN5620:
	.stabn  68,0,926,.LN5620-Emit_EmitNtreg		# line 926, column 2
	.data
.Lab4059:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4059,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5621:
	.stabn  68,0,926,.LN5621-Emit_EmitNtreg		# line 926, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5622:
	.stabn  68,0,926,.LN5622-Emit_EmitNtreg		# line 926, column 85
	.data
.Lab4060:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4060,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5623:
	.stabn  68,0,926,.LN5623-Emit_EmitNtreg		# line 926, column 110
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4062
	cmpl	$4096,%eax
	jbe	.Lab4061
.Lab4062:
   	call	BoundErr_		
.Lab4061:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5624:
	.stabn  68,0,926,.LN5624-Emit_EmitNtreg		# line 926, column 159
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3843:
.LN5625:
	.stabn  68,0,929,.LN5625-Emit_EmitNtreg		# line 929, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfstack
	addl	$12, %esp
.LN5626:
	.stabn  68,0,930,.LN5626-Emit_EmitNtreg		# line 930, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5627:
	.stabn  68,0,931,.LN5627-Emit_EmitNtreg		# line 931, column 10
	decl	Emit_s + 1536
.LN5628:
	.stabn  68,0,932,.LN5628-Emit_EmitNtreg		# line 932, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4066
	cmpl	$4096,%eax
	jbe	.Lab4065
.Lab4066:
   	call	BoundErr_		
.Lab4065:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4063
.Lab4064:
.LN5629:
	.stabn  68,0,933,.LN5629-Emit_EmitNtreg		# line 933, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4068
	cmpl	$4096,%eax
	jbe	.Lab4067
.Lab4068:
   	call	BoundErr_		
.Lab4067:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4063:
.LN5630:
	.stabn  68,0,935,.LN5630-Emit_EmitNtreg		# line 935, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4069
.Lab4070:
.LN5631:
	.stabn  68,0,936,.LN5631-Emit_EmitNtreg		# line 936, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5632:
	.stabn  68,0,937,.LN5632-Emit_EmitNtreg		# line 937, column 11
	.data
.Lab4071:
 	.ascii	"Rule 78/2087 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4071,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5633:
	.stabn  68,0,938,.LN5633-Emit_EmitNtreg		# line 938, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5634:
	.stabn  68,0,939,.LN5634-Emit_EmitNtreg		# line 939, column 11
	.data
.Lab4072:
 	.ascii	" FloatCompare ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4072,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5635:
	.stabn  68,0,940,.LN5635-Emit_EmitNtreg		# line 940, column 11
	call	InOut_WriteLn
.LN5636:
	.stabn  68,0,941,.LN5636-Emit_EmitNtreg		# line 941, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5637:
	.stabn  68,0,942,.LN5637-Emit_EmitNtreg		# line 942, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5638:
	.stabn  68,0,942,.LN5638-Emit_EmitNtreg		# line 942, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5639:
	.stabn  68,0,943,.LN5639-Emit_EmitNtreg		# line 943, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4075
.Lab4074:
.LN5640:
	.stabn  68,0,943,.LN5640-Emit_EmitNtreg		# line 943, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4073
.Lab4075:
.LN5641:
	.stabn  68,0,943,.LN5641-Emit_EmitNtreg		# line 943, column 61
	call	InOut_WriteLn
.Lab4073:
.LN5642:
	.stabn  68,0,944,.LN5642-Emit_EmitNtreg		# line 944, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5643:
	.stabn  68,0,945,.LN5643-Emit_EmitNtreg		# line 945, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4077
	cmpl	$4096,%eax
	jbe	.Lab4076
.Lab4077:
   	call	BoundErr_		
.Lab4076:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4069:
.LN5644:
	.stabn  68,0,948,.LN5644-Emit_EmitNtreg		# line 948, column 9
	incl	Emit_s + 984 
.LN5645:
	.stabn  68,0,949,.LN5645-Emit_EmitNtreg		# line 949, column 9
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab4081:
	.long	0,63
	.text
	boundl	%eax,.Lab4081
	cmpl	$1111111111,Emit_s + 352(,%eax,4)
	je	.Lab4080
.Lab4079:
.LN5646:
	.stabn  68,0,950,.LN5646-Emit_EmitNtreg		# line 950, column 2
	.data
.Lab4082:
 	.ascii	"\011fcompl\011\000"
	.text
	pushl	$8
	leal	.Lab4082,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5647:
	.stabn  68,0,950,.LN5647-Emit_EmitNtreg		# line 950, column 30
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab4083:
	.long	0,63
	.text
	boundl	%eax,.Lab4083
	pushl	Emit_s + 352(,%eax,4)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5648:
	.stabn  68,0,950,.LN5648-Emit_EmitNtreg		# line 950, column 67
	.data
.Lab4084:
 	.ascii	"(%ebp)\000"
	.text
	pushl	$6
	leal	.Lab4084,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5649:
	.stabn  68,0,950,.LN5649-Emit_EmitNtreg		# line 950, column 90
	call	CgAssOut_AssLn
.LN5650:
	.stabn  68,0,951,.LN5650-Emit_EmitNtreg		# line 951, column 11
	decl	Emit_s + 980 
	jmp	.Lab4078
.Lab4080:
.LN5651:
	.stabn  68,0,953,.LN5651-Emit_EmitNtreg		# line 953, column 2
	.data
.Lab4085:
 	.ascii	"\011fcompp\000"
	.text
	pushl	$7
	leal	.Lab4085,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5652:
	.stabn  68,0,953,.LN5652-Emit_EmitNtreg		# line 953, column 28
	call	CgAssOut_AssLn
.LN5653:
	.stabn  68,0,954,.LN5653-Emit_EmitNtreg		# line 954, column 11
	subl	$2,Emit_s + 980 
.Lab4078:
.LN5654:
	.stabn  68,0,956,.LN5654-Emit_EmitNtreg		# line 956, column 2
	.data
.Lab4086:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab4086,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5655:
	.stabn  68,0,956,.LN5655-Emit_EmitNtreg		# line 956, column 33
	call	CgAssOut_AssLn
.LN5656:
	.stabn  68,0,957,.LN5656-Emit_EmitNtreg		# line 957, column 2
	.data
.Lab4087:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab4087,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5657:
	.stabn  68,0,957,.LN5657-Emit_EmitNtreg		# line 957, column 26
	call	CgAssOut_AssLn
.LN5658:
	.stabn  68,0,958,.LN5658-Emit_EmitNtreg		# line 958, column 2
	.data
.Lab4088:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4088,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5659:
	.stabn  68,0,958,.LN5659-Emit_EmitNtreg		# line 958, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	movzbl	Emit_s + 88(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5660:
	.stabn  68,0,958,.LN5660-Emit_EmitNtreg		# line 958, column 130
	.data
.Lab4089:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4089,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5661:
	.stabn  68,0,958,.LN5661-Emit_EmitNtreg		# line 958, column 150
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4091
	cmpl	$4096,%eax
	jbe	.Lab4090
.Lab4091:
   	call	BoundErr_		
.Lab4090:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5662:
	.stabn  68,0,958,.LN5662-Emit_EmitNtreg		# line 958, column 199
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3842:
.LN5663:
	.stabn  68,0,961,.LN5663-Emit_EmitNtreg		# line 961, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5664:
	.stabn  68,0,962,.LN5664-Emit_EmitNtreg		# line 962, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5665:
	.stabn  68,0,963,.LN5665-Emit_EmitNtreg		# line 963, column 10
	decl	Emit_s + 1536
.LN5666:
	.stabn  68,0,964,.LN5666-Emit_EmitNtreg		# line 964, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4095
	cmpl	$4096,%eax
	jbe	.Lab4094
.Lab4095:
   	call	BoundErr_		
.Lab4094:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4092
.Lab4093:
.LN5667:
	.stabn  68,0,965,.LN5667-Emit_EmitNtreg		# line 965, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4097
	cmpl	$4096,%eax
	jbe	.Lab4096
.Lab4097:
   	call	BoundErr_		
.Lab4096:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4092:
.LN5668:
	.stabn  68,0,967,.LN5668-Emit_EmitNtreg		# line 967, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4098
.Lab4099:
.LN5669:
	.stabn  68,0,968,.LN5669-Emit_EmitNtreg		# line 968, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5670:
	.stabn  68,0,969,.LN5670-Emit_EmitNtreg		# line 969, column 11
	.data
.Lab4100:
 	.ascii	"Rule 79/2075 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4100,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5671:
	.stabn  68,0,970,.LN5671-Emit_EmitNtreg		# line 970, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5672:
	.stabn  68,0,971,.LN5672-Emit_EmitNtreg		# line 971, column 11
	.data
.Lab4101:
 	.ascii	" FloatCompare ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4101,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5673:
	.stabn  68,0,972,.LN5673-Emit_EmitNtreg		# line 972, column 11
	call	InOut_WriteLn
.LN5674:
	.stabn  68,0,973,.LN5674-Emit_EmitNtreg		# line 973, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5675:
	.stabn  68,0,974,.LN5675-Emit_EmitNtreg		# line 974, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5676:
	.stabn  68,0,974,.LN5676-Emit_EmitNtreg		# line 974, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5677:
	.stabn  68,0,975,.LN5677-Emit_EmitNtreg		# line 975, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4104
.Lab4103:
.LN5678:
	.stabn  68,0,975,.LN5678-Emit_EmitNtreg		# line 975, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4102
.Lab4104:
.LN5679:
	.stabn  68,0,975,.LN5679-Emit_EmitNtreg		# line 975, column 61
	call	InOut_WriteLn
.Lab4102:
.LN5680:
	.stabn  68,0,976,.LN5680-Emit_EmitNtreg		# line 976, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5681:
	.stabn  68,0,977,.LN5681-Emit_EmitNtreg		# line 977, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4106
	cmpl	$4096,%eax
	jbe	.Lab4105
.Lab4106:
   	call	BoundErr_		
.Lab4105:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4098:
.LN5682:
	.stabn  68,0,980,.LN5682-Emit_EmitNtreg		# line 980, column 2
	.data
.Lab4107:
 	.ascii	"\011fcomp\000"
	.text
	pushl	$6
	leal	.Lab4107,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5683:
	.stabn  68,0,980,.LN5683-Emit_EmitNtreg		# line 980, column 27
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	82(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5684:
	.stabn  68,0,980,.LN5684-Emit_EmitNtreg		# line 980, column 67
	.data
.Lab4108:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4108,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5685:
	.stabn  68,0,980,.LN5685-Emit_EmitNtreg		# line 980, column 86
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5686:
	.stabn  68,0,980,.LN5686-Emit_EmitNtreg		# line 980, column 112
	call	CgAssOut_AssLn
.LN5687:
	.stabn  68,0,981,.LN5687-Emit_EmitNtreg		# line 981, column 2
	.data
.Lab4109:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab4109,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5688:
	.stabn  68,0,981,.LN5688-Emit_EmitNtreg		# line 981, column 33
	call	CgAssOut_AssLn
.LN5689:
	.stabn  68,0,982,.LN5689-Emit_EmitNtreg		# line 982, column 2
	.data
.Lab4110:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab4110,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5690:
	.stabn  68,0,982,.LN5690-Emit_EmitNtreg		# line 982, column 26
	call	CgAssOut_AssLn
.LN5691:
	.stabn  68,0,983,.LN5691-Emit_EmitNtreg		# line 983, column 2
	.data
.Lab4111:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4111,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5692:
	.stabn  68,0,983,.LN5692-Emit_EmitNtreg		# line 983, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	movzbl	Emit_s + 88(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5693:
	.stabn  68,0,983,.LN5693-Emit_EmitNtreg		# line 983, column 130
	.data
.Lab4112:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4112,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5694:
	.stabn  68,0,983,.LN5694-Emit_EmitNtreg		# line 983, column 150
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4114
	cmpl	$4096,%eax
	jbe	.Lab4113
.Lab4114:
   	call	BoundErr_		
.Lab4113:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5695:
	.stabn  68,0,983,.LN5695-Emit_EmitNtreg		# line 983, column 199
	call	CgAssOut_AssLn
.LN5696:
	.stabn  68,0,984,.LN5696-Emit_EmitNtreg		# line 984, column 9
	call	Emit_PopFStack
	jmp	.Lab3784
.Lab3841:
.LN5697:
	.stabn  68,0,987,.LN5697-Emit_EmitNtreg		# line 987, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN5698:
	.stabn  68,0,988,.LN5698-Emit_EmitNtreg		# line 988, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5699:
	.stabn  68,0,989,.LN5699-Emit_EmitNtreg		# line 989, column 10
	decl	Emit_s + 1536
.LN5700:
	.stabn  68,0,990,.LN5700-Emit_EmitNtreg		# line 990, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4118
	cmpl	$4096,%eax
	jbe	.Lab4117
.Lab4118:
   	call	BoundErr_		
.Lab4117:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4115
.Lab4116:
.LN5701:
	.stabn  68,0,991,.LN5701-Emit_EmitNtreg		# line 991, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4120
	cmpl	$4096,%eax
	jbe	.Lab4119
.Lab4120:
   	call	BoundErr_		
.Lab4119:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4115:
.LN5702:
	.stabn  68,0,993,.LN5702-Emit_EmitNtreg		# line 993, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4121
.Lab4122:
.LN5703:
	.stabn  68,0,994,.LN5703-Emit_EmitNtreg		# line 994, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5704:
	.stabn  68,0,995,.LN5704-Emit_EmitNtreg		# line 995, column 11
	.data
.Lab4123:
 	.ascii	"Rule 80/2063 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4123,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5705:
	.stabn  68,0,996,.LN5705-Emit_EmitNtreg		# line 996, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5706:
	.stabn  68,0,997,.LN5706-Emit_EmitNtreg		# line 997, column 11
	.data
.Lab4124:
 	.ascii	" FloatCompare ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4124,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5707:
	.stabn  68,0,998,.LN5707-Emit_EmitNtreg		# line 998, column 11
	call	InOut_WriteLn
.LN5708:
	.stabn  68,0,999,.LN5708-Emit_EmitNtreg		# line 999, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5709:
	.stabn  68,0,1000,.LN5709-Emit_EmitNtreg		# line 1000, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5710:
	.stabn  68,0,1000,.LN5710-Emit_EmitNtreg		# line 1000, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5711:
	.stabn  68,0,1001,.LN5711-Emit_EmitNtreg		# line 1001, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4127
.Lab4126:
.LN5712:
	.stabn  68,0,1001,.LN5712-Emit_EmitNtreg		# line 1001, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4125
.Lab4127:
.LN5713:
	.stabn  68,0,1001,.LN5713-Emit_EmitNtreg		# line 1001, column 61
	call	InOut_WriteLn
.Lab4125:
.LN5714:
	.stabn  68,0,1002,.LN5714-Emit_EmitNtreg		# line 1002, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5715:
	.stabn  68,0,1003,.LN5715-Emit_EmitNtreg		# line 1003, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4129
	cmpl	$4096,%eax
	jbe	.Lab4128
.Lab4129:
   	call	BoundErr_		
.Lab4128:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4121:
.LN5716:
	.stabn  68,0,1006,.LN5716-Emit_EmitNtreg		# line 1006, column 2
	.data
.Lab4130:
 	.ascii	"\011fcomp\000"
	.text
	pushl	$6
	leal	.Lab4130,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5717:
	.stabn  68,0,1006,.LN5717-Emit_EmitNtreg		# line 1006, column 27
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	82(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5718:
	.stabn  68,0,1006,.LN5718-Emit_EmitNtreg		# line 1006, column 67
	.data
.Lab4131:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4131,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5719:
	.stabn  68,0,1006,.LN5719-Emit_EmitNtreg		# line 1006, column 86
	leal	-44(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5720:
	.stabn  68,0,1006,.LN5720-Emit_EmitNtreg		# line 1006, column 112
	call	CgAssOut_AssLn
.LN5721:
	.stabn  68,0,1007,.LN5721-Emit_EmitNtreg		# line 1007, column 2
	.data
.Lab4132:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab4132,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5722:
	.stabn  68,0,1007,.LN5722-Emit_EmitNtreg		# line 1007, column 33
	call	CgAssOut_AssLn
.LN5723:
	.stabn  68,0,1008,.LN5723-Emit_EmitNtreg		# line 1008, column 2
	.data
.Lab4133:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab4133,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5724:
	.stabn  68,0,1008,.LN5724-Emit_EmitNtreg		# line 1008, column 26
	call	CgAssOut_AssLn
.LN5725:
	.stabn  68,0,1009,.LN5725-Emit_EmitNtreg		# line 1009, column 2
	.data
.Lab4134:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4134,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5726:
	.stabn  68,0,1009,.LN5726-Emit_EmitNtreg		# line 1009, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5727:
	.stabn  68,0,1009,.LN5727-Emit_EmitNtreg		# line 1009, column 121
	.data
.Lab4135:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4135,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5728:
	.stabn  68,0,1009,.LN5728-Emit_EmitNtreg		# line 1009, column 142
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4137
	cmpl	$4096,%eax
	jbe	.Lab4136
.Lab4137:
   	call	BoundErr_		
.Lab4136:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5729:
	.stabn  68,0,1009,.LN5729-Emit_EmitNtreg		# line 1009, column 191
	call	CgAssOut_AssLn
.LN5730:
	.stabn  68,0,1010,.LN5730-Emit_EmitNtreg		# line 1010, column 9
	call	Emit_PopFStack
	jmp	.Lab3784
.Lab3840:
.LN5731:
	.stabn  68,0,1013,.LN5731-Emit_EmitNtreg		# line 1013, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN5732:
	.stabn  68,0,1014,.LN5732-Emit_EmitNtreg		# line 1014, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN5733:
	.stabn  68,0,1015,.LN5733-Emit_EmitNtreg		# line 1015, column 10
	decl	Emit_s + 1536
.LN5734:
	.stabn  68,0,1016,.LN5734-Emit_EmitNtreg		# line 1016, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4141
	cmpl	$4096,%eax
	jbe	.Lab4140
.Lab4141:
   	call	BoundErr_		
.Lab4140:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4138
.Lab4139:
.LN5735:
	.stabn  68,0,1017,.LN5735-Emit_EmitNtreg		# line 1017, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4143
	cmpl	$4096,%eax
	jbe	.Lab4142
.Lab4143:
   	call	BoundErr_		
.Lab4142:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4138:
.LN5736:
	.stabn  68,0,1019,.LN5736-Emit_EmitNtreg		# line 1019, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4144
.Lab4145:
.LN5737:
	.stabn  68,0,1020,.LN5737-Emit_EmitNtreg		# line 1020, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5738:
	.stabn  68,0,1021,.LN5738-Emit_EmitNtreg		# line 1021, column 11
	.data
.Lab4146:
 	.ascii	"Rule 81/2055 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4146,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5739:
	.stabn  68,0,1022,.LN5739-Emit_EmitNtreg		# line 1022, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5740:
	.stabn  68,0,1023,.LN5740-Emit_EmitNtreg		# line 1023, column 11
	.data
.Lab4147:
 	.ascii	" FixedCompare ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4147,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5741:
	.stabn  68,0,1024,.LN5741-Emit_EmitNtreg		# line 1024, column 11
	call	InOut_WriteLn
.LN5742:
	.stabn  68,0,1025,.LN5742-Emit_EmitNtreg		# line 1025, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5743:
	.stabn  68,0,1026,.LN5743-Emit_EmitNtreg		# line 1026, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5744:
	.stabn  68,0,1026,.LN5744-Emit_EmitNtreg		# line 1026, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5745:
	.stabn  68,0,1027,.LN5745-Emit_EmitNtreg		# line 1027, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4150
.Lab4149:
.LN5746:
	.stabn  68,0,1027,.LN5746-Emit_EmitNtreg		# line 1027, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4148
.Lab4150:
.LN5747:
	.stabn  68,0,1027,.LN5747-Emit_EmitNtreg		# line 1027, column 61
	call	InOut_WriteLn
.Lab4148:
.LN5748:
	.stabn  68,0,1028,.LN5748-Emit_EmitNtreg		# line 1028, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5749:
	.stabn  68,0,1029,.LN5749-Emit_EmitNtreg		# line 1029, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4152
	cmpl	$4096,%eax
	jbe	.Lab4151
.Lab4152:
   	call	BoundErr_		
.Lab4151:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4144:
.LN5750:
	.stabn  68,0,1032,.LN5750-Emit_EmitNtreg		# line 1032, column 2
	.data
.Lab4153:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab4153,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5751:
	.stabn  68,0,1032,.LN5751-Emit_EmitNtreg		# line 1032, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5752:
	.stabn  68,0,1032,.LN5752-Emit_EmitNtreg		# line 1032, column 66
	.data
.Lab4154:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab4154,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5753:
	.stabn  68,0,1032,.LN5753-Emit_EmitNtreg		# line 1032, column 87
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5754:
	.stabn  68,0,1032,.LN5754-Emit_EmitNtreg		# line 1032, column 128
	.data
.Lab4155:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4155,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5755:
	.stabn  68,0,1032,.LN5755-Emit_EmitNtreg		# line 1032, column 146
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5756:
	.stabn  68,0,1032,.LN5756-Emit_EmitNtreg		# line 1032, column 178
	call	CgAssOut_AssLn
.LN5757:
	.stabn  68,0,1033,.LN5757-Emit_EmitNtreg		# line 1033, column 2
	.data
.Lab4156:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4156,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5758:
	.stabn  68,0,1033,.LN5758-Emit_EmitNtreg		# line 1033, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	movzbl	Emit_s + 88(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5759:
	.stabn  68,0,1033,.LN5759-Emit_EmitNtreg		# line 1033, column 130
	.data
.Lab4157:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4157,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5760:
	.stabn  68,0,1033,.LN5760-Emit_EmitNtreg		# line 1033, column 150
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4159
	cmpl	$4096,%eax
	jbe	.Lab4158
.Lab4159:
   	call	BoundErr_		
.Lab4158:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5761:
	.stabn  68,0,1033,.LN5761-Emit_EmitNtreg		# line 1033, column 199
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3839:
.LN5762:
	.stabn  68,0,1036,.LN5762-Emit_EmitNtreg		# line 1036, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtCMem
	addl	$12, %esp
.LN5763:
	.stabn  68,0,1037,.LN5763-Emit_EmitNtreg		# line 1037, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN5764:
	.stabn  68,0,1038,.LN5764-Emit_EmitNtreg		# line 1038, column 10
	decl	Emit_s + 1536
.LN5765:
	.stabn  68,0,1039,.LN5765-Emit_EmitNtreg		# line 1039, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4163
	cmpl	$4096,%eax
	jbe	.Lab4162
.Lab4163:
   	call	BoundErr_		
.Lab4162:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4160
.Lab4161:
.LN5766:
	.stabn  68,0,1040,.LN5766-Emit_EmitNtreg		# line 1040, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4165
	cmpl	$4096,%eax
	jbe	.Lab4164
.Lab4165:
   	call	BoundErr_		
.Lab4164:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4160:
.LN5767:
	.stabn  68,0,1042,.LN5767-Emit_EmitNtreg		# line 1042, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4166
.Lab4167:
.LN5768:
	.stabn  68,0,1043,.LN5768-Emit_EmitNtreg		# line 1043, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5769:
	.stabn  68,0,1044,.LN5769-Emit_EmitNtreg		# line 1044, column 11
	.data
.Lab4168:
 	.ascii	"Rule 82/2047 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4168,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5770:
	.stabn  68,0,1045,.LN5770-Emit_EmitNtreg		# line 1045, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5771:
	.stabn  68,0,1046,.LN5771-Emit_EmitNtreg		# line 1046, column 11
	.data
.Lab4169:
 	.ascii	" FixedCompare ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4169,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5772:
	.stabn  68,0,1047,.LN5772-Emit_EmitNtreg		# line 1047, column 11
	call	InOut_WriteLn
.LN5773:
	.stabn  68,0,1048,.LN5773-Emit_EmitNtreg		# line 1048, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5774:
	.stabn  68,0,1049,.LN5774-Emit_EmitNtreg		# line 1049, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5775:
	.stabn  68,0,1049,.LN5775-Emit_EmitNtreg		# line 1049, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5776:
	.stabn  68,0,1050,.LN5776-Emit_EmitNtreg		# line 1050, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4172
.Lab4171:
.LN5777:
	.stabn  68,0,1050,.LN5777-Emit_EmitNtreg		# line 1050, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4170
.Lab4172:
.LN5778:
	.stabn  68,0,1050,.LN5778-Emit_EmitNtreg		# line 1050, column 61
	call	InOut_WriteLn
.Lab4170:
.LN5779:
	.stabn  68,0,1051,.LN5779-Emit_EmitNtreg		# line 1051, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5780:
	.stabn  68,0,1052,.LN5780-Emit_EmitNtreg		# line 1052, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4174
	cmpl	$4096,%eax
	jbe	.Lab4173
.Lab4174:
   	call	BoundErr_		
.Lab4173:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4166:
.LN5781:
	.stabn  68,0,1055,.LN5781-Emit_EmitNtreg		# line 1055, column 2
	.data
.Lab4175:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab4175,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5782:
	.stabn  68,0,1055,.LN5782-Emit_EmitNtreg		# line 1055, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5783:
	.stabn  68,0,1055,.LN5783-Emit_EmitNtreg		# line 1055, column 66
	.data
.Lab4176:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4176,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5784:
	.stabn  68,0,1055,.LN5784-Emit_EmitNtreg		# line 1055, column 86
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5785:
	.stabn  68,0,1055,.LN5785-Emit_EmitNtreg		# line 1055, column 116
	.data
.Lab4177:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4177,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5786:
	.stabn  68,0,1055,.LN5786-Emit_EmitNtreg		# line 1055, column 134
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN5787:
	.stabn  68,0,1055,.LN5787-Emit_EmitNtreg		# line 1055, column 160
	call	CgAssOut_AssLn
.LN5788:
	.stabn  68,0,1056,.LN5788-Emit_EmitNtreg		# line 1056, column 2
	.data
.Lab4178:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4178,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5789:
	.stabn  68,0,1056,.LN5789-Emit_EmitNtreg		# line 1056, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5790:
	.stabn  68,0,1056,.LN5790-Emit_EmitNtreg		# line 1056, column 121
	.data
.Lab4179:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4179,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5791:
	.stabn  68,0,1056,.LN5791-Emit_EmitNtreg		# line 1056, column 142
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4181
	cmpl	$4096,%eax
	jbe	.Lab4180
.Lab4181:
   	call	BoundErr_		
.Lab4180:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5792:
	.stabn  68,0,1056,.LN5792-Emit_EmitNtreg		# line 1056, column 191
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3838:
.LN5793:
	.stabn  68,0,1059,.LN5793-Emit_EmitNtreg		# line 1059, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5794:
	.stabn  68,0,1060,.LN5794-Emit_EmitNtreg		# line 1060, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN5795:
	.stabn  68,0,1061,.LN5795-Emit_EmitNtreg		# line 1061, column 10
	decl	Emit_s + 1536
.LN5796:
	.stabn  68,0,1062,.LN5796-Emit_EmitNtreg		# line 1062, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4185
	cmpl	$4096,%eax
	jbe	.Lab4184
.Lab4185:
   	call	BoundErr_		
.Lab4184:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4182
.Lab4183:
.LN5797:
	.stabn  68,0,1063,.LN5797-Emit_EmitNtreg		# line 1063, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4187
	cmpl	$4096,%eax
	jbe	.Lab4186
.Lab4187:
   	call	BoundErr_		
.Lab4186:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4182:
.LN5798:
	.stabn  68,0,1065,.LN5798-Emit_EmitNtreg		# line 1065, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4188
.Lab4189:
.LN5799:
	.stabn  68,0,1066,.LN5799-Emit_EmitNtreg		# line 1066, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5800:
	.stabn  68,0,1067,.LN5800-Emit_EmitNtreg		# line 1067, column 11
	.data
.Lab4190:
 	.ascii	"Rule 83/2039 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4190,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5801:
	.stabn  68,0,1068,.LN5801-Emit_EmitNtreg		# line 1068, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5802:
	.stabn  68,0,1069,.LN5802-Emit_EmitNtreg		# line 1069, column 11
	.data
.Lab4191:
 	.ascii	" FixedCompare ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4191,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5803:
	.stabn  68,0,1070,.LN5803-Emit_EmitNtreg		# line 1070, column 11
	call	InOut_WriteLn
.LN5804:
	.stabn  68,0,1071,.LN5804-Emit_EmitNtreg		# line 1071, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5805:
	.stabn  68,0,1072,.LN5805-Emit_EmitNtreg		# line 1072, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5806:
	.stabn  68,0,1072,.LN5806-Emit_EmitNtreg		# line 1072, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5807:
	.stabn  68,0,1073,.LN5807-Emit_EmitNtreg		# line 1073, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4194
.Lab4193:
.LN5808:
	.stabn  68,0,1073,.LN5808-Emit_EmitNtreg		# line 1073, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4192
.Lab4194:
.LN5809:
	.stabn  68,0,1073,.LN5809-Emit_EmitNtreg		# line 1073, column 61
	call	InOut_WriteLn
.Lab4192:
.LN5810:
	.stabn  68,0,1074,.LN5810-Emit_EmitNtreg		# line 1074, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5811:
	.stabn  68,0,1075,.LN5811-Emit_EmitNtreg		# line 1075, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4196
	cmpl	$4096,%eax
	jbe	.Lab4195
.Lab4196:
   	call	BoundErr_		
.Lab4195:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4188:
.LN5812:
	.stabn  68,0,1078,.LN5812-Emit_EmitNtreg		# line 1078, column 2
	.data
.Lab4197:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab4197,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5813:
	.stabn  68,0,1078,.LN5813-Emit_EmitNtreg		# line 1078, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5814:
	.stabn  68,0,1078,.LN5814-Emit_EmitNtreg		# line 1078, column 66
	.data
.Lab4198:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4198,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5815:
	.stabn  68,0,1078,.LN5815-Emit_EmitNtreg		# line 1078, column 86
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5816:
	.stabn  68,0,1078,.LN5816-Emit_EmitNtreg		# line 1078, column 122
	.data
.Lab4199:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4199,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5817:
	.stabn  68,0,1078,.LN5817-Emit_EmitNtreg		# line 1078, column 140
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4201
	cmpl	$4096,%eax
	jbe	.Lab4200
.Lab4201:
   	call	BoundErr_		
.Lab4200:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN5818:
	.stabn  68,0,1078,.LN5818-Emit_EmitNtreg		# line 1078, column 215
	call	CgAssOut_AssLn
.LN5819:
	.stabn  68,0,1079,.LN5819-Emit_EmitNtreg		# line 1079, column 2
	.data
.Lab4202:
 	.ascii	"\011set\000"
	.text
	pushl	$4
	leal	.Lab4202,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5820:
	.stabn  68,0,1079,.LN5820-Emit_EmitNtreg		# line 1079, column 25
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	shll	$1, %eax
	leal	(%eax,%eax,2),%ebx
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 52(%ebx,%eax,1),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5821:
	.stabn  68,0,1079,.LN5821-Emit_EmitNtreg		# line 1079, column 121
	.data
.Lab4203:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4203,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5822:
	.stabn  68,0,1079,.LN5822-Emit_EmitNtreg		# line 1079, column 142
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4205
	cmpl	$4096,%eax
	jbe	.Lab4204
.Lab4205:
   	call	BoundErr_		
.Lab4204:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN5823:
	.stabn  68,0,1079,.LN5823-Emit_EmitNtreg		# line 1079, column 191
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3837:
.LN5824:
	.stabn  68,0,1082,.LN5824-Emit_EmitNtreg		# line 1082, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5825:
	.stabn  68,0,1083,.LN5825-Emit_EmitNtreg		# line 1083, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN5826:
	.stabn  68,0,1084,.LN5826-Emit_EmitNtreg		# line 1084, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	12(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN5827:
	.stabn  68,0,1085,.LN5827-Emit_EmitNtreg		# line 1085, column 10
	decl	Emit_s + 1536
.LN5828:
	.stabn  68,0,1086,.LN5828-Emit_EmitNtreg		# line 1086, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4209
	cmpl	$4096,%eax
	jbe	.Lab4208
.Lab4209:
   	call	BoundErr_		
.Lab4208:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4206
.Lab4207:
.LN5829:
	.stabn  68,0,1087,.LN5829-Emit_EmitNtreg		# line 1087, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4211
	cmpl	$4096,%eax
	jbe	.Lab4210
.Lab4211:
   	call	BoundErr_		
.Lab4210:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4206:
.LN5830:
	.stabn  68,0,1089,.LN5830-Emit_EmitNtreg		# line 1089, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4212
.Lab4213:
.LN5831:
	.stabn  68,0,1090,.LN5831-Emit_EmitNtreg		# line 1090, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5832:
	.stabn  68,0,1091,.LN5832-Emit_EmitNtreg		# line 1091, column 11
	.data
.Lab4214:
 	.ascii	"Rule 84/1987 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4214,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5833:
	.stabn  68,0,1092,.LN5833-Emit_EmitNtreg		# line 1092, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5834:
	.stabn  68,0,1093,.LN5834-Emit_EmitNtreg		# line 1093, column 11
	.data
.Lab4215:
 	.ascii	" CheckL ->   reg\000"
	.text
	pushl	$16
	leal	.Lab4215,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5835:
	.stabn  68,0,1094,.LN5835-Emit_EmitNtreg		# line 1094, column 11
	call	InOut_WriteLn
.LN5836:
	.stabn  68,0,1095,.LN5836-Emit_EmitNtreg		# line 1095, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5837:
	.stabn  68,0,1096,.LN5837-Emit_EmitNtreg		# line 1096, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5838:
	.stabn  68,0,1096,.LN5838-Emit_EmitNtreg		# line 1096, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5839:
	.stabn  68,0,1097,.LN5839-Emit_EmitNtreg		# line 1097, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4218
.Lab4217:
.LN5840:
	.stabn  68,0,1097,.LN5840-Emit_EmitNtreg		# line 1097, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4216
.Lab4218:
.LN5841:
	.stabn  68,0,1097,.LN5841-Emit_EmitNtreg		# line 1097, column 61
	call	InOut_WriteLn
.Lab4216:
.LN5842:
	.stabn  68,0,1098,.LN5842-Emit_EmitNtreg		# line 1098, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5843:
	.stabn  68,0,1099,.LN5843-Emit_EmitNtreg		# line 1099, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4220
	cmpl	$4096,%eax
	jbe	.Lab4219
.Lab4220:
   	call	BoundErr_		
.Lab4219:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4212:
.LN5844:
	.stabn  68,0,1102,.LN5844-Emit_EmitNtreg		# line 1102, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN5845:
	.stabn  68,0,1103,.LN5845-Emit_EmitNtreg		# line 1103, column 9
	leal	Emit_s + 996,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN5846:
	.stabn  68,0,1104,.LN5846-Emit_EmitNtreg		# line 1104, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,4(%eax)
	je	.Lab4221
.Lab4222:
.LN5847:
	.stabn  68,0,1105,.LN5847-Emit_EmitNtreg		# line 1105, column 2
	.data
.Lab4223:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab4223,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5848:
	.stabn  68,0,1105,.LN5848-Emit_EmitNtreg		# line 1105, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5849:
	.stabn  68,0,1105,.LN5849-Emit_EmitNtreg		# line 1105, column 63
	.data
.Lab4224:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4224,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5850:
	.stabn  68,0,1105,.LN5850-Emit_EmitNtreg		# line 1105, column 86
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5851:
	.stabn  68,0,1105,.LN5851-Emit_EmitNtreg		# line 1105, column 122
	.data
.Lab4225:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4225,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5852:
	.stabn  68,0,1105,.LN5852-Emit_EmitNtreg		# line 1105, column 140
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4227
	cmpl	$4096,%eax
	jbe	.Lab4226
.Lab4227:
   	call	BoundErr_		
.Lab4226:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN5853:
	.stabn  68,0,1105,.LN5853-Emit_EmitNtreg		# line 1105, column 212
	call	CgAssOut_AssLn
.LN5854:
	.stabn  68,0,1106,.LN5854-Emit_EmitNtreg		# line 1106, column 2
	.data
.Lab4228:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab4228,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5855:
	.stabn  68,0,1106,.LN5855-Emit_EmitNtreg		# line 1106, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 64(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5856:
	.stabn  68,0,1106,.LN5856-Emit_EmitNtreg		# line 1106, column 98
	.data
.Lab4229:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4229,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5857:
	.stabn  68,0,1106,.LN5857-Emit_EmitNtreg		# line 1106, column 118
	pushl	$255
	pushl	Emit_s + 996
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5858:
	.stabn  68,0,1106,.LN5858-Emit_EmitNtreg		# line 1106, column 138
	call	CgAssOut_AssLn
.Lab4221:
.LN5859:
	.stabn  68,0,1108,.LN5859-Emit_EmitNtreg		# line 1108, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	cmpb	$0,5(%eax)
	je	.Lab4232
.Lab4231:
.LN5860:
	.stabn  68,0,1109,.LN5860-Emit_EmitNtreg		# line 1109, column 2
	.data
.Lab4233:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab4233,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5861:
	.stabn  68,0,1109,.LN5861-Emit_EmitNtreg		# line 1109, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	3(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5862:
	.stabn  68,0,1109,.LN5862-Emit_EmitNtreg		# line 1109, column 63
	.data
.Lab4234:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4234,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5863:
	.stabn  68,0,1109,.LN5863-Emit_EmitNtreg		# line 1109, column 86
	leal	-64(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5864:
	.stabn  68,0,1109,.LN5864-Emit_EmitNtreg		# line 1109, column 122
	.data
.Lab4235:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4235,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5865:
	.stabn  68,0,1109,.LN5865-Emit_EmitNtreg		# line 1109, column 140
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	3(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4237
	cmpl	$4096,%eax
	jbe	.Lab4236
.Lab4237:
   	call	BoundErr_		
.Lab4236:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN5866:
	.stabn  68,0,1109,.LN5866-Emit_EmitNtreg		# line 1109, column 212
	call	CgAssOut_AssLn
.LN5867:
	.stabn  68,0,1110,.LN5867-Emit_EmitNtreg		# line 1110, column 2
	.data
.Lab4238:
 	.ascii	"\011j\000"
	.text
	pushl	$2
	leal	.Lab4238,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5868:
	.stabn  68,0,1110,.LN5868-Emit_EmitNtreg		# line 1110, column 23
	pushl	$2
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	3(%eax),%eax
	movzbl	Emit_s + 27(%eax),%eax
	leal	(%eax,%eax,2),%eax
	leal	Emit_s + 70(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5869:
	.stabn  68,0,1110,.LN5869-Emit_EmitNtreg		# line 1110, column 105
	.data
.Lab4239:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4239,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5870:
	.stabn  68,0,1110,.LN5870-Emit_EmitNtreg		# line 1110, column 126
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5871:
	.stabn  68,0,1110,.LN5871-Emit_EmitNtreg		# line 1110, column 145
	call	CgAssOut_AssLn
	jmp	.Lab4230
.Lab4232:
.LN5872:
	.stabn  68,0,1112,.LN5872-Emit_EmitNtreg		# line 1112, column 2
	.data
.Lab4240:
 	.ascii	"\011jmp\011\000"
	.text
	pushl	$5
	leal	.Lab4240,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5873:
	.stabn  68,0,1112,.LN5873-Emit_EmitNtreg		# line 1112, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5874:
	.stabn  68,0,1112,.LN5874-Emit_EmitNtreg		# line 1112, column 49
	call	CgAssOut_AssLn
.Lab4230:
.LN5875:
	.stabn  68,0,1114,.LN5875-Emit_EmitNtreg		# line 1114, column 2
	pushl	$255
	pushl	Emit_s + 996
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5876:
	.stabn  68,0,1114,.LN5876-Emit_EmitNtreg		# line 1114, column 22
	.data
.Lab4241:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab4241,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5877:
	.stabn  68,0,1114,.LN5877-Emit_EmitNtreg		# line 1114, column 40
	call	CgAssOut_AssLn
.LN5878:
	.stabn  68,0,1115,.LN5878-Emit_EmitNtreg		# line 1115, column 2
	.data
.Lab4242:
 	.ascii	"   \011call\011BoundErr_\011\011\000"
	.text
	pushl	$20
	leal	.Lab4242,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5879:
	.stabn  68,0,1115,.LN5879-Emit_EmitNtreg		# line 1115, column 62
	call	CgAssOut_AssLn
.LN5880:
	.stabn  68,0,1116,.LN5880-Emit_EmitNtreg		# line 1116, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5881:
	.stabn  68,0,1116,.LN5881-Emit_EmitNtreg		# line 1116, column 21
	.data
.Lab4243:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab4243,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5882:
	.stabn  68,0,1116,.LN5882-Emit_EmitNtreg		# line 1116, column 39
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3836:
.LN5883:
	.stabn  68,0,1119,.LN5883-Emit_EmitNtreg		# line 1119, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5884:
	.stabn  68,0,1120,.LN5884-Emit_EmitNtreg		# line 1120, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN5885:
	.stabn  68,0,1121,.LN5885-Emit_EmitNtreg		# line 1121, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	12(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN5886:
	.stabn  68,0,1122,.LN5886-Emit_EmitNtreg		# line 1122, column 10
	decl	Emit_s + 1536
.LN5887:
	.stabn  68,0,1123,.LN5887-Emit_EmitNtreg		# line 1123, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4247
	cmpl	$4096,%eax
	jbe	.Lab4246
.Lab4247:
   	call	BoundErr_		
.Lab4246:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4244
.Lab4245:
.LN5888:
	.stabn  68,0,1124,.LN5888-Emit_EmitNtreg		# line 1124, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4249
	cmpl	$4096,%eax
	jbe	.Lab4248
.Lab4249:
   	call	BoundErr_		
.Lab4248:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4244:
.LN5889:
	.stabn  68,0,1126,.LN5889-Emit_EmitNtreg		# line 1126, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4250
.Lab4251:
.LN5890:
	.stabn  68,0,1127,.LN5890-Emit_EmitNtreg		# line 1127, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5891:
	.stabn  68,0,1128,.LN5891-Emit_EmitNtreg		# line 1128, column 11
	.data
.Lab4252:
 	.ascii	"Rule 85/1974 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4252,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5892:
	.stabn  68,0,1129,.LN5892-Emit_EmitNtreg		# line 1129, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5893:
	.stabn  68,0,1130,.LN5893-Emit_EmitNtreg		# line 1130, column 11
	.data
.Lab4253:
 	.ascii	" CheckL ->   reg\000"
	.text
	pushl	$16
	leal	.Lab4253,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5894:
	.stabn  68,0,1131,.LN5894-Emit_EmitNtreg		# line 1131, column 11
	call	InOut_WriteLn
.LN5895:
	.stabn  68,0,1132,.LN5895-Emit_EmitNtreg		# line 1132, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5896:
	.stabn  68,0,1133,.LN5896-Emit_EmitNtreg		# line 1133, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5897:
	.stabn  68,0,1133,.LN5897-Emit_EmitNtreg		# line 1133, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5898:
	.stabn  68,0,1134,.LN5898-Emit_EmitNtreg		# line 1134, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4256
.Lab4255:
.LN5899:
	.stabn  68,0,1134,.LN5899-Emit_EmitNtreg		# line 1134, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4254
.Lab4256:
.LN5900:
	.stabn  68,0,1134,.LN5900-Emit_EmitNtreg		# line 1134, column 61
	call	InOut_WriteLn
.Lab4254:
.LN5901:
	.stabn  68,0,1135,.LN5901-Emit_EmitNtreg		# line 1135, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5902:
	.stabn  68,0,1136,.LN5902-Emit_EmitNtreg		# line 1136, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4258
	cmpl	$4096,%eax
	jbe	.Lab4257
.Lab4258:
   	call	BoundErr_		
.Lab4257:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4250:
.LN5903:
	.stabn  68,0,1139,.LN5903-Emit_EmitNtreg		# line 1139, column 2
	.data
.Lab4259:
 	.ascii	"\011push\000"
	.text
	pushl	$5
	leal	.Lab4259,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5904:
	.stabn  68,0,1139,.LN5904-Emit_EmitNtreg		# line 1139, column 26
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5905:
	.stabn  68,0,1139,.LN5905-Emit_EmitNtreg		# line 1139, column 65
	.data
.Lab4260:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4260,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5906:
	.stabn  68,0,1139,.LN5906-Emit_EmitNtreg		# line 1139, column 86
	leal	-64(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5907:
	.stabn  68,0,1139,.LN5907-Emit_EmitNtreg		# line 1139, column 122
	call	CgAssOut_AssLn
.LN5908:
	.stabn  68,0,1140,.LN5908-Emit_EmitNtreg		# line 1140, column 2
	.data
.Lab4261:
 	.ascii	"\011push\000"
	.text
	pushl	$5
	leal	.Lab4261,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5909:
	.stabn  68,0,1140,.LN5909-Emit_EmitNtreg		# line 1140, column 26
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5910:
	.stabn  68,0,1140,.LN5910-Emit_EmitNtreg		# line 1140, column 65
	.data
.Lab4262:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4262,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5911:
	.stabn  68,0,1140,.LN5911-Emit_EmitNtreg		# line 1140, column 86
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN5912:
	.stabn  68,0,1140,.LN5912-Emit_EmitNtreg		# line 1140, column 122
	call	CgAssOut_AssLn
.LN5913:
	.stabn  68,0,1141,.LN5913-Emit_EmitNtreg		# line 1141, column 2
	.data
.Lab4263:
 	.ascii	"\011bound\000"
	.text
	pushl	$6
	leal	.Lab4263,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5914:
	.stabn  68,0,1141,.LN5914-Emit_EmitNtreg		# line 1141, column 27
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5915:
	.stabn  68,0,1141,.LN5915-Emit_EmitNtreg		# line 1141, column 66
	.data
.Lab4264:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4264,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5916:
	.stabn  68,0,1141,.LN5916-Emit_EmitNtreg		# line 1141, column 86
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4266
	cmpl	$4096,%eax
	jbe	.Lab4265
.Lab4266:
   	call	BoundErr_		
.Lab4265:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN5917:
	.stabn  68,0,1141,.LN5917-Emit_EmitNtreg		# line 1141, column 159
	.data
.Lab4267:
 	.ascii	",(%esp)\000"
	.text
	pushl	$7
	leal	.Lab4267,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5918:
	.stabn  68,0,1141,.LN5918-Emit_EmitNtreg		# line 1141, column 183
	call	CgAssOut_AssLn
.LN5919:
	.stabn  68,0,1142,.LN5919-Emit_EmitNtreg		# line 1142, column 2
	.data
.Lab4268:
 	.ascii	"\011addl\011$\000"
	.text
	pushl	$7
	leal	.Lab4268,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5920:
	.stabn  68,0,1142,.LN5920-Emit_EmitNtreg		# line 1142, column 31
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	movw	Emit_s(,%eax,2),%ax
	addw	%ax, %ax 
	movswl	%ax,%eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5921:
	.stabn  68,0,1142,.LN5921-Emit_EmitNtreg		# line 1142, column 81
	.data
.Lab4269:
 	.ascii	",%esp\000"
	.text
	pushl	$5
	leal	.Lab4269,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5922:
	.stabn  68,0,1142,.LN5922-Emit_EmitNtreg		# line 1142, column 103
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3835:
.LN5923:
	.stabn  68,0,1145,.LN5923-Emit_EmitNtreg		# line 1145, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5924:
	.stabn  68,0,1146,.LN5924-Emit_EmitNtreg		# line 1146, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN5925:
	.stabn  68,0,1147,.LN5925-Emit_EmitNtreg		# line 1147, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	12(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN5926:
	.stabn  68,0,1148,.LN5926-Emit_EmitNtreg		# line 1148, column 10
	decl	Emit_s + 1536
.LN5927:
	.stabn  68,0,1149,.LN5927-Emit_EmitNtreg		# line 1149, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4273
	cmpl	$4096,%eax
	jbe	.Lab4272
.Lab4273:
   	call	BoundErr_		
.Lab4272:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4270
.Lab4271:
.LN5928:
	.stabn  68,0,1150,.LN5928-Emit_EmitNtreg		# line 1150, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4275
	cmpl	$4096,%eax
	jbe	.Lab4274
.Lab4275:
   	call	BoundErr_		
.Lab4274:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4270:
.LN5929:
	.stabn  68,0,1152,.LN5929-Emit_EmitNtreg		# line 1152, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4276
.Lab4277:
.LN5930:
	.stabn  68,0,1153,.LN5930-Emit_EmitNtreg		# line 1153, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5931:
	.stabn  68,0,1154,.LN5931-Emit_EmitNtreg		# line 1154, column 11
	.data
.Lab4278:
 	.ascii	"Rule 86/1946 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4278,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5932:
	.stabn  68,0,1155,.LN5932-Emit_EmitNtreg		# line 1155, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5933:
	.stabn  68,0,1156,.LN5933-Emit_EmitNtreg		# line 1156, column 11
	.data
.Lab4279:
 	.ascii	" CheckL ->   reg\000"
	.text
	pushl	$16
	leal	.Lab4279,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5934:
	.stabn  68,0,1157,.LN5934-Emit_EmitNtreg		# line 1157, column 11
	call	InOut_WriteLn
.LN5935:
	.stabn  68,0,1158,.LN5935-Emit_EmitNtreg		# line 1158, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5936:
	.stabn  68,0,1159,.LN5936-Emit_EmitNtreg		# line 1159, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5937:
	.stabn  68,0,1159,.LN5937-Emit_EmitNtreg		# line 1159, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5938:
	.stabn  68,0,1160,.LN5938-Emit_EmitNtreg		# line 1160, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4282
.Lab4281:
.LN5939:
	.stabn  68,0,1160,.LN5939-Emit_EmitNtreg		# line 1160, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4280
.Lab4282:
.LN5940:
	.stabn  68,0,1160,.LN5940-Emit_EmitNtreg		# line 1160, column 61
	call	InOut_WriteLn
.Lab4280:
.LN5941:
	.stabn  68,0,1161,.LN5941-Emit_EmitNtreg		# line 1161, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5942:
	.stabn  68,0,1162,.LN5942-Emit_EmitNtreg		# line 1162, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4284
	cmpl	$4096,%eax
	jbe	.Lab4283
.Lab4284:
   	call	BoundErr_		
.Lab4283:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4276:
.LN5943:
	.stabn  68,0,1165,.LN5943-Emit_EmitNtreg		# line 1165, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN5944:
	.stabn  68,0,1166,.LN5944-Emit_EmitNtreg		# line 1166, column 2
	.data
.Lab4285:
 	.ascii	"\011.data\000"
	.text
	pushl	$6
	leal	.Lab4285,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5945:
	.stabn  68,0,1166,.LN5945-Emit_EmitNtreg		# line 1166, column 27
	call	CgAssOut_AssLn
.LN5946:
	.stabn  68,0,1167,.LN5946-Emit_EmitNtreg		# line 1167, column 9
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	movzwl	Emit_s(,%eax,2),%eax
	.data
	.align 4
.Lab4290:
	.long	.Lab4288
	.long	.Lab4286
	.long	.Lab4289
	.text
	subl	$2,%eax
	jb	.Lab4286
	cmpl	$2,%eax
	ja	.Lab4286
	jmp	*.Lab4290(,%eax,4)
.Lab4289:
.LN5947:
	.stabn  68,0,1169,.LN5947-Emit_EmitNtreg		# line 1169, column 2
	.data
.Lab4291:
 	.ascii	"\011.align 4\000"
	.text
	pushl	$9
	leal	.Lab4291,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5948:
	.stabn  68,0,1169,.LN5948-Emit_EmitNtreg		# line 1169, column 30
	call	CgAssOut_AssLn
.LN5949:
	.stabn  68,0,1170,.LN5949-Emit_EmitNtreg		# line 1170, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5950:
	.stabn  68,0,1170,.LN5950-Emit_EmitNtreg		# line 1170, column 21
	.data
.Lab4292:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab4292,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5951:
	.stabn  68,0,1170,.LN5951-Emit_EmitNtreg		# line 1170, column 39
	call	CgAssOut_AssLn
.LN5952:
	.stabn  68,0,1171,.LN5952-Emit_EmitNtreg		# line 1171, column 2
	.data
.Lab4293:
 	.ascii	"\011.long\011\000"
	.text
	pushl	$7
	leal	.Lab4293,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5953:
	.stabn  68,0,1171,.LN5953-Emit_EmitNtreg		# line 1171, column 30
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5954:
	.stabn  68,0,1171,.LN5954-Emit_EmitNtreg		# line 1171, column 71
	.data
.Lab4294:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4294,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5955:
	.stabn  68,0,1171,.LN5955-Emit_EmitNtreg		# line 1171, column 89
	movl	8(%ebp),%eax
	movl	12(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5956:
	.stabn  68,0,1171,.LN5956-Emit_EmitNtreg		# line 1171, column 130
	call	CgAssOut_AssLn
	jmp	.Lab4287
.Lab4288:
.LN5957:
	.stabn  68,0,1173,.LN5957-Emit_EmitNtreg		# line 1173, column 2
	.data
.Lab4295:
 	.ascii	"\011.align 2\000"
	.text
	pushl	$9
	leal	.Lab4295,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5958:
	.stabn  68,0,1173,.LN5958-Emit_EmitNtreg		# line 1173, column 30
	call	CgAssOut_AssLn
.LN5959:
	.stabn  68,0,1174,.LN5959-Emit_EmitNtreg		# line 1174, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5960:
	.stabn  68,0,1174,.LN5960-Emit_EmitNtreg		# line 1174, column 21
	.data
.Lab4296:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab4296,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5961:
	.stabn  68,0,1174,.LN5961-Emit_EmitNtreg		# line 1174, column 39
	call	CgAssOut_AssLn
.LN5962:
	.stabn  68,0,1175,.LN5962-Emit_EmitNtreg		# line 1175, column 2
	.data
.Lab4297:
 	.ascii	"\011.word\011\000"
	.text
	pushl	$7
	leal	.Lab4297,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5963:
	.stabn  68,0,1175,.LN5963-Emit_EmitNtreg		# line 1175, column 30
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5964:
	.stabn  68,0,1175,.LN5964-Emit_EmitNtreg		# line 1175, column 71
	.data
.Lab4298:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4298,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5965:
	.stabn  68,0,1175,.LN5965-Emit_EmitNtreg		# line 1175, column 89
	movl	8(%ebp),%eax
	movl	12(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN5966:
	.stabn  68,0,1175,.LN5966-Emit_EmitNtreg		# line 1175, column 130
	call	CgAssOut_AssLn
	jmp	.Lab4287
.Lab4286:
	call	CaseErr_
.Lab4287:
.LN5967:
	.stabn  68,0,1177,.LN5967-Emit_EmitNtreg		# line 1177, column 2
	.data
.Lab4299:
 	.ascii	"\011.text\000"
	.text
	pushl	$6
	leal	.Lab4299,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5968:
	.stabn  68,0,1177,.LN5968-Emit_EmitNtreg		# line 1177, column 27
	call	CgAssOut_AssLn
.LN5969:
	.stabn  68,0,1178,.LN5969-Emit_EmitNtreg		# line 1178, column 2
	.data
.Lab4300:
 	.ascii	"\011bound\000"
	.text
	pushl	$6
	leal	.Lab4300,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5970:
	.stabn  68,0,1178,.LN5970-Emit_EmitNtreg		# line 1178, column 27
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN5971:
	.stabn  68,0,1178,.LN5971-Emit_EmitNtreg		# line 1178, column 66
	.data
.Lab4301:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4301,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5972:
	.stabn  68,0,1178,.LN5972-Emit_EmitNtreg		# line 1178, column 86
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	4(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4303
	cmpl	$4096,%eax
	jbe	.Lab4302
.Lab4303:
   	call	BoundErr_		
.Lab4302:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN5973:
	.stabn  68,0,1178,.LN5973-Emit_EmitNtreg		# line 1178, column 159
	.data
.Lab4304:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4304,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN5974:
	.stabn  68,0,1178,.LN5974-Emit_EmitNtreg		# line 1178, column 177
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN5975:
	.stabn  68,0,1178,.LN5975-Emit_EmitNtreg		# line 1178, column 196
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3834:
.LN5976:
	.stabn  68,0,1181,.LN5976-Emit_EmitNtreg		# line 1181, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5977:
	.stabn  68,0,1182,.LN5977-Emit_EmitNtreg		# line 1182, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN5978:
	.stabn  68,0,1183,.LN5978-Emit_EmitNtreg		# line 1183, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	12(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN5979:
	.stabn  68,0,1184,.LN5979-Emit_EmitNtreg		# line 1184, column 10
	decl	Emit_s + 1536
.LN5980:
	.stabn  68,0,1185,.LN5980-Emit_EmitNtreg		# line 1185, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4308
	cmpl	$4096,%eax
	jbe	.Lab4307
.Lab4308:
   	call	BoundErr_		
.Lab4307:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4305
.Lab4306:
.LN5981:
	.stabn  68,0,1186,.LN5981-Emit_EmitNtreg		# line 1186, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4310
	cmpl	$4096,%eax
	jbe	.Lab4309
.Lab4310:
   	call	BoundErr_		
.Lab4309:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4305:
.LN5982:
	.stabn  68,0,1188,.LN5982-Emit_EmitNtreg		# line 1188, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4311
.Lab4312:
.LN5983:
	.stabn  68,0,1189,.LN5983-Emit_EmitNtreg		# line 1189, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5984:
	.stabn  68,0,1190,.LN5984-Emit_EmitNtreg		# line 1190, column 11
	.data
.Lab4313:
 	.ascii	"Rule 87/1941 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4313,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5985:
	.stabn  68,0,1191,.LN5985-Emit_EmitNtreg		# line 1191, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN5986:
	.stabn  68,0,1192,.LN5986-Emit_EmitNtreg		# line 1192, column 11
	.data
.Lab4314:
 	.ascii	" CheckL ->   reg\000"
	.text
	pushl	$16
	leal	.Lab4314,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN5987:
	.stabn  68,0,1193,.LN5987-Emit_EmitNtreg		# line 1193, column 11
	call	InOut_WriteLn
.LN5988:
	.stabn  68,0,1194,.LN5988-Emit_EmitNtreg		# line 1194, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5989:
	.stabn  68,0,1195,.LN5989-Emit_EmitNtreg		# line 1195, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN5990:
	.stabn  68,0,1195,.LN5990-Emit_EmitNtreg		# line 1195, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN5991:
	.stabn  68,0,1196,.LN5991-Emit_EmitNtreg		# line 1196, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4317
.Lab4316:
.LN5992:
	.stabn  68,0,1196,.LN5992-Emit_EmitNtreg		# line 1196, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4315
.Lab4317:
.LN5993:
	.stabn  68,0,1196,.LN5993-Emit_EmitNtreg		# line 1196, column 61
	call	InOut_WriteLn
.Lab4315:
.LN5994:
	.stabn  68,0,1197,.LN5994-Emit_EmitNtreg		# line 1197, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN5995:
	.stabn  68,0,1198,.LN5995-Emit_EmitNtreg		# line 1198, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4319
	cmpl	$4096,%eax
	jbe	.Lab4318
.Lab4319:
   	call	BoundErr_		
.Lab4318:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4311:
	jmp	.Lab3784
.Lab3833:
.LN5996:
	.stabn  68,0,1202,.LN5996-Emit_EmitNtreg		# line 1202, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN5997:
	.stabn  68,0,1203,.LN5997-Emit_EmitNtreg		# line 1203, column 10
	decl	Emit_s + 1536
.LN5998:
	.stabn  68,0,1204,.LN5998-Emit_EmitNtreg		# line 1204, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4323
	cmpl	$4096,%eax
	jbe	.Lab4322
.Lab4323:
   	call	BoundErr_		
.Lab4322:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4320
.Lab4321:
.LN5999:
	.stabn  68,0,1205,.LN5999-Emit_EmitNtreg		# line 1205, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4325
	cmpl	$4096,%eax
	jbe	.Lab4324
.Lab4325:
   	call	BoundErr_		
.Lab4324:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4320:
.LN6000:
	.stabn  68,0,1207,.LN6000-Emit_EmitNtreg		# line 1207, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4326
.Lab4327:
.LN6001:
	.stabn  68,0,1208,.LN6001-Emit_EmitNtreg		# line 1208, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6002:
	.stabn  68,0,1209,.LN6002-Emit_EmitNtreg		# line 1209, column 11
	.data
.Lab4328:
 	.ascii	"Rule 88/1881 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4328,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6003:
	.stabn  68,0,1210,.LN6003-Emit_EmitNtreg		# line 1210, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6004:
	.stabn  68,0,1211,.LN6004-Emit_EmitNtreg		# line 1211, column 11
	.data
.Lab4329:
 	.ascii	" Coerce ->   reg\000"
	.text
	pushl	$16
	leal	.Lab4329,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6005:
	.stabn  68,0,1212,.LN6005-Emit_EmitNtreg		# line 1212, column 11
	call	InOut_WriteLn
.LN6006:
	.stabn  68,0,1213,.LN6006-Emit_EmitNtreg		# line 1213, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6007:
	.stabn  68,0,1214,.LN6007-Emit_EmitNtreg		# line 1214, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6008:
	.stabn  68,0,1214,.LN6008-Emit_EmitNtreg		# line 1214, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6009:
	.stabn  68,0,1215,.LN6009-Emit_EmitNtreg		# line 1215, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4332
.Lab4331:
.LN6010:
	.stabn  68,0,1215,.LN6010-Emit_EmitNtreg		# line 1215, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4330
.Lab4332:
.LN6011:
	.stabn  68,0,1215,.LN6011-Emit_EmitNtreg		# line 1215, column 61
	call	InOut_WriteLn
.Lab4330:
.LN6012:
	.stabn  68,0,1216,.LN6012-Emit_EmitNtreg		# line 1216, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6013:
	.stabn  68,0,1217,.LN6013-Emit_EmitNtreg		# line 1217, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4334
	cmpl	$4096,%eax
	jbe	.Lab4333
.Lab4334:
   	call	BoundErr_		
.Lab4333:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4326:
	jmp	.Lab3784
.Lab3832:
.LN6014:
	.stabn  68,0,1221,.LN6014-Emit_EmitNtreg		# line 1221, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN6015:
	.stabn  68,0,1222,.LN6015-Emit_EmitNtreg		# line 1222, column 10
	decl	Emit_s + 1536
.LN6016:
	.stabn  68,0,1223,.LN6016-Emit_EmitNtreg		# line 1223, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4338
	cmpl	$4096,%eax
	jbe	.Lab4337
.Lab4338:
   	call	BoundErr_		
.Lab4337:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4335
.Lab4336:
.LN6017:
	.stabn  68,0,1224,.LN6017-Emit_EmitNtreg		# line 1224, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4340
	cmpl	$4096,%eax
	jbe	.Lab4339
.Lab4340:
   	call	BoundErr_		
.Lab4339:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4335:
.LN6018:
	.stabn  68,0,1226,.LN6018-Emit_EmitNtreg		# line 1226, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4341
.Lab4342:
.LN6019:
	.stabn  68,0,1227,.LN6019-Emit_EmitNtreg		# line 1227, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6020:
	.stabn  68,0,1228,.LN6020-Emit_EmitNtreg		# line 1228, column 11
	.data
.Lab4343:
 	.ascii	"Rule 89/1868 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4343,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6021:
	.stabn  68,0,1229,.LN6021-Emit_EmitNtreg		# line 1229, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6022:
	.stabn  68,0,1230,.LN6022-Emit_EmitNtreg		# line 1230, column 11
	.data
.Lab4344:
 	.ascii	" Coerce ->   reg\000"
	.text
	pushl	$16
	leal	.Lab4344,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6023:
	.stabn  68,0,1231,.LN6023-Emit_EmitNtreg		# line 1231, column 11
	call	InOut_WriteLn
.LN6024:
	.stabn  68,0,1232,.LN6024-Emit_EmitNtreg		# line 1232, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6025:
	.stabn  68,0,1233,.LN6025-Emit_EmitNtreg		# line 1233, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6026:
	.stabn  68,0,1233,.LN6026-Emit_EmitNtreg		# line 1233, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6027:
	.stabn  68,0,1234,.LN6027-Emit_EmitNtreg		# line 1234, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4347
.Lab4346:
.LN6028:
	.stabn  68,0,1234,.LN6028-Emit_EmitNtreg		# line 1234, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4345
.Lab4347:
.LN6029:
	.stabn  68,0,1234,.LN6029-Emit_EmitNtreg		# line 1234, column 61
	call	InOut_WriteLn
.Lab4345:
.LN6030:
	.stabn  68,0,1235,.LN6030-Emit_EmitNtreg		# line 1235, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6031:
	.stabn  68,0,1236,.LN6031-Emit_EmitNtreg		# line 1236, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4349
	cmpl	$4096,%eax
	jbe	.Lab4348
.Lab4349:
   	call	BoundErr_		
.Lab4348:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4341:
.LN6032:
	.stabn  68,0,1239,.LN6032-Emit_EmitNtreg		# line 1239, column 9
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	cmpb	$0,Emit_s + 27(%eax)
	je	.Lab4352
.Lab4353:
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	cmpb	$0,Emit_s + 27(%eax)
	je	.Lab4352
.Lab4351:
.LN6033:
	.stabn  68,0,1240,.LN6033-Emit_EmitNtreg		# line 1240, column 2
	.data
.Lab4354:
 	.ascii	"\011movs\000"
	.text
	pushl	$5
	leal	.Lab4354,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6034:
	.stabn  68,0,1240,.LN6034-Emit_EmitNtreg		# line 1240, column 26
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	84(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6035:
	.stabn  68,0,1240,.LN6035-Emit_EmitNtreg		# line 1240, column 71
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6036:
	.stabn  68,0,1240,.LN6036-Emit_EmitNtreg		# line 1240, column 110
	.data
.Lab4355:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4355,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6037:
	.stabn  68,0,1240,.LN6037-Emit_EmitNtreg		# line 1240, column 134
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6038:
	.stabn  68,0,1240,.LN6038-Emit_EmitNtreg		# line 1240, column 166
	.data
.Lab4356:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4356,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6039:
	.stabn  68,0,1240,.LN6039-Emit_EmitNtreg		# line 1240, column 184
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4358
	cmpl	$4096,%eax
	jbe	.Lab4357
.Lab4358:
   	call	BoundErr_		
.Lab4357:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6040:
	.stabn  68,0,1240,.LN6040-Emit_EmitNtreg		# line 1240, column 255
	call	CgAssOut_AssLn
	jmp	.Lab4350
.Lab4352:
.LN6041:
	.stabn  68,0,1242,.LN6041-Emit_EmitNtreg		# line 1242, column 2
	.data
.Lab4359:
 	.ascii	"\011movz\000"
	.text
	pushl	$5
	leal	.Lab4359,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6042:
	.stabn  68,0,1242,.LN6042-Emit_EmitNtreg		# line 1242, column 26
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	84(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6043:
	.stabn  68,0,1242,.LN6043-Emit_EmitNtreg		# line 1242, column 71
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6044:
	.stabn  68,0,1242,.LN6044-Emit_EmitNtreg		# line 1242, column 110
	.data
.Lab4360:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4360,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6045:
	.stabn  68,0,1242,.LN6045-Emit_EmitNtreg		# line 1242, column 134
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6046:
	.stabn  68,0,1242,.LN6046-Emit_EmitNtreg		# line 1242, column 166
	.data
.Lab4361:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4361,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6047:
	.stabn  68,0,1242,.LN6047-Emit_EmitNtreg		# line 1242, column 184
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4363
	cmpl	$4096,%eax
	jbe	.Lab4362
.Lab4363:
   	call	BoundErr_		
.Lab4362:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6048:
	.stabn  68,0,1242,.LN6048-Emit_EmitNtreg		# line 1242, column 255
	call	CgAssOut_AssLn
.Lab4350:
	jmp	.Lab3784
.Lab3831:
.LN6049:
	.stabn  68,0,1246,.LN6049-Emit_EmitNtreg		# line 1246, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtfreg
	addl	$12, %esp
.LN6050:
	.stabn  68,0,1247,.LN6050-Emit_EmitNtreg		# line 1247, column 10
	decl	Emit_s + 1536
.LN6051:
	.stabn  68,0,1248,.LN6051-Emit_EmitNtreg		# line 1248, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4367
	cmpl	$4096,%eax
	jbe	.Lab4366
.Lab4367:
   	call	BoundErr_		
.Lab4366:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4364
.Lab4365:
.LN6052:
	.stabn  68,0,1249,.LN6052-Emit_EmitNtreg		# line 1249, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4369
	cmpl	$4096,%eax
	jbe	.Lab4368
.Lab4369:
   	call	BoundErr_		
.Lab4368:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4364:
.LN6053:
	.stabn  68,0,1251,.LN6053-Emit_EmitNtreg		# line 1251, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4370
.Lab4371:
.LN6054:
	.stabn  68,0,1252,.LN6054-Emit_EmitNtreg		# line 1252, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6055:
	.stabn  68,0,1253,.LN6055-Emit_EmitNtreg		# line 1253, column 11
	.data
.Lab4372:
 	.ascii	"Rule 90/1785 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4372,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6056:
	.stabn  68,0,1254,.LN6056-Emit_EmitNtreg		# line 1254, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6057:
	.stabn  68,0,1255,.LN6057-Emit_EmitNtreg		# line 1255, column 11
	.data
.Lab4373:
 	.ascii	" Trunc ->   reg\000"
	.text
	pushl	$15
	leal	.Lab4373,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6058:
	.stabn  68,0,1256,.LN6058-Emit_EmitNtreg		# line 1256, column 11
	call	InOut_WriteLn
.LN6059:
	.stabn  68,0,1257,.LN6059-Emit_EmitNtreg		# line 1257, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6060:
	.stabn  68,0,1258,.LN6060-Emit_EmitNtreg		# line 1258, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6061:
	.stabn  68,0,1258,.LN6061-Emit_EmitNtreg		# line 1258, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6062:
	.stabn  68,0,1259,.LN6062-Emit_EmitNtreg		# line 1259, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4376
.Lab4375:
.LN6063:
	.stabn  68,0,1259,.LN6063-Emit_EmitNtreg		# line 1259, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4374
.Lab4376:
.LN6064:
	.stabn  68,0,1259,.LN6064-Emit_EmitNtreg		# line 1259, column 61
	call	InOut_WriteLn
.Lab4374:
.LN6065:
	.stabn  68,0,1260,.LN6065-Emit_EmitNtreg		# line 1260, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6066:
	.stabn  68,0,1261,.LN6066-Emit_EmitNtreg		# line 1261, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4378
	cmpl	$4096,%eax
	jbe	.Lab4377
.Lab4378:
   	call	BoundErr_		
.Lab4377:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4370:
.LN6067:
	.stabn  68,0,1264,.LN6067-Emit_EmitNtreg		# line 1264, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN6068:
	.stabn  68,0,1265,.LN6068-Emit_EmitNtreg		# line 1265, column 2
	.data
.Lab4379:
 	.ascii	"\011fcoml\011TwoExp31_\000"
	.text
	pushl	$16
	leal	.Lab4379,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6069:
	.stabn  68,0,1265,.LN6069-Emit_EmitNtreg		# line 1265, column 39
	call	CgAssOut_AssLn
.LN6070:
	.stabn  68,0,1266,.LN6070-Emit_EmitNtreg		# line 1266, column 2
	.data
.Lab4380:
 	.ascii	"\011fstsw\011%ax\000"
	.text
	pushl	$10
	leal	.Lab4380,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6071:
	.stabn  68,0,1266,.LN6071-Emit_EmitNtreg		# line 1266, column 33
	call	CgAssOut_AssLn
.LN6072:
	.stabn  68,0,1267,.LN6072-Emit_EmitNtreg		# line 1267, column 2
	.data
.Lab4381:
 	.ascii	"\011sahf\000"
	.text
	pushl	$5
	leal	.Lab4381,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6073:
	.stabn  68,0,1267,.LN6073-Emit_EmitNtreg		# line 1267, column 26
	call	CgAssOut_AssLn
.LN6074:
	.stabn  68,0,1268,.LN6074-Emit_EmitNtreg		# line 1268, column 2
	.data
.Lab4382:
 	.ascii	"\011jb\011\000"
	.text
	pushl	$4
	leal	.Lab4382,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6075:
	.stabn  68,0,1268,.LN6075-Emit_EmitNtreg		# line 1268, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN6076:
	.stabn  68,0,1268,.LN6076-Emit_EmitNtreg		# line 1268, column 49
	call	CgAssOut_AssLn
.LN6077:
	.stabn  68,0,1269,.LN6077-Emit_EmitNtreg		# line 1269, column 2
	.data
.Lab4383:
 	.ascii	"\011fsubl\011TwoExp32_\000"
	.text
	pushl	$16
	leal	.Lab4383,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6078:
	.stabn  68,0,1269,.LN6078-Emit_EmitNtreg		# line 1269, column 39
	call	CgAssOut_AssLn
.LN6079:
	.stabn  68,0,1270,.LN6079-Emit_EmitNtreg		# line 1270, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN6080:
	.stabn  68,0,1270,.LN6080-Emit_EmitNtreg		# line 1270, column 21
	.data
.Lab4384:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab4384,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6081:
	.stabn  68,0,1270,.LN6081-Emit_EmitNtreg		# line 1270, column 39
	call	CgAssOut_AssLn
.LN6082:
	.stabn  68,0,1271,.LN6082-Emit_EmitNtreg		# line 1271, column 2
	.data
.Lab4385:
 	.ascii	"\011subl\011$4,%esp\000"
	.text
	pushl	$13
	leal	.Lab4385,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6083:
	.stabn  68,0,1271,.LN6083-Emit_EmitNtreg		# line 1271, column 37
	call	CgAssOut_AssLn
.LN6084:
	.stabn  68,0,1272,.LN6084-Emit_EmitNtreg		# line 1272, column 9
	pushl	$3
	pushl	$1
	call	Emit_CheckRoundMode2
	addl	$8, %esp
.LN6085:
	.stabn  68,0,1273,.LN6085-Emit_EmitNtreg		# line 1273, column 2
	.data
.Lab4386:
 	.ascii	"\011fistpl\011(%esp)\000"
	.text
	pushl	$14
	leal	.Lab4386,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6086:
	.stabn  68,0,1273,.LN6086-Emit_EmitNtreg		# line 1273, column 36
	call	CgAssOut_AssLn
.LN6087:
	.stabn  68,0,1274,.LN6087-Emit_EmitNtreg		# line 1274, column 2
	.data
.Lab4387:
 	.ascii	"\011popl\011\000"
	.text
	pushl	$6
	leal	.Lab4387,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6088:
	.stabn  68,0,1274,.LN6088-Emit_EmitNtreg		# line 1274, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4389
	cmpl	$4096,%eax
	jbe	.Lab4388
.Lab4389:
   	call	BoundErr_		
.Lab4388:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6089:
	.stabn  68,0,1274,.LN6089-Emit_EmitNtreg		# line 1274, column 73
	call	CgAssOut_AssLn
.LN6090:
	.stabn  68,0,1275,.LN6090-Emit_EmitNtreg		# line 1275, column 9
	call	Emit_PopFStack
	jmp	.Lab3784
.Lab3830:
.LN6091:
	.stabn  68,0,1278,.LN6091-Emit_EmitNtreg		# line 1278, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6092:
	.stabn  68,0,1279,.LN6092-Emit_EmitNtreg		# line 1279, column 10
	decl	Emit_s + 1536
.LN6093:
	.stabn  68,0,1280,.LN6093-Emit_EmitNtreg		# line 1280, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4393
	cmpl	$4096,%eax
	jbe	.Lab4392
.Lab4393:
   	call	BoundErr_		
.Lab4392:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4390
.Lab4391:
.LN6094:
	.stabn  68,0,1281,.LN6094-Emit_EmitNtreg		# line 1281, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4395
	cmpl	$4096,%eax
	jbe	.Lab4394
.Lab4395:
   	call	BoundErr_		
.Lab4394:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4390:
.LN6095:
	.stabn  68,0,1283,.LN6095-Emit_EmitNtreg		# line 1283, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4396
.Lab4397:
.LN6096:
	.stabn  68,0,1284,.LN6096-Emit_EmitNtreg		# line 1284, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6097:
	.stabn  68,0,1285,.LN6097-Emit_EmitNtreg		# line 1285, column 11
	.data
.Lab4398:
 	.ascii	"Rule 91/1735 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4398,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6098:
	.stabn  68,0,1286,.LN6098-Emit_EmitNtreg		# line 1286, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6099:
	.stabn  68,0,1287,.LN6099-Emit_EmitNtreg		# line 1287, column 11
	.data
.Lab4399:
 	.ascii	" Cap ->   reg\000"
	.text
	pushl	$13
	leal	.Lab4399,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6100:
	.stabn  68,0,1288,.LN6100-Emit_EmitNtreg		# line 1288, column 11
	call	InOut_WriteLn
.LN6101:
	.stabn  68,0,1289,.LN6101-Emit_EmitNtreg		# line 1289, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6102:
	.stabn  68,0,1290,.LN6102-Emit_EmitNtreg		# line 1290, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6103:
	.stabn  68,0,1290,.LN6103-Emit_EmitNtreg		# line 1290, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6104:
	.stabn  68,0,1291,.LN6104-Emit_EmitNtreg		# line 1291, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4402
.Lab4401:
.LN6105:
	.stabn  68,0,1291,.LN6105-Emit_EmitNtreg		# line 1291, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4400
.Lab4402:
.LN6106:
	.stabn  68,0,1291,.LN6106-Emit_EmitNtreg		# line 1291, column 61
	call	InOut_WriteLn
.Lab4400:
.LN6107:
	.stabn  68,0,1292,.LN6107-Emit_EmitNtreg		# line 1292, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6108:
	.stabn  68,0,1293,.LN6108-Emit_EmitNtreg		# line 1293, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4404
	cmpl	$4096,%eax
	jbe	.Lab4403
.Lab4404:
   	call	BoundErr_		
.Lab4403:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4396:
.LN6109:
	.stabn  68,0,1295,.LN6109-Emit_EmitNtreg		# line 1295, column 2
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN6110:
	.stabn  68,0,1296,.LN6110-Emit_EmitNtreg		# line 1296, column 2
	.data
.Lab4405:
 	.ascii	"\011cmpb\011$\000"
	.text
	pushl	$7
	leal	.Lab4405,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6111:
	.stabn  68,0,1296,.LN6111-Emit_EmitNtreg		# line 1296, column 31
	pushl	$97
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6112:
	.stabn  68,0,1296,.LN6112-Emit_EmitNtreg		# line 1296, column 52
	.data
.Lab4406:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4406,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6113:
	.stabn  68,0,1296,.LN6113-Emit_EmitNtreg		# line 1296, column 70
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4408
	cmpl	$4096,%eax
	jbe	.Lab4407
.Lab4408:
   	call	BoundErr_		
.Lab4407:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN6114:
	.stabn  68,0,1296,.LN6114-Emit_EmitNtreg		# line 1296, column 121
	call	CgAssOut_AssLn
.LN6115:
	.stabn  68,0,1297,.LN6115-Emit_EmitNtreg		# line 1297, column 2
	.data
.Lab4409:
 	.ascii	"\011jl\011\000"
	.text
	pushl	$4
	leal	.Lab4409,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6116:
	.stabn  68,0,1297,.LN6116-Emit_EmitNtreg		# line 1297, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN6117:
	.stabn  68,0,1297,.LN6117-Emit_EmitNtreg		# line 1297, column 49
	call	CgAssOut_AssLn
.LN6118:
	.stabn  68,0,1298,.LN6118-Emit_EmitNtreg		# line 1298, column 2
	.data
.Lab4410:
 	.ascii	"\011cmpb\011$\000"
	.text
	pushl	$7
	leal	.Lab4410,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6119:
	.stabn  68,0,1298,.LN6119-Emit_EmitNtreg		# line 1298, column 31
	pushl	$122
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6120:
	.stabn  68,0,1298,.LN6120-Emit_EmitNtreg		# line 1298, column 52
	.data
.Lab4411:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4411,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6121:
	.stabn  68,0,1298,.LN6121-Emit_EmitNtreg		# line 1298, column 70
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4413
	cmpl	$4096,%eax
	jbe	.Lab4412
.Lab4413:
   	call	BoundErr_		
.Lab4412:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN6122:
	.stabn  68,0,1298,.LN6122-Emit_EmitNtreg		# line 1298, column 121
	call	CgAssOut_AssLn
.LN6123:
	.stabn  68,0,1299,.LN6123-Emit_EmitNtreg		# line 1299, column 2
	.data
.Lab4414:
 	.ascii	"\011jg\011\000"
	.text
	pushl	$4
	leal	.Lab4414,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6124:
	.stabn  68,0,1299,.LN6124-Emit_EmitNtreg		# line 1299, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN6125:
	.stabn  68,0,1299,.LN6125-Emit_EmitNtreg		# line 1299, column 49
	call	CgAssOut_AssLn
.LN6126:
	.stabn  68,0,1300,.LN6126-Emit_EmitNtreg		# line 1300, column 2
	.data
.Lab4415:
 	.ascii	"\011subb\011$\000"
	.text
	pushl	$7
	leal	.Lab4415,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6127:
	.stabn  68,0,1300,.LN6127-Emit_EmitNtreg		# line 1300, column 31
	pushl	$32
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6128:
	.stabn  68,0,1300,.LN6128-Emit_EmitNtreg		# line 1300, column 63
	.data
.Lab4416:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4416,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6129:
	.stabn  68,0,1300,.LN6129-Emit_EmitNtreg		# line 1300, column 81
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4418
	cmpl	$4096,%eax
	jbe	.Lab4417
.Lab4418:
   	call	BoundErr_		
.Lab4417:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssByteRegister
	addl	$4, %esp
.LN6130:
	.stabn  68,0,1300,.LN6130-Emit_EmitNtreg		# line 1300, column 132
	call	CgAssOut_AssLn
.LN6131:
	.stabn  68,0,1301,.LN6131-Emit_EmitNtreg		# line 1301, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN6132:
	.stabn  68,0,1301,.LN6132-Emit_EmitNtreg		# line 1301, column 21
	.data
.Lab4419:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab4419,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6133:
	.stabn  68,0,1301,.LN6133-Emit_EmitNtreg		# line 1301, column 39
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3829:
.LN6134:
	.stabn  68,0,1304,.LN6134-Emit_EmitNtreg		# line 1304, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6135:
	.stabn  68,0,1305,.LN6135-Emit_EmitNtreg		# line 1305, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6136:
	.stabn  68,0,1306,.LN6136-Emit_EmitNtreg		# line 1306, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	12(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6137:
	.stabn  68,0,1307,.LN6137-Emit_EmitNtreg		# line 1307, column 10
	decl	Emit_s + 1536
.LN6138:
	.stabn  68,0,1308,.LN6138-Emit_EmitNtreg		# line 1308, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4423
	cmpl	$4096,%eax
	jbe	.Lab4422
.Lab4423:
   	call	BoundErr_		
.Lab4422:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4420
.Lab4421:
.LN6139:
	.stabn  68,0,1309,.LN6139-Emit_EmitNtreg		# line 1309, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4425
	cmpl	$4096,%eax
	jbe	.Lab4424
.Lab4425:
   	call	BoundErr_		
.Lab4424:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4420:
.LN6140:
	.stabn  68,0,1311,.LN6140-Emit_EmitNtreg		# line 1311, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4426
.Lab4427:
.LN6141:
	.stabn  68,0,1312,.LN6141-Emit_EmitNtreg		# line 1312, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6142:
	.stabn  68,0,1313,.LN6142-Emit_EmitNtreg		# line 1313, column 11
	.data
.Lab4428:
 	.ascii	"Rule 92/1713 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4428,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6143:
	.stabn  68,0,1314,.LN6143-Emit_EmitNtreg		# line 1314, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6144:
	.stabn  68,0,1315,.LN6144-Emit_EmitNtreg		# line 1315, column 11
	.data
.Lab4429:
 	.ascii	" SetPlusRange ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4429,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6145:
	.stabn  68,0,1316,.LN6145-Emit_EmitNtreg		# line 1316, column 11
	call	InOut_WriteLn
.LN6146:
	.stabn  68,0,1317,.LN6146-Emit_EmitNtreg		# line 1317, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6147:
	.stabn  68,0,1318,.LN6147-Emit_EmitNtreg		# line 1318, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6148:
	.stabn  68,0,1318,.LN6148-Emit_EmitNtreg		# line 1318, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6149:
	.stabn  68,0,1319,.LN6149-Emit_EmitNtreg		# line 1319, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4432
.Lab4431:
.LN6150:
	.stabn  68,0,1319,.LN6150-Emit_EmitNtreg		# line 1319, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4430
.Lab4432:
.LN6151:
	.stabn  68,0,1319,.LN6151-Emit_EmitNtreg		# line 1319, column 61
	call	InOut_WriteLn
.Lab4430:
.LN6152:
	.stabn  68,0,1320,.LN6152-Emit_EmitNtreg		# line 1320, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6153:
	.stabn  68,0,1321,.LN6153-Emit_EmitNtreg		# line 1321, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4434
	cmpl	$4096,%eax
	jbe	.Lab4433
.Lab4434:
   	call	BoundErr_		
.Lab4433:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4426:
.LN6154:
	.stabn  68,0,1323,.LN6154-Emit_EmitNtreg		# line 1323, column 2
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN6155:
	.stabn  68,0,1324,.LN6155-Emit_EmitNtreg		# line 1324, column 2
	.data
.Lab4435:
 	.ascii	" \011sub\000"
	.text
	pushl	$5
	leal	.Lab4435,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6156:
	.stabn  68,0,1324,.LN6156-Emit_EmitNtreg		# line 1324, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6157:
	.stabn  68,0,1324,.LN6157-Emit_EmitNtreg		# line 1324, column 69
	.data
.Lab4436:
 	.ascii	" \011\000"
	.text
	pushl	$2
	leal	.Lab4436,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6158:
	.stabn  68,0,1324,.LN6158-Emit_EmitNtreg		# line 1324, column 94
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6159:
	.stabn  68,0,1324,.LN6159-Emit_EmitNtreg		# line 1324, column 130
	.data
.Lab4437:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4437,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6160:
	.stabn  68,0,1324,.LN6160-Emit_EmitNtreg		# line 1324, column 148
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	pushl	$3
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6161:
	.stabn  68,0,1324,.LN6161-Emit_EmitNtreg		# line 1324, column 203
	call	CgAssOut_AssLn
.LN6162:
	.stabn  68,0,1325,.LN6162-Emit_EmitNtreg		# line 1325, column 2
	.data
.Lab4438:
 	.ascii	" \011jl\011\000"
	.text
	pushl	$5
	leal	.Lab4438,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6163:
	.stabn  68,0,1325,.LN6163-Emit_EmitNtreg		# line 1325, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN6164:
	.stabn  68,0,1325,.LN6164-Emit_EmitNtreg		# line 1325, column 49
	call	CgAssOut_AssLn
.LN6165:
	.stabn  68,0,1326,.LN6165-Emit_EmitNtreg		# line 1326, column 2
	.data
.Lab4439:
 	.ascii	"\011incb\011%cl\000"
	.text
	pushl	$9
	leal	.Lab4439,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6166:
	.stabn  68,0,1326,.LN6166-Emit_EmitNtreg		# line 1326, column 33
	call	CgAssOut_AssLn
.LN6167:
	.stabn  68,0,1327,.LN6167-Emit_EmitNtreg		# line 1327, column 2
	.data
.Lab4440:
 	.ascii	"\011movl\011$-1,\000"
	.text
	pushl	$10
	leal	.Lab4440,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6168:
	.stabn  68,0,1327,.LN6168-Emit_EmitNtreg		# line 1327, column 34
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4442
	cmpl	$4096,%eax
	jbe	.Lab4441
.Lab4442:
   	call	BoundErr_		
.Lab4441:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6169:
	.stabn  68,0,1327,.LN6169-Emit_EmitNtreg		# line 1327, column 80
	call	CgAssOut_AssLn
.LN6170:
	.stabn  68,0,1328,.LN6170-Emit_EmitNtreg		# line 1328, column 2
	.data
.Lab4443:
 	.ascii	"\011shll\011%cl,\000"
	.text
	pushl	$10
	leal	.Lab4443,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6171:
	.stabn  68,0,1328,.LN6171-Emit_EmitNtreg		# line 1328, column 34
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4445
	cmpl	$4096,%eax
	jbe	.Lab4444
.Lab4445:
   	call	BoundErr_		
.Lab4444:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6172:
	.stabn  68,0,1328,.LN6172-Emit_EmitNtreg		# line 1328, column 80
	call	CgAssOut_AssLn
.LN6173:
	.stabn  68,0,1329,.LN6173-Emit_EmitNtreg		# line 1329, column 2
	.data
.Lab4446:
 	.ascii	"\011notl\011\000"
	.text
	pushl	$6
	leal	.Lab4446,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6174:
	.stabn  68,0,1329,.LN6174-Emit_EmitNtreg		# line 1329, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4448
	cmpl	$4096,%eax
	jbe	.Lab4447
.Lab4448:
   	call	BoundErr_		
.Lab4447:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6175:
	.stabn  68,0,1329,.LN6175-Emit_EmitNtreg		# line 1329, column 76
	call	CgAssOut_AssLn
.LN6176:
	.stabn  68,0,1330,.LN6176-Emit_EmitNtreg		# line 1330, column 2
	.data
.Lab4449:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab4449,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6177:
	.stabn  68,0,1330,.LN6177-Emit_EmitNtreg		# line 1330, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6178:
	.stabn  68,0,1330,.LN6178-Emit_EmitNtreg		# line 1330, column 69
	.data
.Lab4450:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4450,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6179:
	.stabn  68,0,1330,.LN6179-Emit_EmitNtreg		# line 1330, column 94
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6180:
	.stabn  68,0,1330,.LN6180-Emit_EmitNtreg		# line 1330, column 130
	.data
.Lab4451:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4451,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6181:
	.stabn  68,0,1330,.LN6181-Emit_EmitNtreg		# line 1330, column 148
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	pushl	$3
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6182:
	.stabn  68,0,1330,.LN6182-Emit_EmitNtreg		# line 1330, column 203
	call	CgAssOut_AssLn
.LN6183:
	.stabn  68,0,1331,.LN6183-Emit_EmitNtreg		# line 1331, column 2
	.data
.Lab4452:
 	.ascii	"\011shll\011%cl,\000"
	.text
	pushl	$10
	leal	.Lab4452,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6184:
	.stabn  68,0,1331,.LN6184-Emit_EmitNtreg		# line 1331, column 34
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4454
	cmpl	$4096,%eax
	jbe	.Lab4453
.Lab4454:
   	call	BoundErr_		
.Lab4453:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6185:
	.stabn  68,0,1331,.LN6185-Emit_EmitNtreg		# line 1331, column 80
	call	CgAssOut_AssLn
.LN6186:
	.stabn  68,0,1332,.LN6186-Emit_EmitNtreg		# line 1332, column 2
	.data
.Lab4455:
 	.ascii	"\011orl\011\000"
	.text
	pushl	$5
	leal	.Lab4455,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6187:
	.stabn  68,0,1332,.LN6187-Emit_EmitNtreg		# line 1332, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4457
	cmpl	$4096,%eax
	jbe	.Lab4456
.Lab4457:
   	call	BoundErr_		
.Lab4456:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 28(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6188:
	.stabn  68,0,1332,.LN6188-Emit_EmitNtreg		# line 1332, column 76
	.data
.Lab4458:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4458,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6189:
	.stabn  68,0,1332,.LN6189-Emit_EmitNtreg		# line 1332, column 94
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4460
	cmpl	$4096,%eax
	jbe	.Lab4459
.Lab4460:
   	call	BoundErr_		
.Lab4459:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6190:
	.stabn  68,0,1332,.LN6190-Emit_EmitNtreg		# line 1332, column 139
	call	CgAssOut_AssLn
.LN6191:
	.stabn  68,0,1333,.LN6191-Emit_EmitNtreg		# line 1333, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN6192:
	.stabn  68,0,1333,.LN6192-Emit_EmitNtreg		# line 1333, column 21
	.data
.Lab4461:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab4461,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6193:
	.stabn  68,0,1333,.LN6193-Emit_EmitNtreg		# line 1333, column 39
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3828:
.LN6194:
	.stabn  68,0,1336,.LN6194-Emit_EmitNtreg		# line 1336, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6195:
	.stabn  68,0,1337,.LN6195-Emit_EmitNtreg		# line 1337, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6196:
	.stabn  68,0,1338,.LN6196-Emit_EmitNtreg		# line 1338, column 3
	leal	-64(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	12(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6197:
	.stabn  68,0,1339,.LN6197-Emit_EmitNtreg		# line 1339, column 10
	decl	Emit_s + 1536
.LN6198:
	.stabn  68,0,1340,.LN6198-Emit_EmitNtreg		# line 1340, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4465
	cmpl	$4096,%eax
	jbe	.Lab4464
.Lab4465:
   	call	BoundErr_		
.Lab4464:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4462
.Lab4463:
.LN6199:
	.stabn  68,0,1341,.LN6199-Emit_EmitNtreg		# line 1341, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4467
	cmpl	$4096,%eax
	jbe	.Lab4466
.Lab4467:
   	call	BoundErr_		
.Lab4466:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4462:
.LN6200:
	.stabn  68,0,1343,.LN6200-Emit_EmitNtreg		# line 1343, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4468
.Lab4469:
.LN6201:
	.stabn  68,0,1344,.LN6201-Emit_EmitNtreg		# line 1344, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6202:
	.stabn  68,0,1345,.LN6202-Emit_EmitNtreg		# line 1345, column 11
	.data
.Lab4470:
 	.ascii	"Rule 93/1707 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4470,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6203:
	.stabn  68,0,1346,.LN6203-Emit_EmitNtreg		# line 1346, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6204:
	.stabn  68,0,1347,.LN6204-Emit_EmitNtreg		# line 1347, column 11
	.data
.Lab4471:
 	.ascii	" SetPlusRange ->   reg\000"
	.text
	pushl	$22
	leal	.Lab4471,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6205:
	.stabn  68,0,1348,.LN6205-Emit_EmitNtreg		# line 1348, column 11
	call	InOut_WriteLn
.LN6206:
	.stabn  68,0,1349,.LN6206-Emit_EmitNtreg		# line 1349, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6207:
	.stabn  68,0,1350,.LN6207-Emit_EmitNtreg		# line 1350, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6208:
	.stabn  68,0,1350,.LN6208-Emit_EmitNtreg		# line 1350, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6209:
	.stabn  68,0,1351,.LN6209-Emit_EmitNtreg		# line 1351, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4474
.Lab4473:
.LN6210:
	.stabn  68,0,1351,.LN6210-Emit_EmitNtreg		# line 1351, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4472
.Lab4474:
.LN6211:
	.stabn  68,0,1351,.LN6211-Emit_EmitNtreg		# line 1351, column 61
	call	InOut_WriteLn
.Lab4472:
.LN6212:
	.stabn  68,0,1352,.LN6212-Emit_EmitNtreg		# line 1352, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6213:
	.stabn  68,0,1353,.LN6213-Emit_EmitNtreg		# line 1353, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4476
	cmpl	$4096,%eax
	jbe	.Lab4475
.Lab4476:
   	call	BoundErr_		
.Lab4475:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4468:
.LN6214:
	.stabn  68,0,1355,.LN6214-Emit_EmitNtreg		# line 1355, column 2
	.data
.Lab4477:
 	.ascii	"\011orl\011$\000"
	.text
	pushl	$6
	leal	.Lab4477,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6215:
	.stabn  68,0,1355,.LN6215-Emit_EmitNtreg		# line 1355, column 31
	movl	8(%ebp),%eax
	movl	12(%eax),%eax
	movl	24(%eax),%ebx
	movl	$1,%eax
 	addl	8(%ebx),%eax 
	.data
	.align 4
.Lab4478:
	.long	0,31
	.text
	boundl	%eax,.Lab4478
	movl	Emit_s + 96(,%eax,4),%ebx
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab4479:
	.long	0,31
	.text
	boundl	%eax,.Lab4479
 	subl	Emit_s + 96(,%eax,4),%ebx 
	pushl	%ebx
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6216:
	.stabn  68,0,1355,.LN6216-Emit_EmitNtreg		# line 1355, column 127
	.data
.Lab4480:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4480,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6217:
	.stabn  68,0,1355,.LN6217-Emit_EmitNtreg		# line 1355, column 145
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4482
	cmpl	$4096,%eax
	jbe	.Lab4481
.Lab4482:
   	call	BoundErr_		
.Lab4481:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6218:
	.stabn  68,0,1355,.LN6218-Emit_EmitNtreg		# line 1355, column 190
	.data
.Lab4483:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4483,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6219:
	.stabn  68,0,1355,.LN6219-Emit_EmitNtreg		# line 1355, column 208
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3827:
.LN6220:
	.stabn  68,0,1357,.LN6220-Emit_EmitNtreg		# line 1357, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6221:
	.stabn  68,0,1358,.LN6221-Emit_EmitNtreg		# line 1358, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrIm
	addl	$12, %esp
.LN6222:
	.stabn  68,0,1359,.LN6222-Emit_EmitNtreg		# line 1359, column 10
	decl	Emit_s + 1536
.LN6223:
	.stabn  68,0,1360,.LN6223-Emit_EmitNtreg		# line 1360, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4487
	cmpl	$4096,%eax
	jbe	.Lab4486
.Lab4487:
   	call	BoundErr_		
.Lab4486:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4484
.Lab4485:
.LN6224:
	.stabn  68,0,1361,.LN6224-Emit_EmitNtreg		# line 1361, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4489
	cmpl	$4096,%eax
	jbe	.Lab4488
.Lab4489:
   	call	BoundErr_		
.Lab4488:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4484:
.LN6225:
	.stabn  68,0,1363,.LN6225-Emit_EmitNtreg		# line 1363, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4490
.Lab4491:
.LN6226:
	.stabn  68,0,1364,.LN6226-Emit_EmitNtreg		# line 1364, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6227:
	.stabn  68,0,1365,.LN6227-Emit_EmitNtreg		# line 1365, column 11
	.data
.Lab4492:
 	.ascii	"Rule 94/1701 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4492,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6228:
	.stabn  68,0,1366,.LN6228-Emit_EmitNtreg		# line 1366, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6229:
	.stabn  68,0,1367,.LN6229-Emit_EmitNtreg		# line 1367, column 11
	.data
.Lab4493:
 	.ascii	" SetPlusSingleL ->   reg\000"
	.text
	pushl	$24
	leal	.Lab4493,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6230:
	.stabn  68,0,1368,.LN6230-Emit_EmitNtreg		# line 1368, column 11
	call	InOut_WriteLn
.LN6231:
	.stabn  68,0,1369,.LN6231-Emit_EmitNtreg		# line 1369, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6232:
	.stabn  68,0,1370,.LN6232-Emit_EmitNtreg		# line 1370, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6233:
	.stabn  68,0,1370,.LN6233-Emit_EmitNtreg		# line 1370, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6234:
	.stabn  68,0,1371,.LN6234-Emit_EmitNtreg		# line 1371, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4496
.Lab4495:
.LN6235:
	.stabn  68,0,1371,.LN6235-Emit_EmitNtreg		# line 1371, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4494
.Lab4496:
.LN6236:
	.stabn  68,0,1371,.LN6236-Emit_EmitNtreg		# line 1371, column 61
	call	InOut_WriteLn
.Lab4494:
.LN6237:
	.stabn  68,0,1372,.LN6237-Emit_EmitNtreg		# line 1372, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6238:
	.stabn  68,0,1373,.LN6238-Emit_EmitNtreg		# line 1373, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4498
	cmpl	$4096,%eax
	jbe	.Lab4497
.Lab4498:
   	call	BoundErr_		
.Lab4497:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4490:
.LN6239:
	.stabn  68,0,1375,.LN6239-Emit_EmitNtreg		# line 1375, column 2
	.data
.Lab4499:
 	.ascii	"\011btsl\011\000"
	.text
	pushl	$6
	leal	.Lab4499,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6240:
	.stabn  68,0,1375,.LN6240-Emit_EmitNtreg		# line 1375, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6241:
	.stabn  68,0,1375,.LN6241-Emit_EmitNtreg		# line 1375, column 60
	.data
.Lab4500:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4500,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6242:
	.stabn  68,0,1375,.LN6242-Emit_EmitNtreg		# line 1375, column 79
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4502
	cmpl	$4096,%eax
	jbe	.Lab4501
.Lab4502:
   	call	BoundErr_		
.Lab4501:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6243:
	.stabn  68,0,1375,.LN6243-Emit_EmitNtreg		# line 1375, column 124
	.data
.Lab4503:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4503,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6244:
	.stabn  68,0,1375,.LN6244-Emit_EmitNtreg		# line 1375, column 142
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3826:
.LN6245:
	.stabn  68,0,1377,.LN6245-Emit_EmitNtreg		# line 1377, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6246:
	.stabn  68,0,1378,.LN6246-Emit_EmitNtreg		# line 1378, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6247:
	.stabn  68,0,1379,.LN6247-Emit_EmitNtreg		# line 1379, column 10
	decl	Emit_s + 1536
.LN6248:
	.stabn  68,0,1380,.LN6248-Emit_EmitNtreg		# line 1380, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4507
	cmpl	$4096,%eax
	jbe	.Lab4506
.Lab4507:
   	call	BoundErr_		
.Lab4506:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4504
.Lab4505:
.LN6249:
	.stabn  68,0,1381,.LN6249-Emit_EmitNtreg		# line 1381, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4509
	cmpl	$4096,%eax
	jbe	.Lab4508
.Lab4509:
   	call	BoundErr_		
.Lab4508:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4504:
.LN6250:
	.stabn  68,0,1383,.LN6250-Emit_EmitNtreg		# line 1383, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4510
.Lab4511:
.LN6251:
	.stabn  68,0,1384,.LN6251-Emit_EmitNtreg		# line 1384, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6252:
	.stabn  68,0,1385,.LN6252-Emit_EmitNtreg		# line 1385, column 11
	.data
.Lab4512:
 	.ascii	"Rule 95/1695 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4512,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6253:
	.stabn  68,0,1386,.LN6253-Emit_EmitNtreg		# line 1386, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6254:
	.stabn  68,0,1387,.LN6254-Emit_EmitNtreg		# line 1387, column 11
	.data
.Lab4513:
 	.ascii	" SetPlusSingleL ->   reg\000"
	.text
	pushl	$24
	leal	.Lab4513,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6255:
	.stabn  68,0,1388,.LN6255-Emit_EmitNtreg		# line 1388, column 11
	call	InOut_WriteLn
.LN6256:
	.stabn  68,0,1389,.LN6256-Emit_EmitNtreg		# line 1389, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6257:
	.stabn  68,0,1390,.LN6257-Emit_EmitNtreg		# line 1390, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6258:
	.stabn  68,0,1390,.LN6258-Emit_EmitNtreg		# line 1390, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6259:
	.stabn  68,0,1391,.LN6259-Emit_EmitNtreg		# line 1391, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4516
.Lab4515:
.LN6260:
	.stabn  68,0,1391,.LN6260-Emit_EmitNtreg		# line 1391, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4514
.Lab4516:
.LN6261:
	.stabn  68,0,1391,.LN6261-Emit_EmitNtreg		# line 1391, column 61
	call	InOut_WriteLn
.Lab4514:
.LN6262:
	.stabn  68,0,1392,.LN6262-Emit_EmitNtreg		# line 1392, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6263:
	.stabn  68,0,1393,.LN6263-Emit_EmitNtreg		# line 1393, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4518
	cmpl	$4096,%eax
	jbe	.Lab4517
.Lab4518:
   	call	BoundErr_		
.Lab4517:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4510:
.LN6264:
	.stabn  68,0,1395,.LN6264-Emit_EmitNtreg		# line 1395, column 2
	.data
.Lab4519:
 	.ascii	" \011orl\011$\000"
	.text
	pushl	$7
	leal	.Lab4519,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6265:
	.stabn  68,0,1395,.LN6265-Emit_EmitNtreg		# line 1395, column 31
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab4520:
	.long	0,31
	.text
	boundl	%eax,.Lab4520
	pushl	Emit_s + 96(,%eax,4)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6266:
	.stabn  68,0,1395,.LN6266-Emit_EmitNtreg		# line 1395, column 84
	.data
.Lab4521:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4521,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6267:
	.stabn  68,0,1395,.LN6267-Emit_EmitNtreg		# line 1395, column 103
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4523
	cmpl	$4096,%eax
	jbe	.Lab4522
.Lab4523:
   	call	BoundErr_		
.Lab4522:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6268:
	.stabn  68,0,1395,.LN6268-Emit_EmitNtreg		# line 1395, column 148
	.data
.Lab4524:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4524,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6269:
	.stabn  68,0,1395,.LN6269-Emit_EmitNtreg		# line 1395, column 166
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3825:
.LN6270:
	.stabn  68,0,1397,.LN6270-Emit_EmitNtreg		# line 1397, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6271:
	.stabn  68,0,1398,.LN6271-Emit_EmitNtreg		# line 1398, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6272:
	.stabn  68,0,1399,.LN6272-Emit_EmitNtreg		# line 1399, column 10
	decl	Emit_s + 1536
.LN6273:
	.stabn  68,0,1400,.LN6273-Emit_EmitNtreg		# line 1400, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4528
	cmpl	$4096,%eax
	jbe	.Lab4527
.Lab4528:
   	call	BoundErr_		
.Lab4527:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4525
.Lab4526:
.LN6274:
	.stabn  68,0,1401,.LN6274-Emit_EmitNtreg		# line 1401, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4530
	cmpl	$4096,%eax
	jbe	.Lab4529
.Lab4530:
   	call	BoundErr_		
.Lab4529:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4525:
.LN6275:
	.stabn  68,0,1403,.LN6275-Emit_EmitNtreg		# line 1403, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4531
.Lab4532:
.LN6276:
	.stabn  68,0,1404,.LN6276-Emit_EmitNtreg		# line 1404, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6277:
	.stabn  68,0,1405,.LN6277-Emit_EmitNtreg		# line 1405, column 11
	.data
.Lab4533:
 	.ascii	"Rule 96/1672 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4533,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6278:
	.stabn  68,0,1406,.LN6278-Emit_EmitNtreg		# line 1406, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6279:
	.stabn  68,0,1407,.LN6279-Emit_EmitNtreg		# line 1407, column 11
	.data
.Lab4534:
 	.ascii	" SetSymDifference ->   reg\000"
	.text
	pushl	$26
	leal	.Lab4534,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6280:
	.stabn  68,0,1408,.LN6280-Emit_EmitNtreg		# line 1408, column 11
	call	InOut_WriteLn
.LN6281:
	.stabn  68,0,1409,.LN6281-Emit_EmitNtreg		# line 1409, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6282:
	.stabn  68,0,1410,.LN6282-Emit_EmitNtreg		# line 1410, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6283:
	.stabn  68,0,1410,.LN6283-Emit_EmitNtreg		# line 1410, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6284:
	.stabn  68,0,1411,.LN6284-Emit_EmitNtreg		# line 1411, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4537
.Lab4536:
.LN6285:
	.stabn  68,0,1411,.LN6285-Emit_EmitNtreg		# line 1411, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4535
.Lab4537:
.LN6286:
	.stabn  68,0,1411,.LN6286-Emit_EmitNtreg		# line 1411, column 61
	call	InOut_WriteLn
.Lab4535:
.LN6287:
	.stabn  68,0,1412,.LN6287-Emit_EmitNtreg		# line 1412, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6288:
	.stabn  68,0,1413,.LN6288-Emit_EmitNtreg		# line 1413, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4539
	cmpl	$4096,%eax
	jbe	.Lab4538
.Lab4539:
   	call	BoundErr_		
.Lab4538:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4531:
.LN6289:
	.stabn  68,0,1415,.LN6289-Emit_EmitNtreg		# line 1415, column 2
	.data
.Lab4540:
 	.ascii	" \011xorl\011\000"
	.text
	pushl	$7
	leal	.Lab4540,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6290:
	.stabn  68,0,1415,.LN6290-Emit_EmitNtreg		# line 1415, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6291:
	.stabn  68,0,1415,.LN6291-Emit_EmitNtreg		# line 1415, column 66
	.data
.Lab4541:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4541,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6292:
	.stabn  68,0,1415,.LN6292-Emit_EmitNtreg		# line 1415, column 85
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4543
	cmpl	$4096,%eax
	jbe	.Lab4542
.Lab4543:
   	call	BoundErr_		
.Lab4542:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6293:
	.stabn  68,0,1415,.LN6293-Emit_EmitNtreg		# line 1415, column 130
	.data
.Lab4544:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4544,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6294:
	.stabn  68,0,1415,.LN6294-Emit_EmitNtreg		# line 1415, column 148
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3824:
.LN6295:
	.stabn  68,0,1417,.LN6295-Emit_EmitNtreg		# line 1417, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6296:
	.stabn  68,0,1418,.LN6296-Emit_EmitNtreg		# line 1418, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6297:
	.stabn  68,0,1419,.LN6297-Emit_EmitNtreg		# line 1419, column 10
	decl	Emit_s + 1536
.LN6298:
	.stabn  68,0,1420,.LN6298-Emit_EmitNtreg		# line 1420, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4548
	cmpl	$4096,%eax
	jbe	.Lab4547
.Lab4548:
   	call	BoundErr_		
.Lab4547:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4545
.Lab4546:
.LN6299:
	.stabn  68,0,1421,.LN6299-Emit_EmitNtreg		# line 1421, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4550
	cmpl	$4096,%eax
	jbe	.Lab4549
.Lab4550:
   	call	BoundErr_		
.Lab4549:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4545:
.LN6300:
	.stabn  68,0,1423,.LN6300-Emit_EmitNtreg		# line 1423, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4551
.Lab4552:
.LN6301:
	.stabn  68,0,1424,.LN6301-Emit_EmitNtreg		# line 1424, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6302:
	.stabn  68,0,1425,.LN6302-Emit_EmitNtreg		# line 1425, column 11
	.data
.Lab4553:
 	.ascii	"Rule 97/1672 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4553,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6303:
	.stabn  68,0,1426,.LN6303-Emit_EmitNtreg		# line 1426, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6304:
	.stabn  68,0,1427,.LN6304-Emit_EmitNtreg		# line 1427, column 11
	.data
.Lab4554:
 	.ascii	" SetSymDifference ->   reg\000"
	.text
	pushl	$26
	leal	.Lab4554,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6305:
	.stabn  68,0,1428,.LN6305-Emit_EmitNtreg		# line 1428, column 11
	call	InOut_WriteLn
.LN6306:
	.stabn  68,0,1429,.LN6306-Emit_EmitNtreg		# line 1429, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6307:
	.stabn  68,0,1430,.LN6307-Emit_EmitNtreg		# line 1430, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6308:
	.stabn  68,0,1430,.LN6308-Emit_EmitNtreg		# line 1430, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6309:
	.stabn  68,0,1431,.LN6309-Emit_EmitNtreg		# line 1431, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4557
.Lab4556:
.LN6310:
	.stabn  68,0,1431,.LN6310-Emit_EmitNtreg		# line 1431, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4555
.Lab4557:
.LN6311:
	.stabn  68,0,1431,.LN6311-Emit_EmitNtreg		# line 1431, column 61
	call	InOut_WriteLn
.Lab4555:
.LN6312:
	.stabn  68,0,1432,.LN6312-Emit_EmitNtreg		# line 1432, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6313:
	.stabn  68,0,1433,.LN6313-Emit_EmitNtreg		# line 1433, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4559
	cmpl	$4096,%eax
	jbe	.Lab4558
.Lab4559:
   	call	BoundErr_		
.Lab4558:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4551:
.LN6314:
	.stabn  68,0,1435,.LN6314-Emit_EmitNtreg		# line 1435, column 2
	.data
.Lab4560:
 	.ascii	" \011xorl\011\000"
	.text
	pushl	$7
	leal	.Lab4560,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6315:
	.stabn  68,0,1435,.LN6315-Emit_EmitNtreg		# line 1435, column 30
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6316:
	.stabn  68,0,1435,.LN6316-Emit_EmitNtreg		# line 1435, column 66
	.data
.Lab4561:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4561,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6317:
	.stabn  68,0,1435,.LN6317-Emit_EmitNtreg		# line 1435, column 85
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4563
	cmpl	$4096,%eax
	jbe	.Lab4562
.Lab4563:
   	call	BoundErr_		
.Lab4562:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6318:
	.stabn  68,0,1435,.LN6318-Emit_EmitNtreg		# line 1435, column 130
	.data
.Lab4564:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4564,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6319:
	.stabn  68,0,1435,.LN6319-Emit_EmitNtreg		# line 1435, column 148
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3823:
.LN6320:
	.stabn  68,0,1437,.LN6320-Emit_EmitNtreg		# line 1437, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6321:
	.stabn  68,0,1438,.LN6321-Emit_EmitNtreg		# line 1438, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6322:
	.stabn  68,0,1439,.LN6322-Emit_EmitNtreg		# line 1439, column 10
	decl	Emit_s + 1536
.LN6323:
	.stabn  68,0,1440,.LN6323-Emit_EmitNtreg		# line 1440, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4568
	cmpl	$4096,%eax
	jbe	.Lab4567
.Lab4568:
   	call	BoundErr_		
.Lab4567:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4565
.Lab4566:
.LN6324:
	.stabn  68,0,1441,.LN6324-Emit_EmitNtreg		# line 1441, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4570
	cmpl	$4096,%eax
	jbe	.Lab4569
.Lab4570:
   	call	BoundErr_		
.Lab4569:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4565:
.LN6325:
	.stabn  68,0,1443,.LN6325-Emit_EmitNtreg		# line 1443, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4571
.Lab4572:
.LN6326:
	.stabn  68,0,1444,.LN6326-Emit_EmitNtreg		# line 1444, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6327:
	.stabn  68,0,1445,.LN6327-Emit_EmitNtreg		# line 1445, column 11
	.data
.Lab4573:
 	.ascii	"Rule 98/1653 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4573,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6328:
	.stabn  68,0,1446,.LN6328-Emit_EmitNtreg		# line 1446, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6329:
	.stabn  68,0,1447,.LN6329-Emit_EmitNtreg		# line 1447, column 11
	.data
.Lab4574:
 	.ascii	" SetIntersection ->   reg\000"
	.text
	pushl	$25
	leal	.Lab4574,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6330:
	.stabn  68,0,1448,.LN6330-Emit_EmitNtreg		# line 1448, column 11
	call	InOut_WriteLn
.LN6331:
	.stabn  68,0,1449,.LN6331-Emit_EmitNtreg		# line 1449, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6332:
	.stabn  68,0,1450,.LN6332-Emit_EmitNtreg		# line 1450, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6333:
	.stabn  68,0,1450,.LN6333-Emit_EmitNtreg		# line 1450, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6334:
	.stabn  68,0,1451,.LN6334-Emit_EmitNtreg		# line 1451, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4577
.Lab4576:
.LN6335:
	.stabn  68,0,1451,.LN6335-Emit_EmitNtreg		# line 1451, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4575
.Lab4577:
.LN6336:
	.stabn  68,0,1451,.LN6336-Emit_EmitNtreg		# line 1451, column 61
	call	InOut_WriteLn
.Lab4575:
.LN6337:
	.stabn  68,0,1452,.LN6337-Emit_EmitNtreg		# line 1452, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6338:
	.stabn  68,0,1453,.LN6338-Emit_EmitNtreg		# line 1453, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4579
	cmpl	$4096,%eax
	jbe	.Lab4578
.Lab4579:
   	call	BoundErr_		
.Lab4578:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4571:
.LN6339:
	.stabn  68,0,1455,.LN6339-Emit_EmitNtreg		# line 1455, column 2
	.data
.Lab4580:
 	.ascii	" \011andl\011\000"
	.text
	pushl	$7
	leal	.Lab4580,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6340:
	.stabn  68,0,1455,.LN6340-Emit_EmitNtreg		# line 1455, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6341:
	.stabn  68,0,1455,.LN6341-Emit_EmitNtreg		# line 1455, column 66
	.data
.Lab4581:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4581,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6342:
	.stabn  68,0,1455,.LN6342-Emit_EmitNtreg		# line 1455, column 85
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4583
	cmpl	$4096,%eax
	jbe	.Lab4582
.Lab4583:
   	call	BoundErr_		
.Lab4582:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6343:
	.stabn  68,0,1455,.LN6343-Emit_EmitNtreg		# line 1455, column 130
	.data
.Lab4584:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4584,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6344:
	.stabn  68,0,1455,.LN6344-Emit_EmitNtreg		# line 1455, column 148
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3822:
.LN6345:
	.stabn  68,0,1457,.LN6345-Emit_EmitNtreg		# line 1457, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6346:
	.stabn  68,0,1458,.LN6346-Emit_EmitNtreg		# line 1458, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6347:
	.stabn  68,0,1459,.LN6347-Emit_EmitNtreg		# line 1459, column 10
	decl	Emit_s + 1536
.LN6348:
	.stabn  68,0,1460,.LN6348-Emit_EmitNtreg		# line 1460, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4588
	cmpl	$4096,%eax
	jbe	.Lab4587
.Lab4588:
   	call	BoundErr_		
.Lab4587:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4585
.Lab4586:
.LN6349:
	.stabn  68,0,1461,.LN6349-Emit_EmitNtreg		# line 1461, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4590
	cmpl	$4096,%eax
	jbe	.Lab4589
.Lab4590:
   	call	BoundErr_		
.Lab4589:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4585:
.LN6350:
	.stabn  68,0,1463,.LN6350-Emit_EmitNtreg		# line 1463, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4591
.Lab4592:
.LN6351:
	.stabn  68,0,1464,.LN6351-Emit_EmitNtreg		# line 1464, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6352:
	.stabn  68,0,1465,.LN6352-Emit_EmitNtreg		# line 1465, column 11
	.data
.Lab4593:
 	.ascii	"Rule 99/1653 Cost=\000"
	.text
	pushl	$18
	leal	.Lab4593,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6353:
	.stabn  68,0,1466,.LN6353-Emit_EmitNtreg		# line 1466, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6354:
	.stabn  68,0,1467,.LN6354-Emit_EmitNtreg		# line 1467, column 11
	.data
.Lab4594:
 	.ascii	" SetIntersection ->   reg\000"
	.text
	pushl	$25
	leal	.Lab4594,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6355:
	.stabn  68,0,1468,.LN6355-Emit_EmitNtreg		# line 1468, column 11
	call	InOut_WriteLn
.LN6356:
	.stabn  68,0,1469,.LN6356-Emit_EmitNtreg		# line 1469, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6357:
	.stabn  68,0,1470,.LN6357-Emit_EmitNtreg		# line 1470, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6358:
	.stabn  68,0,1470,.LN6358-Emit_EmitNtreg		# line 1470, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6359:
	.stabn  68,0,1471,.LN6359-Emit_EmitNtreg		# line 1471, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4597
.Lab4596:
.LN6360:
	.stabn  68,0,1471,.LN6360-Emit_EmitNtreg		# line 1471, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4595
.Lab4597:
.LN6361:
	.stabn  68,0,1471,.LN6361-Emit_EmitNtreg		# line 1471, column 61
	call	InOut_WriteLn
.Lab4595:
.LN6362:
	.stabn  68,0,1472,.LN6362-Emit_EmitNtreg		# line 1472, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6363:
	.stabn  68,0,1473,.LN6363-Emit_EmitNtreg		# line 1473, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4599
	cmpl	$4096,%eax
	jbe	.Lab4598
.Lab4599:
   	call	BoundErr_		
.Lab4598:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4591:
.LN6364:
	.stabn  68,0,1475,.LN6364-Emit_EmitNtreg		# line 1475, column 2
	.data
.Lab4600:
 	.ascii	" \011andl\011\000"
	.text
	pushl	$7
	leal	.Lab4600,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6365:
	.stabn  68,0,1475,.LN6365-Emit_EmitNtreg		# line 1475, column 30
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6366:
	.stabn  68,0,1475,.LN6366-Emit_EmitNtreg		# line 1475, column 66
	.data
.Lab4601:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4601,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6367:
	.stabn  68,0,1475,.LN6367-Emit_EmitNtreg		# line 1475, column 85
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4603
	cmpl	$4096,%eax
	jbe	.Lab4602
.Lab4603:
   	call	BoundErr_		
.Lab4602:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6368:
	.stabn  68,0,1475,.LN6368-Emit_EmitNtreg		# line 1475, column 130
	.data
.Lab4604:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4604,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6369:
	.stabn  68,0,1475,.LN6369-Emit_EmitNtreg		# line 1475, column 148
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3821:
.LN6370:
	.stabn  68,0,1477,.LN6370-Emit_EmitNtreg		# line 1477, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6371:
	.stabn  68,0,1478,.LN6371-Emit_EmitNtreg		# line 1478, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6372:
	.stabn  68,0,1479,.LN6372-Emit_EmitNtreg		# line 1479, column 10
	decl	Emit_s + 1536
.LN6373:
	.stabn  68,0,1480,.LN6373-Emit_EmitNtreg		# line 1480, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4608
	cmpl	$4096,%eax
	jbe	.Lab4607
.Lab4608:
   	call	BoundErr_		
.Lab4607:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4605
.Lab4606:
.LN6374:
	.stabn  68,0,1481,.LN6374-Emit_EmitNtreg		# line 1481, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4610
	cmpl	$4096,%eax
	jbe	.Lab4609
.Lab4610:
   	call	BoundErr_		
.Lab4609:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4605:
.LN6375:
	.stabn  68,0,1483,.LN6375-Emit_EmitNtreg		# line 1483, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4611
.Lab4612:
.LN6376:
	.stabn  68,0,1484,.LN6376-Emit_EmitNtreg		# line 1484, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6377:
	.stabn  68,0,1485,.LN6377-Emit_EmitNtreg		# line 1485, column 11
	.data
.Lab4613:
 	.ascii	"Rule 100/1618 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4613,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6378:
	.stabn  68,0,1486,.LN6378-Emit_EmitNtreg		# line 1486, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6379:
	.stabn  68,0,1487,.LN6379-Emit_EmitNtreg		# line 1487, column 11
	.data
.Lab4614:
 	.ascii	" SetDifference ->   reg\000"
	.text
	pushl	$23
	leal	.Lab4614,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6380:
	.stabn  68,0,1488,.LN6380-Emit_EmitNtreg		# line 1488, column 11
	call	InOut_WriteLn
.LN6381:
	.stabn  68,0,1489,.LN6381-Emit_EmitNtreg		# line 1489, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6382:
	.stabn  68,0,1490,.LN6382-Emit_EmitNtreg		# line 1490, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6383:
	.stabn  68,0,1490,.LN6383-Emit_EmitNtreg		# line 1490, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6384:
	.stabn  68,0,1491,.LN6384-Emit_EmitNtreg		# line 1491, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4617
.Lab4616:
.LN6385:
	.stabn  68,0,1491,.LN6385-Emit_EmitNtreg		# line 1491, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4615
.Lab4617:
.LN6386:
	.stabn  68,0,1491,.LN6386-Emit_EmitNtreg		# line 1491, column 61
	call	InOut_WriteLn
.Lab4615:
.LN6387:
	.stabn  68,0,1492,.LN6387-Emit_EmitNtreg		# line 1492, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6388:
	.stabn  68,0,1493,.LN6388-Emit_EmitNtreg		# line 1493, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4619
	cmpl	$4096,%eax
	jbe	.Lab4618
.Lab4619:
   	call	BoundErr_		
.Lab4618:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4611:
.LN6389:
	.stabn  68,0,1496,.LN6389-Emit_EmitNtreg		# line 1496, column 2
	.data
.Lab4620:
 	.ascii	" \011andl\011$\000"
	.text
	pushl	$8
	leal	.Lab4620,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6390:
	.stabn  68,0,1496,.LN6390-Emit_EmitNtreg		# line 1496, column 31
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	notl	%eax
 	andl	$-1, %eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6391:
	.stabn  68,0,1496,.LN6391-Emit_EmitNtreg		# line 1496, column 102
	.data
.Lab4621:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4621,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6392:
	.stabn  68,0,1496,.LN6392-Emit_EmitNtreg		# line 1496, column 121
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4623
	cmpl	$4096,%eax
	jbe	.Lab4622
.Lab4623:
   	call	BoundErr_		
.Lab4622:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6393:
	.stabn  68,0,1496,.LN6393-Emit_EmitNtreg		# line 1496, column 166
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3820:
.LN6394:
	.stabn  68,0,1499,.LN6394-Emit_EmitNtreg		# line 1499, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6395:
	.stabn  68,0,1500,.LN6395-Emit_EmitNtreg		# line 1500, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6396:
	.stabn  68,0,1501,.LN6396-Emit_EmitNtreg		# line 1501, column 10
	decl	Emit_s + 1536
.LN6397:
	.stabn  68,0,1502,.LN6397-Emit_EmitNtreg		# line 1502, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4627
	cmpl	$4096,%eax
	jbe	.Lab4626
.Lab4627:
   	call	BoundErr_		
.Lab4626:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4624
.Lab4625:
.LN6398:
	.stabn  68,0,1503,.LN6398-Emit_EmitNtreg		# line 1503, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4629
	cmpl	$4096,%eax
	jbe	.Lab4628
.Lab4629:
   	call	BoundErr_		
.Lab4628:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4624:
.LN6399:
	.stabn  68,0,1505,.LN6399-Emit_EmitNtreg		# line 1505, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4630
.Lab4631:
.LN6400:
	.stabn  68,0,1506,.LN6400-Emit_EmitNtreg		# line 1506, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6401:
	.stabn  68,0,1507,.LN6401-Emit_EmitNtreg		# line 1507, column 11
	.data
.Lab4632:
 	.ascii	"Rule 101/1609 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4632,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6402:
	.stabn  68,0,1508,.LN6402-Emit_EmitNtreg		# line 1508, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6403:
	.stabn  68,0,1509,.LN6403-Emit_EmitNtreg		# line 1509, column 11
	.data
.Lab4633:
 	.ascii	" SetDifference ->   reg\000"
	.text
	pushl	$23
	leal	.Lab4633,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6404:
	.stabn  68,0,1510,.LN6404-Emit_EmitNtreg		# line 1510, column 11
	call	InOut_WriteLn
.LN6405:
	.stabn  68,0,1511,.LN6405-Emit_EmitNtreg		# line 1511, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6406:
	.stabn  68,0,1512,.LN6406-Emit_EmitNtreg		# line 1512, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6407:
	.stabn  68,0,1512,.LN6407-Emit_EmitNtreg		# line 1512, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6408:
	.stabn  68,0,1513,.LN6408-Emit_EmitNtreg		# line 1513, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4636
.Lab4635:
.LN6409:
	.stabn  68,0,1513,.LN6409-Emit_EmitNtreg		# line 1513, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4634
.Lab4636:
.LN6410:
	.stabn  68,0,1513,.LN6410-Emit_EmitNtreg		# line 1513, column 61
	call	InOut_WriteLn
.Lab4634:
.LN6411:
	.stabn  68,0,1514,.LN6411-Emit_EmitNtreg		# line 1514, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6412:
	.stabn  68,0,1515,.LN6412-Emit_EmitNtreg		# line 1515, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4638
	cmpl	$4096,%eax
	jbe	.Lab4637
.Lab4638:
   	call	BoundErr_		
.Lab4637:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4630:
.LN6413:
	.stabn  68,0,1518,.LN6413-Emit_EmitNtreg		# line 1518, column 2
	.data
.Lab4639:
 	.ascii	"\011notl\011\000"
	.text
	pushl	$6
	leal	.Lab4639,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6414:
	.stabn  68,0,1518,.LN6414-Emit_EmitNtreg		# line 1518, column 30
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4641
	cmpl	$4096,%eax
	jbe	.Lab4640
.Lab4641:
   	call	BoundErr_		
.Lab4640:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6415:
	.stabn  68,0,1518,.LN6415-Emit_EmitNtreg		# line 1518, column 75
	call	CgAssOut_AssLn
.LN6416:
	.stabn  68,0,1519,.LN6416-Emit_EmitNtreg		# line 1519, column 2
	.data
.Lab4642:
 	.ascii	" \011andl\011\000"
	.text
	pushl	$7
	leal	.Lab4642,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6417:
	.stabn  68,0,1519,.LN6417-Emit_EmitNtreg		# line 1519, column 30
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6418:
	.stabn  68,0,1519,.LN6418-Emit_EmitNtreg		# line 1519, column 66
	.data
.Lab4643:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4643,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6419:
	.stabn  68,0,1519,.LN6419-Emit_EmitNtreg		# line 1519, column 85
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4645
	cmpl	$4096,%eax
	jbe	.Lab4644
.Lab4645:
   	call	BoundErr_		
.Lab4644:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6420:
	.stabn  68,0,1519,.LN6420-Emit_EmitNtreg		# line 1519, column 130
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3819:
.LN6421:
	.stabn  68,0,1522,.LN6421-Emit_EmitNtreg		# line 1522, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6422:
	.stabn  68,0,1523,.LN6422-Emit_EmitNtreg		# line 1523, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6423:
	.stabn  68,0,1524,.LN6423-Emit_EmitNtreg		# line 1524, column 10
	decl	Emit_s + 1536
.LN6424:
	.stabn  68,0,1525,.LN6424-Emit_EmitNtreg		# line 1525, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4649
	cmpl	$4096,%eax
	jbe	.Lab4648
.Lab4649:
   	call	BoundErr_		
.Lab4648:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4646
.Lab4647:
.LN6425:
	.stabn  68,0,1526,.LN6425-Emit_EmitNtreg		# line 1526, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4651
	cmpl	$4096,%eax
	jbe	.Lab4650
.Lab4651:
   	call	BoundErr_		
.Lab4650:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4646:
.LN6426:
	.stabn  68,0,1528,.LN6426-Emit_EmitNtreg		# line 1528, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4652
.Lab4653:
.LN6427:
	.stabn  68,0,1529,.LN6427-Emit_EmitNtreg		# line 1529, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6428:
	.stabn  68,0,1530,.LN6428-Emit_EmitNtreg		# line 1530, column 11
	.data
.Lab4654:
 	.ascii	"Rule 102/1590 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4654,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6429:
	.stabn  68,0,1531,.LN6429-Emit_EmitNtreg		# line 1531, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6430:
	.stabn  68,0,1532,.LN6430-Emit_EmitNtreg		# line 1532, column 11
	.data
.Lab4655:
 	.ascii	" SetUnion ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4655,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6431:
	.stabn  68,0,1533,.LN6431-Emit_EmitNtreg		# line 1533, column 11
	call	InOut_WriteLn
.LN6432:
	.stabn  68,0,1534,.LN6432-Emit_EmitNtreg		# line 1534, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6433:
	.stabn  68,0,1535,.LN6433-Emit_EmitNtreg		# line 1535, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6434:
	.stabn  68,0,1535,.LN6434-Emit_EmitNtreg		# line 1535, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6435:
	.stabn  68,0,1536,.LN6435-Emit_EmitNtreg		# line 1536, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4658
.Lab4657:
.LN6436:
	.stabn  68,0,1536,.LN6436-Emit_EmitNtreg		# line 1536, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4656
.Lab4658:
.LN6437:
	.stabn  68,0,1536,.LN6437-Emit_EmitNtreg		# line 1536, column 61
	call	InOut_WriteLn
.Lab4656:
.LN6438:
	.stabn  68,0,1537,.LN6438-Emit_EmitNtreg		# line 1537, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6439:
	.stabn  68,0,1538,.LN6439-Emit_EmitNtreg		# line 1538, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4660
	cmpl	$4096,%eax
	jbe	.Lab4659
.Lab4660:
   	call	BoundErr_		
.Lab4659:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4652:
.LN6440:
	.stabn  68,0,1540,.LN6440-Emit_EmitNtreg		# line 1540, column 2
	.data
.Lab4661:
 	.ascii	" \011orl\011\000"
	.text
	pushl	$6
	leal	.Lab4661,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6441:
	.stabn  68,0,1540,.LN6441-Emit_EmitNtreg		# line 1540, column 30
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6442:
	.stabn  68,0,1540,.LN6442-Emit_EmitNtreg		# line 1540, column 66
	.data
.Lab4662:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4662,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6443:
	.stabn  68,0,1540,.LN6443-Emit_EmitNtreg		# line 1540, column 85
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4664
	cmpl	$4096,%eax
	jbe	.Lab4663
.Lab4664:
   	call	BoundErr_		
.Lab4663:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6444:
	.stabn  68,0,1540,.LN6444-Emit_EmitNtreg		# line 1540, column 130
	.data
.Lab4665:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4665,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6445:
	.stabn  68,0,1540,.LN6445-Emit_EmitNtreg		# line 1540, column 148
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3818:
.LN6446:
	.stabn  68,0,1542,.LN6446-Emit_EmitNtreg		# line 1542, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6447:
	.stabn  68,0,1543,.LN6447-Emit_EmitNtreg		# line 1543, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6448:
	.stabn  68,0,1544,.LN6448-Emit_EmitNtreg		# line 1544, column 10
	decl	Emit_s + 1536
.LN6449:
	.stabn  68,0,1545,.LN6449-Emit_EmitNtreg		# line 1545, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4669
	cmpl	$4096,%eax
	jbe	.Lab4668
.Lab4669:
   	call	BoundErr_		
.Lab4668:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4666
.Lab4667:
.LN6450:
	.stabn  68,0,1546,.LN6450-Emit_EmitNtreg		# line 1546, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4671
	cmpl	$4096,%eax
	jbe	.Lab4670
.Lab4671:
   	call	BoundErr_		
.Lab4670:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4666:
.LN6451:
	.stabn  68,0,1548,.LN6451-Emit_EmitNtreg		# line 1548, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4672
.Lab4673:
.LN6452:
	.stabn  68,0,1549,.LN6452-Emit_EmitNtreg		# line 1549, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6453:
	.stabn  68,0,1550,.LN6453-Emit_EmitNtreg		# line 1550, column 11
	.data
.Lab4674:
 	.ascii	"Rule 103/1590 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4674,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6454:
	.stabn  68,0,1551,.LN6454-Emit_EmitNtreg		# line 1551, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6455:
	.stabn  68,0,1552,.LN6455-Emit_EmitNtreg		# line 1552, column 11
	.data
.Lab4675:
 	.ascii	" SetUnion ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4675,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6456:
	.stabn  68,0,1553,.LN6456-Emit_EmitNtreg		# line 1553, column 11
	call	InOut_WriteLn
.LN6457:
	.stabn  68,0,1554,.LN6457-Emit_EmitNtreg		# line 1554, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6458:
	.stabn  68,0,1555,.LN6458-Emit_EmitNtreg		# line 1555, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6459:
	.stabn  68,0,1555,.LN6459-Emit_EmitNtreg		# line 1555, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6460:
	.stabn  68,0,1556,.LN6460-Emit_EmitNtreg		# line 1556, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4678
.Lab4677:
.LN6461:
	.stabn  68,0,1556,.LN6461-Emit_EmitNtreg		# line 1556, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4676
.Lab4678:
.LN6462:
	.stabn  68,0,1556,.LN6462-Emit_EmitNtreg		# line 1556, column 61
	call	InOut_WriteLn
.Lab4676:
.LN6463:
	.stabn  68,0,1557,.LN6463-Emit_EmitNtreg		# line 1557, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6464:
	.stabn  68,0,1558,.LN6464-Emit_EmitNtreg		# line 1558, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4680
	cmpl	$4096,%eax
	jbe	.Lab4679
.Lab4680:
   	call	BoundErr_		
.Lab4679:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4672:
.LN6465:
	.stabn  68,0,1560,.LN6465-Emit_EmitNtreg		# line 1560, column 2
	.data
.Lab4681:
 	.ascii	" \011orl\011\000"
	.text
	pushl	$6
	leal	.Lab4681,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6466:
	.stabn  68,0,1560,.LN6466-Emit_EmitNtreg		# line 1560, column 30
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6467:
	.stabn  68,0,1560,.LN6467-Emit_EmitNtreg		# line 1560, column 66
	.data
.Lab4682:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4682,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6468:
	.stabn  68,0,1560,.LN6468-Emit_EmitNtreg		# line 1560, column 85
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4684
	cmpl	$4096,%eax
	jbe	.Lab4683
.Lab4684:
   	call	BoundErr_		
.Lab4683:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN6469:
	.stabn  68,0,1560,.LN6469-Emit_EmitNtreg		# line 1560, column 130
	.data
.Lab4685:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4685,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6470:
	.stabn  68,0,1560,.LN6470-Emit_EmitNtreg		# line 1560, column 148
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3817:
.LN6471:
	.stabn  68,0,1562,.LN6471-Emit_EmitNtreg		# line 1562, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6472:
	.stabn  68,0,1563,.LN6472-Emit_EmitNtreg		# line 1563, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6473:
	.stabn  68,0,1564,.LN6473-Emit_EmitNtreg		# line 1564, column 10
	decl	Emit_s + 1536
.LN6474:
	.stabn  68,0,1565,.LN6474-Emit_EmitNtreg		# line 1565, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4689
	cmpl	$4096,%eax
	jbe	.Lab4688
.Lab4689:
   	call	BoundErr_		
.Lab4688:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4686
.Lab4687:
.LN6475:
	.stabn  68,0,1566,.LN6475-Emit_EmitNtreg		# line 1566, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4691
	cmpl	$4096,%eax
	jbe	.Lab4690
.Lab4691:
   	call	BoundErr_		
.Lab4690:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4686:
.LN6476:
	.stabn  68,0,1568,.LN6476-Emit_EmitNtreg		# line 1568, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4692
.Lab4693:
.LN6477:
	.stabn  68,0,1569,.LN6477-Emit_EmitNtreg		# line 1569, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6478:
	.stabn  68,0,1570,.LN6478-Emit_EmitNtreg		# line 1570, column 11
	.data
.Lab4694:
 	.ascii	"Rule 104/1503 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4694,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6479:
	.stabn  68,0,1571,.LN6479-Emit_EmitNtreg		# line 1571, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6480:
	.stabn  68,0,1572,.LN6480-Emit_EmitNtreg		# line 1572, column 11
	.data
.Lab4695:
 	.ascii	" FixedMod ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4695,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6481:
	.stabn  68,0,1573,.LN6481-Emit_EmitNtreg		# line 1573, column 11
	call	InOut_WriteLn
.LN6482:
	.stabn  68,0,1574,.LN6482-Emit_EmitNtreg		# line 1574, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6483:
	.stabn  68,0,1575,.LN6483-Emit_EmitNtreg		# line 1575, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6484:
	.stabn  68,0,1575,.LN6484-Emit_EmitNtreg		# line 1575, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6485:
	.stabn  68,0,1576,.LN6485-Emit_EmitNtreg		# line 1576, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4698
.Lab4697:
.LN6486:
	.stabn  68,0,1576,.LN6486-Emit_EmitNtreg		# line 1576, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4696
.Lab4698:
.LN6487:
	.stabn  68,0,1576,.LN6487-Emit_EmitNtreg		# line 1576, column 61
	call	InOut_WriteLn
.Lab4696:
.LN6488:
	.stabn  68,0,1577,.LN6488-Emit_EmitNtreg		# line 1577, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6489:
	.stabn  68,0,1578,.LN6489-Emit_EmitNtreg		# line 1578, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4700
	cmpl	$4096,%eax
	jbe	.Lab4699
.Lab4700:
   	call	BoundErr_		
.Lab4699:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4692:
.LN6490:
	.stabn  68,0,1581,.LN6490-Emit_EmitNtreg		# line 1581, column 2
	.data
.Lab4701:
 	.ascii	"\011cwd\000"
	.text
	pushl	$4
	leal	.Lab4701,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6491:
	.stabn  68,0,1581,.LN6491-Emit_EmitNtreg		# line 1581, column 25
	call	CgAssOut_AssLn
.LN6492:
	.stabn  68,0,1582,.LN6492-Emit_EmitNtreg		# line 1582, column 2
	.data
.Lab4702:
 	.ascii	"\011idiv\000"
	.text
	pushl	$5
	leal	.Lab4702,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6493:
	.stabn  68,0,1582,.LN6493-Emit_EmitNtreg		# line 1582, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6494:
	.stabn  68,0,1582,.LN6494-Emit_EmitNtreg		# line 1582, column 63
	.data
.Lab4703:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4703,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6495:
	.stabn  68,0,1582,.LN6495-Emit_EmitNtreg		# line 1582, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4705
	cmpl	$4096,%eax
	jbe	.Lab4704
.Lab4705:
   	call	BoundErr_		
.Lab4704:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6496:
	.stabn  68,0,1582,.LN6496-Emit_EmitNtreg		# line 1582, column 157
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3816:
.LN6497:
	.stabn  68,0,1585,.LN6497-Emit_EmitNtreg		# line 1585, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6498:
	.stabn  68,0,1586,.LN6498-Emit_EmitNtreg		# line 1586, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6499:
	.stabn  68,0,1587,.LN6499-Emit_EmitNtreg		# line 1587, column 10
	decl	Emit_s + 1536
.LN6500:
	.stabn  68,0,1588,.LN6500-Emit_EmitNtreg		# line 1588, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4709
	cmpl	$4096,%eax
	jbe	.Lab4708
.Lab4709:
   	call	BoundErr_		
.Lab4708:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4706
.Lab4707:
.LN6501:
	.stabn  68,0,1589,.LN6501-Emit_EmitNtreg		# line 1589, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4711
	cmpl	$4096,%eax
	jbe	.Lab4710
.Lab4711:
   	call	BoundErr_		
.Lab4710:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4706:
.LN6502:
	.stabn  68,0,1591,.LN6502-Emit_EmitNtreg		# line 1591, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4712
.Lab4713:
.LN6503:
	.stabn  68,0,1592,.LN6503-Emit_EmitNtreg		# line 1592, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6504:
	.stabn  68,0,1593,.LN6504-Emit_EmitNtreg		# line 1593, column 11
	.data
.Lab4714:
 	.ascii	"Rule 105/1492 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4714,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6505:
	.stabn  68,0,1594,.LN6505-Emit_EmitNtreg		# line 1594, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6506:
	.stabn  68,0,1595,.LN6506-Emit_EmitNtreg		# line 1595, column 11
	.data
.Lab4715:
 	.ascii	" FixedMod ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4715,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6507:
	.stabn  68,0,1596,.LN6507-Emit_EmitNtreg		# line 1596, column 11
	call	InOut_WriteLn
.LN6508:
	.stabn  68,0,1597,.LN6508-Emit_EmitNtreg		# line 1597, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6509:
	.stabn  68,0,1598,.LN6509-Emit_EmitNtreg		# line 1598, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6510:
	.stabn  68,0,1598,.LN6510-Emit_EmitNtreg		# line 1598, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6511:
	.stabn  68,0,1599,.LN6511-Emit_EmitNtreg		# line 1599, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4718
.Lab4717:
.LN6512:
	.stabn  68,0,1599,.LN6512-Emit_EmitNtreg		# line 1599, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4716
.Lab4718:
.LN6513:
	.stabn  68,0,1599,.LN6513-Emit_EmitNtreg		# line 1599, column 61
	call	InOut_WriteLn
.Lab4716:
.LN6514:
	.stabn  68,0,1600,.LN6514-Emit_EmitNtreg		# line 1600, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6515:
	.stabn  68,0,1601,.LN6515-Emit_EmitNtreg		# line 1601, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4720
	cmpl	$4096,%eax
	jbe	.Lab4719
.Lab4720:
   	call	BoundErr_		
.Lab4719:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4712:
.LN6516:
	.stabn  68,0,1604,.LN6516-Emit_EmitNtreg		# line 1604, column 2
	.data
.Lab4721:
 	.ascii	"\011xor\000"
	.text
	pushl	$4
	leal	.Lab4721,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6517:
	.stabn  68,0,1604,.LN6517-Emit_EmitNtreg		# line 1604, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6518:
	.stabn  68,0,1604,.LN6518-Emit_EmitNtreg		# line 1604, column 62
	.data
.Lab4722:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4722,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6519:
	.stabn  68,0,1604,.LN6519-Emit_EmitNtreg		# line 1604, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4724
	cmpl	$4096,%eax
	jbe	.Lab4723
.Lab4724:
   	call	BoundErr_		
.Lab4723:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6520:
	.stabn  68,0,1604,.LN6520-Emit_EmitNtreg		# line 1604, column 155
	.data
.Lab4725:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4725,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6521:
	.stabn  68,0,1604,.LN6521-Emit_EmitNtreg		# line 1604, column 173
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4727
	cmpl	$4096,%eax
	jbe	.Lab4726
.Lab4727:
   	call	BoundErr_		
.Lab4726:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6522:
	.stabn  68,0,1604,.LN6522-Emit_EmitNtreg		# line 1604, column 242
	call	CgAssOut_AssLn
.LN6523:
	.stabn  68,0,1605,.LN6523-Emit_EmitNtreg		# line 1605, column 2
	.data
.Lab4728:
 	.ascii	"\011div\000"
	.text
	pushl	$4
	leal	.Lab4728,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6524:
	.stabn  68,0,1605,.LN6524-Emit_EmitNtreg		# line 1605, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6525:
	.stabn  68,0,1605,.LN6525-Emit_EmitNtreg		# line 1605, column 62
	.data
.Lab4729:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4729,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6526:
	.stabn  68,0,1605,.LN6526-Emit_EmitNtreg		# line 1605, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4731
	cmpl	$4096,%eax
	jbe	.Lab4730
.Lab4731:
   	call	BoundErr_		
.Lab4730:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6527:
	.stabn  68,0,1605,.LN6527-Emit_EmitNtreg		# line 1605, column 157
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3815:
.LN6528:
	.stabn  68,0,1608,.LN6528-Emit_EmitNtreg		# line 1608, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6529:
	.stabn  68,0,1609,.LN6529-Emit_EmitNtreg		# line 1609, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6530:
	.stabn  68,0,1610,.LN6530-Emit_EmitNtreg		# line 1610, column 10
	decl	Emit_s + 1536
.LN6531:
	.stabn  68,0,1611,.LN6531-Emit_EmitNtreg		# line 1611, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4735
	cmpl	$4096,%eax
	jbe	.Lab4734
.Lab4735:
   	call	BoundErr_		
.Lab4734:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4732
.Lab4733:
.LN6532:
	.stabn  68,0,1612,.LN6532-Emit_EmitNtreg		# line 1612, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4737
	cmpl	$4096,%eax
	jbe	.Lab4736
.Lab4737:
   	call	BoundErr_		
.Lab4736:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4732:
.LN6533:
	.stabn  68,0,1614,.LN6533-Emit_EmitNtreg		# line 1614, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4738
.Lab4739:
.LN6534:
	.stabn  68,0,1615,.LN6534-Emit_EmitNtreg		# line 1615, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6535:
	.stabn  68,0,1616,.LN6535-Emit_EmitNtreg		# line 1616, column 11
	.data
.Lab4740:
 	.ascii	"Rule 106/1481 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4740,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6536:
	.stabn  68,0,1617,.LN6536-Emit_EmitNtreg		# line 1617, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6537:
	.stabn  68,0,1618,.LN6537-Emit_EmitNtreg		# line 1618, column 11
	.data
.Lab4741:
 	.ascii	" FixedMod ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4741,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6538:
	.stabn  68,0,1619,.LN6538-Emit_EmitNtreg		# line 1619, column 11
	call	InOut_WriteLn
.LN6539:
	.stabn  68,0,1620,.LN6539-Emit_EmitNtreg		# line 1620, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6540:
	.stabn  68,0,1621,.LN6540-Emit_EmitNtreg		# line 1621, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6541:
	.stabn  68,0,1621,.LN6541-Emit_EmitNtreg		# line 1621, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6542:
	.stabn  68,0,1622,.LN6542-Emit_EmitNtreg		# line 1622, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4744
.Lab4743:
.LN6543:
	.stabn  68,0,1622,.LN6543-Emit_EmitNtreg		# line 1622, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4742
.Lab4744:
.LN6544:
	.stabn  68,0,1622,.LN6544-Emit_EmitNtreg		# line 1622, column 61
	call	InOut_WriteLn
.Lab4742:
.LN6545:
	.stabn  68,0,1623,.LN6545-Emit_EmitNtreg		# line 1623, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6546:
	.stabn  68,0,1624,.LN6546-Emit_EmitNtreg		# line 1624, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4746
	cmpl	$4096,%eax
	jbe	.Lab4745
.Lab4746:
   	call	BoundErr_		
.Lab4745:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4738:
.LN6547:
	.stabn  68,0,1627,.LN6547-Emit_EmitNtreg		# line 1627, column 2
	.data
.Lab4747:
 	.ascii	"\011cdq\000"
	.text
	pushl	$4
	leal	.Lab4747,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6548:
	.stabn  68,0,1627,.LN6548-Emit_EmitNtreg		# line 1627, column 25
	call	CgAssOut_AssLn
.LN6549:
	.stabn  68,0,1628,.LN6549-Emit_EmitNtreg		# line 1628, column 2
	.data
.Lab4748:
 	.ascii	"\011idiv\000"
	.text
	pushl	$5
	leal	.Lab4748,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6550:
	.stabn  68,0,1628,.LN6550-Emit_EmitNtreg		# line 1628, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6551:
	.stabn  68,0,1628,.LN6551-Emit_EmitNtreg		# line 1628, column 63
	.data
.Lab4749:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4749,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6552:
	.stabn  68,0,1628,.LN6552-Emit_EmitNtreg		# line 1628, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4751
	cmpl	$4096,%eax
	jbe	.Lab4750
.Lab4751:
   	call	BoundErr_		
.Lab4750:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6553:
	.stabn  68,0,1628,.LN6553-Emit_EmitNtreg		# line 1628, column 157
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3814:
.LN6554:
	.stabn  68,0,1631,.LN6554-Emit_EmitNtreg		# line 1631, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6555:
	.stabn  68,0,1632,.LN6555-Emit_EmitNtreg		# line 1632, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6556:
	.stabn  68,0,1633,.LN6556-Emit_EmitNtreg		# line 1633, column 10
	decl	Emit_s + 1536
.LN6557:
	.stabn  68,0,1634,.LN6557-Emit_EmitNtreg		# line 1634, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4755
	cmpl	$4096,%eax
	jbe	.Lab4754
.Lab4755:
   	call	BoundErr_		
.Lab4754:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4752
.Lab4753:
.LN6558:
	.stabn  68,0,1635,.LN6558-Emit_EmitNtreg		# line 1635, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4757
	cmpl	$4096,%eax
	jbe	.Lab4756
.Lab4757:
   	call	BoundErr_		
.Lab4756:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4752:
.LN6559:
	.stabn  68,0,1637,.LN6559-Emit_EmitNtreg		# line 1637, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4758
.Lab4759:
.LN6560:
	.stabn  68,0,1638,.LN6560-Emit_EmitNtreg		# line 1638, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6561:
	.stabn  68,0,1639,.LN6561-Emit_EmitNtreg		# line 1639, column 11
	.data
.Lab4760:
 	.ascii	"Rule 107/1460 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4760,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6562:
	.stabn  68,0,1640,.LN6562-Emit_EmitNtreg		# line 1640, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6563:
	.stabn  68,0,1641,.LN6563-Emit_EmitNtreg		# line 1641, column 11
	.data
.Lab4761:
 	.ascii	" FixedMod ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4761,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6564:
	.stabn  68,0,1642,.LN6564-Emit_EmitNtreg		# line 1642, column 11
	call	InOut_WriteLn
.LN6565:
	.stabn  68,0,1643,.LN6565-Emit_EmitNtreg		# line 1643, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6566:
	.stabn  68,0,1644,.LN6566-Emit_EmitNtreg		# line 1644, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6567:
	.stabn  68,0,1644,.LN6567-Emit_EmitNtreg		# line 1644, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6568:
	.stabn  68,0,1645,.LN6568-Emit_EmitNtreg		# line 1645, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4764
.Lab4763:
.LN6569:
	.stabn  68,0,1645,.LN6569-Emit_EmitNtreg		# line 1645, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4762
.Lab4764:
.LN6570:
	.stabn  68,0,1645,.LN6570-Emit_EmitNtreg		# line 1645, column 61
	call	InOut_WriteLn
.Lab4762:
.LN6571:
	.stabn  68,0,1646,.LN6571-Emit_EmitNtreg		# line 1646, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6572:
	.stabn  68,0,1647,.LN6572-Emit_EmitNtreg		# line 1647, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4766
	cmpl	$4096,%eax
	jbe	.Lab4765
.Lab4766:
   	call	BoundErr_		
.Lab4765:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4758:
.LN6573:
	.stabn  68,0,1649,.LN6573-Emit_EmitNtreg		# line 1649, column 2
	.data
.Lab4767:
 	.ascii	"\011and\000"
	.text
	pushl	$4
	leal	.Lab4767,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6574:
	.stabn  68,0,1649,.LN6574-Emit_EmitNtreg		# line 1649, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6575:
	.stabn  68,0,1649,.LN6575-Emit_EmitNtreg		# line 1649, column 62
	.data
.Lab4768:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab4768,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6576:
	.stabn  68,0,1649,.LN6576-Emit_EmitNtreg		# line 1649, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
 	subl	$1,%eax 
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6577:
	.stabn  68,0,1649,.LN6577-Emit_EmitNtreg		# line 1649, column 130
	.data
.Lab4769:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4769,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6578:
	.stabn  68,0,1649,.LN6578-Emit_EmitNtreg		# line 1649, column 149
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4771
	cmpl	$4096,%eax
	jbe	.Lab4770
.Lab4771:
   	call	BoundErr_		
.Lab4770:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6579:
	.stabn  68,0,1649,.LN6579-Emit_EmitNtreg		# line 1649, column 220
	.data
.Lab4772:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4772,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6580:
	.stabn  68,0,1649,.LN6580-Emit_EmitNtreg		# line 1649, column 238
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3813:
.LN6581:
	.stabn  68,0,1651,.LN6581-Emit_EmitNtreg		# line 1651, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6582:
	.stabn  68,0,1652,.LN6582-Emit_EmitNtreg		# line 1652, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6583:
	.stabn  68,0,1653,.LN6583-Emit_EmitNtreg		# line 1653, column 10
	decl	Emit_s + 1536
.LN6584:
	.stabn  68,0,1654,.LN6584-Emit_EmitNtreg		# line 1654, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4776
	cmpl	$4096,%eax
	jbe	.Lab4775
.Lab4776:
   	call	BoundErr_		
.Lab4775:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4773
.Lab4774:
.LN6585:
	.stabn  68,0,1655,.LN6585-Emit_EmitNtreg		# line 1655, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4778
	cmpl	$4096,%eax
	jbe	.Lab4777
.Lab4778:
   	call	BoundErr_		
.Lab4777:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4773:
.LN6586:
	.stabn  68,0,1657,.LN6586-Emit_EmitNtreg		# line 1657, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4779
.Lab4780:
.LN6587:
	.stabn  68,0,1658,.LN6587-Emit_EmitNtreg		# line 1658, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6588:
	.stabn  68,0,1659,.LN6588-Emit_EmitNtreg		# line 1659, column 11
	.data
.Lab4781:
 	.ascii	"Rule 108/1443 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4781,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6589:
	.stabn  68,0,1660,.LN6589-Emit_EmitNtreg		# line 1660, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6590:
	.stabn  68,0,1661,.LN6590-Emit_EmitNtreg		# line 1661, column 11
	.data
.Lab4782:
 	.ascii	" FixedDiv ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4782,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6591:
	.stabn  68,0,1662,.LN6591-Emit_EmitNtreg		# line 1662, column 11
	call	InOut_WriteLn
.LN6592:
	.stabn  68,0,1663,.LN6592-Emit_EmitNtreg		# line 1663, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6593:
	.stabn  68,0,1664,.LN6593-Emit_EmitNtreg		# line 1664, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6594:
	.stabn  68,0,1664,.LN6594-Emit_EmitNtreg		# line 1664, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6595:
	.stabn  68,0,1665,.LN6595-Emit_EmitNtreg		# line 1665, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4785
.Lab4784:
.LN6596:
	.stabn  68,0,1665,.LN6596-Emit_EmitNtreg		# line 1665, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4783
.Lab4785:
.LN6597:
	.stabn  68,0,1665,.LN6597-Emit_EmitNtreg		# line 1665, column 61
	call	InOut_WriteLn
.Lab4783:
.LN6598:
	.stabn  68,0,1666,.LN6598-Emit_EmitNtreg		# line 1666, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6599:
	.stabn  68,0,1667,.LN6599-Emit_EmitNtreg		# line 1667, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4787
	cmpl	$4096,%eax
	jbe	.Lab4786
.Lab4787:
   	call	BoundErr_		
.Lab4786:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4779:
.LN6600:
	.stabn  68,0,1670,.LN6600-Emit_EmitNtreg		# line 1670, column 2
	.data
.Lab4788:
 	.ascii	"\011cwd\000"
	.text
	pushl	$4
	leal	.Lab4788,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6601:
	.stabn  68,0,1670,.LN6601-Emit_EmitNtreg		# line 1670, column 25
	call	CgAssOut_AssLn
.LN6602:
	.stabn  68,0,1671,.LN6602-Emit_EmitNtreg		# line 1671, column 2
	.data
.Lab4789:
 	.ascii	"\011idiv\000"
	.text
	pushl	$5
	leal	.Lab4789,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6603:
	.stabn  68,0,1671,.LN6603-Emit_EmitNtreg		# line 1671, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6604:
	.stabn  68,0,1671,.LN6604-Emit_EmitNtreg		# line 1671, column 63
	.data
.Lab4790:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4790,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6605:
	.stabn  68,0,1671,.LN6605-Emit_EmitNtreg		# line 1671, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4792
	cmpl	$4096,%eax
	jbe	.Lab4791
.Lab4792:
   	call	BoundErr_		
.Lab4791:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6606:
	.stabn  68,0,1671,.LN6606-Emit_EmitNtreg		# line 1671, column 157
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3812:
.LN6607:
	.stabn  68,0,1674,.LN6607-Emit_EmitNtreg		# line 1674, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6608:
	.stabn  68,0,1675,.LN6608-Emit_EmitNtreg		# line 1675, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6609:
	.stabn  68,0,1676,.LN6609-Emit_EmitNtreg		# line 1676, column 10
	decl	Emit_s + 1536
.LN6610:
	.stabn  68,0,1677,.LN6610-Emit_EmitNtreg		# line 1677, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4796
	cmpl	$4096,%eax
	jbe	.Lab4795
.Lab4796:
   	call	BoundErr_		
.Lab4795:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4793
.Lab4794:
.LN6611:
	.stabn  68,0,1678,.LN6611-Emit_EmitNtreg		# line 1678, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4798
	cmpl	$4096,%eax
	jbe	.Lab4797
.Lab4798:
   	call	BoundErr_		
.Lab4797:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4793:
.LN6612:
	.stabn  68,0,1680,.LN6612-Emit_EmitNtreg		# line 1680, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4799
.Lab4800:
.LN6613:
	.stabn  68,0,1681,.LN6613-Emit_EmitNtreg		# line 1681, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6614:
	.stabn  68,0,1682,.LN6614-Emit_EmitNtreg		# line 1682, column 11
	.data
.Lab4801:
 	.ascii	"Rule 109/1431 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4801,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6615:
	.stabn  68,0,1683,.LN6615-Emit_EmitNtreg		# line 1683, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6616:
	.stabn  68,0,1684,.LN6616-Emit_EmitNtreg		# line 1684, column 11
	.data
.Lab4802:
 	.ascii	" FixedDiv ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4802,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6617:
	.stabn  68,0,1685,.LN6617-Emit_EmitNtreg		# line 1685, column 11
	call	InOut_WriteLn
.LN6618:
	.stabn  68,0,1686,.LN6618-Emit_EmitNtreg		# line 1686, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6619:
	.stabn  68,0,1687,.LN6619-Emit_EmitNtreg		# line 1687, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6620:
	.stabn  68,0,1687,.LN6620-Emit_EmitNtreg		# line 1687, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6621:
	.stabn  68,0,1688,.LN6621-Emit_EmitNtreg		# line 1688, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4805
.Lab4804:
.LN6622:
	.stabn  68,0,1688,.LN6622-Emit_EmitNtreg		# line 1688, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4803
.Lab4805:
.LN6623:
	.stabn  68,0,1688,.LN6623-Emit_EmitNtreg		# line 1688, column 61
	call	InOut_WriteLn
.Lab4803:
.LN6624:
	.stabn  68,0,1689,.LN6624-Emit_EmitNtreg		# line 1689, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6625:
	.stabn  68,0,1690,.LN6625-Emit_EmitNtreg		# line 1690, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4807
	cmpl	$4096,%eax
	jbe	.Lab4806
.Lab4807:
   	call	BoundErr_		
.Lab4806:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4799:
.LN6626:
	.stabn  68,0,1693,.LN6626-Emit_EmitNtreg		# line 1693, column 2
	.data
.Lab4808:
 	.ascii	"\011xor\000"
	.text
	pushl	$4
	leal	.Lab4808,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6627:
	.stabn  68,0,1693,.LN6627-Emit_EmitNtreg		# line 1693, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6628:
	.stabn  68,0,1693,.LN6628-Emit_EmitNtreg		# line 1693, column 62
	.data
.Lab4809:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4809,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6629:
	.stabn  68,0,1693,.LN6629-Emit_EmitNtreg		# line 1693, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	pushl	$4
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6630:
	.stabn  68,0,1693,.LN6630-Emit_EmitNtreg		# line 1693, column 134
	.data
.Lab4810:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4810,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6631:
	.stabn  68,0,1693,.LN6631-Emit_EmitNtreg		# line 1693, column 152
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	pushl	$4
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6632:
	.stabn  68,0,1693,.LN6632-Emit_EmitNtreg		# line 1693, column 200
	call	CgAssOut_AssLn
.LN6633:
	.stabn  68,0,1694,.LN6633-Emit_EmitNtreg		# line 1694, column 2
	.data
.Lab4811:
 	.ascii	"\011div\000"
	.text
	pushl	$4
	leal	.Lab4811,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6634:
	.stabn  68,0,1694,.LN6634-Emit_EmitNtreg		# line 1694, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6635:
	.stabn  68,0,1694,.LN6635-Emit_EmitNtreg		# line 1694, column 62
	.data
.Lab4812:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4812,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6636:
	.stabn  68,0,1694,.LN6636-Emit_EmitNtreg		# line 1694, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4814
	cmpl	$4096,%eax
	jbe	.Lab4813
.Lab4814:
   	call	BoundErr_		
.Lab4813:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6637:
	.stabn  68,0,1694,.LN6637-Emit_EmitNtreg		# line 1694, column 157
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3811:
.LN6638:
	.stabn  68,0,1697,.LN6638-Emit_EmitNtreg		# line 1697, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6639:
	.stabn  68,0,1698,.LN6639-Emit_EmitNtreg		# line 1698, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6640:
	.stabn  68,0,1699,.LN6640-Emit_EmitNtreg		# line 1699, column 10
	decl	Emit_s + 1536
.LN6641:
	.stabn  68,0,1700,.LN6641-Emit_EmitNtreg		# line 1700, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4818
	cmpl	$4096,%eax
	jbe	.Lab4817
.Lab4818:
   	call	BoundErr_		
.Lab4817:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4815
.Lab4816:
.LN6642:
	.stabn  68,0,1701,.LN6642-Emit_EmitNtreg		# line 1701, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4820
	cmpl	$4096,%eax
	jbe	.Lab4819
.Lab4820:
   	call	BoundErr_		
.Lab4819:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4815:
.LN6643:
	.stabn  68,0,1703,.LN6643-Emit_EmitNtreg		# line 1703, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4821
.Lab4822:
.LN6644:
	.stabn  68,0,1704,.LN6644-Emit_EmitNtreg		# line 1704, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6645:
	.stabn  68,0,1705,.LN6645-Emit_EmitNtreg		# line 1705, column 11
	.data
.Lab4823:
 	.ascii	"Rule 110/1419 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4823,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6646:
	.stabn  68,0,1706,.LN6646-Emit_EmitNtreg		# line 1706, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6647:
	.stabn  68,0,1707,.LN6647-Emit_EmitNtreg		# line 1707, column 11
	.data
.Lab4824:
 	.ascii	" FixedDiv ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4824,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6648:
	.stabn  68,0,1708,.LN6648-Emit_EmitNtreg		# line 1708, column 11
	call	InOut_WriteLn
.LN6649:
	.stabn  68,0,1709,.LN6649-Emit_EmitNtreg		# line 1709, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6650:
	.stabn  68,0,1710,.LN6650-Emit_EmitNtreg		# line 1710, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6651:
	.stabn  68,0,1710,.LN6651-Emit_EmitNtreg		# line 1710, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6652:
	.stabn  68,0,1711,.LN6652-Emit_EmitNtreg		# line 1711, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4827
.Lab4826:
.LN6653:
	.stabn  68,0,1711,.LN6653-Emit_EmitNtreg		# line 1711, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4825
.Lab4827:
.LN6654:
	.stabn  68,0,1711,.LN6654-Emit_EmitNtreg		# line 1711, column 61
	call	InOut_WriteLn
.Lab4825:
.LN6655:
	.stabn  68,0,1712,.LN6655-Emit_EmitNtreg		# line 1712, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6656:
	.stabn  68,0,1713,.LN6656-Emit_EmitNtreg		# line 1713, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4829
	cmpl	$4096,%eax
	jbe	.Lab4828
.Lab4829:
   	call	BoundErr_		
.Lab4828:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4821:
.LN6657:
	.stabn  68,0,1716,.LN6657-Emit_EmitNtreg		# line 1716, column 2
	.data
.Lab4830:
 	.ascii	"\011cdq\000"
	.text
	pushl	$4
	leal	.Lab4830,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6658:
	.stabn  68,0,1716,.LN6658-Emit_EmitNtreg		# line 1716, column 25
	call	CgAssOut_AssLn
.LN6659:
	.stabn  68,0,1717,.LN6659-Emit_EmitNtreg		# line 1717, column 2
	.data
.Lab4831:
 	.ascii	"\011idiv\000"
	.text
	pushl	$5
	leal	.Lab4831,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6660:
	.stabn  68,0,1717,.LN6660-Emit_EmitNtreg		# line 1717, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6661:
	.stabn  68,0,1717,.LN6661-Emit_EmitNtreg		# line 1717, column 63
	.data
.Lab4832:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4832,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6662:
	.stabn  68,0,1717,.LN6662-Emit_EmitNtreg		# line 1717, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4834
	cmpl	$4096,%eax
	jbe	.Lab4833
.Lab4834:
   	call	BoundErr_		
.Lab4833:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6663:
	.stabn  68,0,1717,.LN6663-Emit_EmitNtreg		# line 1717, column 157
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3810:
.LN6664:
	.stabn  68,0,1720,.LN6664-Emit_EmitNtreg		# line 1720, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6665:
	.stabn  68,0,1721,.LN6665-Emit_EmitNtreg		# line 1721, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6666:
	.stabn  68,0,1722,.LN6666-Emit_EmitNtreg		# line 1722, column 10
	decl	Emit_s + 1536
.LN6667:
	.stabn  68,0,1723,.LN6667-Emit_EmitNtreg		# line 1723, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4838
	cmpl	$4096,%eax
	jbe	.Lab4837
.Lab4838:
   	call	BoundErr_		
.Lab4837:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4835
.Lab4836:
.LN6668:
	.stabn  68,0,1724,.LN6668-Emit_EmitNtreg		# line 1724, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4840
	cmpl	$4096,%eax
	jbe	.Lab4839
.Lab4840:
   	call	BoundErr_		
.Lab4839:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4835:
.LN6669:
	.stabn  68,0,1726,.LN6669-Emit_EmitNtreg		# line 1726, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4841
.Lab4842:
.LN6670:
	.stabn  68,0,1727,.LN6670-Emit_EmitNtreg		# line 1727, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6671:
	.stabn  68,0,1728,.LN6671-Emit_EmitNtreg		# line 1728, column 11
	.data
.Lab4843:
 	.ascii	"Rule 111/1388 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4843,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6672:
	.stabn  68,0,1729,.LN6672-Emit_EmitNtreg		# line 1729, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6673:
	.stabn  68,0,1730,.LN6673-Emit_EmitNtreg		# line 1730, column 11
	.data
.Lab4844:
 	.ascii	" FixedDiv ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4844,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6674:
	.stabn  68,0,1731,.LN6674-Emit_EmitNtreg		# line 1731, column 11
	call	InOut_WriteLn
.LN6675:
	.stabn  68,0,1732,.LN6675-Emit_EmitNtreg		# line 1732, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6676:
	.stabn  68,0,1733,.LN6676-Emit_EmitNtreg		# line 1733, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6677:
	.stabn  68,0,1733,.LN6677-Emit_EmitNtreg		# line 1733, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6678:
	.stabn  68,0,1734,.LN6678-Emit_EmitNtreg		# line 1734, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4847
.Lab4846:
.LN6679:
	.stabn  68,0,1734,.LN6679-Emit_EmitNtreg		# line 1734, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4845
.Lab4847:
.LN6680:
	.stabn  68,0,1734,.LN6680-Emit_EmitNtreg		# line 1734, column 61
	call	InOut_WriteLn
.Lab4845:
.LN6681:
	.stabn  68,0,1735,.LN6681-Emit_EmitNtreg		# line 1735, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6682:
	.stabn  68,0,1736,.LN6682-Emit_EmitNtreg		# line 1736, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4849
	cmpl	$4096,%eax
	jbe	.Lab4848
.Lab4849:
   	call	BoundErr_		
.Lab4848:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4841:
.LN6683:
	.stabn  68,0,1738,.LN6683-Emit_EmitNtreg		# line 1738, column 2
	.data
.Lab4850:
 	.ascii	"\011sar\000"
	.text
	pushl	$4
	leal	.Lab4850,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6684:
	.stabn  68,0,1738,.LN6684-Emit_EmitNtreg		# line 1738, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6685:
	.stabn  68,0,1738,.LN6685-Emit_EmitNtreg		# line 1738, column 62
	.data
.Lab4851:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab4851,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6686:
	.stabn  68,0,1738,.LN6686-Emit_EmitNtreg		# line 1738, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab4852:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab4852
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab4853
.Lab4854:
   	call	BoundErr_		
.Lab4853:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6687:
	.stabn  68,0,1738,.LN6687-Emit_EmitNtreg		# line 1738, column 135
	.data
.Lab4855:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4855,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6688:
	.stabn  68,0,1738,.LN6688-Emit_EmitNtreg		# line 1738, column 154
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4857
	cmpl	$4096,%eax
	jbe	.Lab4856
.Lab4857:
   	call	BoundErr_		
.Lab4856:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6689:
	.stabn  68,0,1738,.LN6689-Emit_EmitNtreg		# line 1738, column 225
	.data
.Lab4858:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4858,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6690:
	.stabn  68,0,1738,.LN6690-Emit_EmitNtreg		# line 1738, column 243
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3809:
.LN6691:
	.stabn  68,0,1740,.LN6691-Emit_EmitNtreg		# line 1740, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6692:
	.stabn  68,0,1741,.LN6692-Emit_EmitNtreg		# line 1741, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6693:
	.stabn  68,0,1742,.LN6693-Emit_EmitNtreg		# line 1742, column 10
	decl	Emit_s + 1536
.LN6694:
	.stabn  68,0,1743,.LN6694-Emit_EmitNtreg		# line 1743, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4862
	cmpl	$4096,%eax
	jbe	.Lab4861
.Lab4862:
   	call	BoundErr_		
.Lab4861:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4859
.Lab4860:
.LN6695:
	.stabn  68,0,1744,.LN6695-Emit_EmitNtreg		# line 1744, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4864
	cmpl	$4096,%eax
	jbe	.Lab4863
.Lab4864:
   	call	BoundErr_		
.Lab4863:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4859:
.LN6696:
	.stabn  68,0,1746,.LN6696-Emit_EmitNtreg		# line 1746, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4865
.Lab4866:
.LN6697:
	.stabn  68,0,1747,.LN6697-Emit_EmitNtreg		# line 1747, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6698:
	.stabn  68,0,1748,.LN6698-Emit_EmitNtreg		# line 1748, column 11
	.data
.Lab4867:
 	.ascii	"Rule 112/1365 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4867,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6699:
	.stabn  68,0,1749,.LN6699-Emit_EmitNtreg		# line 1749, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6700:
	.stabn  68,0,1750,.LN6700-Emit_EmitNtreg		# line 1750, column 11
	.data
.Lab4868:
 	.ascii	" FixedDiv ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4868,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6701:
	.stabn  68,0,1751,.LN6701-Emit_EmitNtreg		# line 1751, column 11
	call	InOut_WriteLn
.LN6702:
	.stabn  68,0,1752,.LN6702-Emit_EmitNtreg		# line 1752, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6703:
	.stabn  68,0,1753,.LN6703-Emit_EmitNtreg		# line 1753, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6704:
	.stabn  68,0,1753,.LN6704-Emit_EmitNtreg		# line 1753, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6705:
	.stabn  68,0,1754,.LN6705-Emit_EmitNtreg		# line 1754, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4871
.Lab4870:
.LN6706:
	.stabn  68,0,1754,.LN6706-Emit_EmitNtreg		# line 1754, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4869
.Lab4871:
.LN6707:
	.stabn  68,0,1754,.LN6707-Emit_EmitNtreg		# line 1754, column 61
	call	InOut_WriteLn
.Lab4869:
.LN6708:
	.stabn  68,0,1755,.LN6708-Emit_EmitNtreg		# line 1755, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6709:
	.stabn  68,0,1756,.LN6709-Emit_EmitNtreg		# line 1756, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4873
	cmpl	$4096,%eax
	jbe	.Lab4872
.Lab4873:
   	call	BoundErr_		
.Lab4872:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4865:
.LN6710:
	.stabn  68,0,1758,.LN6710-Emit_EmitNtreg		# line 1758, column 2
	.data
.Lab4874:
 	.ascii	"\011shr\000"
	.text
	pushl	$4
	leal	.Lab4874,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6711:
	.stabn  68,0,1758,.LN6711-Emit_EmitNtreg		# line 1758, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6712:
	.stabn  68,0,1758,.LN6712-Emit_EmitNtreg		# line 1758, column 62
	.data
.Lab4875:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab4875,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6713:
	.stabn  68,0,1758,.LN6713-Emit_EmitNtreg		# line 1758, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab4876:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab4876
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab4877
.Lab4878:
   	call	BoundErr_		
.Lab4877:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6714:
	.stabn  68,0,1758,.LN6714-Emit_EmitNtreg		# line 1758, column 135
	.data
.Lab4879:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab4879,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6715:
	.stabn  68,0,1758,.LN6715-Emit_EmitNtreg		# line 1758, column 154
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4881
	cmpl	$4096,%eax
	jbe	.Lab4880
.Lab4881:
   	call	BoundErr_		
.Lab4880:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6716:
	.stabn  68,0,1758,.LN6716-Emit_EmitNtreg		# line 1758, column 225
	.data
.Lab4882:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4882,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6717:
	.stabn  68,0,1758,.LN6717-Emit_EmitNtreg		# line 1758, column 243
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3808:
.LN6718:
	.stabn  68,0,1760,.LN6718-Emit_EmitNtreg		# line 1760, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6719:
	.stabn  68,0,1761,.LN6719-Emit_EmitNtreg		# line 1761, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6720:
	.stabn  68,0,1762,.LN6720-Emit_EmitNtreg		# line 1762, column 10
	decl	Emit_s + 1536
.LN6721:
	.stabn  68,0,1763,.LN6721-Emit_EmitNtreg		# line 1763, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4886
	cmpl	$4096,%eax
	jbe	.Lab4885
.Lab4886:
   	call	BoundErr_		
.Lab4885:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4883
.Lab4884:
.LN6722:
	.stabn  68,0,1764,.LN6722-Emit_EmitNtreg		# line 1764, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4888
	cmpl	$4096,%eax
	jbe	.Lab4887
.Lab4888:
   	call	BoundErr_		
.Lab4887:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4883:
.LN6723:
	.stabn  68,0,1766,.LN6723-Emit_EmitNtreg		# line 1766, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4889
.Lab4890:
.LN6724:
	.stabn  68,0,1767,.LN6724-Emit_EmitNtreg		# line 1767, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6725:
	.stabn  68,0,1768,.LN6725-Emit_EmitNtreg		# line 1768, column 11
	.data
.Lab4891:
 	.ascii	"Rule 113/1349 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4891,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6726:
	.stabn  68,0,1769,.LN6726-Emit_EmitNtreg		# line 1769, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6727:
	.stabn  68,0,1770,.LN6727-Emit_EmitNtreg		# line 1770, column 11
	.data
.Lab4892:
 	.ascii	" FixedDiv ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4892,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6728:
	.stabn  68,0,1771,.LN6728-Emit_EmitNtreg		# line 1771, column 11
	call	InOut_WriteLn
.LN6729:
	.stabn  68,0,1772,.LN6729-Emit_EmitNtreg		# line 1772, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6730:
	.stabn  68,0,1773,.LN6730-Emit_EmitNtreg		# line 1773, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6731:
	.stabn  68,0,1773,.LN6731-Emit_EmitNtreg		# line 1773, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6732:
	.stabn  68,0,1774,.LN6732-Emit_EmitNtreg		# line 1774, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4895
.Lab4894:
.LN6733:
	.stabn  68,0,1774,.LN6733-Emit_EmitNtreg		# line 1774, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4893
.Lab4895:
.LN6734:
	.stabn  68,0,1774,.LN6734-Emit_EmitNtreg		# line 1774, column 61
	call	InOut_WriteLn
.Lab4893:
.LN6735:
	.stabn  68,0,1775,.LN6735-Emit_EmitNtreg		# line 1775, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6736:
	.stabn  68,0,1776,.LN6736-Emit_EmitNtreg		# line 1776, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4897
	cmpl	$4096,%eax
	jbe	.Lab4896
.Lab4897:
   	call	BoundErr_		
.Lab4896:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4889:
	jmp	.Lab3784
.Lab3807:
.LN6737:
	.stabn  68,0,1780,.LN6737-Emit_EmitNtreg		# line 1780, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6738:
	.stabn  68,0,1781,.LN6738-Emit_EmitNtreg		# line 1781, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6739:
	.stabn  68,0,1782,.LN6739-Emit_EmitNtreg		# line 1782, column 10
	decl	Emit_s + 1536
.LN6740:
	.stabn  68,0,1783,.LN6740-Emit_EmitNtreg		# line 1783, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4901
	cmpl	$4096,%eax
	jbe	.Lab4900
.Lab4901:
   	call	BoundErr_		
.Lab4900:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4898
.Lab4899:
.LN6741:
	.stabn  68,0,1784,.LN6741-Emit_EmitNtreg		# line 1784, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4903
	cmpl	$4096,%eax
	jbe	.Lab4902
.Lab4903:
   	call	BoundErr_		
.Lab4902:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4898:
.LN6742:
	.stabn  68,0,1786,.LN6742-Emit_EmitNtreg		# line 1786, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4904
.Lab4905:
.LN6743:
	.stabn  68,0,1787,.LN6743-Emit_EmitNtreg		# line 1787, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6744:
	.stabn  68,0,1788,.LN6744-Emit_EmitNtreg		# line 1788, column 11
	.data
.Lab4906:
 	.ascii	"Rule 114/1343 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4906,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6745:
	.stabn  68,0,1789,.LN6745-Emit_EmitNtreg		# line 1789, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6746:
	.stabn  68,0,1790,.LN6746-Emit_EmitNtreg		# line 1790, column 11
	.data
.Lab4907:
 	.ascii	" FixedDiv ->   reg\000"
	.text
	pushl	$18
	leal	.Lab4907,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6747:
	.stabn  68,0,1791,.LN6747-Emit_EmitNtreg		# line 1791, column 11
	call	InOut_WriteLn
.LN6748:
	.stabn  68,0,1792,.LN6748-Emit_EmitNtreg		# line 1792, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6749:
	.stabn  68,0,1793,.LN6749-Emit_EmitNtreg		# line 1793, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6750:
	.stabn  68,0,1793,.LN6750-Emit_EmitNtreg		# line 1793, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6751:
	.stabn  68,0,1794,.LN6751-Emit_EmitNtreg		# line 1794, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4910
.Lab4909:
.LN6752:
	.stabn  68,0,1794,.LN6752-Emit_EmitNtreg		# line 1794, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4908
.Lab4910:
.LN6753:
	.stabn  68,0,1794,.LN6753-Emit_EmitNtreg		# line 1794, column 61
	call	InOut_WriteLn
.Lab4908:
.LN6754:
	.stabn  68,0,1795,.LN6754-Emit_EmitNtreg		# line 1795, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6755:
	.stabn  68,0,1796,.LN6755-Emit_EmitNtreg		# line 1796, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4912
	cmpl	$4096,%eax
	jbe	.Lab4911
.Lab4912:
   	call	BoundErr_		
.Lab4911:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4904:
	jmp	.Lab3784
.Lab3806:
.LN6756:
	.stabn  68,0,1800,.LN6756-Emit_EmitNtreg		# line 1800, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6757:
	.stabn  68,0,1801,.LN6757-Emit_EmitNtreg		# line 1801, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6758:
	.stabn  68,0,1802,.LN6758-Emit_EmitNtreg		# line 1802, column 10
	decl	Emit_s + 1536
.LN6759:
	.stabn  68,0,1803,.LN6759-Emit_EmitNtreg		# line 1803, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4916
	cmpl	$4096,%eax
	jbe	.Lab4915
.Lab4916:
   	call	BoundErr_		
.Lab4915:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4913
.Lab4914:
.LN6760:
	.stabn  68,0,1804,.LN6760-Emit_EmitNtreg		# line 1804, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4918
	cmpl	$4096,%eax
	jbe	.Lab4917
.Lab4918:
   	call	BoundErr_		
.Lab4917:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4913:
.LN6761:
	.stabn  68,0,1806,.LN6761-Emit_EmitNtreg		# line 1806, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4919
.Lab4920:
.LN6762:
	.stabn  68,0,1807,.LN6762-Emit_EmitNtreg		# line 1807, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6763:
	.stabn  68,0,1808,.LN6763-Emit_EmitNtreg		# line 1808, column 11
	.data
.Lab4921:
 	.ascii	"Rule 115/1317 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4921,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6764:
	.stabn  68,0,1809,.LN6764-Emit_EmitNtreg		# line 1809, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6765:
	.stabn  68,0,1810,.LN6765-Emit_EmitNtreg		# line 1810, column 11
	.data
.Lab4922:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab4922,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6766:
	.stabn  68,0,1811,.LN6766-Emit_EmitNtreg		# line 1811, column 11
	call	InOut_WriteLn
.LN6767:
	.stabn  68,0,1812,.LN6767-Emit_EmitNtreg		# line 1812, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6768:
	.stabn  68,0,1813,.LN6768-Emit_EmitNtreg		# line 1813, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6769:
	.stabn  68,0,1813,.LN6769-Emit_EmitNtreg		# line 1813, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6770:
	.stabn  68,0,1814,.LN6770-Emit_EmitNtreg		# line 1814, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4925
.Lab4924:
.LN6771:
	.stabn  68,0,1814,.LN6771-Emit_EmitNtreg		# line 1814, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4923
.Lab4925:
.LN6772:
	.stabn  68,0,1814,.LN6772-Emit_EmitNtreg		# line 1814, column 61
	call	InOut_WriteLn
.Lab4923:
.LN6773:
	.stabn  68,0,1815,.LN6773-Emit_EmitNtreg		# line 1815, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6774:
	.stabn  68,0,1816,.LN6774-Emit_EmitNtreg		# line 1816, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4927
	cmpl	$4096,%eax
	jbe	.Lab4926
.Lab4927:
   	call	BoundErr_		
.Lab4926:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4919:
.LN6775:
	.stabn  68,0,1818,.LN6775-Emit_EmitNtreg		# line 1818, column 2
	.data
.Lab4928:
 	.ascii	"\011mul\000"
	.text
	pushl	$4
	leal	.Lab4928,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6776:
	.stabn  68,0,1818,.LN6776-Emit_EmitNtreg		# line 1818, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6777:
	.stabn  68,0,1818,.LN6777-Emit_EmitNtreg		# line 1818, column 63
	.data
.Lab4929:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4929,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6778:
	.stabn  68,0,1818,.LN6778-Emit_EmitNtreg		# line 1818, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4931
	cmpl	$4096,%eax
	jbe	.Lab4930
.Lab4931:
   	call	BoundErr_		
.Lab4930:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6779:
	.stabn  68,0,1818,.LN6779-Emit_EmitNtreg		# line 1818, column 158
	.data
.Lab4932:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4932,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6780:
	.stabn  68,0,1818,.LN6780-Emit_EmitNtreg		# line 1818, column 176
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3805:
.LN6781:
	.stabn  68,0,1820,.LN6781-Emit_EmitNtreg		# line 1820, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN6782:
	.stabn  68,0,1821,.LN6782-Emit_EmitNtreg		# line 1821, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	pushl	4(%eax)
	call	Emit_EmitNtSimpleVariable
	addl	$12, %esp
.LN6783:
	.stabn  68,0,1822,.LN6783-Emit_EmitNtreg		# line 1822, column 10
	decl	Emit_s + 1536
.LN6784:
	.stabn  68,0,1823,.LN6784-Emit_EmitNtreg		# line 1823, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4936
	cmpl	$4096,%eax
	jbe	.Lab4935
.Lab4936:
   	call	BoundErr_		
.Lab4935:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4933
.Lab4934:
.LN6785:
	.stabn  68,0,1824,.LN6785-Emit_EmitNtreg		# line 1824, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4938
	cmpl	$4096,%eax
	jbe	.Lab4937
.Lab4938:
   	call	BoundErr_		
.Lab4937:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4933:
.LN6786:
	.stabn  68,0,1826,.LN6786-Emit_EmitNtreg		# line 1826, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4939
.Lab4940:
.LN6787:
	.stabn  68,0,1827,.LN6787-Emit_EmitNtreg		# line 1827, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6788:
	.stabn  68,0,1828,.LN6788-Emit_EmitNtreg		# line 1828, column 11
	.data
.Lab4941:
 	.ascii	"Rule 116/1287 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4941,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6789:
	.stabn  68,0,1829,.LN6789-Emit_EmitNtreg		# line 1829, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6790:
	.stabn  68,0,1830,.LN6790-Emit_EmitNtreg		# line 1830, column 11
	.data
.Lab4942:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab4942,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6791:
	.stabn  68,0,1831,.LN6791-Emit_EmitNtreg		# line 1831, column 11
	call	InOut_WriteLn
.LN6792:
	.stabn  68,0,1832,.LN6792-Emit_EmitNtreg		# line 1832, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6793:
	.stabn  68,0,1833,.LN6793-Emit_EmitNtreg		# line 1833, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6794:
	.stabn  68,0,1833,.LN6794-Emit_EmitNtreg		# line 1833, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6795:
	.stabn  68,0,1834,.LN6795-Emit_EmitNtreg		# line 1834, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4945
.Lab4944:
.LN6796:
	.stabn  68,0,1834,.LN6796-Emit_EmitNtreg		# line 1834, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4943
.Lab4945:
.LN6797:
	.stabn  68,0,1834,.LN6797-Emit_EmitNtreg		# line 1834, column 61
	call	InOut_WriteLn
.Lab4943:
.LN6798:
	.stabn  68,0,1835,.LN6798-Emit_EmitNtreg		# line 1835, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6799:
	.stabn  68,0,1836,.LN6799-Emit_EmitNtreg		# line 1836, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4947
	cmpl	$4096,%eax
	jbe	.Lab4946
.Lab4947:
   	call	BoundErr_		
.Lab4946:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4939:
.LN6800:
	.stabn  68,0,1839,.LN6800-Emit_EmitNtreg		# line 1839, column 1
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4949
	cmpl	$4096,%eax
	jbe	.Lab4948
.Lab4949:
   	call	BoundErr_		
.Lab4948:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	44(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%eax
	pushl	%eax
	call	Emit_EmitIndex
	addl	$24, %esp
.LN6801:
	.stabn  68,0,1840,.LN6801-Emit_EmitNtreg		# line 1840, column 2
	.data
.Lab4950:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab4950,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6802:
	.stabn  68,0,1840,.LN6802-Emit_EmitNtreg		# line 1840, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6803:
	.stabn  68,0,1840,.LN6803-Emit_EmitNtreg		# line 1840, column 63
	.data
.Lab4951:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4951,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6804:
	.stabn  68,0,1840,.LN6804-Emit_EmitNtreg		# line 1840, column 86
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	leal	28(%eax),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN6805:
	.stabn  68,0,1840,.LN6805-Emit_EmitNtreg		# line 1840, column 144
	.data
.Lab4952:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4952,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6806:
	.stabn  68,0,1840,.LN6806-Emit_EmitNtreg		# line 1840, column 162
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4954
	cmpl	$4096,%eax
	jbe	.Lab4953
.Lab4954:
   	call	BoundErr_		
.Lab4953:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6807:
	.stabn  68,0,1840,.LN6807-Emit_EmitNtreg		# line 1840, column 232
	call	CgAssOut_AssLn
.LN6808:
	.stabn  68,0,1841,.LN6808-Emit_EmitNtreg		# line 1841, column 2
	.data
.Lab4955:
 	.ascii	"\011imul\000"
	.text
	pushl	$5
	leal	.Lab4955,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6809:
	.stabn  68,0,1841,.LN6809-Emit_EmitNtreg		# line 1841, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6810:
	.stabn  68,0,1841,.LN6810-Emit_EmitNtreg		# line 1841, column 64
	.data
.Lab4956:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab4956,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6811:
	.stabn  68,0,1841,.LN6811-Emit_EmitNtreg		# line 1841, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4958
	cmpl	$4096,%eax
	jbe	.Lab4957
.Lab4958:
   	call	BoundErr_		
.Lab4957:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6812:
	.stabn  68,0,1841,.LN6812-Emit_EmitNtreg		# line 1841, column 156
	.data
.Lab4959:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4959,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6813:
	.stabn  68,0,1841,.LN6813-Emit_EmitNtreg		# line 1841, column 174
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4961
	cmpl	$4096,%eax
	jbe	.Lab4960
.Lab4961:
   	call	BoundErr_		
.Lab4960:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6814:
	.stabn  68,0,1841,.LN6814-Emit_EmitNtreg		# line 1841, column 244
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3804:
.LN6815:
	.stabn  68,0,1844,.LN6815-Emit_EmitNtreg		# line 1844, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6816:
	.stabn  68,0,1845,.LN6816-Emit_EmitNtreg		# line 1845, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN6817:
	.stabn  68,0,1846,.LN6817-Emit_EmitNtreg		# line 1846, column 10
	decl	Emit_s + 1536
.LN6818:
	.stabn  68,0,1847,.LN6818-Emit_EmitNtreg		# line 1847, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4965
	cmpl	$4096,%eax
	jbe	.Lab4964
.Lab4965:
   	call	BoundErr_		
.Lab4964:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4962
.Lab4963:
.LN6819:
	.stabn  68,0,1848,.LN6819-Emit_EmitNtreg		# line 1848, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4967
	cmpl	$4096,%eax
	jbe	.Lab4966
.Lab4967:
   	call	BoundErr_		
.Lab4966:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4962:
.LN6820:
	.stabn  68,0,1850,.LN6820-Emit_EmitNtreg		# line 1850, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4968
.Lab4969:
.LN6821:
	.stabn  68,0,1851,.LN6821-Emit_EmitNtreg		# line 1851, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6822:
	.stabn  68,0,1852,.LN6822-Emit_EmitNtreg		# line 1852, column 11
	.data
.Lab4970:
 	.ascii	"Rule 117/1281 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4970,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6823:
	.stabn  68,0,1853,.LN6823-Emit_EmitNtreg		# line 1853, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6824:
	.stabn  68,0,1854,.LN6824-Emit_EmitNtreg		# line 1854, column 11
	.data
.Lab4971:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab4971,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6825:
	.stabn  68,0,1855,.LN6825-Emit_EmitNtreg		# line 1855, column 11
	call	InOut_WriteLn
.LN6826:
	.stabn  68,0,1856,.LN6826-Emit_EmitNtreg		# line 1856, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6827:
	.stabn  68,0,1857,.LN6827-Emit_EmitNtreg		# line 1857, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6828:
	.stabn  68,0,1857,.LN6828-Emit_EmitNtreg		# line 1857, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6829:
	.stabn  68,0,1858,.LN6829-Emit_EmitNtreg		# line 1858, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4974
.Lab4973:
.LN6830:
	.stabn  68,0,1858,.LN6830-Emit_EmitNtreg		# line 1858, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4972
.Lab4974:
.LN6831:
	.stabn  68,0,1858,.LN6831-Emit_EmitNtreg		# line 1858, column 61
	call	InOut_WriteLn
.Lab4972:
.LN6832:
	.stabn  68,0,1859,.LN6832-Emit_EmitNtreg		# line 1859, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6833:
	.stabn  68,0,1860,.LN6833-Emit_EmitNtreg		# line 1860, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4976
	cmpl	$4096,%eax
	jbe	.Lab4975
.Lab4976:
   	call	BoundErr_		
.Lab4975:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4968:
.LN6834:
	.stabn  68,0,1862,.LN6834-Emit_EmitNtreg		# line 1862, column 2
	.data
.Lab4977:
 	.ascii	"\011imul\000"
	.text
	pushl	$5
	leal	.Lab4977,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6835:
	.stabn  68,0,1862,.LN6835-Emit_EmitNtreg		# line 1862, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6836:
	.stabn  68,0,1862,.LN6836-Emit_EmitNtreg		# line 1862, column 64
	.data
.Lab4978:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab4978,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6837:
	.stabn  68,0,1862,.LN6837-Emit_EmitNtreg		# line 1862, column 87
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6838:
	.stabn  68,0,1862,.LN6838-Emit_EmitNtreg		# line 1862, column 128
	.data
.Lab4979:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4979,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6839:
	.stabn  68,0,1862,.LN6839-Emit_EmitNtreg		# line 1862, column 146
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6840:
	.stabn  68,0,1862,.LN6840-Emit_EmitNtreg		# line 1862, column 178
	.data
.Lab4980:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab4980,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6841:
	.stabn  68,0,1862,.LN6841-Emit_EmitNtreg		# line 1862, column 196
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4982
	cmpl	$4096,%eax
	jbe	.Lab4981
.Lab4982:
   	call	BoundErr_		
.Lab4981:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6842:
	.stabn  68,0,1862,.LN6842-Emit_EmitNtreg		# line 1862, column 266
	.data
.Lab4983:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab4983,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6843:
	.stabn  68,0,1862,.LN6843-Emit_EmitNtreg		# line 1862, column 284
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3803:
.LN6844:
	.stabn  68,0,1864,.LN6844-Emit_EmitNtreg		# line 1864, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMem
	addl	$12, %esp
.LN6845:
	.stabn  68,0,1865,.LN6845-Emit_EmitNtreg		# line 1865, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6846:
	.stabn  68,0,1866,.LN6846-Emit_EmitNtreg		# line 1866, column 10
	decl	Emit_s + 1536
.LN6847:
	.stabn  68,0,1867,.LN6847-Emit_EmitNtreg		# line 1867, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4987
	cmpl	$4096,%eax
	jbe	.Lab4986
.Lab4987:
   	call	BoundErr_		
.Lab4986:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab4984
.Lab4985:
.LN6848:
	.stabn  68,0,1868,.LN6848-Emit_EmitNtreg		# line 1868, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4989
	cmpl	$4096,%eax
	jbe	.Lab4988
.Lab4989:
   	call	BoundErr_		
.Lab4988:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab4984:
.LN6849:
	.stabn  68,0,1870,.LN6849-Emit_EmitNtreg		# line 1870, column 8
	cmpb	$0,IR_s + 133
	je	.Lab4990
.Lab4991:
.LN6850:
	.stabn  68,0,1871,.LN6850-Emit_EmitNtreg		# line 1871, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6851:
	.stabn  68,0,1872,.LN6851-Emit_EmitNtreg		# line 1872, column 11
	.data
.Lab4992:
 	.ascii	"Rule 118/1281 Cost=\000"
	.text
	pushl	$19
	leal	.Lab4992,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6852:
	.stabn  68,0,1873,.LN6852-Emit_EmitNtreg		# line 1873, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6853:
	.stabn  68,0,1874,.LN6853-Emit_EmitNtreg		# line 1874, column 11
	.data
.Lab4993:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab4993,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6854:
	.stabn  68,0,1875,.LN6854-Emit_EmitNtreg		# line 1875, column 11
	call	InOut_WriteLn
.LN6855:
	.stabn  68,0,1876,.LN6855-Emit_EmitNtreg		# line 1876, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6856:
	.stabn  68,0,1877,.LN6856-Emit_EmitNtreg		# line 1877, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6857:
	.stabn  68,0,1877,.LN6857-Emit_EmitNtreg		# line 1877, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6858:
	.stabn  68,0,1878,.LN6858-Emit_EmitNtreg		# line 1878, column 11
	cmpl	$0,8(%ebp)
	je	.Lab4996
.Lab4995:
.LN6859:
	.stabn  68,0,1878,.LN6859-Emit_EmitNtreg		# line 1878, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab4994
.Lab4996:
.LN6860:
	.stabn  68,0,1878,.LN6860-Emit_EmitNtreg		# line 1878, column 61
	call	InOut_WriteLn
.Lab4994:
.LN6861:
	.stabn  68,0,1879,.LN6861-Emit_EmitNtreg		# line 1879, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6862:
	.stabn  68,0,1880,.LN6862-Emit_EmitNtreg		# line 1880, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab4998
	cmpl	$4096,%eax
	jbe	.Lab4997
.Lab4998:
   	call	BoundErr_		
.Lab4997:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab4990:
.LN6863:
	.stabn  68,0,1882,.LN6863-Emit_EmitNtreg		# line 1882, column 2
	.data
.Lab4999:
 	.ascii	"\011imul\000"
	.text
	pushl	$5
	leal	.Lab4999,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6864:
	.stabn  68,0,1882,.LN6864-Emit_EmitNtreg		# line 1882, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6865:
	.stabn  68,0,1882,.LN6865-Emit_EmitNtreg		# line 1882, column 64
	.data
.Lab5000:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab5000,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6866:
	.stabn  68,0,1882,.LN6866-Emit_EmitNtreg		# line 1882, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	pushl	8(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6867:
	.stabn  68,0,1882,.LN6867-Emit_EmitNtreg		# line 1882, column 128
	.data
.Lab5001:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5001,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6868:
	.stabn  68,0,1882,.LN6868-Emit_EmitNtreg		# line 1882, column 146
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6869:
	.stabn  68,0,1882,.LN6869-Emit_EmitNtreg		# line 1882, column 178
	.data
.Lab5002:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5002,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6870:
	.stabn  68,0,1882,.LN6870-Emit_EmitNtreg		# line 1882, column 196
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5004
	cmpl	$4096,%eax
	jbe	.Lab5003
.Lab5004:
   	call	BoundErr_		
.Lab5003:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6871:
	.stabn  68,0,1882,.LN6871-Emit_EmitNtreg		# line 1882, column 266
	.data
.Lab5005:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5005,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6872:
	.stabn  68,0,1882,.LN6872-Emit_EmitNtreg		# line 1882, column 284
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3802:
.LN6873:
	.stabn  68,0,1884,.LN6873-Emit_EmitNtreg		# line 1884, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6874:
	.stabn  68,0,1885,.LN6874-Emit_EmitNtreg		# line 1885, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6875:
	.stabn  68,0,1886,.LN6875-Emit_EmitNtreg		# line 1886, column 10
	decl	Emit_s + 1536
.LN6876:
	.stabn  68,0,1887,.LN6876-Emit_EmitNtreg		# line 1887, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5009
	cmpl	$4096,%eax
	jbe	.Lab5008
.Lab5009:
   	call	BoundErr_		
.Lab5008:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5006
.Lab5007:
.LN6877:
	.stabn  68,0,1888,.LN6877-Emit_EmitNtreg		# line 1888, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5011
	cmpl	$4096,%eax
	jbe	.Lab5010
.Lab5011:
   	call	BoundErr_		
.Lab5010:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5006:
.LN6878:
	.stabn  68,0,1890,.LN6878-Emit_EmitNtreg		# line 1890, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5012
.Lab5013:
.LN6879:
	.stabn  68,0,1891,.LN6879-Emit_EmitNtreg		# line 1891, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6880:
	.stabn  68,0,1892,.LN6880-Emit_EmitNtreg		# line 1892, column 11
	.data
.Lab5014:
 	.ascii	"Rule 119/1274 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5014,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6881:
	.stabn  68,0,1893,.LN6881-Emit_EmitNtreg		# line 1893, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6882:
	.stabn  68,0,1894,.LN6882-Emit_EmitNtreg		# line 1894, column 11
	.data
.Lab5015:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5015,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6883:
	.stabn  68,0,1895,.LN6883-Emit_EmitNtreg		# line 1895, column 11
	call	InOut_WriteLn
.LN6884:
	.stabn  68,0,1896,.LN6884-Emit_EmitNtreg		# line 1896, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6885:
	.stabn  68,0,1897,.LN6885-Emit_EmitNtreg		# line 1897, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6886:
	.stabn  68,0,1897,.LN6886-Emit_EmitNtreg		# line 1897, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6887:
	.stabn  68,0,1898,.LN6887-Emit_EmitNtreg		# line 1898, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5018
.Lab5017:
.LN6888:
	.stabn  68,0,1898,.LN6888-Emit_EmitNtreg		# line 1898, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5016
.Lab5018:
.LN6889:
	.stabn  68,0,1898,.LN6889-Emit_EmitNtreg		# line 1898, column 61
	call	InOut_WriteLn
.Lab5016:
.LN6890:
	.stabn  68,0,1899,.LN6890-Emit_EmitNtreg		# line 1899, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6891:
	.stabn  68,0,1900,.LN6891-Emit_EmitNtreg		# line 1900, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5020
	cmpl	$4096,%eax
	jbe	.Lab5019
.Lab5020:
   	call	BoundErr_		
.Lab5019:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5012:
.LN6892:
	.stabn  68,0,1902,.LN6892-Emit_EmitNtreg		# line 1902, column 2
	.data
.Lab5021:
 	.ascii	"\011imul\000"
	.text
	pushl	$5
	leal	.Lab5021,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6893:
	.stabn  68,0,1902,.LN6893-Emit_EmitNtreg		# line 1902, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6894:
	.stabn  68,0,1902,.LN6894-Emit_EmitNtreg		# line 1902, column 64
	.data
.Lab5022:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5022,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6895:
	.stabn  68,0,1902,.LN6895-Emit_EmitNtreg		# line 1902, column 86
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6896:
	.stabn  68,0,1902,.LN6896-Emit_EmitNtreg		# line 1902, column 122
	.data
.Lab5023:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5023,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6897:
	.stabn  68,0,1902,.LN6897-Emit_EmitNtreg		# line 1902, column 140
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5025
	cmpl	$4096,%eax
	jbe	.Lab5024
.Lab5025:
   	call	BoundErr_		
.Lab5024:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6898:
	.stabn  68,0,1902,.LN6898-Emit_EmitNtreg		# line 1902, column 212
	.data
.Lab5026:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5026,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6899:
	.stabn  68,0,1902,.LN6899-Emit_EmitNtreg		# line 1902, column 230
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3801:
.LN6900:
	.stabn  68,0,1904,.LN6900-Emit_EmitNtreg		# line 1904, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN6901:
	.stabn  68,0,1905,.LN6901-Emit_EmitNtreg		# line 1905, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6902:
	.stabn  68,0,1906,.LN6902-Emit_EmitNtreg		# line 1906, column 10
	decl	Emit_s + 1536
.LN6903:
	.stabn  68,0,1907,.LN6903-Emit_EmitNtreg		# line 1907, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5030
	cmpl	$4096,%eax
	jbe	.Lab5029
.Lab5030:
   	call	BoundErr_		
.Lab5029:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5027
.Lab5028:
.LN6904:
	.stabn  68,0,1908,.LN6904-Emit_EmitNtreg		# line 1908, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5032
	cmpl	$4096,%eax
	jbe	.Lab5031
.Lab5032:
   	call	BoundErr_		
.Lab5031:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5027:
.LN6905:
	.stabn  68,0,1910,.LN6905-Emit_EmitNtreg		# line 1910, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5033
.Lab5034:
.LN6906:
	.stabn  68,0,1911,.LN6906-Emit_EmitNtreg		# line 1911, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6907:
	.stabn  68,0,1912,.LN6907-Emit_EmitNtreg		# line 1912, column 11
	.data
.Lab5035:
 	.ascii	"Rule 120/1274 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5035,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6908:
	.stabn  68,0,1913,.LN6908-Emit_EmitNtreg		# line 1913, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6909:
	.stabn  68,0,1914,.LN6909-Emit_EmitNtreg		# line 1914, column 11
	.data
.Lab5036:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5036,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6910:
	.stabn  68,0,1915,.LN6910-Emit_EmitNtreg		# line 1915, column 11
	call	InOut_WriteLn
.LN6911:
	.stabn  68,0,1916,.LN6911-Emit_EmitNtreg		# line 1916, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6912:
	.stabn  68,0,1917,.LN6912-Emit_EmitNtreg		# line 1917, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6913:
	.stabn  68,0,1917,.LN6913-Emit_EmitNtreg		# line 1917, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6914:
	.stabn  68,0,1918,.LN6914-Emit_EmitNtreg		# line 1918, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5039
.Lab5038:
.LN6915:
	.stabn  68,0,1918,.LN6915-Emit_EmitNtreg		# line 1918, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5037
.Lab5039:
.LN6916:
	.stabn  68,0,1918,.LN6916-Emit_EmitNtreg		# line 1918, column 61
	call	InOut_WriteLn
.Lab5037:
.LN6917:
	.stabn  68,0,1919,.LN6917-Emit_EmitNtreg		# line 1919, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6918:
	.stabn  68,0,1920,.LN6918-Emit_EmitNtreg		# line 1920, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5041
	cmpl	$4096,%eax
	jbe	.Lab5040
.Lab5041:
   	call	BoundErr_		
.Lab5040:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5033:
.LN6919:
	.stabn  68,0,1922,.LN6919-Emit_EmitNtreg		# line 1922, column 2
	.data
.Lab5042:
 	.ascii	"\011imul\000"
	.text
	pushl	$5
	leal	.Lab5042,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6920:
	.stabn  68,0,1922,.LN6920-Emit_EmitNtreg		# line 1922, column 26
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6921:
	.stabn  68,0,1922,.LN6921-Emit_EmitNtreg		# line 1922, column 64
	.data
.Lab5043:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5043,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6922:
	.stabn  68,0,1922,.LN6922-Emit_EmitNtreg		# line 1922, column 86
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN6923:
	.stabn  68,0,1922,.LN6923-Emit_EmitNtreg		# line 1922, column 122
	.data
.Lab5044:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5044,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6924:
	.stabn  68,0,1922,.LN6924-Emit_EmitNtreg		# line 1922, column 140
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5046
	cmpl	$4096,%eax
	jbe	.Lab5045
.Lab5046:
   	call	BoundErr_		
.Lab5045:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6925:
	.stabn  68,0,1922,.LN6925-Emit_EmitNtreg		# line 1922, column 212
	.data
.Lab5047:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5047,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6926:
	.stabn  68,0,1922,.LN6926-Emit_EmitNtreg		# line 1922, column 230
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3800:
.LN6927:
	.stabn  68,0,1924,.LN6927-Emit_EmitNtreg		# line 1924, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6928:
	.stabn  68,0,1925,.LN6928-Emit_EmitNtreg		# line 1925, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6929:
	.stabn  68,0,1926,.LN6929-Emit_EmitNtreg		# line 1926, column 10
	decl	Emit_s + 1536
.LN6930:
	.stabn  68,0,1927,.LN6930-Emit_EmitNtreg		# line 1927, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5051
	cmpl	$4096,%eax
	jbe	.Lab5050
.Lab5051:
   	call	BoundErr_		
.Lab5050:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5048
.Lab5049:
.LN6931:
	.stabn  68,0,1928,.LN6931-Emit_EmitNtreg		# line 1928, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5053
	cmpl	$4096,%eax
	jbe	.Lab5052
.Lab5053:
   	call	BoundErr_		
.Lab5052:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5048:
.LN6932:
	.stabn  68,0,1930,.LN6932-Emit_EmitNtreg		# line 1930, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5054
.Lab5055:
.LN6933:
	.stabn  68,0,1931,.LN6933-Emit_EmitNtreg		# line 1931, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6934:
	.stabn  68,0,1932,.LN6934-Emit_EmitNtreg		# line 1932, column 11
	.data
.Lab5056:
 	.ascii	"Rule 121/1206 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5056,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6935:
	.stabn  68,0,1933,.LN6935-Emit_EmitNtreg		# line 1933, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6936:
	.stabn  68,0,1934,.LN6936-Emit_EmitNtreg		# line 1934, column 11
	.data
.Lab5057:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5057,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6937:
	.stabn  68,0,1935,.LN6937-Emit_EmitNtreg		# line 1935, column 11
	call	InOut_WriteLn
.LN6938:
	.stabn  68,0,1936,.LN6938-Emit_EmitNtreg		# line 1936, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6939:
	.stabn  68,0,1937,.LN6939-Emit_EmitNtreg		# line 1937, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6940:
	.stabn  68,0,1937,.LN6940-Emit_EmitNtreg		# line 1937, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6941:
	.stabn  68,0,1938,.LN6941-Emit_EmitNtreg		# line 1938, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5060
.Lab5059:
.LN6942:
	.stabn  68,0,1938,.LN6942-Emit_EmitNtreg		# line 1938, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5058
.Lab5060:
.LN6943:
	.stabn  68,0,1938,.LN6943-Emit_EmitNtreg		# line 1938, column 61
	call	InOut_WriteLn
.Lab5058:
.LN6944:
	.stabn  68,0,1939,.LN6944-Emit_EmitNtreg		# line 1939, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6945:
	.stabn  68,0,1940,.LN6945-Emit_EmitNtreg		# line 1940, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5062
	cmpl	$4096,%eax
	jbe	.Lab5061
.Lab5062:
   	call	BoundErr_		
.Lab5061:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5054:
.LN6946:
	.stabn  68,0,1942,.LN6946-Emit_EmitNtreg		# line 1942, column 2
	.data
.Lab5063:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab5063,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6947:
	.stabn  68,0,1942,.LN6947-Emit_EmitNtreg		# line 1942, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6948:
	.stabn  68,0,1942,.LN6948-Emit_EmitNtreg		# line 1942, column 63
	.data
.Lab5064:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab5064,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6949:
	.stabn  68,0,1942,.LN6949-Emit_EmitNtreg		# line 1942, column 87
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab5065:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab5065
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab5066
.Lab5067:
   	call	BoundErr_		
.Lab5066:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6950:
	.stabn  68,0,1942,.LN6950-Emit_EmitNtreg		# line 1942, column 134
	.data
.Lab5068:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5068,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6951:
	.stabn  68,0,1942,.LN6951-Emit_EmitNtreg		# line 1942, column 153
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5070
	cmpl	$4096,%eax
	jbe	.Lab5069
.Lab5070:
   	call	BoundErr_		
.Lab5069:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6952:
	.stabn  68,0,1942,.LN6952-Emit_EmitNtreg		# line 1942, column 225
	.data
.Lab5071:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5071,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6953:
	.stabn  68,0,1942,.LN6953-Emit_EmitNtreg		# line 1942, column 243
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3799:
.LN6954:
	.stabn  68,0,1944,.LN6954-Emit_EmitNtreg		# line 1944, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6955:
	.stabn  68,0,1945,.LN6955-Emit_EmitNtreg		# line 1945, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6956:
	.stabn  68,0,1946,.LN6956-Emit_EmitNtreg		# line 1946, column 10
	decl	Emit_s + 1536
.LN6957:
	.stabn  68,0,1947,.LN6957-Emit_EmitNtreg		# line 1947, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5075
	cmpl	$4096,%eax
	jbe	.Lab5074
.Lab5075:
   	call	BoundErr_		
.Lab5074:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5072
.Lab5073:
.LN6958:
	.stabn  68,0,1948,.LN6958-Emit_EmitNtreg		# line 1948, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5077
	cmpl	$4096,%eax
	jbe	.Lab5076
.Lab5077:
   	call	BoundErr_		
.Lab5076:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5072:
.LN6959:
	.stabn  68,0,1950,.LN6959-Emit_EmitNtreg		# line 1950, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5078
.Lab5079:
.LN6960:
	.stabn  68,0,1951,.LN6960-Emit_EmitNtreg		# line 1951, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6961:
	.stabn  68,0,1952,.LN6961-Emit_EmitNtreg		# line 1952, column 11
	.data
.Lab5080:
 	.ascii	"Rule 122/1206 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5080,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6962:
	.stabn  68,0,1953,.LN6962-Emit_EmitNtreg		# line 1953, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6963:
	.stabn  68,0,1954,.LN6963-Emit_EmitNtreg		# line 1954, column 11
	.data
.Lab5081:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5081,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6964:
	.stabn  68,0,1955,.LN6964-Emit_EmitNtreg		# line 1955, column 11
	call	InOut_WriteLn
.LN6965:
	.stabn  68,0,1956,.LN6965-Emit_EmitNtreg		# line 1956, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6966:
	.stabn  68,0,1957,.LN6966-Emit_EmitNtreg		# line 1957, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6967:
	.stabn  68,0,1957,.LN6967-Emit_EmitNtreg		# line 1957, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6968:
	.stabn  68,0,1958,.LN6968-Emit_EmitNtreg		# line 1958, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5084
.Lab5083:
.LN6969:
	.stabn  68,0,1958,.LN6969-Emit_EmitNtreg		# line 1958, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5082
.Lab5084:
.LN6970:
	.stabn  68,0,1958,.LN6970-Emit_EmitNtreg		# line 1958, column 61
	call	InOut_WriteLn
.Lab5082:
.LN6971:
	.stabn  68,0,1959,.LN6971-Emit_EmitNtreg		# line 1959, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6972:
	.stabn  68,0,1960,.LN6972-Emit_EmitNtreg		# line 1960, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5086
	cmpl	$4096,%eax
	jbe	.Lab5085
.Lab5086:
   	call	BoundErr_		
.Lab5085:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5078:
.LN6973:
	.stabn  68,0,1962,.LN6973-Emit_EmitNtreg		# line 1962, column 2
	.data
.Lab5087:
 	.ascii	"\011shl\000"
	.text
	pushl	$4
	leal	.Lab5087,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6974:
	.stabn  68,0,1962,.LN6974-Emit_EmitNtreg		# line 1962, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN6975:
	.stabn  68,0,1962,.LN6975-Emit_EmitNtreg		# line 1962, column 63
	.data
.Lab5088:
 	.ascii	"\011$\000"
	.text
	pushl	$2
	leal	.Lab5088,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6976:
	.stabn  68,0,1962,.LN6976-Emit_EmitNtreg		# line 1962, column 87
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movl	8(%eax),%eax
	.data
	.align 4
.Lab5089:
	.long	0,2147483647
	.text
	boundl	%eax,.Lab5089
	pushl	%eax
	call	CgUtilities_Log2
	addl	$4, %esp
	cmpl	$2147483647,%eax
	jbe	.Lab5090
.Lab5091:
   	call	BoundErr_		
.Lab5090:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN6977:
	.stabn  68,0,1962,.LN6977-Emit_EmitNtreg		# line 1962, column 134
	.data
.Lab5092:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5092,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6978:
	.stabn  68,0,1962,.LN6978-Emit_EmitNtreg		# line 1962, column 153
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5094
	cmpl	$4096,%eax
	jbe	.Lab5093
.Lab5094:
   	call	BoundErr_		
.Lab5093:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN6979:
	.stabn  68,0,1962,.LN6979-Emit_EmitNtreg		# line 1962, column 225
	.data
.Lab5095:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5095,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN6980:
	.stabn  68,0,1962,.LN6980-Emit_EmitNtreg		# line 1962, column 243
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3798:
.LN6981:
	.stabn  68,0,1964,.LN6981-Emit_EmitNtreg		# line 1964, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN6982:
	.stabn  68,0,1965,.LN6982-Emit_EmitNtreg		# line 1965, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN6983:
	.stabn  68,0,1966,.LN6983-Emit_EmitNtreg		# line 1966, column 10
	decl	Emit_s + 1536
.LN6984:
	.stabn  68,0,1967,.LN6984-Emit_EmitNtreg		# line 1967, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5099
	cmpl	$4096,%eax
	jbe	.Lab5098
.Lab5099:
   	call	BoundErr_		
.Lab5098:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5096
.Lab5097:
.LN6985:
	.stabn  68,0,1968,.LN6985-Emit_EmitNtreg		# line 1968, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5101
	cmpl	$4096,%eax
	jbe	.Lab5100
.Lab5101:
   	call	BoundErr_		
.Lab5100:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5096:
.LN6986:
	.stabn  68,0,1970,.LN6986-Emit_EmitNtreg		# line 1970, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5102
.Lab5103:
.LN6987:
	.stabn  68,0,1971,.LN6987-Emit_EmitNtreg		# line 1971, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6988:
	.stabn  68,0,1972,.LN6988-Emit_EmitNtreg		# line 1972, column 11
	.data
.Lab5104:
 	.ascii	"Rule 123/1160 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5104,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6989:
	.stabn  68,0,1973,.LN6989-Emit_EmitNtreg		# line 1973, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN6990:
	.stabn  68,0,1974,.LN6990-Emit_EmitNtreg		# line 1974, column 11
	.data
.Lab5105:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5105,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN6991:
	.stabn  68,0,1975,.LN6991-Emit_EmitNtreg		# line 1975, column 11
	call	InOut_WriteLn
.LN6992:
	.stabn  68,0,1976,.LN6992-Emit_EmitNtreg		# line 1976, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6993:
	.stabn  68,0,1977,.LN6993-Emit_EmitNtreg		# line 1977, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN6994:
	.stabn  68,0,1977,.LN6994-Emit_EmitNtreg		# line 1977, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN6995:
	.stabn  68,0,1978,.LN6995-Emit_EmitNtreg		# line 1978, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5108
.Lab5107:
.LN6996:
	.stabn  68,0,1978,.LN6996-Emit_EmitNtreg		# line 1978, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5106
.Lab5108:
.LN6997:
	.stabn  68,0,1978,.LN6997-Emit_EmitNtreg		# line 1978, column 61
	call	InOut_WriteLn
.Lab5106:
.LN6998:
	.stabn  68,0,1979,.LN6998-Emit_EmitNtreg		# line 1979, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN6999:
	.stabn  68,0,1980,.LN6999-Emit_EmitNtreg		# line 1980, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5110
	cmpl	$4096,%eax
	jbe	.Lab5109
.Lab5110:
   	call	BoundErr_		
.Lab5109:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5102:
.LN7000:
	.stabn  68,0,1983,.LN7000-Emit_EmitNtreg		# line 1983, column 2
	.data
.Lab5111:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab5111,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7001:
	.stabn  68,0,1983,.LN7001-Emit_EmitNtreg		# line 1983, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7002:
	.stabn  68,0,1983,.LN7002-Emit_EmitNtreg		# line 1983, column 63
	.data
.Lab5112:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5112,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7003:
	.stabn  68,0,1983,.LN7003-Emit_EmitNtreg		# line 1983, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5114
	cmpl	$4096,%eax
	jbe	.Lab5113
.Lab5114:
   	call	BoundErr_		
.Lab5113:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7004:
	.stabn  68,0,1983,.LN7004-Emit_EmitNtreg		# line 1983, column 158
	.data
.Lab5115:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5115,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7005:
	.stabn  68,0,1983,.LN7005-Emit_EmitNtreg		# line 1983, column 177
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5117
	cmpl	$4096,%eax
	jbe	.Lab5116
.Lab5117:
   	call	BoundErr_		
.Lab5116:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7006:
	.stabn  68,0,1983,.LN7006-Emit_EmitNtreg		# line 1983, column 249
	call	CgAssOut_AssLn
.LN7007:
	.stabn  68,0,1984,.LN7007-Emit_EmitNtreg		# line 1984, column 2
	.data
.Lab5118:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab5118,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7008:
	.stabn  68,0,1984,.LN7008-Emit_EmitNtreg		# line 1984, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7009:
	.stabn  68,0,1984,.LN7009-Emit_EmitNtreg		# line 1984, column 63
	.data
.Lab5119:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5119,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7010:
	.stabn  68,0,1984,.LN7010-Emit_EmitNtreg		# line 1984, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5121
	cmpl	$4096,%eax
	jbe	.Lab5120
.Lab5121:
   	call	BoundErr_		
.Lab5120:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7011:
	.stabn  68,0,1984,.LN7011-Emit_EmitNtreg		# line 1984, column 158
	.data
.Lab5122:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5122,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7012:
	.stabn  68,0,1984,.LN7012-Emit_EmitNtreg		# line 1984, column 177
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5124
	cmpl	$4096,%eax
	jbe	.Lab5123
.Lab5124:
   	call	BoundErr_		
.Lab5123:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7013:
	.stabn  68,0,1984,.LN7013-Emit_EmitNtreg		# line 1984, column 249
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3797:
.LN7014:
	.stabn  68,0,1987,.LN7014-Emit_EmitNtreg		# line 1987, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN7015:
	.stabn  68,0,1988,.LN7015-Emit_EmitNtreg		# line 1988, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7016:
	.stabn  68,0,1989,.LN7016-Emit_EmitNtreg		# line 1989, column 10
	decl	Emit_s + 1536
.LN7017:
	.stabn  68,0,1990,.LN7017-Emit_EmitNtreg		# line 1990, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5128
	cmpl	$4096,%eax
	jbe	.Lab5127
.Lab5128:
   	call	BoundErr_		
.Lab5127:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5125
.Lab5126:
.LN7018:
	.stabn  68,0,1991,.LN7018-Emit_EmitNtreg		# line 1991, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5130
	cmpl	$4096,%eax
	jbe	.Lab5129
.Lab5130:
   	call	BoundErr_		
.Lab5129:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5125:
.LN7019:
	.stabn  68,0,1993,.LN7019-Emit_EmitNtreg		# line 1993, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5131
.Lab5132:
.LN7020:
	.stabn  68,0,1994,.LN7020-Emit_EmitNtreg		# line 1994, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7021:
	.stabn  68,0,1995,.LN7021-Emit_EmitNtreg		# line 1995, column 11
	.data
.Lab5133:
 	.ascii	"Rule 124/1160 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5133,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7022:
	.stabn  68,0,1996,.LN7022-Emit_EmitNtreg		# line 1996, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7023:
	.stabn  68,0,1997,.LN7023-Emit_EmitNtreg		# line 1997, column 11
	.data
.Lab5134:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5134,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7024:
	.stabn  68,0,1998,.LN7024-Emit_EmitNtreg		# line 1998, column 11
	call	InOut_WriteLn
.LN7025:
	.stabn  68,0,1999,.LN7025-Emit_EmitNtreg		# line 1999, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7026:
	.stabn  68,0,2000,.LN7026-Emit_EmitNtreg		# line 2000, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7027:
	.stabn  68,0,2000,.LN7027-Emit_EmitNtreg		# line 2000, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7028:
	.stabn  68,0,2001,.LN7028-Emit_EmitNtreg		# line 2001, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5137
.Lab5136:
.LN7029:
	.stabn  68,0,2001,.LN7029-Emit_EmitNtreg		# line 2001, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5135
.Lab5137:
.LN7030:
	.stabn  68,0,2001,.LN7030-Emit_EmitNtreg		# line 2001, column 61
	call	InOut_WriteLn
.Lab5135:
.LN7031:
	.stabn  68,0,2002,.LN7031-Emit_EmitNtreg		# line 2002, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7032:
	.stabn  68,0,2003,.LN7032-Emit_EmitNtreg		# line 2003, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5139
	cmpl	$4096,%eax
	jbe	.Lab5138
.Lab5139:
   	call	BoundErr_		
.Lab5138:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5131:
.LN7033:
	.stabn  68,0,2006,.LN7033-Emit_EmitNtreg		# line 2006, column 2
	.data
.Lab5140:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab5140,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7034:
	.stabn  68,0,2006,.LN7034-Emit_EmitNtreg		# line 2006, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7035:
	.stabn  68,0,2006,.LN7035-Emit_EmitNtreg		# line 2006, column 63
	.data
.Lab5141:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5141,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7036:
	.stabn  68,0,2006,.LN7036-Emit_EmitNtreg		# line 2006, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5143
	cmpl	$4096,%eax
	jbe	.Lab5142
.Lab5143:
   	call	BoundErr_		
.Lab5142:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7037:
	.stabn  68,0,2006,.LN7037-Emit_EmitNtreg		# line 2006, column 158
	.data
.Lab5144:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5144,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7038:
	.stabn  68,0,2006,.LN7038-Emit_EmitNtreg		# line 2006, column 177
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5146
	cmpl	$4096,%eax
	jbe	.Lab5145
.Lab5146:
   	call	BoundErr_		
.Lab5145:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7039:
	.stabn  68,0,2006,.LN7039-Emit_EmitNtreg		# line 2006, column 249
	call	CgAssOut_AssLn
.LN7040:
	.stabn  68,0,2007,.LN7040-Emit_EmitNtreg		# line 2007, column 2
	.data
.Lab5147:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab5147,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7041:
	.stabn  68,0,2007,.LN7041-Emit_EmitNtreg		# line 2007, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7042:
	.stabn  68,0,2007,.LN7042-Emit_EmitNtreg		# line 2007, column 63
	.data
.Lab5148:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5148,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7043:
	.stabn  68,0,2007,.LN7043-Emit_EmitNtreg		# line 2007, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5150
	cmpl	$4096,%eax
	jbe	.Lab5149
.Lab5150:
   	call	BoundErr_		
.Lab5149:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7044:
	.stabn  68,0,2007,.LN7044-Emit_EmitNtreg		# line 2007, column 158
	.data
.Lab5151:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5151,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7045:
	.stabn  68,0,2007,.LN7045-Emit_EmitNtreg		# line 2007, column 177
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5153
	cmpl	$4096,%eax
	jbe	.Lab5152
.Lab5153:
   	call	BoundErr_		
.Lab5152:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7046:
	.stabn  68,0,2007,.LN7046-Emit_EmitNtreg		# line 2007, column 249
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3796:
.LN7047:
	.stabn  68,0,2010,.LN7047-Emit_EmitNtreg		# line 2010, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7048:
	.stabn  68,0,2011,.LN7048-Emit_EmitNtreg		# line 2011, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN7049:
	.stabn  68,0,2012,.LN7049-Emit_EmitNtreg		# line 2012, column 10
	decl	Emit_s + 1536
.LN7050:
	.stabn  68,0,2013,.LN7050-Emit_EmitNtreg		# line 2013, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5157
	cmpl	$4096,%eax
	jbe	.Lab5156
.Lab5157:
   	call	BoundErr_		
.Lab5156:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5154
.Lab5155:
.LN7051:
	.stabn  68,0,2014,.LN7051-Emit_EmitNtreg		# line 2014, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5159
	cmpl	$4096,%eax
	jbe	.Lab5158
.Lab5159:
   	call	BoundErr_		
.Lab5158:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5154:
.LN7052:
	.stabn  68,0,2016,.LN7052-Emit_EmitNtreg		# line 2016, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5160
.Lab5161:
.LN7053:
	.stabn  68,0,2017,.LN7053-Emit_EmitNtreg		# line 2017, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7054:
	.stabn  68,0,2018,.LN7054-Emit_EmitNtreg		# line 2018, column 11
	.data
.Lab5162:
 	.ascii	"Rule 125/1153 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5162,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7055:
	.stabn  68,0,2019,.LN7055-Emit_EmitNtreg		# line 2019, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7056:
	.stabn  68,0,2020,.LN7056-Emit_EmitNtreg		# line 2020, column 11
	.data
.Lab5163:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5163,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7057:
	.stabn  68,0,2021,.LN7057-Emit_EmitNtreg		# line 2021, column 11
	call	InOut_WriteLn
.LN7058:
	.stabn  68,0,2022,.LN7058-Emit_EmitNtreg		# line 2022, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7059:
	.stabn  68,0,2023,.LN7059-Emit_EmitNtreg		# line 2023, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7060:
	.stabn  68,0,2023,.LN7060-Emit_EmitNtreg		# line 2023, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7061:
	.stabn  68,0,2024,.LN7061-Emit_EmitNtreg		# line 2024, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5166
.Lab5165:
.LN7062:
	.stabn  68,0,2024,.LN7062-Emit_EmitNtreg		# line 2024, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5164
.Lab5166:
.LN7063:
	.stabn  68,0,2024,.LN7063-Emit_EmitNtreg		# line 2024, column 61
	call	InOut_WriteLn
.Lab5164:
.LN7064:
	.stabn  68,0,2025,.LN7064-Emit_EmitNtreg		# line 2025, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7065:
	.stabn  68,0,2026,.LN7065-Emit_EmitNtreg		# line 2026, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5168
	cmpl	$4096,%eax
	jbe	.Lab5167
.Lab5168:
   	call	BoundErr_		
.Lab5167:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5160:
.LN7066:
	.stabn  68,0,2028,.LN7066-Emit_EmitNtreg		# line 2028, column 2
	.data
.Lab5169:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab5169,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7067:
	.stabn  68,0,2028,.LN7067-Emit_EmitNtreg		# line 2028, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7068:
	.stabn  68,0,2028,.LN7068-Emit_EmitNtreg		# line 2028, column 63
	.data
.Lab5170:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5170,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7069:
	.stabn  68,0,2028,.LN7069-Emit_EmitNtreg		# line 2028, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5172
	cmpl	$4096,%eax
	jbe	.Lab5171
.Lab5172:
   	call	BoundErr_		
.Lab5171:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7070:
	.stabn  68,0,2028,.LN7070-Emit_EmitNtreg		# line 2028, column 158
	.data
.Lab5173:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5173,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7071:
	.stabn  68,0,2028,.LN7071-Emit_EmitNtreg		# line 2028, column 177
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5175
	cmpl	$4096,%eax
	jbe	.Lab5174
.Lab5175:
   	call	BoundErr_		
.Lab5174:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7072:
	.stabn  68,0,2028,.LN7072-Emit_EmitNtreg		# line 2028, column 249
	.data
.Lab5176:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5176,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7073:
	.stabn  68,0,2028,.LN7073-Emit_EmitNtreg		# line 2028, column 267
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3795:
.LN7074:
	.stabn  68,0,2030,.LN7074-Emit_EmitNtreg		# line 2030, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN7075:
	.stabn  68,0,2031,.LN7075-Emit_EmitNtreg		# line 2031, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7076:
	.stabn  68,0,2032,.LN7076-Emit_EmitNtreg		# line 2032, column 10
	decl	Emit_s + 1536
.LN7077:
	.stabn  68,0,2033,.LN7077-Emit_EmitNtreg		# line 2033, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5180
	cmpl	$4096,%eax
	jbe	.Lab5179
.Lab5180:
   	call	BoundErr_		
.Lab5179:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5177
.Lab5178:
.LN7078:
	.stabn  68,0,2034,.LN7078-Emit_EmitNtreg		# line 2034, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5182
	cmpl	$4096,%eax
	jbe	.Lab5181
.Lab5182:
   	call	BoundErr_		
.Lab5181:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5177:
.LN7079:
	.stabn  68,0,2036,.LN7079-Emit_EmitNtreg		# line 2036, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5183
.Lab5184:
.LN7080:
	.stabn  68,0,2037,.LN7080-Emit_EmitNtreg		# line 2037, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7081:
	.stabn  68,0,2038,.LN7081-Emit_EmitNtreg		# line 2038, column 11
	.data
.Lab5185:
 	.ascii	"Rule 126/1153 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5185,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7082:
	.stabn  68,0,2039,.LN7082-Emit_EmitNtreg		# line 2039, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7083:
	.stabn  68,0,2040,.LN7083-Emit_EmitNtreg		# line 2040, column 11
	.data
.Lab5186:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5186,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7084:
	.stabn  68,0,2041,.LN7084-Emit_EmitNtreg		# line 2041, column 11
	call	InOut_WriteLn
.LN7085:
	.stabn  68,0,2042,.LN7085-Emit_EmitNtreg		# line 2042, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7086:
	.stabn  68,0,2043,.LN7086-Emit_EmitNtreg		# line 2043, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7087:
	.stabn  68,0,2043,.LN7087-Emit_EmitNtreg		# line 2043, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7088:
	.stabn  68,0,2044,.LN7088-Emit_EmitNtreg		# line 2044, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5189
.Lab5188:
.LN7089:
	.stabn  68,0,2044,.LN7089-Emit_EmitNtreg		# line 2044, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5187
.Lab5189:
.LN7090:
	.stabn  68,0,2044,.LN7090-Emit_EmitNtreg		# line 2044, column 61
	call	InOut_WriteLn
.Lab5187:
.LN7091:
	.stabn  68,0,2045,.LN7091-Emit_EmitNtreg		# line 2045, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7092:
	.stabn  68,0,2046,.LN7092-Emit_EmitNtreg		# line 2046, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5191
	cmpl	$4096,%eax
	jbe	.Lab5190
.Lab5191:
   	call	BoundErr_		
.Lab5190:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5183:
.LN7093:
	.stabn  68,0,2048,.LN7093-Emit_EmitNtreg		# line 2048, column 2
	.data
.Lab5192:
 	.ascii	"\011add\000"
	.text
	pushl	$4
	leal	.Lab5192,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7094:
	.stabn  68,0,2048,.LN7094-Emit_EmitNtreg		# line 2048, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7095:
	.stabn  68,0,2048,.LN7095-Emit_EmitNtreg		# line 2048, column 63
	.data
.Lab5193:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5193,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7096:
	.stabn  68,0,2048,.LN7096-Emit_EmitNtreg		# line 2048, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5195
	cmpl	$4096,%eax
	jbe	.Lab5194
.Lab5195:
   	call	BoundErr_		
.Lab5194:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7097:
	.stabn  68,0,2048,.LN7097-Emit_EmitNtreg		# line 2048, column 158
	.data
.Lab5196:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5196,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7098:
	.stabn  68,0,2048,.LN7098-Emit_EmitNtreg		# line 2048, column 177
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5198
	cmpl	$4096,%eax
	jbe	.Lab5197
.Lab5198:
   	call	BoundErr_		
.Lab5197:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7099:
	.stabn  68,0,2048,.LN7099-Emit_EmitNtreg		# line 2048, column 249
	.data
.Lab5199:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5199,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7100:
	.stabn  68,0,2048,.LN7100-Emit_EmitNtreg		# line 2048, column 267
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3794:
.LN7101:
	.stabn  68,0,2050,.LN7101-Emit_EmitNtreg		# line 2050, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7102:
	.stabn  68,0,2051,.LN7102-Emit_EmitNtreg		# line 2051, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN7103:
	.stabn  68,0,2052,.LN7103-Emit_EmitNtreg		# line 2052, column 10
	decl	Emit_s + 1536
.LN7104:
	.stabn  68,0,2053,.LN7104-Emit_EmitNtreg		# line 2053, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5203
	cmpl	$4096,%eax
	jbe	.Lab5202
.Lab5203:
   	call	BoundErr_		
.Lab5202:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5200
.Lab5201:
.LN7105:
	.stabn  68,0,2054,.LN7105-Emit_EmitNtreg		# line 2054, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5205
	cmpl	$4096,%eax
	jbe	.Lab5204
.Lab5205:
   	call	BoundErr_		
.Lab5204:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5200:
.LN7106:
	.stabn  68,0,2056,.LN7106-Emit_EmitNtreg		# line 2056, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5206
.Lab5207:
.LN7107:
	.stabn  68,0,2057,.LN7107-Emit_EmitNtreg		# line 2057, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7108:
	.stabn  68,0,2058,.LN7108-Emit_EmitNtreg		# line 2058, column 11
	.data
.Lab5208:
 	.ascii	"Rule 127/1140 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5208,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7109:
	.stabn  68,0,2059,.LN7109-Emit_EmitNtreg		# line 2059, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7110:
	.stabn  68,0,2060,.LN7110-Emit_EmitNtreg		# line 2060, column 11
	.data
.Lab5209:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5209,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7111:
	.stabn  68,0,2061,.LN7111-Emit_EmitNtreg		# line 2061, column 11
	call	InOut_WriteLn
.LN7112:
	.stabn  68,0,2062,.LN7112-Emit_EmitNtreg		# line 2062, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7113:
	.stabn  68,0,2063,.LN7113-Emit_EmitNtreg		# line 2063, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7114:
	.stabn  68,0,2063,.LN7114-Emit_EmitNtreg		# line 2063, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7115:
	.stabn  68,0,2064,.LN7115-Emit_EmitNtreg		# line 2064, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5212
.Lab5211:
.LN7116:
	.stabn  68,0,2064,.LN7116-Emit_EmitNtreg		# line 2064, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5210
.Lab5212:
.LN7117:
	.stabn  68,0,2064,.LN7117-Emit_EmitNtreg		# line 2064, column 61
	call	InOut_WriteLn
.Lab5210:
.LN7118:
	.stabn  68,0,2065,.LN7118-Emit_EmitNtreg		# line 2065, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7119:
	.stabn  68,0,2066,.LN7119-Emit_EmitNtreg		# line 2066, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5214
	cmpl	$4096,%eax
	jbe	.Lab5213
.Lab5214:
   	call	BoundErr_		
.Lab5213:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5206:
	jmp	.Lab3784
.Lab3793:
.LN7120:
	.stabn  68,0,2070,.LN7120-Emit_EmitNtreg		# line 2070, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtConstant
	addl	$12, %esp
.LN7121:
	.stabn  68,0,2071,.LN7121-Emit_EmitNtreg		# line 2071, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7122:
	.stabn  68,0,2072,.LN7122-Emit_EmitNtreg		# line 2072, column 10
	decl	Emit_s + 1536
.LN7123:
	.stabn  68,0,2073,.LN7123-Emit_EmitNtreg		# line 2073, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5218
	cmpl	$4096,%eax
	jbe	.Lab5217
.Lab5218:
   	call	BoundErr_		
.Lab5217:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5215
.Lab5216:
.LN7124:
	.stabn  68,0,2074,.LN7124-Emit_EmitNtreg		# line 2074, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5220
	cmpl	$4096,%eax
	jbe	.Lab5219
.Lab5220:
   	call	BoundErr_		
.Lab5219:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5215:
.LN7125:
	.stabn  68,0,2076,.LN7125-Emit_EmitNtreg		# line 2076, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5221
.Lab5222:
.LN7126:
	.stabn  68,0,2077,.LN7126-Emit_EmitNtreg		# line 2077, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7127:
	.stabn  68,0,2078,.LN7127-Emit_EmitNtreg		# line 2078, column 11
	.data
.Lab5223:
 	.ascii	"Rule 128/1140 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5223,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7128:
	.stabn  68,0,2079,.LN7128-Emit_EmitNtreg		# line 2079, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7129:
	.stabn  68,0,2080,.LN7129-Emit_EmitNtreg		# line 2080, column 11
	.data
.Lab5224:
 	.ascii	" FixedMult ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5224,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7130:
	.stabn  68,0,2081,.LN7130-Emit_EmitNtreg		# line 2081, column 11
	call	InOut_WriteLn
.LN7131:
	.stabn  68,0,2082,.LN7131-Emit_EmitNtreg		# line 2082, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7132:
	.stabn  68,0,2083,.LN7132-Emit_EmitNtreg		# line 2083, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7133:
	.stabn  68,0,2083,.LN7133-Emit_EmitNtreg		# line 2083, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7134:
	.stabn  68,0,2084,.LN7134-Emit_EmitNtreg		# line 2084, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5227
.Lab5226:
.LN7135:
	.stabn  68,0,2084,.LN7135-Emit_EmitNtreg		# line 2084, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5225
.Lab5227:
.LN7136:
	.stabn  68,0,2084,.LN7136-Emit_EmitNtreg		# line 2084, column 61
	call	InOut_WriteLn
.Lab5225:
.LN7137:
	.stabn  68,0,2085,.LN7137-Emit_EmitNtreg		# line 2085, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7138:
	.stabn  68,0,2086,.LN7138-Emit_EmitNtreg		# line 2086, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5229
	cmpl	$4096,%eax
	jbe	.Lab5228
.Lab5229:
   	call	BoundErr_		
.Lab5228:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5221:
	jmp	.Lab3784
.Lab3792:
.LN7139:
	.stabn  68,0,2090,.LN7139-Emit_EmitNtreg		# line 2090, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7140:
	.stabn  68,0,2091,.LN7140-Emit_EmitNtreg		# line 2091, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN7141:
	.stabn  68,0,2092,.LN7141-Emit_EmitNtreg		# line 2092, column 10
	decl	Emit_s + 1536
.LN7142:
	.stabn  68,0,2093,.LN7142-Emit_EmitNtreg		# line 2093, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5233
	cmpl	$4096,%eax
	jbe	.Lab5232
.Lab5233:
   	call	BoundErr_		
.Lab5232:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5230
.Lab5231:
.LN7143:
	.stabn  68,0,2094,.LN7143-Emit_EmitNtreg		# line 2094, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5235
	cmpl	$4096,%eax
	jbe	.Lab5234
.Lab5235:
   	call	BoundErr_		
.Lab5234:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5230:
.LN7144:
	.stabn  68,0,2096,.LN7144-Emit_EmitNtreg		# line 2096, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5236
.Lab5237:
.LN7145:
	.stabn  68,0,2097,.LN7145-Emit_EmitNtreg		# line 2097, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7146:
	.stabn  68,0,2098,.LN7146-Emit_EmitNtreg		# line 2098, column 11
	.data
.Lab5238:
 	.ascii	"Rule 129/1090 Cost=\000"
	.text
	pushl	$19
	leal	.Lab5238,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7147:
	.stabn  68,0,2099,.LN7147-Emit_EmitNtreg		# line 2099, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7148:
	.stabn  68,0,2100,.LN7148-Emit_EmitNtreg		# line 2100, column 11
	.data
.Lab5239:
 	.ascii	" FixedMinus ->   reg\000"
	.text
	pushl	$20
	leal	.Lab5239,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7149:
	.stabn  68,0,2101,.LN7149-Emit_EmitNtreg		# line 2101, column 11
	call	InOut_WriteLn
.LN7150:
	.stabn  68,0,2102,.LN7150-Emit_EmitNtreg		# line 2102, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7151:
	.stabn  68,0,2103,.LN7151-Emit_EmitNtreg		# line 2103, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7152:
	.stabn  68,0,2103,.LN7152-Emit_EmitNtreg		# line 2103, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7153:
	.stabn  68,0,2104,.LN7153-Emit_EmitNtreg		# line 2104, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5242
.Lab5241:
.LN7154:
	.stabn  68,0,2104,.LN7154-Emit_EmitNtreg		# line 2104, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5240
.Lab5242:
.LN7155:
	.stabn  68,0,2104,.LN7155-Emit_EmitNtreg		# line 2104, column 61
	call	InOut_WriteLn
.Lab5240:
.LN7156:
	.stabn  68,0,2105,.LN7156-Emit_EmitNtreg		# line 2105, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7157:
	.stabn  68,0,2106,.LN7157-Emit_EmitNtreg		# line 2106, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5244
	cmpl	$4096,%eax
	jbe	.Lab5243
.Lab5244:
   	call	BoundErr_		
.Lab5243:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5236:
.LN7158:
	.stabn  68,0,2108,.LN7158-Emit_EmitNtreg		# line 2108, column 2
	.data
.Lab5245:
 	.ascii	" \011sub\000"
	.text
	pushl	$5
	leal	.Lab5245,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7159:
	.stabn  68,0,2108,.LN7159-Emit_EmitNtreg		# line 2108, column 25
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7160:
	.stabn  68,0,2108,.LN7160-Emit_EmitNtreg		# line 2108, column 74
	.data
.Lab5246:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5246,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7161:
	.stabn  68,0,2108,.LN7161-Emit_EmitNtreg		# line 2108, column 94
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN7162:
	.stabn  68,0,2108,.LN7162-Emit_EmitNtreg		# line 2108, column 130
	.data
.Lab5247:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5247,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7163:
	.stabn  68,0,2108,.LN7163-Emit_EmitNtreg		# line 2108, column 148
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5249
	cmpl	$4096,%eax
	jbe	.Lab5248
.Lab5249:
   	call	BoundErr_		
.Lab5248:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7164:
	.stabn  68,0,2108,.LN7164-Emit_EmitNtreg		# line 2108, column 231
	.data
.Lab5250:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5250,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7165:
	.stabn  68,0,2108,.LN7165-Emit_EmitNtreg		# line 2108, column 249
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3791:
.LN7166:
	.stabn  68,0,2110,.LN7166-Emit_EmitNtreg		# line 2110, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7167:
	.stabn  68,0,2111,.LN7167-Emit_EmitNtreg		# line 2111, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN7168:
	.stabn  68,0,2112,.LN7168-Emit_EmitNtreg		# line 2112, column 10
	decl	Emit_s + 1536
.LN7169:
	.stabn  68,0,2113,.LN7169-Emit_EmitNtreg		# line 2113, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5254
	cmpl	$4096,%eax
	jbe	.Lab5253
.Lab5254:
   	call	BoundErr_		
.Lab5253:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5251
.Lab5252:
.LN7170:
	.stabn  68,0,2114,.LN7170-Emit_EmitNtreg		# line 2114, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5256
	cmpl	$4096,%eax
	jbe	.Lab5255
.Lab5256:
   	call	BoundErr_		
.Lab5255:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5251:
.LN7171:
	.stabn  68,0,2116,.LN7171-Emit_EmitNtreg		# line 2116, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5257
.Lab5258:
.LN7172:
	.stabn  68,0,2117,.LN7172-Emit_EmitNtreg		# line 2117, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7173:
	.stabn  68,0,2118,.LN7173-Emit_EmitNtreg		# line 2118, column 11
	.data
.Lab5259:
 	.ascii	"Rule 130/993 Cost=\000"
	.text
	pushl	$18
	leal	.Lab5259,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7174:
	.stabn  68,0,2119,.LN7174-Emit_EmitNtreg		# line 2119, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7175:
	.stabn  68,0,2120,.LN7175-Emit_EmitNtreg		# line 2120, column 11
	.data
.Lab5260:
 	.ascii	" FixedPlus ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5260,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7176:
	.stabn  68,0,2121,.LN7176-Emit_EmitNtreg		# line 2121, column 11
	call	InOut_WriteLn
.LN7177:
	.stabn  68,0,2122,.LN7177-Emit_EmitNtreg		# line 2122, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7178:
	.stabn  68,0,2123,.LN7178-Emit_EmitNtreg		# line 2123, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7179:
	.stabn  68,0,2123,.LN7179-Emit_EmitNtreg		# line 2123, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7180:
	.stabn  68,0,2124,.LN7180-Emit_EmitNtreg		# line 2124, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5263
.Lab5262:
.LN7181:
	.stabn  68,0,2124,.LN7181-Emit_EmitNtreg		# line 2124, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5261
.Lab5263:
.LN7182:
	.stabn  68,0,2124,.LN7182-Emit_EmitNtreg		# line 2124, column 61
	call	InOut_WriteLn
.Lab5261:
.LN7183:
	.stabn  68,0,2125,.LN7183-Emit_EmitNtreg		# line 2125, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7184:
	.stabn  68,0,2126,.LN7184-Emit_EmitNtreg		# line 2126, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5265
	cmpl	$4096,%eax
	jbe	.Lab5264
.Lab5265:
   	call	BoundErr_		
.Lab5264:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5257:
.LN7185:
	.stabn  68,0,2128,.LN7185-Emit_EmitNtreg		# line 2128, column 2
	.data
.Lab5266:
 	.ascii	" \011add\000"
	.text
	pushl	$5
	leal	.Lab5266,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7186:
	.stabn  68,0,2128,.LN7186-Emit_EmitNtreg		# line 2128, column 25
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7187:
	.stabn  68,0,2128,.LN7187-Emit_EmitNtreg		# line 2128, column 74
	.data
.Lab5267:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5267,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7188:
	.stabn  68,0,2128,.LN7188-Emit_EmitNtreg		# line 2128, column 94
	leal	-44(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN7189:
	.stabn  68,0,2128,.LN7189-Emit_EmitNtreg		# line 2128, column 130
	.data
.Lab5268:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5268,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7190:
	.stabn  68,0,2128,.LN7190-Emit_EmitNtreg		# line 2128, column 148
	movl	8(%ebp),%eax
	movl	8(%eax),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5270
	cmpl	$4096,%eax
	jbe	.Lab5269
.Lab5270:
   	call	BoundErr_		
.Lab5269:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7191:
	.stabn  68,0,2128,.LN7191-Emit_EmitNtreg		# line 2128, column 231
	.data
.Lab5271:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5271,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7192:
	.stabn  68,0,2128,.LN7192-Emit_EmitNtreg		# line 2128, column 249
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3790:
.LN7193:
	.stabn  68,0,2130,.LN7193-Emit_EmitNtreg		# line 2130, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN7194:
	.stabn  68,0,2131,.LN7194-Emit_EmitNtreg		# line 2131, column 3
	leal	-44(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	8(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7195:
	.stabn  68,0,2132,.LN7195-Emit_EmitNtreg		# line 2132, column 10
	decl	Emit_s + 1536
.LN7196:
	.stabn  68,0,2133,.LN7196-Emit_EmitNtreg		# line 2133, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5275
	cmpl	$4096,%eax
	jbe	.Lab5274
.Lab5275:
   	call	BoundErr_		
.Lab5274:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5272
.Lab5273:
.LN7197:
	.stabn  68,0,2134,.LN7197-Emit_EmitNtreg		# line 2134, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5277
	cmpl	$4096,%eax
	jbe	.Lab5276
.Lab5277:
   	call	BoundErr_		
.Lab5276:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5272:
.LN7198:
	.stabn  68,0,2136,.LN7198-Emit_EmitNtreg		# line 2136, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5278
.Lab5279:
.LN7199:
	.stabn  68,0,2137,.LN7199-Emit_EmitNtreg		# line 2137, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7200:
	.stabn  68,0,2138,.LN7200-Emit_EmitNtreg		# line 2138, column 11
	.data
.Lab5280:
 	.ascii	"Rule 131/993 Cost=\000"
	.text
	pushl	$18
	leal	.Lab5280,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7201:
	.stabn  68,0,2139,.LN7201-Emit_EmitNtreg		# line 2139, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7202:
	.stabn  68,0,2140,.LN7202-Emit_EmitNtreg		# line 2140, column 11
	.data
.Lab5281:
 	.ascii	" FixedPlus ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5281,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7203:
	.stabn  68,0,2141,.LN7203-Emit_EmitNtreg		# line 2141, column 11
	call	InOut_WriteLn
.LN7204:
	.stabn  68,0,2142,.LN7204-Emit_EmitNtreg		# line 2142, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7205:
	.stabn  68,0,2143,.LN7205-Emit_EmitNtreg		# line 2143, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7206:
	.stabn  68,0,2143,.LN7206-Emit_EmitNtreg		# line 2143, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7207:
	.stabn  68,0,2144,.LN7207-Emit_EmitNtreg		# line 2144, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5284
.Lab5283:
.LN7208:
	.stabn  68,0,2144,.LN7208-Emit_EmitNtreg		# line 2144, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5282
.Lab5284:
.LN7209:
	.stabn  68,0,2144,.LN7209-Emit_EmitNtreg		# line 2144, column 61
	call	InOut_WriteLn
.Lab5282:
.LN7210:
	.stabn  68,0,2145,.LN7210-Emit_EmitNtreg		# line 2145, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7211:
	.stabn  68,0,2146,.LN7211-Emit_EmitNtreg		# line 2146, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5286
	cmpl	$4096,%eax
	jbe	.Lab5285
.Lab5286:
   	call	BoundErr_		
.Lab5285:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5278:
.LN7212:
	.stabn  68,0,2148,.LN7212-Emit_EmitNtreg		# line 2148, column 2
	.data
.Lab5287:
 	.ascii	" \011add\000"
	.text
	pushl	$5
	leal	.Lab5287,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7213:
	.stabn  68,0,2148,.LN7213-Emit_EmitNtreg		# line 2148, column 25
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7214:
	.stabn  68,0,2148,.LN7214-Emit_EmitNtreg		# line 2148, column 74
	.data
.Lab5288:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5288,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7215:
	.stabn  68,0,2148,.LN7215-Emit_EmitNtreg		# line 2148, column 94
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN7216:
	.stabn  68,0,2148,.LN7216-Emit_EmitNtreg		# line 2148, column 130
	.data
.Lab5289:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5289,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7217:
	.stabn  68,0,2148,.LN7217-Emit_EmitNtreg		# line 2148, column 148
	movl	8(%ebp),%eax
	movl	4(%eax),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5291
	cmpl	$4096,%eax
	jbe	.Lab5290
.Lab5291:
   	call	BoundErr_		
.Lab5290:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 30(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7218:
	.stabn  68,0,2148,.LN7218-Emit_EmitNtreg		# line 2148, column 231
	.data
.Lab5292:
 	.ascii	" \000"
	.text
	pushl	$1
	leal	.Lab5292,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7219:
	.stabn  68,0,2148,.LN7219-Emit_EmitNtreg		# line 2148, column 249
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3789:
.LN7220:
	.stabn  68,0,2150,.LN7220-Emit_EmitNtreg		# line 2150, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7221:
	.stabn  68,0,2151,.LN7221-Emit_EmitNtreg		# line 2151, column 10
	decl	Emit_s + 1536
.LN7222:
	.stabn  68,0,2152,.LN7222-Emit_EmitNtreg		# line 2152, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5296
	cmpl	$4096,%eax
	jbe	.Lab5295
.Lab5296:
   	call	BoundErr_		
.Lab5295:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5293
.Lab5294:
.LN7223:
	.stabn  68,0,2153,.LN7223-Emit_EmitNtreg		# line 2153, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5298
	cmpl	$4096,%eax
	jbe	.Lab5297
.Lab5298:
   	call	BoundErr_		
.Lab5297:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5293:
.LN7224:
	.stabn  68,0,2155,.LN7224-Emit_EmitNtreg		# line 2155, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5299
.Lab5300:
.LN7225:
	.stabn  68,0,2156,.LN7225-Emit_EmitNtreg		# line 2156, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7226:
	.stabn  68,0,2157,.LN7226-Emit_EmitNtreg		# line 2157, column 11
	.data
.Lab5301:
 	.ascii	"Rule 132/922 Cost=\000"
	.text
	pushl	$18
	leal	.Lab5301,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7227:
	.stabn  68,0,2158,.LN7227-Emit_EmitNtreg		# line 2158, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7228:
	.stabn  68,0,2159,.LN7228-Emit_EmitNtreg		# line 2159, column 11
	.data
.Lab5302:
 	.ascii	" FixedAbs ->   reg\000"
	.text
	pushl	$18
	leal	.Lab5302,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7229:
	.stabn  68,0,2160,.LN7229-Emit_EmitNtreg		# line 2160, column 11
	call	InOut_WriteLn
.LN7230:
	.stabn  68,0,2161,.LN7230-Emit_EmitNtreg		# line 2161, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7231:
	.stabn  68,0,2162,.LN7231-Emit_EmitNtreg		# line 2162, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7232:
	.stabn  68,0,2162,.LN7232-Emit_EmitNtreg		# line 2162, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7233:
	.stabn  68,0,2163,.LN7233-Emit_EmitNtreg		# line 2163, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5305
.Lab5304:
.LN7234:
	.stabn  68,0,2163,.LN7234-Emit_EmitNtreg		# line 2163, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5303
.Lab5305:
.LN7235:
	.stabn  68,0,2163,.LN7235-Emit_EmitNtreg		# line 2163, column 61
	call	InOut_WriteLn
.Lab5303:
.LN7236:
	.stabn  68,0,2164,.LN7236-Emit_EmitNtreg		# line 2164, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7237:
	.stabn  68,0,2165,.LN7237-Emit_EmitNtreg		# line 2165, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5307
	cmpl	$4096,%eax
	jbe	.Lab5306
.Lab5307:
   	call	BoundErr_		
.Lab5306:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5299:
.LN7238:
	.stabn  68,0,2168,.LN7238-Emit_EmitNtreg		# line 2168, column 9
	leal	Emit_s + 992,%eax
	pushl	%eax
	call	CgBase_GetLabel
	addl	$4, %esp
.LN7239:
	.stabn  68,0,2169,.LN7239-Emit_EmitNtreg		# line 2169, column 2
	.data
.Lab5308:
 	.ascii	"\011cmp\000"
	.text
	pushl	$4
	leal	.Lab5308,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7240:
	.stabn  68,0,2169,.LN7240-Emit_EmitNtreg		# line 2169, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7241:
	.stabn  68,0,2169,.LN7241-Emit_EmitNtreg		# line 2169, column 62
	.data
.Lab5309:
 	.ascii	"\011$0,\000"
	.text
	pushl	$4
	leal	.Lab5309,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7242:
	.stabn  68,0,2169,.LN7242-Emit_EmitNtreg		# line 2169, column 89
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5311
	cmpl	$4096,%eax
	jbe	.Lab5310
.Lab5311:
   	call	BoundErr_		
.Lab5310:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7243:
	.stabn  68,0,2169,.LN7243-Emit_EmitNtreg		# line 2169, column 160
	call	CgAssOut_AssLn
.LN7244:
	.stabn  68,0,2170,.LN7244-Emit_EmitNtreg		# line 2170, column 2
	.data
.Lab5312:
 	.ascii	"\011jg\011\000"
	.text
	pushl	$4
	leal	.Lab5312,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7245:
	.stabn  68,0,2170,.LN7245-Emit_EmitNtreg		# line 2170, column 30
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7246:
	.stabn  68,0,2170,.LN7246-Emit_EmitNtreg		# line 2170, column 49
	call	CgAssOut_AssLn
.LN7247:
	.stabn  68,0,2171,.LN7247-Emit_EmitNtreg		# line 2171, column 2
	.data
.Lab5313:
 	.ascii	"\011neg\000"
	.text
	pushl	$4
	leal	.Lab5313,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7248:
	.stabn  68,0,2171,.LN7248-Emit_EmitNtreg		# line 2171, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7249:
	.stabn  68,0,2171,.LN7249-Emit_EmitNtreg		# line 2171, column 62
	.data
.Lab5314:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5314,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7250:
	.stabn  68,0,2171,.LN7250-Emit_EmitNtreg		# line 2171, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5316
	cmpl	$4096,%eax
	jbe	.Lab5315
.Lab5316:
   	call	BoundErr_		
.Lab5315:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7251:
	.stabn  68,0,2171,.LN7251-Emit_EmitNtreg		# line 2171, column 157
	call	CgAssOut_AssLn
.LN7252:
	.stabn  68,0,2172,.LN7252-Emit_EmitNtreg		# line 2172, column 2
	pushl	$255
	pushl	Emit_s + 992
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7253:
	.stabn  68,0,2172,.LN7253-Emit_EmitNtreg		# line 2172, column 21
	.data
.Lab5317:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab5317,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7254:
	.stabn  68,0,2172,.LN7254-Emit_EmitNtreg		# line 2172, column 39
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3788:
.LN7255:
	.stabn  68,0,2175,.LN7255-Emit_EmitNtreg		# line 2175, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	movl	8(%ebp),%eax
	pushl	4(%eax)
	call	Emit_EmitNtreg
	addl	$12, %esp
.LN7256:
	.stabn  68,0,2176,.LN7256-Emit_EmitNtreg		# line 2176, column 10
	decl	Emit_s + 1536
.LN7257:
	.stabn  68,0,2177,.LN7257-Emit_EmitNtreg		# line 2177, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5321
	cmpl	$4096,%eax
	jbe	.Lab5320
.Lab5321:
   	call	BoundErr_		
.Lab5320:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5318
.Lab5319:
.LN7258:
	.stabn  68,0,2178,.LN7258-Emit_EmitNtreg		# line 2178, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5323
	cmpl	$4096,%eax
	jbe	.Lab5322
.Lab5323:
   	call	BoundErr_		
.Lab5322:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5318:
.LN7259:
	.stabn  68,0,2180,.LN7259-Emit_EmitNtreg		# line 2180, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5324
.Lab5325:
.LN7260:
	.stabn  68,0,2181,.LN7260-Emit_EmitNtreg		# line 2181, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7261:
	.stabn  68,0,2182,.LN7261-Emit_EmitNtreg		# line 2182, column 11
	.data
.Lab5326:
 	.ascii	"Rule 133/902 Cost=\000"
	.text
	pushl	$18
	leal	.Lab5326,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7262:
	.stabn  68,0,2183,.LN7262-Emit_EmitNtreg		# line 2183, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7263:
	.stabn  68,0,2184,.LN7263-Emit_EmitNtreg		# line 2184, column 11
	.data
.Lab5327:
 	.ascii	" FixedNegate ->   reg\000"
	.text
	pushl	$21
	leal	.Lab5327,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7264:
	.stabn  68,0,2185,.LN7264-Emit_EmitNtreg		# line 2185, column 11
	call	InOut_WriteLn
.LN7265:
	.stabn  68,0,2186,.LN7265-Emit_EmitNtreg		# line 2186, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7266:
	.stabn  68,0,2187,.LN7266-Emit_EmitNtreg		# line 2187, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7267:
	.stabn  68,0,2187,.LN7267-Emit_EmitNtreg		# line 2187, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7268:
	.stabn  68,0,2188,.LN7268-Emit_EmitNtreg		# line 2188, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5330
.Lab5329:
.LN7269:
	.stabn  68,0,2188,.LN7269-Emit_EmitNtreg		# line 2188, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5328
.Lab5330:
.LN7270:
	.stabn  68,0,2188,.LN7270-Emit_EmitNtreg		# line 2188, column 61
	call	InOut_WriteLn
.Lab5328:
.LN7271:
	.stabn  68,0,2189,.LN7271-Emit_EmitNtreg		# line 2189, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7272:
	.stabn  68,0,2190,.LN7272-Emit_EmitNtreg		# line 2190, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5332
	cmpl	$4096,%eax
	jbe	.Lab5331
.Lab5332:
   	call	BoundErr_		
.Lab5331:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5324:
.LN7273:
	.stabn  68,0,2193,.LN7273-Emit_EmitNtreg		# line 2193, column 2
	.data
.Lab5333:
 	.ascii	"\011neg\000"
	.text
	pushl	$4
	leal	.Lab5333,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7274:
	.stabn  68,0,2193,.LN7274-Emit_EmitNtreg		# line 2193, column 25
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7275:
	.stabn  68,0,2193,.LN7275-Emit_EmitNtreg		# line 2193, column 65
	.data
.Lab5334:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5334,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7276:
	.stabn  68,0,2193,.LN7276-Emit_EmitNtreg		# line 2193, column 86
	movl	8(%ebp),%eax
	movl	(%eax),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5336
	cmpl	$4096,%eax
	jbe	.Lab5335
.Lab5336:
   	call	BoundErr_		
.Lab5335:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 31(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7277:
	.stabn  68,0,2193,.LN7277-Emit_EmitNtreg		# line 2193, column 160
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3787:
.LN7278:
	.stabn  68,0,2196,.LN7278-Emit_EmitNtreg		# line 2196, column 10
	decl	Emit_s + 1536
.LN7279:
	.stabn  68,0,2197,.LN7279-Emit_EmitNtreg		# line 2197, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5340
	cmpl	$4096,%eax
	jbe	.Lab5339
.Lab5340:
   	call	BoundErr_		
.Lab5339:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5337
.Lab5338:
.LN7280:
	.stabn  68,0,2198,.LN7280-Emit_EmitNtreg		# line 2198, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5342
	cmpl	$4096,%eax
	jbe	.Lab5341
.Lab5342:
   	call	BoundErr_		
.Lab5341:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5337:
.LN7281:
	.stabn  68,0,2200,.LN7281-Emit_EmitNtreg		# line 2200, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5343
.Lab5344:
.LN7282:
	.stabn  68,0,2201,.LN7282-Emit_EmitNtreg		# line 2201, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7283:
	.stabn  68,0,2202,.LN7283-Emit_EmitNtreg		# line 2202, column 11
	.data
.Lab5345:
 	.ascii	"Rule 134/620 Cost=\000"
	.text
	pushl	$18
	leal	.Lab5345,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7284:
	.stabn  68,0,2203,.LN7284-Emit_EmitNtreg		# line 2203, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7285:
	.stabn  68,0,2204,.LN7285-Emit_EmitNtreg		# line 2204, column 11
	.data
.Lab5346:
 	.ascii	" FrameBase ->   reg\000"
	.text
	pushl	$19
	leal	.Lab5346,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7286:
	.stabn  68,0,2205,.LN7286-Emit_EmitNtreg		# line 2205, column 11
	call	InOut_WriteLn
.LN7287:
	.stabn  68,0,2206,.LN7287-Emit_EmitNtreg		# line 2206, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7288:
	.stabn  68,0,2207,.LN7288-Emit_EmitNtreg		# line 2207, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7289:
	.stabn  68,0,2207,.LN7289-Emit_EmitNtreg		# line 2207, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7290:
	.stabn  68,0,2208,.LN7290-Emit_EmitNtreg		# line 2208, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5349
.Lab5348:
.LN7291:
	.stabn  68,0,2208,.LN7291-Emit_EmitNtreg		# line 2208, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5347
.Lab5349:
.LN7292:
	.stabn  68,0,2208,.LN7292-Emit_EmitNtreg		# line 2208, column 61
	call	InOut_WriteLn
.Lab5347:
.LN7293:
	.stabn  68,0,2209,.LN7293-Emit_EmitNtreg		# line 2209, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7294:
	.stabn  68,0,2210,.LN7294-Emit_EmitNtreg		# line 2210, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5351
	cmpl	$4096,%eax
	jbe	.Lab5350
.Lab5351:
   	call	BoundErr_		
.Lab5350:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5343:
	jmp	.Lab3784
.Lab3786:
.LN7295:
	.stabn  68,0,2214,.LN7295-Emit_EmitNtreg		# line 2214, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtRegOrCMemOrIm
	addl	$12, %esp
.LN7296:
	.stabn  68,0,2215,.LN7296-Emit_EmitNtreg		# line 2215, column 10
	decl	Emit_s + 1536
.LN7297:
	.stabn  68,0,2216,.LN7297-Emit_EmitNtreg		# line 2216, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5355
	cmpl	$4096,%eax
	jbe	.Lab5354
.Lab5355:
   	call	BoundErr_		
.Lab5354:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5352
.Lab5353:
.LN7298:
	.stabn  68,0,2217,.LN7298-Emit_EmitNtreg		# line 2217, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5357
	cmpl	$4096,%eax
	jbe	.Lab5356
.Lab5357:
   	call	BoundErr_		
.Lab5356:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5352:
.LN7299:
	.stabn  68,0,2219,.LN7299-Emit_EmitNtreg		# line 2219, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5358
.Lab5359:
.LN7300:
	.stabn  68,0,2220,.LN7300-Emit_EmitNtreg		# line 2220, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7301:
	.stabn  68,0,2221,.LN7301-Emit_EmitNtreg		# line 2221, column 11
	.data
.Lab5360:
 	.ascii	"Rule 135/445 Cost=\000"
	.text
	pushl	$18
	leal	.Lab5360,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7302:
	.stabn  68,0,2222,.LN7302-Emit_EmitNtreg		# line 2222, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7303:
	.stabn  68,0,2223,.LN7303-Emit_EmitNtreg		# line 2223, column 11
	.data
.Lab5361:
 	.ascii	" RegOrCMemOrIm ->   reg\000"
	.text
	pushl	$23
	leal	.Lab5361,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7304:
	.stabn  68,0,2224,.LN7304-Emit_EmitNtreg		# line 2224, column 11
	call	InOut_WriteLn
.LN7305:
	.stabn  68,0,2225,.LN7305-Emit_EmitNtreg		# line 2225, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7306:
	.stabn  68,0,2226,.LN7306-Emit_EmitNtreg		# line 2226, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7307:
	.stabn  68,0,2226,.LN7307-Emit_EmitNtreg		# line 2226, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7308:
	.stabn  68,0,2227,.LN7308-Emit_EmitNtreg		# line 2227, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5364
.Lab5363:
.LN7309:
	.stabn  68,0,2227,.LN7309-Emit_EmitNtreg		# line 2227, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5362
.Lab5364:
.LN7310:
	.stabn  68,0,2227,.LN7310-Emit_EmitNtreg		# line 2227, column 61
	call	InOut_WriteLn
.Lab5362:
.LN7311:
	.stabn  68,0,2228,.LN7311-Emit_EmitNtreg		# line 2228, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7312:
	.stabn  68,0,2229,.LN7312-Emit_EmitNtreg		# line 2229, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5366
	cmpl	$4096,%eax
	jbe	.Lab5365
.Lab5366:
   	call	BoundErr_		
.Lab5365:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5358:
.LN7313:
	.stabn  68,0,2232,.LN7313-Emit_EmitNtreg		# line 2232, column 2
	.data
.Lab5367:
 	.ascii	"\011mov\000"
	.text
	pushl	$4
	leal	.Lab5367,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7314:
	.stabn  68,0,2232,.LN7314-Emit_EmitNtreg		# line 2232, column 25
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	call	Emit_AssSuffix
	addl	$4, %esp
.LN7315:
	.stabn  68,0,2232,.LN7315-Emit_EmitNtreg		# line 2232, column 66
	.data
.Lab5368:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5368,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7316:
	.stabn  68,0,2232,.LN7316-Emit_EmitNtreg		# line 2232, column 86
	leal	-24(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_AssAdrMode
	addl	$20, %esp
.LN7317:
	.stabn  68,0,2232,.LN7317-Emit_EmitNtreg		# line 2232, column 122
	.data
.Lab5369:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5369,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7318:
	.stabn  68,0,2232,.LN7318-Emit_EmitNtreg		# line 2232, column 140
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	movzbl	85(%eax),%eax
	pushl	%eax
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5371
	cmpl	$4096,%eax
	jbe	.Lab5370
.Lab5371:
   	call	BoundErr_		
.Lab5370:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
.LN7319:
	.stabn  68,0,2232,.LN7319-Emit_EmitNtreg		# line 2232, column 213
	call	CgAssOut_AssLn
	jmp	.Lab3784
.Lab3785:
.LN7320:
	.stabn  68,0,2235,.LN7320-Emit_EmitNtreg		# line 2235, column 3
	leal	-24(%ebp),%eax
	pushl	%eax
	movl	$1,%eax
 	addl	12(%ebp),%eax 
	pushl	%eax
	pushl	8(%ebp)
	call	Emit_EmitNtmem
	addl	$12, %esp
.LN7321:
	.stabn  68,0,2236,.LN7321-Emit_EmitNtreg		# line 2236, column 10
	decl	Emit_s + 1536
.LN7322:
	.stabn  68,0,2237,.LN7322-Emit_EmitNtreg		# line 2237, column 8
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5375
	cmpl	$4096,%eax
	jbe	.Lab5374
.Lab5375:
   	call	BoundErr_		
.Lab5374:
	imull	$44,%eax 
	cmpl	$0,RegAlloc_s - 24(%eax)
	jbe	.Lab5372
.Lab5373:
.LN7323:
	.stabn  68,0,2238,.LN7323-Emit_EmitNtreg		# line 2238, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5377
	cmpl	$4096,%eax
	jbe	.Lab5376
.Lab5377:
   	call	BoundErr_		
.Lab5376:
	pushl	%eax
	call	Emit_PerformActions
	addl	$4, %esp
.Lab5372:
.LN7324:
	.stabn  68,0,2240,.LN7324-Emit_EmitNtreg		# line 2240, column 8
	cmpb	$0,IR_s + 133
	je	.Lab5378
.Lab5379:
.LN7325:
	.stabn  68,0,2241,.LN7325-Emit_EmitNtreg		# line 2241, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7326:
	.stabn  68,0,2242,.LN7326-Emit_EmitNtreg		# line 2242, column 11
	.data
.Lab5380:
 	.ascii	"Rule 136/430 Cost=\000"
	.text
	pushl	$18
	leal	.Lab5380,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7327:
	.stabn  68,0,2243,.LN7327-Emit_EmitNtreg		# line 2243, column 11
	pushl	$1
	movl	8(%ebp),%eax
	movl	24(%eax),%eax
	pushl	88(%eax)
	call	InOut_WriteInt
	addl	$8, %esp
.LN7328:
	.stabn  68,0,2244,.LN7328-Emit_EmitNtreg		# line 2244, column 11
	.data
.Lab5381:
 	.ascii	" mem ->   reg\000"
	.text
	pushl	$13
	leal	.Lab5381,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7329:
	.stabn  68,0,2245,.LN7329-Emit_EmitNtreg		# line 2245, column 11
	call	InOut_WriteLn
.LN7330:
	.stabn  68,0,2246,.LN7330-Emit_EmitNtreg		# line 2246, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7331:
	.stabn  68,0,2247,.LN7331-Emit_EmitNtreg		# line 2247, column 11
	pushl	$1
	pushl	8(%ebp)
	call	InOut_WriteCard
	addl	$8, %esp
.LN7332:
	.stabn  68,0,2247,.LN7332-Emit_EmitNtreg		# line 2247, column 38
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7333:
	.stabn  68,0,2248,.LN7333-Emit_EmitNtreg		# line 2248, column 11
	cmpl	$0,8(%ebp)
	je	.Lab5384
.Lab5383:
.LN7334:
	.stabn  68,0,2248,.LN7334-Emit_EmitNtreg		# line 2248, column 25
	movl	8(%ebp),%eax
	pushl	(%eax)
	call	IR_PrintAttributes
	addl	$4, %esp
	jmp	.Lab5382
.Lab5384:
.LN7335:
	.stabn  68,0,2248,.LN7335-Emit_EmitNtreg		# line 2248, column 61
	call	InOut_WriteLn
.Lab5382:
.LN7336:
	.stabn  68,0,2249,.LN7336-Emit_EmitNtreg		# line 2249, column 11
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7337:
	.stabn  68,0,2250,.LN7337-Emit_EmitNtreg		# line 2250, column 11
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5386
	cmpl	$4096,%eax
	jbe	.Lab5385
.Lab5386:
   	call	BoundErr_		
.Lab5385:
	pushl	%eax
	call	RegAlloc_PrintAllocation
	addl	$4, %esp
.Lab5378:
.LN7338:
	.stabn  68,0,2253,.LN7338-Emit_EmitNtreg		# line 2253, column 9
	cmpl	$0,-24(%ebp)
	jne	.Lab5388
.Lab5391:
	cmpl	$1,-20(%ebp)
	jne	.Lab5388
.Lab5390:
	movl	-12(%ebp),%eax
	cmpl	Emit_s + 36,%eax
	jne	.Lab5388
.Lab5389:
	movb	-16(%ebp),%bl
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5395
	cmpl	$4096,%eax
	jbe	.Lab5394
.Lab5395:
   	call	BoundErr_		
.Lab5394:
	imull	$44,%eax 
	cmpb	RegAlloc_s - 40(%eax),%bl
	jne	.Lab5392
.Lab5393:
	cmpb	$0,-15(%ebp)
	je	.Lab5387
.Lab5392:
	movb	-15(%ebp),%bl
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5398
	cmpl	$4096,%eax
	jbe	.Lab5397
.Lab5398:
   	call	BoundErr_		
.Lab5397:
	imull	$44,%eax 
	cmpb	RegAlloc_s - 40(%eax),%bl
	jne	.Lab5388
.Lab5396:
	cmpb	$0,-16(%ebp)
	jne	.Lab5388
	jmp	.Lab5387
.Lab5388:
.LN7339:
	.stabn  68,0,2260,.LN7339-Emit_EmitNtreg		# line 2260, column 2
	.data
.Lab5399:
 	.ascii	"\011leal\011\000"
	.text
	pushl	$6
	leal	.Lab5399,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7340:
	.stabn  68,0,2260,.LN7340-Emit_EmitNtreg		# line 2260, column 30
	leal	-24(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN7341:
	.stabn  68,0,2260,.LN7341-Emit_EmitNtreg		# line 2260, column 55
	.data
.Lab5400:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5400,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7342:
	.stabn  68,0,2260,.LN7342-Emit_EmitNtreg		# line 2260, column 73
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5402
	cmpl	$4096,%eax
	jbe	.Lab5401
.Lab5402:
   	call	BoundErr_		
.Lab5401:
	imull	$44,%eax 
	movzbl	RegAlloc_s - 40(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7343:
	.stabn  68,0,2260,.LN7343-Emit_EmitNtreg		# line 2260, column 116
	call	CgAssOut_AssLn
.Lab5387:
	jmp	.Lab3784
.Lab3783:
	call	CaseErr_
.Lab3784:
.LN7344:
	.stabn  68,0,2264,.LN7344-Emit_EmitNtreg		# line 2264, column 4
	cmpb	$0,IR_s + 133
	je	.Lab5403
.Lab5404:
.LN7345:
	.stabn  68,0,2265,.LN7345-Emit_EmitNtreg		# line 2265, column 8
	pushl	12(%ebp)
	call	Emit_WriteNest
	addl	$4, %esp
.LN7346:
	.stabn  68,0,2266,.LN7346-Emit_EmitNtreg		# line 2266, column 8
	movl	16(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Emit_WriteAttrreg
	addl	$20, %esp
.LN7347:
	.stabn  68,0,2267,.LN7347-Emit_EmitNtreg		# line 2267, column 8
	call	InOut_WriteLn
.Lab5403:
.LN7348:
	.stabn  68,0,2269,.LN7348-Emit_EmitNtreg		# line 2269, column 4
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5408
	cmpl	$4096,%eax
	jbe	.Lab5407
.Lab5408:
   	call	BoundErr_		
.Lab5407:
	imull	$44,%eax 
	cmpb	$0,RegAlloc_s - 39(%eax)
	je	.Lab5405
.Lab5406:
	movl	Emit_s + 1536,%eax
	cmpl	$1,%eax
	jb	.Lab5410
	cmpl	$4096,%eax
	jbe	.Lab5409
.Lab5410:
   	call	BoundErr_		
.Lab5409:
	imull	$44,%eax 
	leal	RegAlloc_s - 40(%eax),%eax
	movl	%eax,-68(%ebp) 
.LN7349:
	.stabn  68,0,2272,.LN7349-Emit_EmitNtreg		# line 2272, column 10
	movl	-68(%ebp),%eax
	cmpl	$0,4(%eax)
	je	.Lab5413
.Lab5412:
.LN7350:
	.stabn  68,0,2273,.LN7350-Emit_EmitNtreg		# line 2273, column 13
	movl	-68(%ebp),%eax
	pushl	4(%eax)
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	Emit_Spill
	addl	$8, %esp
.LN7351:
	.stabn  68,0,2274,.LN7351-Emit_EmitNtreg		# line 2274, column 13
	cmpb	$0,IR_s + 133
	je	.Lab5414
.Lab5415:
.LN7352:
	.stabn  68,0,2275,.LN7352-Emit_EmitNtreg		# line 2275, column 17
	.data
.Lab5416:
 	.ascii	" Spill Register \000"
	.text
	pushl	$16
	leal	.Lab5416,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7353:
	.stabn  68,0,2276,.LN7353-Emit_EmitNtreg		# line 2276, column 17
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7354:
	.stabn  68,0,2277,.LN7354-Emit_EmitNtreg		# line 2277, column 17
	.data
.Lab5417:
 	.ascii	" into \000"
	.text
	pushl	$6
	leal	.Lab5417,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7355:
	.stabn  68,0,2278,.LN7355-Emit_EmitNtreg		# line 2278, column 17
	pushl	$1
	movl	-68(%ebp),%eax
	movl	4(%eax),%eax
	cmpl	$2147483647,%eax
	jbe	.Lab5418
.Lab5419:
   	call	BoundErr_		
.Lab5418:
	pushl	%eax
	call	InOut_WriteInt
	addl	$8, %esp
.LN7356:
	.stabn  68,0,2279,.LN7356-Emit_EmitNtreg		# line 2279, column 17
	call	InOut_WriteLn
.Lab5414:
	jmp	.Lab5411
.Lab5413:
.LN7357:
	.stabn  68,0,2282,.LN7357-Emit_EmitNtreg		# line 2282, column 13
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	movl	-68(%ebp),%eax
	movzbl	8(%eax),%eax
	pushl	%eax
	call	Emit_LR
	addl	$8, %esp
.LN7358:
	.stabn  68,0,2283,.LN7358-Emit_EmitNtreg		# line 2283, column 13
	cmpb	$0,IR_s + 133
	je	.Lab5420
.Lab5421:
.LN7359:
	.stabn  68,0,2284,.LN7359-Emit_EmitNtreg		# line 2284, column 17
	.data
.Lab5422:
 	.ascii	" Copy Register \000"
	.text
	pushl	$15
	leal	.Lab5422,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7360:
	.stabn  68,0,2285,.LN7360-Emit_EmitNtreg		# line 2285, column 17
	movl	-68(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7361:
	.stabn  68,0,2286,.LN7361-Emit_EmitNtreg		# line 2286, column 17
	.data
.Lab5423:
 	.ascii	" into \000"
	.text
	pushl	$6
	leal	.Lab5423,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7362:
	.stabn  68,0,2287,.LN7362-Emit_EmitNtreg		# line 2287, column 17
	movl	-68(%ebp),%eax
	movzbl	8(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7363:
	.stabn  68,0,2288,.LN7363-Emit_EmitNtreg		# line 2288, column 17
	call	InOut_WriteLn
.Lab5420:
.Lab5411:
.Lab5405:
.LN7364:
	.stabn  68,0,2289,.LN7364-Emit_EmitNtreg		# line 2289, column 0
.LBE18:
	leave
	ret
	.Lab3782 = 68
	.stabs "AT2:133",128,0,20,-64
	.stabs "AT1:133",128,0,20,-44
	.stabs "AT0:133",128,0,20,-24
	.stabs "resAttributes:v133",160,0,20,16
	.stabs "nest:p7",160,0,4,12
	.stabs "e:p17",160,0,4,8
	.stabn 192,0,0,.LBB18-Emit_EmitNtreg
	.stabn 224,0,0,.LBE18-Emit_EmitNtreg
	.stabs "Emit_WriteAttrloadln2:F16",36,0,0,Emit_WriteAttrloadln2
	.align 4
Emit_WriteAttrloadln2:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5424, %esp
.LN7365:
	.stabn  68,0,699,.LN7365-Emit_WriteAttrloadln2		# line 699, column 1
.LBB19:
.LN7366:
	.stabn  68,0,700,.LN7366-Emit_WriteAttrloadln2		# line 700, column 0
.LBE19:
	leave
	ret
	.Lab5424 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB19-Emit_WriteAttrloadln2
	.stabn 224,0,0,.LBE19-Emit_WriteAttrloadln2
	.stabs "Emit_WriteAttrarglist:F16",36,0,0,Emit_WriteAttrarglist
	.align 4
Emit_WriteAttrarglist:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5425, %esp
.LN7367:
	.stabn  68,0,696,.LN7367-Emit_WriteAttrarglist		# line 696, column 1
.LBB20:
.LN7368:
	.stabn  68,0,697,.LN7368-Emit_WriteAttrarglist		# line 697, column 0
.LBE20:
	leave
	ret
	.Lab5425 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB20-Emit_WriteAttrarglist
	.stabn 224,0,0,.LBE20-Emit_WriteAttrarglist
	.stabs "Emit_WriteAttrRegOrCMemOrIm:F16",36,0,0,Emit_WriteAttrRegOrCMemOrIm
	.align 4
Emit_WriteAttrRegOrCMemOrIm:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5426, %esp
.LN7369:
	.stabn  68,0,690,.LN7369-Emit_WriteAttrRegOrCMemOrIm		# line 690, column 1
.LBB21:
.LN7370:
	.stabn  68,0,691,.LN7370-Emit_WriteAttrRegOrCMemOrIm		# line 691, column 8
	.data
.Lab5427:
 	.ascii	"am=\000"
	.text
	pushl	$3
	leal	.Lab5427,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7371:
	.stabn  68,0,692,.LN7371-Emit_WriteAttrRegOrCMemOrIm		# line 692, column 8
	leal	8(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Prints_PrintAdrMode
	addl	$20, %esp
.LN7372:
	.stabn  68,0,693,.LN7372-Emit_WriteAttrRegOrCMemOrIm		# line 693, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7373:
	.stabn  68,0,694,.LN7373-Emit_WriteAttrRegOrCMemOrIm		# line 694, column 0
.LBE21:
	leave
	ret
	.Lab5426 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB21-Emit_WriteAttrRegOrCMemOrIm
	.stabn 224,0,0,.LBE21-Emit_WriteAttrRegOrCMemOrIm
	.stabs "Emit_WriteAttrRegOrCMem:F16",36,0,0,Emit_WriteAttrRegOrCMem
	.align 4
Emit_WriteAttrRegOrCMem:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5428, %esp
.LN7374:
	.stabn  68,0,684,.LN7374-Emit_WriteAttrRegOrCMem		# line 684, column 1
.LBB22:
.LN7375:
	.stabn  68,0,685,.LN7375-Emit_WriteAttrRegOrCMem		# line 685, column 8
	.data
.Lab5429:
 	.ascii	"am=\000"
	.text
	pushl	$3
	leal	.Lab5429,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7376:
	.stabn  68,0,686,.LN7376-Emit_WriteAttrRegOrCMem		# line 686, column 8
	leal	8(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Prints_PrintAdrMode
	addl	$20, %esp
.LN7377:
	.stabn  68,0,687,.LN7377-Emit_WriteAttrRegOrCMem		# line 687, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7378:
	.stabn  68,0,688,.LN7378-Emit_WriteAttrRegOrCMem		# line 688, column 0
.LBE22:
	leave
	ret
	.Lab5428 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB22-Emit_WriteAttrRegOrCMem
	.stabn 224,0,0,.LBE22-Emit_WriteAttrRegOrCMem
	.stabs "Emit_WriteAttrRegOrIm:F16",36,0,0,Emit_WriteAttrRegOrIm
	.align 4
Emit_WriteAttrRegOrIm:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5430, %esp
.LN7379:
	.stabn  68,0,678,.LN7379-Emit_WriteAttrRegOrIm		# line 678, column 1
.LBB23:
.LN7380:
	.stabn  68,0,679,.LN7380-Emit_WriteAttrRegOrIm		# line 679, column 8
	.data
.Lab5431:
 	.ascii	"am=\000"
	.text
	pushl	$3
	leal	.Lab5431,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7381:
	.stabn  68,0,680,.LN7381-Emit_WriteAttrRegOrIm		# line 680, column 8
	leal	8(%ebp),%esi
	subl	$20,%esp
	movl	%esp,%edi
	movl	$5,%ecx
	cld
	repz
	movsl
	call	Prints_PrintAdrMode
	addl	$20, %esp
.LN7382:
	.stabn  68,0,681,.LN7382-Emit_WriteAttrRegOrIm		# line 681, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7383:
	.stabn  68,0,682,.LN7383-Emit_WriteAttrRegOrIm		# line 682, column 0
.LBE23:
	leave
	ret
	.Lab5430 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB23-Emit_WriteAttrRegOrIm
	.stabn 224,0,0,.LBE23-Emit_WriteAttrRegOrIm
	.stabs "Emit_WriteAttrCMem:F16",36,0,0,Emit_WriteAttrCMem
	.align 4
Emit_WriteAttrCMem:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5432, %esp
.LN7384:
	.stabn  68,0,672,.LN7384-Emit_WriteAttrCMem		# line 672, column 1
.LBB24:
.LN7385:
	.stabn  68,0,673,.LN7385-Emit_WriteAttrCMem		# line 673, column 8
	.data
.Lab5433:
 	.ascii	"am=\000"
	.text
	pushl	$3
	leal	.Lab5433,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7386:
	.stabn  68,0,674,.LN7386-Emit_WriteAttrCMem		# line 674, column 8
	leal	8(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Prints_PrintMemAdr
	addl	$16, %esp
.LN7387:
	.stabn  68,0,675,.LN7387-Emit_WriteAttrCMem		# line 675, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7388:
	.stabn  68,0,676,.LN7388-Emit_WriteAttrCMem		# line 676, column 0
.LBE24:
	leave
	ret
	.Lab5432 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB24-Emit_WriteAttrCMem
	.stabn 224,0,0,.LBE24-Emit_WriteAttrCMem
	.stabs "Emit_WriteAttrmem:F16",36,0,0,Emit_WriteAttrmem
	.align 4
Emit_WriteAttrmem:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5434, %esp
.LN7389:
	.stabn  68,0,666,.LN7389-Emit_WriteAttrmem		# line 666, column 1
.LBB25:
.LN7390:
	.stabn  68,0,667,.LN7390-Emit_WriteAttrmem		# line 667, column 8
	.data
.Lab5435:
 	.ascii	"am=\000"
	.text
	pushl	$3
	leal	.Lab5435,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7391:
	.stabn  68,0,668,.LN7391-Emit_WriteAttrmem		# line 668, column 8
	leal	8(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Prints_PrintMemAdr
	addl	$16, %esp
.LN7392:
	.stabn  68,0,669,.LN7392-Emit_WriteAttrmem		# line 669, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7393:
	.stabn  68,0,670,.LN7393-Emit_WriteAttrmem		# line 670, column 0
.LBE25:
	leave
	ret
	.Lab5434 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB25-Emit_WriteAttrmem
	.stabn 224,0,0,.LBE25-Emit_WriteAttrmem
	.stabs "Emit_WriteAttrOffsetPlusIndexMultFaktor:F16",36,0,0,Emit_WriteAttrOffsetPlusIndexMultFaktor
	.align 4
Emit_WriteAttrOffsetPlusIndexMultFaktor:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5436, %esp
.LN7394:
	.stabn  68,0,660,.LN7394-Emit_WriteAttrOffsetPlusIndexMultFaktor		# line 660, column 1
.LBB26:
.LN7395:
	.stabn  68,0,661,.LN7395-Emit_WriteAttrOffsetPlusIndexMultFaktor		# line 661, column 8
	.data
.Lab5437:
 	.ascii	"index=\000"
	.text
	pushl	$6
	leal	.Lab5437,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7396:
	.stabn  68,0,662,.LN7396-Emit_WriteAttrOffsetPlusIndexMultFaktor		# line 662, column 8
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7397:
	.stabn  68,0,663,.LN7397-Emit_WriteAttrOffsetPlusIndexMultFaktor		# line 663, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7398:
	.stabn  68,0,664,.LN7398-Emit_WriteAttrOffsetPlusIndexMultFaktor		# line 664, column 0
.LBE26:
	leave
	ret
	.Lab5436 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB26-Emit_WriteAttrOffsetPlusIndexMultFaktor
	.stabn 224,0,0,.LBE26-Emit_WriteAttrOffsetPlusIndexMultFaktor
	.stabs "Emit_WriteAttrRegPlusSymPlusOffset:F16",36,0,0,Emit_WriteAttrRegPlusSymPlusOffset
	.align 4
Emit_WriteAttrRegPlusSymPlusOffset:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5438, %esp
.LN7399:
	.stabn  68,0,651,.LN7399-Emit_WriteAttrRegPlusSymPlusOffset		# line 651, column 1
.LBB27:
.LN7400:
	.stabn  68,0,652,.LN7400-Emit_WriteAttrRegPlusSymPlusOffset		# line 652, column 8
	.data
.Lab5439:
 	.ascii	"base=\000"
	.text
	pushl	$5
	leal	.Lab5439,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7401:
	.stabn  68,0,653,.LN7401-Emit_WriteAttrRegPlusSymPlusOffset		# line 653, column 8
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7402:
	.stabn  68,0,654,.LN7402-Emit_WriteAttrRegPlusSymPlusOffset		# line 654, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7403:
	.stabn  68,0,655,.LN7403-Emit_WriteAttrRegPlusSymPlusOffset		# line 655, column 8
	.data
.Lab5440:
 	.ascii	"symbol=\000"
	.text
	pushl	$7
	leal	.Lab5440,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7404:
	.stabn  68,0,656,.LN7404-Emit_WriteAttrRegPlusSymPlusOffset		# line 656, column 8
	pushl	12(%ebp)
	call	Prints_PrintRelSymb
	addl	$4, %esp
.LN7405:
	.stabn  68,0,657,.LN7405-Emit_WriteAttrRegPlusSymPlusOffset		# line 657, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7406:
	.stabn  68,0,658,.LN7406-Emit_WriteAttrRegPlusSymPlusOffset		# line 658, column 0
.LBE27:
	leave
	ret
	.Lab5438 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB27-Emit_WriteAttrRegPlusSymPlusOffset
	.stabn 224,0,0,.LBE27-Emit_WriteAttrRegPlusSymPlusOffset
	.stabs "Emit_WriteAttrSymPlusOffset:F16",36,0,0,Emit_WriteAttrSymPlusOffset
	.align 4
Emit_WriteAttrSymPlusOffset:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5441, %esp
.LN7407:
	.stabn  68,0,645,.LN7407-Emit_WriteAttrSymPlusOffset		# line 645, column 1
.LBB28:
.LN7408:
	.stabn  68,0,646,.LN7408-Emit_WriteAttrSymPlusOffset		# line 646, column 8
	.data
.Lab5442:
 	.ascii	"symbol=\000"
	.text
	pushl	$7
	leal	.Lab5442,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7409:
	.stabn  68,0,647,.LN7409-Emit_WriteAttrSymPlusOffset		# line 647, column 8
	pushl	8(%ebp)
	call	Prints_PrintRelSymb
	addl	$4, %esp
.LN7410:
	.stabn  68,0,648,.LN7410-Emit_WriteAttrSymPlusOffset		# line 648, column 8
	pushl	$32
	call	InOut_Write
	addl	$4, %esp
.LN7411:
	.stabn  68,0,649,.LN7411-Emit_WriteAttrSymPlusOffset		# line 649, column 0
.LBE28:
	leave
	ret
	.Lab5441 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB28-Emit_WriteAttrSymPlusOffset
	.stabn 224,0,0,.LBE28-Emit_WriteAttrSymPlusOffset
	.stabs "Emit_WriteAttrSimpleVariable:F16",36,0,0,Emit_WriteAttrSimpleVariable
	.align 4
Emit_WriteAttrSimpleVariable:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5443, %esp
.LN7412:
	.stabn  68,0,642,.LN7412-Emit_WriteAttrSimpleVariable		# line 642, column 1
.LBB29:
.LN7413:
	.stabn  68,0,643,.LN7413-Emit_WriteAttrSimpleVariable		# line 643, column 0
.LBE29:
	leave
	ret
	.Lab5443 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB29-Emit_WriteAttrSimpleVariable
	.stabn 224,0,0,.LBE29-Emit_WriteAttrSimpleVariable
	.stabs "Emit_WriteAttrFloatConstant:F16",36,0,0,Emit_WriteAttrFloatConstant
	.align 4
Emit_WriteAttrFloatConstant:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5444, %esp
.LN7414:
	.stabn  68,0,639,.LN7414-Emit_WriteAttrFloatConstant		# line 639, column 1
.LBB30:
.LN7415:
	.stabn  68,0,640,.LN7415-Emit_WriteAttrFloatConstant		# line 640, column 0
.LBE30:
	leave
	ret
	.Lab5444 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB30-Emit_WriteAttrFloatConstant
	.stabn 224,0,0,.LBE30-Emit_WriteAttrFloatConstant
	.stabs "Emit_WriteAttrConstant:F16",36,0,0,Emit_WriteAttrConstant
	.align 4
Emit_WriteAttrConstant:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5445, %esp
.LN7416:
	.stabn  68,0,636,.LN7416-Emit_WriteAttrConstant		# line 636, column 1
.LBB31:
.LN7417:
	.stabn  68,0,637,.LN7417-Emit_WriteAttrConstant		# line 637, column 0
.LBE31:
	leave
	ret
	.Lab5445 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB31-Emit_WriteAttrConstant
	.stabn 224,0,0,.LBE31-Emit_WriteAttrConstant
	.stabs "Emit_WriteAttrfstack:F16",36,0,0,Emit_WriteAttrfstack
	.align 4
Emit_WriteAttrfstack:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5446, %esp
.LN7418:
	.stabn  68,0,633,.LN7418-Emit_WriteAttrfstack		# line 633, column 1
.LBB32:
.LN7419:
	.stabn  68,0,634,.LN7419-Emit_WriteAttrfstack		# line 634, column 0
.LBE32:
	leave
	ret
	.Lab5446 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB32-Emit_WriteAttrfstack
	.stabn 224,0,0,.LBE32-Emit_WriteAttrfstack
	.stabs "Emit_WriteAttrfreg:F16",36,0,0,Emit_WriteAttrfreg
	.align 4
Emit_WriteAttrfreg:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5447, %esp
.LN7420:
	.stabn  68,0,630,.LN7420-Emit_WriteAttrfreg		# line 630, column 1
.LBB33:
.LN7421:
	.stabn  68,0,631,.LN7421-Emit_WriteAttrfreg		# line 631, column 0
.LBE33:
	leave
	ret
	.Lab5447 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB33-Emit_WriteAttrfreg
	.stabn 224,0,0,.LBE33-Emit_WriteAttrfreg
	.stabs "Emit_WriteAttrreg:F16",36,0,0,Emit_WriteAttrreg
	.align 4
Emit_WriteAttrreg:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5448, %esp
.LN7422:
	.stabn  68,0,627,.LN7422-Emit_WriteAttrreg		# line 627, column 1
.LBB34:
.LN7423:
	.stabn  68,0,628,.LN7423-Emit_WriteAttrreg		# line 628, column 0
.LBE34:
	leave
	ret
	.Lab5448 = 4
	.stabs "at:p133",160,0,20,8
	.stabn 192,0,0,.LBB34-Emit_WriteAttrreg
	.stabn 224,0,0,.LBE34-Emit_WriteAttrreg
	.stabs "Emit_WriteNest:F16",36,0,0,Emit_WriteNest
	.align 4
Emit_WriteNest:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5449, %esp
.LN7424:
	.stabn  68,0,623,.LN7424-Emit_WriteNest		# line 623, column 1
.LBB35:
.LN7425:
	.stabn  68,0,624,.LN7425-Emit_WriteNest		# line 624, column 4
	movl	8(%ebp),%eax
	movl	%eax,-12(%ebp) 
	cmpl	$1,-12(%ebp)
	jl	.Lab5450
	movl	$1,-8(%ebp) 
	movl	-12(%ebp),%eax
	movl	%eax,-16(%ebp) 
.Lab5451:
.LN7426:
	.stabn  68,0,624,.LN7426-Emit_WriteNest		# line 624, column 21
	.data
.Lab5452:
 	.ascii	".  \000"
	.text
	pushl	$3
	leal	.Lab5452,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7427:
	.stabn  68,0,624,.LN7427-Emit_WriteNest		# line 624, column 4
	movl	-8(%ebp),%eax
	cmpl	-16(%ebp),%eax
	jge	.Lab5450
	incl	-8(%ebp) 
	jmp	.Lab5451
.Lab5450:
.LN7428:
	.stabn  68,0,625,.LN7428-Emit_WriteNest		# line 625, column 0
.LBE35:
	leave
	ret
	.Lab5449 = 16
	.stabs "j:7",128,0,4,-8
	.stabs "i:p7",160,0,4,8
	.stabn 192,0,0,.LBB35-Emit_WriteNest
	.stabn 224,0,0,.LBE35-Emit_WriteNest
	.stabs "Emit_PerformActions:F16",36,0,0,Emit_PerformActions
	.align 4
Emit_PerformActions:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5453, %esp
.LN7429:
	.stabn  68,0,593,.LN7429-Emit_PerformActions		# line 593, column 1
.LBB36:
	imull	$44,8(%ebp),%eax 
	leal	RegAlloc_s - 40(%eax),%eax
	movl	%eax,-12(%ebp) 
.LN7430:
	.stabn  68,0,595,.LN7430-Emit_PerformActions		# line 595, column 7
	movl	-12(%ebp),%eax
	movl	16(%eax),%eax
	movl	%eax,-16(%ebp) 
	cmpl	$1,-16(%ebp)
	jb	.Lab5454
	movl	$1,-8(%ebp) 
	movl	-16(%ebp),%eax
	movl	%eax,-20(%ebp) 
.Lab5455:
	movl	-12(%ebp),%ebx
	movl	-8(%ebp),%eax
	cmpl	$1,%eax
	jb	.Lab5457
	cmpl	$3,%eax
	jbe	.Lab5456
.Lab5457:
   	call	BoundErr_		
.Lab5456:
	leal	12(%ebx,%eax,8),%eax
	movl	%eax,-24(%ebp) 
.LN7431:
	.stabn  68,0,597,.LN7431-Emit_PerformActions		# line 597, column 13
	movl	-24(%ebp),%eax
	cmpb	$0,(%eax)
	jne	.Lab5460
.Lab5459:
.LN7432:
	.stabn  68,0,598,.LN7432-Emit_PerformActions		# line 598, column 14
	movl	-24(%ebp),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	movl	-24(%ebp),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_LR
	addl	$8, %esp
.LN7433:
	.stabn  68,0,599,.LN7433-Emit_PerformActions		# line 599, column 5
	cmpb	$0,IR_s + 133
	je	.Lab5461
.Lab5462:
.LN7434:
	.stabn  68,0,600,.LN7434-Emit_PerformActions		# line 600, column 17
	.data
.Lab5463:
 	.ascii	" Copy Register \000"
	.text
	pushl	$15
	leal	.Lab5463,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7435:
	.stabn  68,0,601,.LN7435-Emit_PerformActions		# line 601, column 17
	movl	-24(%ebp),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7436:
	.stabn  68,0,602,.LN7436-Emit_PerformActions		# line 602, column 17
	.data
.Lab5464:
 	.ascii	" into \000"
	.text
	pushl	$6
	leal	.Lab5464,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7437:
	.stabn  68,0,603,.LN7437-Emit_PerformActions		# line 603, column 17
	movl	-24(%ebp),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7438:
	.stabn  68,0,604,.LN7438-Emit_PerformActions		# line 604, column 17
	call	InOut_WriteLn
.Lab5461:
	jmp	.Lab5458
.Lab5460:
.LN7439:
	.stabn  68,0,607,.LN7439-Emit_PerformActions		# line 607, column 16
	movl	-24(%ebp),%eax
	pushl	4(%eax)
	movl	-24(%ebp),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	Emit_Restore
	addl	$8, %esp
.LN7440:
	.stabn  68,0,608,.LN7440-Emit_PerformActions		# line 608, column 5
	cmpb	$0,IR_s + 133
	je	.Lab5465
.Lab5466:
.LN7441:
	.stabn  68,0,609,.LN7441-Emit_PerformActions		# line 609, column 17
	.data
.Lab5467:
 	.ascii	" Restore Register \000"
	.text
	pushl	$18
	leal	.Lab5467,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7442:
	.stabn  68,0,610,.LN7442-Emit_PerformActions		# line 610, column 17
	movl	-24(%ebp),%eax
	movzbl	1(%eax),%eax
	pushl	%eax
	call	IR_PrintRegister
	addl	$4, %esp
.LN7443:
	.stabn  68,0,611,.LN7443-Emit_PerformActions		# line 611, column 17
	.data
.Lab5468:
 	.ascii	" from \000"
	.text
	pushl	$6
	leal	.Lab5468,%eax
	pushl	%eax
	call	InOut_WriteString
	addl	$8, %esp
.LN7444:
	.stabn  68,0,612,.LN7444-Emit_PerformActions		# line 612, column 17
	pushl	$1
	movl	-24(%ebp),%eax
	movl	4(%eax),%eax
	cmpl	$2147483647,%eax
	jbe	.Lab5469
.Lab5470:
   	call	BoundErr_		
.Lab5469:
	pushl	%eax
	call	InOut_WriteInt
	addl	$8, %esp
.LN7445:
	.stabn  68,0,613,.LN7445-Emit_PerformActions		# line 613, column 17
	call	InOut_WriteLn
.Lab5465:
.Lab5458:
.LN7446:
	.stabn  68,0,595,.LN7446-Emit_PerformActions		# line 595, column 7
	movl	-8(%ebp),%eax
	cmpl	-20(%ebp),%eax
	jae	.Lab5454
	incl	-8(%ebp) 
	jmp	.Lab5455
.Lab5454:
.LN7447:
	.stabn  68,0,596,.LN7447-Emit_PerformActions		# line 596, column 0
.LBE36:
	leave
	ret
	.Lab5453 = 24
	.stabs "i:4",128,0,4,-8
	.stabs "AllocIndex:t152=4",128,0,0,0
	.stabs "ai:p152",160,0,4,8
	.stabn 192,0,0,.LBB36-Emit_PerformActions
	.stabn 224,0,0,.LBE36-Emit_PerformActions
	.stabs "Emit_BeginModule:F16",36,0,0,Emit_BeginModule
	.align 4
Emit_BeginModule:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5471, %esp
	movl	12(%ebp),%ecx
	incl	%ecx
	addl	$3,%ecx
	andl	$0xfffffffc, %ecx
	subl 	%ecx,%esp
	movl	%esp,%edi
	movl	8(%ebp),%esi
	movl	%edi,8(%ebp)
	shrl	$2,%ecx
	cld
	repz
	movsl
.LN7448:
	.stabn  68,0,506,.LN7448-Emit_BeginModule		# line 506, column 1
.LBB37:
.LN7449:
	.stabn  68,0,507,.LN7449-Emit_BeginModule		# line 507, column 14
	movw	$0,Emit_s + 50 
.LN7450:
	.stabn  68,0,508,.LN7450-Emit_BeginModule		# line 508, column 16
	movw	$0,Emit_s + 44 
.LN7451:
	.stabn  68,0,509,.LN7451-Emit_BeginModule		# line 509, column 15
	movw	$0,Emit_s + 46 
.LN7452:
	.stabn  68,0,511,.LN7452-Emit_BeginModule		# line 511, column 15
	.data
.Lab5472:
 	.ascii	"DISPLAY_\000"
	.text
	pushl	$8
	leal	.Lab5472,%eax
	pushl	%eax
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	movl	%eax,Emit_s + 40 
.LN7453:
	.stabn  68,0,513,.LN7453-Emit_BeginModule		# line 513, column 4
	movl	$0,Emit_s + 1000 
.Lab5473:
.LN7454:
	.stabn  68,0,513,.LN7454-Emit_BeginModule		# line 513, column 48
	movl	Emit_s + 1000,%eax
	.data
	.align 4
.Lab5475:
	.long	0,15
	.text
	boundl	%eax,.Lab5475
	movb	$0,Emit_s + 334(%eax) 
.LN7455:
	.stabn  68,0,513,.LN7455-Emit_BeginModule		# line 513, column 4
	cmpl	$15,Emit_s + 1000
	jge	.Lab5474
	incl	Emit_s + 1000 
	jmp	.Lab5473
.Lab5474:
.LN7456:
	.stabn  68,0,515,.LN7456-Emit_BeginModule		# line 515, column 25
	pushl	Emit_s + 612
	call	SuBase_Enabled
	addl	$4, %esp
	movb	%al,IR_s + 132 
.LN7457:
	.stabn  68,0,516,.LN7457-Emit_BeginModule		# line 516, column 25
	pushl	Emit_s + 616
	call	SuBase_Enabled
	addl	$4, %esp
	movb	%al,IR_s + 133 
.LN7458:
	.stabn  68,0,517,.LN7458-Emit_BeginModule		# line 517, column 25
	pushl	Emit_s + 620
	call	SuBase_Enabled
	addl	$4, %esp
	movb	%al,IR_s + 134 
.LN7459:
	.stabn  68,0,519,.LN7459-Emit_BeginModule		# line 519, column 4
	leal	Emit_s + 632,%eax
	pushl	%eax
	pushl	$9
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	SuBase_BuildLibraryFileName
	addl	$16, %esp
.LN7460:
	.stabn  68,0,521,.LN7460-Emit_BeginModule		# line 521, column 4
	pushl	$255
	leal	Emit_s + 632,%eax
	pushl	%eax
	call	CgAssOut_AssOpen
	addl	$8, %esp
.LN7461:
	.stabn  68,0,522,.LN7461-Emit_BeginModule		# line 522, column 4
	pushl	12(%ebp)
	pushl	8(%ebp)
	pushl	$80
	leal	Emit_s + 888,%eax
	pushl	%eax
	call	CgUtilities_StringAssign
	addl	$16, %esp
.LN7462:
	.stabn  68,0,524,.LN7462-Emit_BeginModule		# line 524, column 4
	call	CgBase_InitCgBase
.LN7463:
	.stabn  68,0,526,.LN7463-Emit_BeginModule		# line 526, column 4
	cmpl	$0,16(%ebp)
	jle	.Lab5476
.Lab5477:
.LN7464:
	.stabn  68,0,527,.LN7464-Emit_BeginModule		# line 527, column 6
	.data
.Lab5478:
 	.ascii	"\011.comm \000"
	.text
	pushl	$7
	leal	.Lab5478,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7465:
	.stabn  68,0,528,.LN7465-Emit_BeginModule		# line 528, column 6
	pushl	CgBase_s
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$1,%al
	je	.Lab5479
.Lab5480:
.LN7466:
	.stabn  68,0,529,.LN7466-Emit_BeginModule		# line 529, column 8
	pushl	$95
	call	CgAssOut_AssChar
	addl	$4, %esp
.Lab5479:
.LN7467:
	.stabn  68,0,531,.LN7467-Emit_BeginModule		# line 531, column 6
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7468:
	.stabn  68,0,532,.LN7468-Emit_BeginModule		# line 532, column 6
	.data
.Lab5481:
 	.ascii	"_s, \000"
	.text
	pushl	$4
	leal	.Lab5481,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7469:
	.stabn  68,0,533,.LN7469-Emit_BeginModule		# line 533, column 6
	movl	16(%ebp),%eax
	.data
	.align 4
.Lab5482:
	.long	-2147483647,2147483647
	.text
	boundl	%eax,.Lab5482
	cmpl	$0,%eax
	jg	.Lab5483
	negl	%eax
.Lab5483:
 	addl	$3,%eax 
	sarl	$2, %eax 
	addl	%eax, %eax
	addl	%eax, %eax
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN7470:
	.stabn  68,0,533,.LN7470-Emit_BeginModule		# line 533, column 50
	call	CgAssOut_AssLn
.Lab5476:
.LN7471:
	.stabn  68,0,535,.LN7471-Emit_BeginModule		# line 535, column 2
	.data
.Lab5484:
 	.ascii	"\011.text\000"
	.text
	pushl	$6
	leal	.Lab5484,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7472:
	.stabn  68,0,535,.LN7472-Emit_BeginModule		# line 535, column 26
	call	CgAssOut_AssLn
.LN7473:
	.stabn  68,0,536,.LN7473-Emit_BeginModule		# line 536, column 0
.LBE37:
	leave
	ret
	.Lab5471 = 4
	.stabs "AtFrameSize:p7",160,0,4,16
	.stabs "AtModulName:p153=s8start:*2,0,32;high:5,32,32;;",160,0,8,8
	.stabn 192,0,0,.LBB37-Emit_BeginModule
	.stabn 224,0,0,.LBE37-Emit_BeginModule
	.stabs "Emit_DeclareTransferTempo:F16",36,0,0,Emit_DeclareTransferTempo
	.align 4
Emit_DeclareTransferTempo:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5485, %esp
.LN7474:
	.stabn  68,0,497,.LN7474-Emit_DeclareTransferTempo		# line 497, column 1
.LBB38:
.LN7475:
	.stabn  68,0,498,.LN7475-Emit_DeclareTransferTempo		# line 498, column 3
	cmpl	$1111111111,Emit_s + 608
	jne	.Lab5486
.Lab5487:
.LN7476:
	.stabn  68,0,499,.LN7476-Emit_DeclareTransferTempo		# line 499, column 10
	leal	Emit_s + 608,%eax
	pushl	%eax
	pushl	$6
	call	Emit_DeclareTempo
	addl	$8, %esp
.Lab5486:
.LN7477:
	.stabn  68,0,500,.LN7477-Emit_DeclareTransferTempo		# line 500, column 0
.LBE38:
	leave
	ret
	.Lab5485 = 4
	.stabn 192,0,0,.LBB38-Emit_DeclareTransferTempo
	.stabn 224,0,0,.LBE38-Emit_DeclareTransferTempo
	.stabs "Emit_DeclareTempo:F16",36,0,0,Emit_DeclareTempo
	.align 4
Emit_DeclareTempo:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5488, %esp
.LN7478:
	.stabn  68,0,488,.LN7478-Emit_DeclareTempo		# line 488, column 1
.LBB39:
.LN7479:
	.stabn  68,0,489,.LN7479-Emit_DeclareTempo		# line 489, column 3
	cmpb	$7,8(%ebp)
	jne	.Lab5491
.Lab5490:
.LN7480:
	.stabn  68,0,490,.LN7480-Emit_DeclareTempo		# line 490, column 10
	addl	$8,Emit_s + 972 
	jmp	.Lab5489
.Lab5491:
.LN7481:
	.stabn  68,0,491,.LN7481-Emit_DeclareTempo		# line 491, column 10
	addl	$4,Emit_s + 972 
.Lab5489:
.LN7482:
	.stabn  68,0,493,.LN7482-Emit_DeclareTempo		# line 493, column 9
	movl	12(%ebp),%ebx
	movl	Emit_s + 972,%eax
	negl	%eax
	movl	%eax,(%ebx) 
.LN7483:
	.stabn  68,0,494,.LN7483-Emit_DeclareTempo		# line 494, column 0
.LBE39:
	leave
	ret
	.Lab5488 = 4
	.stabs "tempo:v7",160,0,4,12
	.stabs "mode:p26",160,0,1,8
	.stabn 192,0,0,.LBB39-Emit_DeclareTempo
	.stabn 224,0,0,.LBE39-Emit_DeclareTempo
	.stabs "Emit_DeclareString:F16",36,0,0,Emit_DeclareString
	.align 4
Emit_DeclareString:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5492, %esp
.LN7484:
	.stabn  68,0,459,.LN7484-Emit_DeclareString		# line 459, column 1
.LBB40:
.LN7485:
	.stabn  68,0,460,.LN7485-Emit_DeclareString		# line 460, column 22
	movb	$0,-10(%ebp) 
.LN7486:
	.stabn  68,0,461,.LN7486-Emit_DeclareString		# line 461, column 4
	pushl	20(%ebp)
	call	CgBase_GetLabel
	addl	$4, %esp
.LN7487:
	.stabn  68,0,462,.LN7487-Emit_DeclareString		# line 462, column 2
	.data
.Lab5493:
 	.ascii	"\011.data\000"
	.text
	pushl	$6
	leal	.Lab5493,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7488:
	.stabn  68,0,462,.LN7488-Emit_DeclareString		# line 462, column 27
	call	CgAssOut_AssLn
.LN7489:
	.stabn  68,0,463,.LN7489-Emit_DeclareString		# line 463, column 2
	pushl	$255
	movl	20(%ebp),%eax
	pushl	(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7490:
	.stabn  68,0,463,.LN7490-Emit_DeclareString		# line 463, column 21
	.data
.Lab5494:
 	.ascii	":\000"
	.text
	pushl	$1
	leal	.Lab5494,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7491:
	.stabn  68,0,463,.LN7491-Emit_DeclareString		# line 463, column 39
	call	CgAssOut_AssLn
.LN7492:
	.stabn  68,0,464,.LN7492-Emit_DeclareString		# line 464, column 2
	.data
.Lab5495:
 	.ascii	" \011.ascii\011\042\000"
	.text
	pushl	$10
	leal	.Lab5495,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7493:
	.stabn  68,0,465,.LN7493-Emit_DeclareString		# line 465, column 4
	movw	8(%ebp),%ax
 	subw	$1,%ax 
	movzwl	%ax,%eax
	movl	%eax,-16(%ebp) 
	cmpl	$0,-16(%ebp)
	jb	.Lab5496
	movl	$0,-8(%ebp) 
	movl	-16(%ebp),%eax
	movl	%eax,-20(%ebp) 
.Lab5497:
.LN7494:
	.stabn  68,0,466,.LN7494-Emit_DeclareString		# line 466, column 9
	movl	-8(%ebp),%eax
	cmpl	$0,%eax
	jb	.Lab5499
	cmpl	16(%ebp),%eax
	jbe	.Lab5498
.Lab5499:
   	call	BoundErr_		
.Lab5498:
 	addl	12(%ebp),%eax 
	movb	(%eax),%al
	movb	%al,-9(%ebp) 
.LN7495:
	.stabn  68,0,467,.LN7495-Emit_DeclareString		# line 467, column 7
	cmpb	$0,-10(%ebp)
	je	.Lab5500
.Lab5503:
	cmpb	$48,-9(%ebp)
	jb	.Lab5500
.Lab5502:
	cmpb	$57,-9(%ebp)
	ja	.Lab5500
.Lab5501:
.LN7496:
	.stabn  68,0,468,.LN7496-Emit_DeclareString		# line 468, column 2
	.data
.Lab5504:
 	.ascii	"\042\000"
	.text
	pushl	$1
	leal	.Lab5504,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7497:
	.stabn  68,0,468,.LN7497-Emit_DeclareString		# line 468, column 20
	call	CgAssOut_AssLn
.LN7498:
	.stabn  68,0,469,.LN7498-Emit_DeclareString		# line 469, column 2
	.data
.Lab5505:
 	.ascii	"\011.ascii\011\042\000"
	.text
	pushl	$9
	leal	.Lab5505,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.Lab5500:
.LN7499:
	.stabn  68,0,471,.LN7499-Emit_DeclareString		# line 471, column 7
	cmpb	$32,-9(%ebp)
	jb	.Lab5508
.Lab5511:
	cmpb	$122,-9(%ebp)
	ja	.Lab5508
.Lab5510:
	cmpb	$34,-9(%ebp)
	je	.Lab5508
.Lab5509:
	cmpb	$92,-9(%ebp)
	je	.Lab5508
.Lab5507:
.LN7500:
	.stabn  68,0,472,.LN7500-Emit_DeclareString		# line 472, column 10
	movzbl	-9(%ebp),%eax
	pushl	%eax
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7501:
	.stabn  68,0,473,.LN7501-Emit_DeclareString		# line 473, column 28
	movb	$0,-10(%ebp) 
	jmp	.Lab5506
.Lab5508:
.LN7502:
	.stabn  68,0,475,.LN7502-Emit_DeclareString		# line 475, column 10
	movw	8(%ebp),%ax
 	subw	$1,%ax 
	movzwl	%ax,%eax
	cmpl	%eax,-8(%ebp)
	jae	.Lab5512
.Lab5513:
.LN7503:
	.stabn  68,0,476,.LN7503-Emit_DeclareString		# line 476, column 13
	pushl	$92
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7504:
	.stabn  68,0,477,.LN7504-Emit_DeclareString		# line 477, column 2
	movzbl	-9(%ebp),%eax
	shrl	$6, %eax 
	cmpl	$2147483647,%eax
	jbe	.Lab5514
.Lab5515:
   	call	BoundErr_		
.Lab5514:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN7505:
	.stabn  68,0,477,.LN7505-Emit_DeclareString		# line 477, column 29
	movzbl	-9(%ebp),%eax
	andl	$63, %eax 
	shrl	$3, %eax 
	cmpl	$2147483647,%eax
	jbe	.Lab5516
.Lab5517:
   	call	BoundErr_		
.Lab5516:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN7506:
	.stabn  68,0,477,.LN7506-Emit_DeclareString		# line 477, column 64
	movzbl	-9(%ebp),%eax
	andl	$7, %eax 
	cmpl	$2147483647,%eax
	jbe	.Lab5518
.Lab5519:
   	call	BoundErr_		
.Lab5518:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.Lab5512:
.LN7507:
	.stabn  68,0,479,.LN7507-Emit_DeclareString		# line 479, column 28
	movb	$1,-10(%ebp) 
.Lab5506:
.LN7508:
	.stabn  68,0,465,.LN7508-Emit_DeclareString		# line 465, column 4
	movl	-8(%ebp),%eax
	cmpl	-20(%ebp),%eax
	jae	.Lab5496
	incl	-8(%ebp) 
	jmp	.Lab5497
.Lab5496:
.LN7509:
	.stabn  68,0,482,.LN7509-Emit_DeclareString		# line 482, column 4
	.data
.Lab5520:
 	.ascii	"\134"
	.ascii	"000\042\000"
	.text
	pushl	$5
	leal	.Lab5520,%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7510:
	.stabn  68,0,482,.LN7510-Emit_DeclareString		# line 482, column 25
	call	CgAssOut_AssLn
.LN7511:
	.stabn  68,0,483,.LN7511-Emit_DeclareString		# line 483, column 2
	.data
.Lab5521:
 	.ascii	"\011.text\000"
	.text
	pushl	$6
	leal	.Lab5521,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7512:
	.stabn  68,0,483,.LN7512-Emit_DeclareString		# line 483, column 27
	call	CgAssOut_AssLn
.LN7513:
	.stabn  68,0,484,.LN7513-Emit_DeclareString		# line 484, column 0
.LBE40:
	leave
	ret
	.Lab5492 = 20
	.stabs "numbersNeedRestart:1",128,0,1,-10
	.stabs "c:2",128,0,1,-9
	.stabs "l:4",128,0,4,-8
	.stabs "ref:v36",160,0,4,20
	.stabs "string:p154=s8start:*2,0,32;high:5,32,32;;",160,0,8,12
	.stabs "length:p3",160,0,2,8
	.stabn 192,0,0,.LBB40-Emit_DeclareString
	.stabn 224,0,0,.LBE40-Emit_DeclareString
	.stabs "Emit_DeclareProcedure:F16",36,0,0,Emit_DeclareProcedure
	.align 4
Emit_DeclareProcedure:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5522, %esp
.LN7514:
	.stabn  68,0,410,.LN7514-Emit_DeclareProcedure		# line 410, column 1
.LBB41:
.LN7515:
	.stabn  68,0,411,.LN7515-Emit_DeclareProcedure		# line 411, column 3
	pushl	$28
	pushl	44(%ebp)
	call	GcgStorage_ALLOCATE
	addl	$8, %esp
	movl	44(%ebp),%eax
	movl	(%eax),%eax
	movl	%eax,-520(%ebp) 
.LN7516:
	.stabn  68,0,413,.LN7516-Emit_DeclareProcedure		# line 413, column 13
	movl	-520(%ebp),%ebx
	movb	8(%ebp),%al
	movb	%al,(%ebx) 
.LN7517:
	.stabn  68,0,413,.LN7517-Emit_DeclareProcedure		# line 413, column 35
	movl	-520(%ebp),%ebx
	movb	12(%ebp),%al
	movb	%al,1(%ebx) 
.LN7518:
	.stabn  68,0,414,.LN7518-Emit_DeclareProcedure		# line 414, column 11
	movl	-520(%ebp),%eax
	pushl	%eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	popl	%ebx
	movl	%eax,4(%ebx) 
.LN7519:
	.stabn  68,0,414,.LN7519-Emit_DeclareProcedure		# line 414, column 45
	movl	-520(%ebp),%ebx
	movw	28(%ebp),%ax
	movw	%ax,12(%ebx) 
.LN7520:
	.stabn  68,0,415,.LN7520-Emit_DeclareProcedure		# line 415, column 13
	movl	-520(%ebp),%ebx
	movl	32(%ebp),%eax
	movl	%eax,16(%ebx) 
.LN7521:
	.stabn  68,0,415,.LN7521-Emit_DeclareProcedure		# line 415, column 30
	movl	-520(%ebp),%ebx
	movw	36(%ebp),%ax
	movw	%ax,20(%ebx) 
.LN7522:
	.stabn  68,0,415,.LN7522-Emit_DeclareProcedure		# line 415, column 47
	movl	-520(%ebp),%ebx
	movl	40(%ebp),%eax
	movl	%eax,24(%ebx) 
.LN7523:
	.stabn  68,0,417,.LN7523-Emit_DeclareProcedure		# line 417, column 6
	cmpw	$0,28(%ebp)
	je	.Lab5525
.Lab5524:
.LN7524:
	.stabn  68,0,419,.LN7524-Emit_DeclareProcedure		# line 419, column 9
	cmpw	$0,36(%ebp)
	jne	.Lab5528
.Lab5527:
.LN7525:
	.stabn  68,0,420,.LN7525-Emit_DeclareProcedure		# line 420, column 12
	pushl	$255
	movl	32(%ebp),%eax
	pushl	(%eax)
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAssign
	addl	$16, %esp
	jmp	.Lab5526
.Lab5528:
.LN7526:
	.stabn  68,0,422,.LN7526-Emit_DeclareProcedure		# line 422, column 12
	pushl	$255
	movl	40(%ebp),%eax
	pushl	8(%eax)
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAssign
	addl	$16, %esp
.Lab5526:
.LN7527:
	.stabn  68,0,425,.LN7527-Emit_DeclareProcedure		# line 425, column 9
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringLength
	addl	$8, %esp
 	addw	$1,%ax 
	pushl	%eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	call	CgUtilities_StringLength
	addl	$8, %esp
	popl	%ebx
 	addw	%bx,%ax 
	cmpw	$80,%ax
	jb	.Lab5531
.Lab5530:
.LN7528:
	.stabn  68,0,427,.LN7528-Emit_DeclareProcedure		# line 427, column 12
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	movzwl	28(%ebp),%eax
	pushl	%eax
	call	CgUtilities_ConvertLONGINTtoString
	addl	$12, %esp
.LN7529:
	.stabn  68,0,428,.LN7529-Emit_DeclareProcedure		# line 428, column 12
	pushl	$255
	movl	32(%ebp),%eax
	pushl	(%eax)
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAssign
	addl	$16, %esp
.LN7530:
	.stabn  68,0,429,.LN7530-Emit_DeclareProcedure		# line 429, column 12
	.data
.Lab5532:
 	.ascii	"_\000"
	.text
	pushl	$1
	leal	.Lab5532,%eax
	pushl	%eax
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.LN7531:
	.stabn  68,0,430,.LN7531-Emit_DeclareProcedure		# line 430, column 12
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.LN7532:
	.stabn  68,0,431,.LN7532-Emit_DeclareProcedure		# line 431, column 12
	.data
.Lab5533:
 	.ascii	"_\000"
	.text
	pushl	$1
	leal	.Lab5533,%eax
	pushl	%eax
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.LN7533:
	.stabn  68,0,432,.LN7533-Emit_DeclareProcedure		# line 432, column 12
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
	jmp	.Lab5529
.Lab5531:
.LN7534:
	.stabn  68,0,434,.LN7534-Emit_DeclareProcedure		# line 434, column 12
	cmpw	$1,28(%ebp)
	je	.Lab5534
.Lab5535:
.LN7535:
	.stabn  68,0,435,.LN7535-Emit_DeclareProcedure		# line 435, column 19
	.data
.Lab5536:
 	.ascii	"_\000"
	.text
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	$1
	leal	.Lab5536,%eax
	pushl	%eax
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend2
	addl	$24, %esp
.Lab5534:
.Lab5529:
.LN7536:
	.stabn  68,0,438,.LN7536-Emit_DeclareProcedure		# line 438, column 15
	movl	-520(%ebp),%eax
	pushl	%eax
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	popl	%ebx
	movl	%eax,8(%ebx) 
	jmp	.Lab5523
.Lab5525:
.LN7537:
	.stabn  68,0,440,.LN7537-Emit_DeclareProcedure		# line 440, column 9
	pushl	CgBase_s
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab5539
.Lab5538:
.LN7538:
	.stabn  68,0,441,.LN7538-Emit_DeclareProcedure		# line 441, column 17
	movl	-520(%ebp),%eax
	pushl	%eax
	pushl	24(%ebp)
	pushl	20(%ebp)
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	popl	%ebx
	movl	%eax,8(%ebx) 
	jmp	.Lab5537
.Lab5539:
.LN7539:
	.stabn  68,0,443,.LN7539-Emit_DeclareProcedure		# line 443, column 11
	.data
.Lab5540:
 	.ascii	"_\000"
	.text
	pushl	24(%ebp)
	pushl	20(%ebp)
	pushl	$1
	leal	.Lab5540,%eax
	pushl	%eax
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringConcat2
	addl	$24, %esp
.LN7540:
	.stabn  68,0,444,.LN7540-Emit_DeclareProcedure		# line 444, column 17
	movl	-520(%ebp),%eax
	pushl	%eax
	pushl	$255
	leal	-516(%ebp),%eax
	pushl	%eax
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	popl	%ebx
	movl	%eax,8(%ebx) 
.Lab5537:
.Lab5523:
.LN7541:
	.stabn  68,0,447,.LN7541-Emit_DeclareProcedure		# line 447, column 2
	.data
.Lab5541:
 	.ascii	"\011.globl\011\000"
	.text
	pushl	$8
	leal	.Lab5541,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7542:
	.stabn  68,0,447,.LN7542-Emit_DeclareProcedure		# line 447, column 30
	pushl	$255
	movl	-520(%ebp),%eax
	pushl	8(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7543:
	.stabn  68,0,447,.LN7543-Emit_DeclareProcedure		# line 447, column 51
	call	CgAssOut_AssLn
.LN7544:
	.stabn  68,0,448,.LN7544-Emit_DeclareProcedure		# line 448, column 0
.LBE41:
	leave
	ret
	.Lab5522 = 520
	.stabs "String:t155=ar4;0;255;2",128,0,0,0
	.stabs "t:155",128,0,256,-516
	.stabs "s:155",128,0,256,-260
	.stabs "ref:v53",160,0,4,44
	.stabs "father:p53",160,0,4,40
	.stabs "level:p3",160,0,2,36
	.stabs "module:p55",160,0,4,32
	.stabs "ProcNumber:p3",160,0,2,28
	.stabs "ProcName:p156=s8start:*2,0,32;high:5,32,32;;",160,0,8,20
	.stabs "ProcMode:p26",160,0,1,16
	.stabs "isFunction:p1",160,0,1,12
	.stabs "extern:p1",160,0,1,8
	.stabn 192,0,0,.LBB41-Emit_DeclareProcedure
	.stabn 224,0,0,.LBE41-Emit_DeclareProcedure
	.stabs "Emit_DeclareModule:F16",36,0,0,Emit_DeclareModule
	.align 4
Emit_DeclareModule:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5542, %esp
.LN7545:
	.stabn  68,0,380,.LN7545-Emit_DeclareModule		# line 380, column 1
.LBB42:
.LN7546:
	.stabn  68,0,381,.LN7546-Emit_DeclareModule		# line 381, column 4
	pushl	$9
	pushl	20(%ebp)
	call	GcgStorage_ALLOCATE
	addl	$8, %esp
	movl	20(%ebp),%eax
	movl	(%eax),%eax
	movl	%eax,-264(%ebp) 
.LN7547:
	.stabn  68,0,383,.LN7547-Emit_DeclareModule		# line 383, column 13
	movl	-264(%ebp),%ebx
	movb	8(%ebp),%al
	movb	%al,8(%ebx) 
.LN7548:
	.stabn  68,0,384,.LN7548-Emit_DeclareModule		# line 384, column 6
	pushl	CgBase_s
	call	SuBase_Enabled
	addl	$4, %esp
	cmpb	$0,%al
	je	.Lab5545
.Lab5544:
.LN7549:
	.stabn  68,0,385,.LN7549-Emit_DeclareModule		# line 385, column 13
	movl	-264(%ebp),%eax
	pushl	%eax
	pushl	16(%ebp)
	pushl	12(%ebp)
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	popl	%ebx
	movl	%eax,(%ebx) 
.LN7550:
	.stabn  68,0,386,.LN7550-Emit_DeclareModule		# line 386, column 8
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAssign
	addl	$16, %esp
.LN7551:
	.stabn  68,0,387,.LN7551-Emit_DeclareModule		# line 387, column 8
	.data
.Lab5546:
 	.ascii	"_s\000"
	.text
	pushl	$2
	leal	.Lab5546,%eax
	pushl	%eax
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
	jmp	.Lab5543
.Lab5545:
.LN7552:
	.stabn  68,0,389,.LN7552-Emit_DeclareModule		# line 389, column 8
	.data
.Lab5547:
 	.ascii	"_\000"
	.text
	pushl	$1
	leal	.Lab5547,%eax
	pushl	%eax
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAssign
	addl	$16, %esp
.LN7553:
	.stabn  68,0,390,.LN7553-Emit_DeclareModule		# line 390, column 8
	pushl	16(%ebp)
	pushl	12(%ebp)
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.LN7554:
	.stabn  68,0,391,.LN7554-Emit_DeclareModule		# line 391, column 13
	movl	-264(%ebp),%eax
	pushl	%eax
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	popl	%ebx
	movl	%eax,(%ebx) 
.LN7555:
	.stabn  68,0,392,.LN7555-Emit_DeclareModule		# line 392, column 8
	.data
.Lab5548:
 	.ascii	"_s\000"
	.text
	pushl	$2
	leal	.Lab5548,%eax
	pushl	%eax
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	call	CgUtilities_StringAppend1
	addl	$16, %esp
.Lab5543:
.LN7556:
	.stabn  68,0,394,.LN7556-Emit_DeclareModule		# line 394, column 14
	movl	-264(%ebp),%eax
	pushl	%eax
	pushl	$255
	leal	-260(%ebp),%eax
	pushl	%eax
	call	CgBase_MakeRelSymb
	addl	$8, %esp
	popl	%ebx
	movl	%eax,4(%ebx) 
.LN7557:
	.stabn  68,0,395,.LN7557-Emit_DeclareModule		# line 395, column 0
.LBE42:
	leave
	ret
	.Lab5542 = 264
	.stabs "str:155",128,0,256,-260
	.stabs "ref:v55",160,0,4,20
	.stabs "CompUnitName:p157=s8start:*2,0,32;high:5,32,32;;",160,0,8,12
	.stabs "extern:p1",160,0,1,8
	.stabn 192,0,0,.LBB42-Emit_DeclareModule
	.stabn 224,0,0,.LBE42-Emit_DeclareModule
	.stabs "Emit_AssSigned:F16",36,0,0,Emit_AssSigned
	.align 4
Emit_AssSigned:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5549, %esp
.LN7558:
	.stabn  68,0,367,.LN7558-Emit_AssSigned		# line 367, column 1
.LBB43:
.LN7559:
	.stabn  68,0,368,.LN7559-Emit_AssSigned		# line 368, column 3
	movzbl	8(%ebp),%eax
	cmpb	$0,Emit_s + 27(%eax)
	je	.Lab5552
.Lab5551:
.LN7560:
	.stabn  68,0,369,.LN7560-Emit_AssSigned		# line 369, column 10
	pushl	$115
	call	CgAssOut_AssChar
	addl	$4, %esp
	jmp	.Lab5550
.Lab5552:
.LN7561:
	.stabn  68,0,370,.LN7561-Emit_AssSigned		# line 370, column 10
	pushl	$122
	call	CgAssOut_AssChar
	addl	$4, %esp
.Lab5550:
.LN7562:
	.stabn  68,0,371,.LN7562-Emit_AssSigned		# line 371, column 0
.LBE43:
	leave
	ret
	.Lab5549 = 4
	.stabs "s:p26",160,0,1,8
	.stabn 192,0,0,.LBB43-Emit_AssSigned
	.stabn 224,0,0,.LBE43-Emit_AssSigned
	.stabs "Emit_AssSuffix:F16",36,0,0,Emit_AssSuffix
	.align 4
Emit_AssSuffix:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5553, %esp
.LN7563:
	.stabn  68,0,362,.LN7563-Emit_AssSuffix		# line 362, column 1
.LBB44:
.LN7564:
	.stabn  68,0,363,.LN7564-Emit_AssSuffix		# line 363, column 3
	movzbl	8(%ebp),%eax
	movzbl	Emit_s + 18(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7565:
	.stabn  68,0,364,.LN7565-Emit_AssSuffix		# line 364, column 0
.LBE44:
	leave
	ret
	.Lab5553 = 4
	.stabs "s:p26",160,0,1,8
	.stabn 192,0,0,.LBB44-Emit_AssSuffix
	.stabn 224,0,0,.LBE44-Emit_AssSuffix
	.stabs "Emit_AssAdrMode:F16",36,0,0,Emit_AssAdrMode
	.align 4
Emit_AssAdrMode:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5554, %esp
.LN7566:
	.stabn  68,0,351,.LN7566-Emit_AssAdrMode		# line 351, column 1
.LBB45:
	leal	8(%ebp),%eax
	movl	%eax,-8(%ebp) 
.LN7567:
	.stabn  68,0,353,.LN7567-Emit_AssAdrMode		# line 353, column 5
	movl	-8(%ebp),%eax
	movzbl	1(%eax),%eax
	.data
	.align 4
.Lab5560:
	.long	.Lab5559
	.long	.Lab5558
	.long	.Lab5557
	.text
	subl	$0,%eax
	jb	.Lab5555
	cmpl	$2,%eax
	ja	.Lab5555
	jmp	*.Lab5560(,%eax,4)
.Lab5559:
.LN7568:
	.stabn  68,0,354,.LN7568-Emit_AssAdrMode		# line 354, column 16
	pushl	$36
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7569:
	.stabn  68,0,354,.LN7569-Emit_AssAdrMode		# line 354, column 31
	movl	-8(%ebp),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
	jmp	.Lab5556
.Lab5558:
.LN7570:
	.stabn  68,0,355,.LN7570-Emit_AssAdrMode		# line 355, column 16
	movl	-8(%ebp),%eax
	movzbl	(%eax),%eax
	pushl	%eax
	movl	-8(%ebp),%eax
	movzbl	2(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister2
	addl	$8, %esp
	jmp	.Lab5556
.Lab5557:
.LN7571:
	.stabn  68,0,356,.LN7571-Emit_AssAdrMode		# line 356, column 16
	movl	$4,%esi
 	addl	-8(%ebp),%esi 
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
	jmp	.Lab5556
.Lab5555:
	call	CaseErr_
.Lab5556:
.LN7572:
	.stabn  68,0,357,.LN7572-Emit_AssAdrMode		# line 357, column 0
.LBE45:
	leave
	ret
	.Lab5554 = 8
	.stabs "am:p137",160,0,20,8
	.stabn 192,0,0,.LBB45-Emit_AssAdrMode
	.stabn 224,0,0,.LBE45-Emit_AssAdrMode
	.stabs "Emit_AssMemAdr:F16",36,0,0,Emit_AssMemAdr
	.align 4
Emit_AssMemAdr:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5561, %esp
.LN7573:
	.stabn  68,0,319,.LN7573-Emit_AssMemAdr		# line 319, column 1
.LBB46:
	leal	8(%ebp),%eax
	movl	%eax,-8(%ebp) 
.LN7574:
	.stabn  68,0,321,.LN7574-Emit_AssMemAdr		# line 321, column 5
	movl	-8(%ebp),%eax
	movl	12(%eax),%eax
	cmpl	Emit_s + 36,%eax
	je	.Lab5564
.Lab5563:
.LN7575:
	.stabn  68,0,322,.LN7575-Emit_AssMemAdr		# line 322, column 12
	pushl	$255
	movl	-8(%ebp),%eax
	pushl	12(%eax)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7576:
	.stabn  68,0,323,.LN7576-Emit_AssMemAdr		# line 323, column 12
	movl	-8(%ebp),%eax
	cmpl	$0,(%eax)
	je	.Lab5565
.Lab5566:
.LN7577:
	.stabn  68,0,324,.LN7577-Emit_AssMemAdr		# line 324, column 19
	movl	-8(%ebp),%eax
	pushl	(%eax)
	call	Emit_AssPlusInt
	addl	$4, %esp
.Lab5565:
	jmp	.Lab5562
.Lab5564:
.LN7578:
	.stabn  68,0,326,.LN7578-Emit_AssMemAdr		# line 326, column 12
	movl	-8(%ebp),%eax
	cmpl	$0,(%eax)
	je	.Lab5567
.Lab5568:
.LN7579:
	.stabn  68,0,327,.LN7579-Emit_AssMemAdr		# line 327, column 19
	movl	-8(%ebp),%eax
	pushl	(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.Lab5567:
.Lab5562:
.LN7580:
	.stabn  68,0,330,.LN7580-Emit_AssMemAdr		# line 330, column 5
	movl	-8(%ebp),%eax
	cmpb	$0,8(%eax)
	ja	.Lab5570
.Lab5571:
	movl	-8(%ebp),%eax
	cmpb	$0,9(%eax)
	jbe	.Lab5569
.Lab5572:
	movl	-8(%ebp),%eax
	cmpl	$0,4(%eax)
	jle	.Lab5569
.Lab5570:
.LN7581:
	.stabn  68,0,331,.LN7581-Emit_AssMemAdr		# line 331, column 12
	movl	-8(%ebp),%eax
	cmpb	$0,8(%eax)
	jne	.Lab5573
.Lab5575:
	movl	-8(%ebp),%eax
	cmpl	$1,4(%eax)
	jne	.Lab5573
.Lab5574:
.LN7582:
	.stabn  68,0,332,.LN7582-Emit_AssMemAdr		# line 332, column 24
	movl	-8(%ebp),%ebx
	movl	-8(%ebp),%eax
	movb	9(%eax),%al
	movb	%al,8(%ebx) 
.LN7583:
	.stabn  68,0,333,.LN7583-Emit_AssMemAdr		# line 333, column 26
	movl	-8(%ebp),%eax
	movl	$0,4(%eax) 
.Lab5573:
.LN7584:
	.stabn  68,0,335,.LN7584-Emit_AssMemAdr		# line 335, column 12
	pushl	$40
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7585:
	.stabn  68,0,336,.LN7585-Emit_AssMemAdr		# line 336, column 12
	movl	-8(%ebp),%eax
	cmpb	$0,8(%eax)
	jbe	.Lab5576
.Lab5577:
.LN7586:
	.stabn  68,0,337,.LN7586-Emit_AssMemAdr		# line 337, column 19
	movl	-8(%ebp),%eax
	movzbl	8(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.Lab5576:
.LN7587:
	.stabn  68,0,339,.LN7587-Emit_AssMemAdr		# line 339, column 12
	movl	-8(%ebp),%eax
	cmpb	$0,9(%eax)
	jbe	.Lab5578
.Lab5580:
	movl	-8(%ebp),%eax
	cmpl	$0,4(%eax)
	jle	.Lab5578
.Lab5579:
.LN7588:
	.stabn  68,0,340,.LN7588-Emit_AssMemAdr		# line 340, column 19
	pushl	$44
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7589:
	.stabn  68,0,341,.LN7589-Emit_AssMemAdr		# line 341, column 19
	movl	-8(%ebp),%eax
	movzbl	9(%eax),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7590:
	.stabn  68,0,342,.LN7590-Emit_AssMemAdr		# line 342, column 19
	pushl	$44
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7591:
	.stabn  68,0,343,.LN7591-Emit_AssMemAdr		# line 343, column 19
	movl	-8(%ebp),%eax
	pushl	4(%eax)
	call	CgAssOut_AssInt
	addl	$4, %esp
.Lab5578:
.LN7592:
	.stabn  68,0,345,.LN7592-Emit_AssMemAdr		# line 345, column 12
	pushl	$41
	call	CgAssOut_AssChar
	addl	$4, %esp
.Lab5569:
.LN7593:
	.stabn  68,0,346,.LN7593-Emit_AssMemAdr		# line 346, column 0
.LBE46:
	leave
	ret
	.Lab5561 = 8
	.stabs "am:p35",160,0,16,8
	.stabn 192,0,0,.LBB46-Emit_AssMemAdr
	.stabn 224,0,0,.LBE46-Emit_AssMemAdr
	.stabs "Emit_AssPlusInt:F16",36,0,0,Emit_AssPlusInt
	.align 4
Emit_AssPlusInt:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5581, %esp
.LN7594:
	.stabn  68,0,309,.LN7594-Emit_AssPlusInt		# line 309, column 1
.LBB47:
.LN7595:
	.stabn  68,0,310,.LN7595-Emit_AssPlusInt		# line 310, column 4
	cmpl	$0,8(%ebp)
	jl	.Lab5584
.Lab5583:
.LN7596:
	.stabn  68,0,311,.LN7596-Emit_AssPlusInt		# line 311, column 7
	.data
.Lab5585:
 	.ascii	" + \000"
	.text
	pushl	$3
	leal	.Lab5585,%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
	jmp	.Lab5582
.Lab5584:
.LN7597:
	.stabn  68,0,313,.LN7597-Emit_AssPlusInt		# line 313, column 7
	.data
.Lab5586:
 	.ascii	" - \000"
	.text
	pushl	$3
	leal	.Lab5586,%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.Lab5582:
.LN7598:
	.stabn  68,0,315,.LN7598-Emit_AssPlusInt		# line 315, column 4
	movl	8(%ebp),%eax
	.data
	.align 4
.Lab5587:
	.long	-2147483647,2147483647
	.text
	boundl	%eax,.Lab5587
	cmpl	$0,%eax
	jg	.Lab5588
	negl	%eax
.Lab5588:
	pushl	%eax
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN7599:
	.stabn  68,0,316,.LN7599-Emit_AssPlusInt		# line 316, column 0
.LBE47:
	leave
	ret
	.Lab5581 = 4
	.stabs "i:p7",160,0,4,8
	.stabn 192,0,0,.LBB47-Emit_AssPlusInt
	.stabn 224,0,0,.LBE47-Emit_AssPlusInt
	.stabs "Emit_AssByteRegister:F16",36,0,0,Emit_AssByteRegister
	.align 4
Emit_AssByteRegister:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5589, %esp
.LN7600:
	.stabn  68,0,304,.LN7600-Emit_AssByteRegister		# line 304, column 1
.LBB48:
.LN7601:
	.stabn  68,0,305,.LN7601-Emit_AssByteRegister		# line 305, column 4
	pushl	$4
	movzbl	8(%ebp),%eax
	leal	(%eax,%eax,4),%eax
	leal	Emit_s + 279(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7602:
	.stabn  68,0,306,.LN7602-Emit_AssByteRegister		# line 306, column 0
.LBE48:
	leave
	ret
	.Lab5589 = 4
	.stabs "r:p38",160,0,1,8
	.stabn 192,0,0,.LBB48-Emit_AssByteRegister
	.stabn 224,0,0,.LBE48-Emit_AssByteRegister
	.stabs "Emit_AssWordRegister:F16",36,0,0,Emit_AssWordRegister
	.align 4
Emit_AssWordRegister:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5590, %esp
.LN7603:
	.stabn  68,0,299,.LN7603-Emit_AssWordRegister		# line 299, column 1
.LBB49:
.LN7604:
	.stabn  68,0,300,.LN7604-Emit_AssWordRegister		# line 300, column 4
	pushl	$4
	movzbl	8(%ebp),%eax
	leal	(%eax,%eax,4),%eax
	leal	Emit_s + 224(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7605:
	.stabn  68,0,301,.LN7605-Emit_AssWordRegister		# line 301, column 0
.LBE49:
	leave
	ret
	.Lab5590 = 4
	.stabs "r:p38",160,0,1,8
	.stabn 192,0,0,.LBB49-Emit_AssWordRegister
	.stabn 224,0,0,.LBE49-Emit_AssWordRegister
	.stabs "Emit_AssRegister2:F16",36,0,0,Emit_AssRegister2
	.align 4
Emit_AssRegister2:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5591, %esp
.LN7606:
	.stabn  68,0,289,.LN7606-Emit_AssRegister2		# line 289, column 1
.LBB50:
.LN7607:
	.stabn  68,0,290,.LN7607-Emit_AssRegister2		# line 290, column 3
	movzbl	12(%ebp),%eax
	movzwl	Emit_s(,%eax,2),%eax
	.data
	.align 4
.Lab5597:
	.long	.Lab5596
	.long	.Lab5595
	.long	.Lab5592
	.long	.Lab5594
	.long	.Lab5592
	.long	.Lab5592
	.long	.Lab5592
	.long	.Lab5594
	.text
	subl	$1,%eax
	jb	.Lab5592
	cmpl	$7,%eax
	ja	.Lab5592
	jmp	*.Lab5597(,%eax,4)
.Lab5596:
.LN7608:
	.stabn  68,0,291,.LN7608-Emit_AssRegister2		# line 291, column 8
	pushl	$4
	movzbl	8(%ebp),%eax
	leal	(%eax,%eax,4),%eax
	leal	Emit_s + 279(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
	jmp	.Lab5593
.Lab5595:
.LN7609:
	.stabn  68,0,292,.LN7609-Emit_AssRegister2		# line 292, column 8
	pushl	$4
	movzbl	8(%ebp),%eax
	leal	(%eax,%eax,4),%eax
	leal	Emit_s + 224(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
	jmp	.Lab5593
.Lab5594:
.LN7610:
	.stabn  68,0,293,.LN7610-Emit_AssRegister2		# line 293, column 10
	pushl	$37
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7611:
	.stabn  68,0,293,.LN7611-Emit_AssRegister2		# line 293, column 25
	pushl	$9
	movzbl	8(%ebp),%eax
	shll	$1, %eax
	leal	(%eax,%eax,4),%eax
	leal	IR_s + 135(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
	jmp	.Lab5593
.Lab5592:
.LN7612:
	.stabn  68,0,294,.LN7612-Emit_AssRegister2		# line 294, column 10
	.data
.Lab5598:
 	.ascii	"Backend: Unknown Register Size\000"
	.text
	pushl	$30
	leal	.Lab5598,%eax
	pushl	%eax
	call	SuErrors_CompilerError
	addl	$8, %esp
.Lab5593:
.LN7613:
	.stabn  68,0,295,.LN7613-Emit_AssRegister2		# line 295, column 0
.LBE50:
	leave
	ret
	.Lab5591 = 4
	.stabs "mode:p26",160,0,1,12
	.stabs "r:p38",160,0,1,8
	.stabn 192,0,0,.LBB50-Emit_AssRegister2
	.stabn 224,0,0,.LBE50-Emit_AssRegister2
	.stabs "Emit_AssRegister:F16",36,0,0,Emit_AssRegister
	.align 4
Emit_AssRegister:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5599, %esp
.LN7614:
	.stabn  68,0,280,.LN7614-Emit_AssRegister		# line 280, column 1
.LBB51:
.LN7615:
	.stabn  68,0,281,.LN7615-Emit_AssRegister		# line 281, column 4
	pushl	$37
	call	CgAssOut_AssChar
	addl	$4, %esp
.LN7616:
	.stabn  68,0,282,.LN7616-Emit_AssRegister		# line 282, column 4
	cmpb	$10,8(%ebp)
	je	.Lab5602
.Lab5601:
.LN7617:
	.stabn  68,0,283,.LN7617-Emit_AssRegister		# line 283, column 11
	pushl	$9
	movzbl	8(%ebp),%eax
	shll	$1, %eax
	leal	(%eax,%eax,4),%eax
	leal	IR_s + 135(%eax),%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
	jmp	.Lab5600
.Lab5602:
.LN7618:
	.stabn  68,0,284,.LN7618-Emit_AssRegister		# line 284, column 11
	.data
.Lab5603:
 	.ascii	"st(1)\000"
	.text
	pushl	$5
	leal	.Lab5603,%eax
	pushl	%eax
	call	CgAssOut_AssString
	addl	$8, %esp
.Lab5600:
.LN7619:
	.stabn  68,0,285,.LN7619-Emit_AssRegister		# line 285, column 0
.LBE51:
	leave
	ret
	.Lab5599 = 4
	.stabs "r:p38",160,0,1,8
	.stabn 192,0,0,.LBB51-Emit_AssRegister
	.stabn 224,0,0,.LBE51-Emit_AssRegister
	.stabs "Emit_EmitIndex:F16",36,0,0,Emit_EmitIndex
	.align 4
Emit_EmitIndex:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5604, %esp
.LN7620:
	.stabn  68,0,271,.LN7620-Emit_EmitIndex		# line 271, column 1
.LBB52:
.LN7621:
	.stabn  68,0,272,.LN7621-Emit_EmitIndex		# line 272, column 3
	leal	12(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_IsNilMemAdr
	addl	$16, %esp
	cmpb	$1,%al
	je	.Lab5605
.Lab5606:
.LN7622:
	.stabn  68,0,273,.LN7622-Emit_EmitIndex		# line 273, column 20
	movl	8(%ebp),%ebx
	movb	28(%ebp),%al
	movb	%al,9(%ebx) 
.LN7623:
	.stabn  68,0,274,.LN7623-Emit_EmitIndex		# line 274, column 2
	.data
.Lab5607:
 	.ascii	"\011movl\011\000"
	.text
	pushl	$6
	leal	.Lab5607,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7624:
	.stabn  68,0,274,.LN7624-Emit_EmitIndex		# line 274, column 30
	leal	12(%ebp),%esi
	subl	$16,%esp
	movl	%esp,%edi
	movl	$4,%ecx
	cld
	repz
	movsl
	call	Emit_AssMemAdr
	addl	$16, %esp
.LN7625:
	.stabn  68,0,274,.LN7625-Emit_EmitIndex		# line 274, column 50
	.data
.Lab5608:
 	.ascii	",\000"
	.text
	pushl	$1
	leal	.Lab5608,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7626:
	.stabn  68,0,274,.LN7626-Emit_EmitIndex		# line 274, column 68
	movzbl	28(%ebp),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7627:
	.stabn  68,0,274,.LN7627-Emit_EmitIndex		# line 274, column 87
	call	CgAssOut_AssLn
.Lab5605:
.LN7628:
	.stabn  68,0,275,.LN7628-Emit_EmitIndex		# line 275, column 0
.LBE52:
	leave
	ret
	.Lab5604 = 4
	.stabs "reg:p38",160,0,1,28
	.stabs "index:p35",160,0,16,12
	.stabs "base:v35",160,0,16,8
	.stabn 192,0,0,.LBB52-Emit_EmitIndex
	.stabn 224,0,0,.LBE52-Emit_EmitIndex
	.stabs "Emit_IsNilMemAdr:F1",36,0,0,Emit_IsNilMemAdr
	.align 4
Emit_IsNilMemAdr:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5609, %esp
.LN7629:
	.stabn  68,0,263,.LN7629-Emit_IsNilMemAdr		# line 263, column 1
.LBB53:
.LN7630:
	.stabn  68,0,264,.LN7630-Emit_IsNilMemAdr		# line 264, column 3
	cmpl	$0,8(%ebp)
	jne	.Lab5612
.Lab5614:
	cmpl	$0,12(%ebp)
	jne	.Lab5612
.Lab5613:
	cmpb	$0,16(%ebp)
	jne	.Lab5612
.Lab5610:
	movl	20(%ebp),%eax
	cmpl	Emit_s + 36,%eax
	jne	.Lab5612
.Lab5611:
	movb	$1,-8(%ebp) 
	jmp	.Lab5615
.Lab5612:
	movb	$0,-8(%ebp) 
.Lab5615:
	movb	-8(%ebp),%al
	leave
	ret
.LN7631:
	.stabn  68,0,265,.LN7631-Emit_IsNilMemAdr		# line 265, column 0
	call	ReturnErr_
.LBE53:
	leave
	ret
	.Lab5609 = 8
	.stabs "a:p35",160,0,16,8
	.stabn 192,0,0,.LBB53-Emit_IsNilMemAdr
	.stabn 224,0,0,.LBE53-Emit_IsNilMemAdr
	.stabs "Emit_CheckRoundMode2:F16",36,0,0,Emit_CheckRoundMode2
	.align 4
Emit_CheckRoundMode2:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5616, %esp
.LN7632:
	.stabn  68,0,255,.LN7632-Emit_CheckRoundMode2		# line 255, column 1
.LBB54:
.LN7633:
	.stabn  68,0,256,.LN7633-Emit_CheckRoundMode2		# line 256, column 3
	movb	Emit_s + 976,%al
	cmpb	8(%ebp),%al
	je	.Lab5617
.Lab5619:
	movb	Emit_s + 976,%al
	cmpb	12(%ebp),%al
	je	.Lab5617
.Lab5618:
.LN7634:
	.stabn  68,0,257,.LN7634-Emit_CheckRoundMode2		# line 257, column 5
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	Emit_CheckRoundMode
	addl	$4, %esp
.Lab5617:
.LN7635:
	.stabn  68,0,258,.LN7635-Emit_CheckRoundMode2		# line 258, column 0
.LBE54:
	leave
	ret
	.Lab5616 = 4
	.stabs "RoundMode:t158=eRndUnknown:4,RndNegInf:3,RndInf:2,RndZero:1,RndNearest:0,;",128,0,0,0
	.stabs "newmode2:p158",160,0,1,12
	.stabs "newmode1:p158",160,0,1,8
	.stabn 192,0,0,.LBB54-Emit_CheckRoundMode2
	.stabn 224,0,0,.LBE54-Emit_CheckRoundMode2
	.stabs "Emit_CheckRoundMode:F16",36,0,0,Emit_CheckRoundMode
	.align 4
Emit_CheckRoundMode:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5620, %esp
.LN7636:
	.stabn  68,0,236,.LN7636-Emit_CheckRoundMode		# line 236, column 1
.LBB55:
.LN7637:
	.stabn  68,0,237,.LN7637-Emit_CheckRoundMode		# line 237, column 3
	movb	Emit_s + 976,%al
	cmpb	8(%ebp),%al
	je	.Lab5621
.Lab5622:
.LN7638:
	.stabn  68,0,238,.LN7638-Emit_CheckRoundMode		# line 238, column 5
	movzbl	8(%ebp),%eax
	.data
	.align 4
.Lab5629:
	.long	.Lab5628
	.long	.Lab5627
	.long	.Lab5626
	.long	.Lab5625
	.text
	subl	$0,%eax
	jb	.Lab5623
	cmpl	$3,%eax
	ja	.Lab5623
	jmp	*.Lab5629(,%eax,4)
.Lab5628:
.LN7639:
	.stabn  68,0,240,.LN7639-Emit_CheckRoundMode		# line 240, column 2
	.data
.Lab5630:
 	.ascii	"\011fldcw\011fpucw_round_to_nearest\000"
	.text
	pushl	$29
	leal	.Lab5630,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7640:
	.stabn  68,0,240,.LN7640-Emit_CheckRoundMode		# line 240, column 52
	call	CgAssOut_AssLn
	jmp	.Lab5624
.Lab5627:
.LN7641:
	.stabn  68,0,242,.LN7641-Emit_CheckRoundMode		# line 242, column 2
	.data
.Lab5631:
 	.ascii	"\011fldcw\011fpucw_round_to_zero\000"
	.text
	pushl	$26
	leal	.Lab5631,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7642:
	.stabn  68,0,242,.LN7642-Emit_CheckRoundMode		# line 242, column 49
	call	CgAssOut_AssLn
	jmp	.Lab5624
.Lab5626:
.LN7643:
	.stabn  68,0,244,.LN7643-Emit_CheckRoundMode		# line 244, column 2
	.data
.Lab5632:
 	.ascii	"\011fldcw\011fpucw_round_to_inf\000"
	.text
	pushl	$25
	leal	.Lab5632,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7644:
	.stabn  68,0,244,.LN7644-Emit_CheckRoundMode		# line 244, column 48
	call	CgAssOut_AssLn
	jmp	.Lab5624
.Lab5625:
.LN7645:
	.stabn  68,0,246,.LN7645-Emit_CheckRoundMode		# line 246, column 2
	.data
.Lab5633:
 	.ascii	"\011fldcw\011fpucw_round_to_neginf\000"
	.text
	pushl	$28
	leal	.Lab5633,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7646:
	.stabn  68,0,246,.LN7646-Emit_CheckRoundMode		# line 246, column 51
	call	CgAssOut_AssLn
	jmp	.Lab5624
.Lab5623:
.LN7647:
	.stabn  68,0,248,.LN7647-Emit_CheckRoundMode		# line 248, column 7
	.data
.Lab5634:
 	.ascii	"Unknown Round Mode\000"
	.text
	pushl	$18
	leal	.Lab5634,%eax
	pushl	%eax
	call	SuErrors_CompilerError
	addl	$8, %esp
.Lab5624:
.LN7648:
	.stabn  68,0,250,.LN7648-Emit_CheckRoundMode		# line 250, column 18
	movb	8(%ebp),%al
	movb	%al,Emit_s + 976 
.Lab5621:
.LN7649:
	.stabn  68,0,251,.LN7649-Emit_CheckRoundMode		# line 251, column 0
.LBE55:
	leave
	ret
	.Lab5620 = 4
	.stabs "newmode:p158",160,0,1,8
	.stabn 192,0,0,.LBB55-Emit_CheckRoundMode
	.stabn 224,0,0,.LBE55-Emit_CheckRoundMode
	.stabs "Emit_FloatOperation:F16",36,0,0,Emit_FloatOperation
	.align 4
Emit_FloatOperation:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5635, %esp
.LN7650:
	.stabn  68,0,224,.LN7650-Emit_FloatOperation		# line 224, column 1
.LBB56:
.LN7651:
	.stabn  68,0,225,.LN7651-Emit_FloatOperation		# line 225, column 3
	incl	Emit_s + 984 
.LN7652:
	.stabn  68,0,226,.LN7652-Emit_FloatOperation		# line 226, column 3
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab5639:
	.long	0,63
	.text
	boundl	%eax,.Lab5639
	cmpl	$1111111111,Emit_s + 352(,%eax,4)
	je	.Lab5638
.Lab5637:
.LN7653:
	.stabn  68,0,227,.LN7653-Emit_FloatOperation		# line 227, column 2
	.data
.Lab5640:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5640,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7654:
	.stabn  68,0,227,.LN7654-Emit_FloatOperation		# line 227, column 22
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7655:
	.stabn  68,0,227,.LN7655-Emit_FloatOperation		# line 227, column 39
	.data
.Lab5641:
 	.ascii	"l\011\000"
	.text
	pushl	$2
	leal	.Lab5641,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7656:
	.stabn  68,0,227,.LN7656-Emit_FloatOperation		# line 227, column 62
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab5642:
	.long	0,63
	.text
	boundl	%eax,.Lab5642
	pushl	Emit_s + 352(,%eax,4)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN7657:
	.stabn  68,0,227,.LN7657-Emit_FloatOperation		# line 227, column 99
	.data
.Lab5643:
 	.ascii	"(%ebp)\000"
	.text
	pushl	$6
	leal	.Lab5643,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7658:
	.stabn  68,0,227,.LN7658-Emit_FloatOperation		# line 227, column 122
	call	CgAssOut_AssLn
.LN7659:
	.stabn  68,0,228,.LN7659-Emit_FloatOperation		# line 228, column 30
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab5644:
	.long	0,63
	.text
	boundl	%eax,.Lab5644
	movl	$1111111111,Emit_s + 352(,%eax,4) 
	jmp	.Lab5636
.Lab5638:
.LN7660:
	.stabn  68,0,230,.LN7660-Emit_FloatOperation		# line 230, column 2
	.data
.Lab5645:
 	.ascii	"\011\000"
	.text
	pushl	$1
	leal	.Lab5645,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7661:
	.stabn  68,0,230,.LN7661-Emit_FloatOperation		# line 230, column 22
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	CgAssOut_AssString
	addl	$8, %esp
.LN7662:
	.stabn  68,0,230,.LN7662-Emit_FloatOperation		# line 230, column 39
	.data
.Lab5646:
 	.ascii	"p\011%st,%st(1)\000"
	.text
	pushl	$12
	leal	.Lab5646,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7663:
	.stabn  68,0,230,.LN7663-Emit_FloatOperation		# line 230, column 72
	call	CgAssOut_AssLn
.LN7664:
	.stabn  68,0,231,.LN7664-Emit_FloatOperation		# line 231, column 5
	decl	Emit_s + 980 
.Lab5636:
.LN7665:
	.stabn  68,0,232,.LN7665-Emit_FloatOperation		# line 232, column 0
.LBE56:
	leave
	ret
	.Lab5635 = 4
	.stabs "op:p159=s8start:*2,0,32;high:5,32,32;;",160,0,8,8
	.stabn 192,0,0,.LBB56-Emit_FloatOperation
	.stabn 224,0,0,.LBE56-Emit_FloatOperation
	.stabs "Emit_PopFStack:F16",36,0,0,Emit_PopFStack
	.align 4
Emit_PopFStack:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5647, %esp
.LN7666:
	.stabn  68,0,218,.LN7666-Emit_PopFStack		# line 218, column 1
.LBB57:
.LN7667:
	.stabn  68,0,219,.LN7667-Emit_PopFStack		# line 219, column 3
	incl	Emit_s + 984 
.LN7668:
	.stabn  68,0,220,.LN7668-Emit_PopFStack		# line 220, column 3
	decl	Emit_s + 980 
.LN7669:
	.stabn  68,0,221,.LN7669-Emit_PopFStack		# line 221, column 0
.LBE57:
	leave
	ret
	.Lab5647 = 4
	.stabn 192,0,0,.LBB57-Emit_PopFStack
	.stabn 224,0,0,.LBE57-Emit_PopFStack
	.stabs "Emit_PushFStack:F16",36,0,0,Emit_PushFStack
	.align 4
Emit_PushFStack:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5648, %esp
.LN7670:
	.stabn  68,0,201,.LN7670-Emit_PushFStack		# line 201, column 1
.LBB58:
.LN7671:
	.stabn  68,0,202,.LN7671-Emit_PushFStack		# line 202, column 3
	cmpl	$8,Emit_s + 980
	jne	.Lab5651
.Lab5650:
.LN7672:
	.stabn  68,0,204,.LN7672-Emit_PushFStack		# line 204, column 5
	movl	$7,%eax
 	addl	Emit_s + 984,%eax 
	.data
	.align 4
.Lab5652:
	.long	0,63
	.text
	boundl	%eax,.Lab5652
	leal	Emit_s + 352(,%eax,4),%eax
	pushl	%eax
	pushl	$7
	call	Emit_DeclareTempo
	addl	$8, %esp
.LN7673:
	.stabn  68,0,205,.LN7673-Emit_PushFStack		# line 205, column 2
	.data
.Lab5653:
 	.ascii	"\011fxch\011%st(7)\000"
	.text
	pushl	$12
	leal	.Lab5653,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7674:
	.stabn  68,0,205,.LN7674-Emit_PushFStack		# line 205, column 36
	call	CgAssOut_AssLn
.LN7675:
	.stabn  68,0,206,.LN7675-Emit_PushFStack		# line 206, column 2
	.data
.Lab5654:
 	.ascii	"\011fstl\011\000"
	.text
	pushl	$6
	leal	.Lab5654,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7676:
	.stabn  68,0,206,.LN7676-Emit_PushFStack		# line 206, column 30
	movl	$7,%eax
 	addl	Emit_s + 984,%eax 
	.data
	.align 4
.Lab5655:
	.long	0,63
	.text
	boundl	%eax,.Lab5655
	pushl	Emit_s + 352(,%eax,4)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN7677:
	.stabn  68,0,206,.LN7677-Emit_PushFStack		# line 206, column 71
	.data
.Lab5656:
 	.ascii	"(%ebp)\000"
	.text
	pushl	$6
	leal	.Lab5656,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7678:
	.stabn  68,0,206,.LN7678-Emit_PushFStack		# line 206, column 94
	call	CgAssOut_AssLn
.LN7679:
	.stabn  68,0,207,.LN7679-Emit_PushFStack		# line 207, column 2
	.data
.Lab5657:
 	.ascii	"\011fxch\011%st(7)\000"
	.text
	pushl	$12
	leal	.Lab5657,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7680:
	.stabn  68,0,207,.LN7680-Emit_PushFStack		# line 207, column 36
	call	CgAssOut_AssLn
.LN7681:
	.stabn  68,0,208,.LN7681-Emit_PushFStack		# line 208, column 2
	.data
.Lab5658:
 	.ascii	"\011ffree\011%st(7)\000"
	.text
	pushl	$13
	leal	.Lab5658,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7682:
	.stabn  68,0,208,.LN7682-Emit_PushFStack		# line 208, column 36
	call	CgAssOut_AssLn
	jmp	.Lab5649
.Lab5651:
.LN7683:
	.stabn  68,0,210,.LN7683-Emit_PushFStack		# line 210, column 5
	incl	Emit_s + 980 
.Lab5649:
.LN7684:
	.stabn  68,0,212,.LN7684-Emit_PushFStack		# line 212, column 3
	decl	Emit_s + 984 
.LN7685:
	.stabn  68,0,213,.LN7685-Emit_PushFStack		# line 213, column 28
	movl	Emit_s + 984,%eax
	.data
	.align 4
.Lab5659:
	.long	0,63
	.text
	boundl	%eax,.Lab5659
	movl	$1111111111,Emit_s + 352(,%eax,4) 
.LN7686:
	.stabn  68,0,214,.LN7686-Emit_PushFStack		# line 214, column 0
.LBE58:
	leave
	ret
	.Lab5648 = 4
	.stabn 192,0,0,.LBB58-Emit_PushFStack
	.stabn 224,0,0,.LBE58-Emit_PushFStack
	.stabs "Emit_SpillFStack:F16",36,0,0,Emit_SpillFStack
	.align 4
Emit_SpillFStack:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5660, %esp
.LN7687:
	.stabn  68,0,187,.LN7687-Emit_SpillFStack		# line 187, column 1
.LBB59:
.LN7688:
	.stabn  68,0,188,.LN7688-Emit_SpillFStack		# line 188, column 3
	movl	Emit_s + 980,%eax
 	subl	$1,%eax 
	movl	%eax,-12(%ebp) 
	cmpl	$0,-12(%ebp)
	jl	.Lab5661
	movl	$0,-8(%ebp) 
	movl	-12(%ebp),%eax
	movl	%eax,-16(%ebp) 
.Lab5662:
.LN7689:
	.stabn  68,0,189,.LN7689-Emit_SpillFStack		# line 189, column 5
	movl	-8(%ebp),%eax
 	addl	Emit_s + 984,%eax 
	.data
	.align 4
.Lab5663:
	.long	0,63
	.text
	boundl	%eax,.Lab5663
	leal	Emit_s + 352(,%eax,4),%eax
	pushl	%eax
	pushl	$7
	call	Emit_DeclareTempo
	addl	$8, %esp
.LN7690:
	.stabn  68,0,190,.LN7690-Emit_SpillFStack		# line 190, column 2
	.data
.Lab5664:
 	.ascii	"\011fstpl\011\000"
	.text
	pushl	$7
	leal	.Lab5664,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7691:
	.stabn  68,0,190,.LN7691-Emit_SpillFStack		# line 190, column 30
	movl	-8(%ebp),%eax
 	addl	Emit_s + 984,%eax 
	.data
	.align 4
.Lab5665:
	.long	0,63
	.text
	boundl	%eax,.Lab5665
	pushl	Emit_s + 352(,%eax,4)
	call	CgAssOut_AssInt
	addl	$4, %esp
.LN7692:
	.stabn  68,0,190,.LN7692-Emit_SpillFStack		# line 190, column 71
	.data
.Lab5666:
 	.ascii	"(%ebp)\000"
	.text
	pushl	$6
	leal	.Lab5666,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7693:
	.stabn  68,0,190,.LN7693-Emit_SpillFStack		# line 190, column 94
	call	CgAssOut_AssLn
.LN7694:
	.stabn  68,0,191,.LN7694-Emit_SpillFStack		# line 191, column 5
	jmp	.Lab5667
.Lab5668:
.LN7695:
	.stabn  68,0,192,.LN7695-Emit_SpillFStack		# line 192, column 2
	.data
.Lab5669:
 	.ascii	"\011\011\011\011\011/* SpillFstack */\000"
	.text
	pushl	$22
	leal	.Lab5669,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7696:
	.stabn  68,0,192,.LN7696-Emit_SpillFStack		# line 192, column 71
	call	CgAssOut_AssLn
.Lab5667:
.LN7697:
	.stabn  68,0,188,.LN7697-Emit_SpillFStack		# line 188, column 3
	movl	-8(%ebp),%eax
	cmpl	-16(%ebp),%eax
	jge	.Lab5661
	incl	-8(%ebp) 
	jmp	.Lab5662
.Lab5661:
.LN7698:
	.stabn  68,0,195,.LN7698-Emit_SpillFStack		# line 195, column 17
	movl	$0,Emit_s + 980 
.LN7699:
	.stabn  68,0,196,.LN7699-Emit_SpillFStack		# line 196, column 0
.LBE59:
	leave
	ret
	.Lab5660 = 16
	.stabs "i:7",128,0,4,-8
	.stabn 192,0,0,.LBB59-Emit_SpillFStack
	.stabn 224,0,0,.LBE59-Emit_SpillFStack
	.stabs "Emit_Restore:F16",36,0,0,Emit_Restore
	.align 4
Emit_Restore:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5670, %esp
.LN7700:
	.stabn  68,0,171,.LN7700-Emit_Restore		# line 171, column 1
.LBB60:
.LN7701:
	.stabn  68,0,172,.LN7701-Emit_Restore		# line 172, column 3
	cmpb	$9,8(%ebp)
	je	.Lab5673
.Lab5674:
	cmpb	$10,8(%ebp)
	je	.Lab5673
.Lab5672:
.LN7702:
	.stabn  68,0,173,.LN7702-Emit_Restore		# line 173, column 2
	.data
.Lab5675:
 	.ascii	"\011popl\011\000"
	.text
	pushl	$6
	leal	.Lab5675,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7703:
	.stabn  68,0,173,.LN7703-Emit_Restore		# line 173, column 30
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7704:
	.stabn  68,0,173,.LN7704-Emit_Restore		# line 173, column 49
	call	CgAssOut_AssLn
.LN7705:
	.stabn  68,0,174,.LN7705-Emit_Restore		# line 174, column 9
	jmp	.Lab5676
.Lab5677:
.LN7706:
	.stabn  68,0,175,.LN7706-Emit_Restore		# line 175, column 2
	.data
.Lab5678:
 	.ascii	"\011\011\011\011\011/* Restore */\000"
	.text
	pushl	$18
	leal	.Lab5678,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7707:
	.stabn  68,0,175,.LN7707-Emit_Restore		# line 175, column 67
	call	CgAssOut_AssLn
.Lab5676:
	jmp	.Lab5671
.Lab5673:
.LN7708:
	.stabn  68,0,178,.LN7708-Emit_Restore		# line 178, column 9
	jmp	.Lab5679
.Lab5680:
.LN7709:
	.stabn  68,0,179,.LN7709-Emit_Restore		# line 179, column 2
	.data
.Lab5681:
 	.ascii	" \011\011\011\011\011/* Restore \000"
	.text
	pushl	$17
	leal	.Lab5681,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7710:
	.stabn  68,0,179,.LN7710-Emit_Restore		# line 179, column 65
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7711:
	.stabn  68,0,179,.LN7711-Emit_Restore		# line 179, column 84
	.data
.Lab5682:
 	.ascii	" */\000"
	.text
	pushl	$3
	leal	.Lab5682,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7712:
	.stabn  68,0,179,.LN7712-Emit_Restore		# line 179, column 104
	call	CgAssOut_AssLn
.Lab5679:
.Lab5671:
.LN7713:
	.stabn  68,0,180,.LN7713-Emit_Restore		# line 180, column 0
.LBE60:
	leave
	ret
	.Lab5670 = 4
	.stabs "loc:p4",160,0,4,12
	.stabs "reg:p38",160,0,1,8
	.stabn 192,0,0,.LBB60-Emit_Restore
	.stabn 224,0,0,.LBE60-Emit_Restore
	.stabs "Emit_Spill:F16",36,0,0,Emit_Spill
	.align 4
Emit_Spill:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5683, %esp
.LN7714:
	.stabn  68,0,157,.LN7714-Emit_Spill		# line 157, column 1
.LBB61:
.LN7715:
	.stabn  68,0,158,.LN7715-Emit_Spill		# line 158, column 3
	cmpb	$9,8(%ebp)
	je	.Lab5686
.Lab5687:
	cmpb	$10,8(%ebp)
	je	.Lab5686
.Lab5685:
.LN7716:
	.stabn  68,0,159,.LN7716-Emit_Spill		# line 159, column 2
	.data
.Lab5688:
 	.ascii	"\011pushl\011\000"
	.text
	pushl	$7
	leal	.Lab5688,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7717:
	.stabn  68,0,159,.LN7717-Emit_Spill		# line 159, column 30
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7718:
	.stabn  68,0,159,.LN7718-Emit_Spill		# line 159, column 49
	call	CgAssOut_AssLn
.LN7719:
	.stabn  68,0,160,.LN7719-Emit_Spill		# line 160, column 9
	jmp	.Lab5689
.Lab5690:
.LN7720:
	.stabn  68,0,161,.LN7720-Emit_Spill		# line 161, column 2
	.data
.Lab5691:
 	.ascii	"\011\011\011\011\011/* Spill */\000"
	.text
	pushl	$16
	leal	.Lab5691,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7721:
	.stabn  68,0,161,.LN7721-Emit_Spill		# line 161, column 65
	call	CgAssOut_AssLn
.Lab5689:
	jmp	.Lab5684
.Lab5686:
.LN7722:
	.stabn  68,0,164,.LN7722-Emit_Spill		# line 164, column 9
	jmp	.Lab5692
.Lab5693:
.LN7723:
	.stabn  68,0,165,.LN7723-Emit_Spill		# line 165, column 2
	.data
.Lab5694:
 	.ascii	" \011\011\011\011\011/* Spill \000"
	.text
	pushl	$15
	leal	.Lab5694,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7724:
	.stabn  68,0,165,.LN7724-Emit_Spill		# line 165, column 63
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7725:
	.stabn  68,0,165,.LN7725-Emit_Spill		# line 165, column 82
	.data
.Lab5695:
 	.ascii	" */\000"
	.text
	pushl	$3
	leal	.Lab5695,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7726:
	.stabn  68,0,165,.LN7726-Emit_Spill		# line 165, column 102
	call	CgAssOut_AssLn
.Lab5692:
.Lab5684:
.LN7727:
	.stabn  68,0,166,.LN7727-Emit_Spill		# line 166, column 0
.LBE61:
	leave
	ret
	.Lab5683 = 4
	.stabs "loc:p4",160,0,4,12
	.stabs "reg:p38",160,0,1,8
	.stabn 192,0,0,.LBB61-Emit_Spill
	.stabn 224,0,0,.LBE61-Emit_Spill
	.stabs "Emit_LR:F16",36,0,0,Emit_LR
	.align 4
Emit_LR:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5696, %esp
.LN7728:
	.stabn  68,0,149,.LN7728-Emit_LR		# line 149, column 1
.LBB62:
.LN7729:
	.stabn  68,0,150,.LN7729-Emit_LR		# line 150, column 2
	.data
.Lab5697:
 	.ascii	" \011movl\011\000"
	.text
	pushl	$7
	leal	.Lab5697,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7730:
	.stabn  68,0,150,.LN7730-Emit_LR		# line 150, column 30
	movzbl	12(%ebp),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7731:
	.stabn  68,0,150,.LN7731-Emit_LR		# line 150, column 50
	.data
.Lab5698:
 	.ascii	", \000"
	.text
	pushl	$2
	leal	.Lab5698,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7732:
	.stabn  68,0,150,.LN7732-Emit_LR		# line 150, column 69
	movzbl	8(%ebp),%eax
	pushl	%eax
	call	Emit_AssRegister
	addl	$4, %esp
.LN7733:
	.stabn  68,0,150,.LN7733-Emit_LR		# line 150, column 87
	call	CgAssOut_AssLn
.LN7734:
	.stabn  68,0,151,.LN7734-Emit_LR		# line 151, column 9
	jmp	.Lab5699
.Lab5700:
.LN7735:
	.stabn  68,0,152,.LN7735-Emit_LR		# line 152, column 2
	.data
.Lab5701:
 	.ascii	"\011\011\011\011\011/* LR */\000"
	.text
	pushl	$13
	leal	.Lab5701,%eax
	pushl	%eax
	call	CgAssOut_AssHString
	addl	$8, %esp
.LN7736:
	.stabn  68,0,152,.LN7736-Emit_LR		# line 152, column 62
	call	CgAssOut_AssLn
.Lab5699:
.LN7737:
	.stabn  68,0,153,.LN7737-Emit_LR		# line 153, column 0
.LBE62:
	leave
	ret
	.Lab5696 = 4
	.stabs "from:p38",160,0,1,12
	.stabs "to:p38",160,0,1,8
	.stabn 192,0,0,.LBB62-Emit_LR
	.stabn 224,0,0,.LBE62-Emit_LR
	.stabs "Emit:F16",36,0,0,Emit
	.align 4
Emit:
	pushl	%ebp
	movl	%esp,%ebp
	subl	$.Lab5702, %esp
.LN7738:
	.stabn  68,0,7449,.LN7738-Emit		# line 7449, column 1
.LBB63:
.LN7739:
	.stabn  68,0,7450,.LN7739-Emit		# line 7450, column 24
	movl	$0,Emit_s + 1544 
.LN7740:
	.stabn  68,0,7453,.LN7740-Emit		# line 7453, column 30
	movw	$1,Emit_s 
.LN7741:
	.stabn  68,0,7454,.LN7741-Emit		# line 7454, column 30
	movw	$2,Emit_s + 2 
.LN7742:
	.stabn  68,0,7455,.LN7742-Emit		# line 7455, column 30
	movw	$4,Emit_s + 4 
.LN7743:
	.stabn  68,0,7456,.LN7743-Emit		# line 7456, column 30
	movw	$1,Emit_s + 6 
.LN7744:
	.stabn  68,0,7457,.LN7744-Emit		# line 7457, column 30
	movw	$2,Emit_s + 8 
.LN7745:
	.stabn  68,0,7458,.LN7745-Emit		# line 7458, column 30
	movw	$4,Emit_s + 10 
.LN7746:
	.stabn  68,0,7459,.LN7746-Emit		# line 7459, column 30
	movw	$4,Emit_s + 12 
.LN7747:
	.stabn  68,0,7460,.LN7747-Emit		# line 7460, column 30
	movw	$8,Emit_s + 14 
.LN7748:
	.stabn  68,0,7462,.LN7748-Emit		# line 7462, column 32
	movb	$98,Emit_s + 18 
.LN7749:
	.stabn  68,0,7463,.LN7749-Emit		# line 7463, column 32
	movb	$119,Emit_s + 19 
.LN7750:
	.stabn  68,0,7464,.LN7750-Emit		# line 7464, column 32
	movb	$108,Emit_s + 20 
.LN7751:
	.stabn  68,0,7465,.LN7751-Emit		# line 7465, column 32
	movb	$98,Emit_s + 21 
.LN7752:
	.stabn  68,0,7466,.LN7752-Emit		# line 7466, column 32
	movb	$119,Emit_s + 22 
.LN7753:
	.stabn  68,0,7467,.LN7753-Emit		# line 7467, column 32
	movb	$108,Emit_s + 23 
.LN7754:
	.stabn  68,0,7468,.LN7754-Emit		# line 7468, column 32
	movb	$115,Emit_s + 24 
.LN7755:
	.stabn  68,0,7469,.LN7755-Emit		# line 7469, column 32
	movb	$108,Emit_s + 25 
.LN7756:
	.stabn  68,0,7471,.LN7756-Emit		# line 7471, column 32
	movb	$0,Emit_s + 27 
.LN7757:
	.stabn  68,0,7472,.LN7757-Emit		# line 7472, column 32
	movb	$0,Emit_s + 28 
.LN7758:
	.stabn  68,0,7473,.LN7758-Emit		# line 7473, column 32
	movb	$0,Emit_s + 29 
.LN7759:
	.stabn  68,0,7474,.LN7759-Emit		# line 7474, column 32
	movb	$1,Emit_s + 30 
.LN7760:
	.stabn  68,0,7475,.LN7760-Emit		# line 7475, column 32
	movb	$1,Emit_s + 31 
.LN7761:
	.stabn  68,0,7476,.LN7761-Emit		# line 7476, column 32
	movb	$1,Emit_s + 32 
.LN7762:
	.stabn  68,0,7477,.LN7762-Emit		# line 7477, column 32
	movb	$0,Emit_s + 33 
.LN7763:
	.stabn  68,0,7478,.LN7763-Emit		# line 7478, column 32
	movb	$0,Emit_s + 34 
.LN7764:
	.stabn  68,0,7480,.LN7764-Emit		# line 7480, column 46
	.data
.Lab5703:
 	.ascii	"e\000"
	.text
	movw	.Lab5703,%ax
	movw	%ax,Emit_s + 52
.LN7765:
	.stabn  68,0,7481,.LN7765-Emit		# line 7481, column 46
	.data
.Lab5704:
 	.ascii	"ne\000"
	.text
	movw	.Lab5704,%ax
	movw	%ax,Emit_s + 58
	movb	.Lab5704 + 2,%al
	movb	%al,Emit_s + 60
.LN7766:
	.stabn  68,0,7482,.LN7766-Emit		# line 7482, column 46
	.data
.Lab5705:
 	.ascii	"b\000"
	.text
	movw	.Lab5705,%ax
	movw	%ax,Emit_s + 64
.LN7767:
	.stabn  68,0,7483,.LN7767-Emit		# line 7483, column 46
	.data
.Lab5706:
 	.ascii	"be\000"
	.text
	movw	.Lab5706,%ax
	movw	%ax,Emit_s + 70
	movb	.Lab5706 + 2,%al
	movb	%al,Emit_s + 72
.LN7768:
	.stabn  68,0,7484,.LN7768-Emit		# line 7484, column 46
	.data
.Lab5707:
 	.ascii	"a\000"
	.text
	movw	.Lab5707,%ax
	movw	%ax,Emit_s + 76
.LN7769:
	.stabn  68,0,7485,.LN7769-Emit		# line 7485, column 46
	.data
.Lab5708:
 	.ascii	"ae\000"
	.text
	movw	.Lab5708,%ax
	movw	%ax,Emit_s + 82
	movb	.Lab5708 + 2,%al
	movb	%al,Emit_s + 84
.LN7770:
	.stabn  68,0,7486,.LN7770-Emit		# line 7486, column 46
	.data
.Lab5709:
 	.ascii	"e\000"
	.text
	movw	.Lab5709,%ax
	movw	%ax,Emit_s + 55
.LN7771:
	.stabn  68,0,7487,.LN7771-Emit		# line 7487, column 46
	.data
.Lab5710:
 	.ascii	"ne\000"
	.text
	movw	.Lab5710,%ax
	movw	%ax,Emit_s + 61
	movb	.Lab5710 + 2,%al
	movb	%al,Emit_s + 63
.LN7772:
	.stabn  68,0,7488,.LN7772-Emit		# line 7488, column 46
	.data
.Lab5711:
 	.ascii	"l\000"
	.text
	movw	.Lab5711,%ax
	movw	%ax,Emit_s + 67
.LN7773:
	.stabn  68,0,7489,.LN7773-Emit		# line 7489, column 46
	.data
.Lab5712:
 	.ascii	"le\000"
	.text
	movw	.Lab5712,%ax
	movw	%ax,Emit_s + 73
	movb	.Lab5712 + 2,%al
	movb	%al,Emit_s + 75
.LN7774:
	.stabn  68,0,7490,.LN7774-Emit		# line 7490, column 46
	.data
.Lab5713:
 	.ascii	"g\000"
	.text
	movw	.Lab5713,%ax
	movw	%ax,Emit_s + 79
.LN7775:
	.stabn  68,0,7491,.LN7775-Emit		# line 7491, column 46
	.data
.Lab5714:
 	.ascii	"ge\000"
	.text
	movw	.Lab5714,%ax
	movw	%ax,Emit_s + 85
	movb	.Lab5714 + 2,%al
	movb	%al,Emit_s + 87
.LN7776:
	.stabn  68,0,7493,.LN7776-Emit		# line 7493, column 33
	movb	$0,Emit_s + 88 
.LN7777:
	.stabn  68,0,7494,.LN7777-Emit		# line 7494, column 33
	movb	$1,Emit_s + 89 
.LN7778:
	.stabn  68,0,7495,.LN7778-Emit		# line 7495, column 33
	movb	$4,Emit_s + 90 
.LN7779:
	.stabn  68,0,7496,.LN7779-Emit		# line 7496, column 33
	movb	$5,Emit_s + 91 
.LN7780:
	.stabn  68,0,7497,.LN7780-Emit		# line 7497, column 33
	movb	$2,Emit_s + 92 
.LN7781:
	.stabn  68,0,7498,.LN7781-Emit		# line 7498, column 33
	movb	$3,Emit_s + 93 
.LN7782:
	.stabn  68,0,7500,.LN7782-Emit		# line 7500, column 20
	movl	$1,Emit_s + 96 
.LN7783:
	.stabn  68,0,7501,.LN7783-Emit		# line 7501, column 5
	movl	$1,Emit_s + 1000 
.Lab5715:
.LN7784:
	.stabn  68,0,7501,.LN7784-Emit		# line 7501, column 51
	movl	Emit_s + 1000,%ebx
	.data
	.align 4
.Lab5717:
	.long	0,31
	.text
	boundl	%ebx,.Lab5717
	movl	Emit_s + 1000,%eax
 	subl	$1,%eax 
	.data
	.align 4
.Lab5718:
	.long	0,31
	.text
	boundl	%eax,.Lab5718
	movl	Emit_s + 96(,%eax,4),%eax
	addl	%eax, %eax 
	movl	%eax,Emit_s + 96(,%ebx,4) 
.LN7785:
	.stabn  68,0,7501,.LN7785-Emit		# line 7501, column 5
	cmpl	$31,Emit_s + 1000
	jge	.Lab5716
	incl	Emit_s + 1000 
	jmp	.Lab5715
.Lab5716:
.LN7786:
	.stabn  68,0,7503,.LN7786-Emit		# line 7503, column 21
	.data
.Lab5719:
 	.ascii	"%ax\000"
	.text
	movl	.Lab5719,%eax
	movl	%eax,Emit_s + 229
.LN7787:
	.stabn  68,0,7504,.LN7787-Emit		# line 7504, column 21
	.data
.Lab5720:
 	.ascii	"%bx\000"
	.text
	movl	.Lab5720,%eax
	movl	%eax,Emit_s + 234
.LN7788:
	.stabn  68,0,7505,.LN7788-Emit		# line 7505, column 21
	.data
.Lab5721:
 	.ascii	"%cx\000"
	.text
	movl	.Lab5721,%eax
	movl	%eax,Emit_s + 239
.LN7789:
	.stabn  68,0,7506,.LN7789-Emit		# line 7506, column 21
	.data
.Lab5722:
 	.ascii	"%dx\000"
	.text
	movl	.Lab5722,%eax
	movl	%eax,Emit_s + 244
.LN7790:
	.stabn  68,0,7507,.LN7790-Emit		# line 7507, column 21
	.data
.Lab5723:
 	.ascii	"%si\000"
	.text
	movl	.Lab5723,%eax
	movl	%eax,Emit_s + 249
.LN7791:
	.stabn  68,0,7508,.LN7791-Emit		# line 7508, column 21
	.data
.Lab5724:
 	.ascii	"%di\000"
	.text
	movl	.Lab5724,%eax
	movl	%eax,Emit_s + 254
.LN7792:
	.stabn  68,0,7509,.LN7792-Emit		# line 7509, column 21
	.data
.Lab5725:
 	.ascii	"%al\000"
	.text
	movl	.Lab5725,%eax
	movl	%eax,Emit_s + 284
.LN7793:
	.stabn  68,0,7510,.LN7793-Emit		# line 7510, column 21
	.data
.Lab5726:
 	.ascii	"%bl\000"
	.text
	movl	.Lab5726,%eax
	movl	%eax,Emit_s + 289
.LN7794:
	.stabn  68,0,7511,.LN7794-Emit		# line 7511, column 21
	.data
.Lab5727:
 	.ascii	"%cl\000"
	.text
	movl	.Lab5727,%eax
	movl	%eax,Emit_s + 294
.LN7795:
	.stabn  68,0,7512,.LN7795-Emit		# line 7512, column 21
	.data
.Lab5728:
 	.ascii	"%dl\000"
	.text
	movl	.Lab5728,%eax
	movl	%eax,Emit_s + 299
.LN7796:
	.stabn  68,0,7514,.LN7796-Emit		# line 7514, column 5
	.data
.Lab5729:
 	.ascii	"EmitIR\000"
	.text
	pushl	$0
	pushl	$0
	pushl	$6
	leal	.Lab5729,%eax
	pushl	%eax
	leal	Emit_s + 612,%eax
	pushl	%eax
	call	SuBase_DefineOption
	addl	$20, %esp
.LN7797:
	.stabn  68,0,7515,.LN7797-Emit		# line 7515, column 5
	.data
.Lab5730:
 	.ascii	"EmitMatch\000"
	.text
	pushl	$0
	pushl	$0
	pushl	$9
	leal	.Lab5730,%eax
	pushl	%eax
	leal	Emit_s + 616,%eax
	pushl	%eax
	call	SuBase_DefineOption
	addl	$20, %esp
.LN7798:
	.stabn  68,0,7516,.LN7798-Emit		# line 7516, column 5
	.data
.Lab5731:
 	.ascii	"RegAlloc\000"
	.text
	pushl	$0
	pushl	$0
	pushl	$8
	leal	.Lab5731,%eax
	pushl	%eax
	leal	Emit_s + 620,%eax
	pushl	%eax
	call	SuBase_DefineOption
	addl	$20, %esp
.LN7799:
	.stabn  68,0,7517,.LN7799-Emit		# line 7517, column 5
	.data
.Lab5732:
 	.ascii	"CcallsMocka\000"
	.text
	pushl	$0
	pushl	$0
	pushl	$11
	leal	.Lab5732,%eax
	pushl	%eax
	leal	Emit_s + 628,%eax
	pushl	%eax
	call	SuBase_DefineOption
	addl	$20, %esp
.LN7800:
	.stabn  68,0,7518,.LN7800-Emit		# line 7518, column 5
	.data
.Lab5733:
 	.ascii	"elf\000"
	.text
	pushl	$1
	pushl	$0
	pushl	$3
	leal	.Lab5733,%eax
	pushl	%eax
	leal	CgBase_s,%eax
	pushl	%eax
	call	SuBase_DefineOption
	addl	$20, %esp
.LN7801:
	.stabn  68,0,7519,.LN7801-Emit		# line 7519, column 5
	.data
.Lab5734:
 	.ascii	"S\000"
	.text
	pushl	$1
	pushl	$0
	pushl	$1
	leal	.Lab5734,%eax
	pushl	%eax
	leal	Emit_s + 624,%eax
	pushl	%eax
	call	SuBase_DefineOption
	addl	$20, %esp
.LN7802:
	.stabn  68,0,7520,.LN7802-Emit		# line 7520, column 0
.LBE63:
	leave
	ret
	.Lab5702 = 4
	.stabs "RegisterSet:t160=ar4;0;0;11",128,0,0,0
	.stabs "FileName:t165=ar4;0;255;2",128,0,0,0
	.stabs "Kommentar:c=i0",128,0,0,0
	.stabs "NoTempo:c=i1111111111",128,0,0,0
	.stabs "MaxPowerTable:c=i31",128,0,0,0
	.stabs "MaxFloatTempo:c=i64",128,0,0,0
	.stabs "MaxDisplay:c=i15",128,0,0,0
	.stabs "RndUnknown:c=i4",128,0,0,0
	.stabs "RndNegInf:c=i3",128,0,0,0
	.stabs "RndInf:c=i2",128,0,0,0
	.stabs "RndZero:c=i1",128,0,0,0
	.stabs "RndNearest:c=i0",128,0,0,0
	.stabs "MaxCallLevel:c=i32",128,0,0,0
	.stabs "SourcePosition:t178=s4col:3,16,16;line:3,0,16;;",128,0,0,0
	.stabn 192,0,0,.LBB63-Emit
	.stabn 224,0,0,.LBE63-Emit
	.stabs "Emit_s:Gs1548RegisterSetEmpty:160,12352,32;localavail:160,12320,32;ai:4,12288,32;tr2:161=s8c1:7,32,32;c2:7,0,32;r:10,0,64;;,12224,64;tr1:162=s4c:7,0,32;r:9,0,32;;,12192,32;ok:1,12176,8;cmd:163=ar4;0;255;2,10128,2048;str:163,8080,2048;k:3,8064,16;j:7,8032,32;i:7,8000,32;lab2:36,7968,32;lab:36,7936,32;ProcLabel:36,7904,32;FStackStart:7,7872,32;CurFStackSize:7,7840,32;CurRoundMode:158,7808,8;CurFrameSize:7,7776,32;ModName:164=ar4;0;80;2,7104,648;AsmListFileName:165,5056,2048;oCCall:4,5024,32;oAssemblerListing:4,4992,32;oRegAlloc:4,4960,32;oEmitMatch:4,4928,32;oEmitIR:4,4896,32;TransferTempo:7,4864,32;FStackTempo:166=ar4;0;63;7,2816,2048;SaveDisplay:167=ar4;0;15;1,2672,128;ByteReg:168=ar38;0;10;169=ar4;0;4;2,2232,440;WordReg:168,1792,440;PowerTable:170=ar4;0;31;7,768,1024;Reverse:171=ar68;0;5;68,704,48;RelationTable:172=ar68;0;5;173=ar1;0;1;174=ar4;0;2;2,416,288;\\",32,0,0,0
	.stabs "SizeTable:175=ar26;0;8;6,0,144;SuffixTable:176=ar26;0;8;2,144,72;SignedTable:177=ar26;0;8;1,216,72;NullSymb:36,288,32;DisplaySym:36,320,32;CurPos:178,352,32;CurLevel:3,384,16;CallLevel:3,400,16;;",32,0,0,0
